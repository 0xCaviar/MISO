{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BONUS_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accessControls",
      "outputs": [
        {
          "internalType": "contract MISOAccessControls",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_lpToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bonusEndBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTips",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        }
      ],
      "name": "dev",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devaddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewards",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsPerBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_accessControls",
          "type": "address"
        }
      ],
      "name": "initFarm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "massUpdatePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "pendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accRewardsPerShare",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bonusEndBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bonusMultiplier",
          "type": "uint256"
        }
      ],
      "name": "setBonus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tips",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "15": "contracts/Farms/MasterChef.sol",
    "3": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
    "5": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/SafeERC20.sol",
    "6": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/Address.sol",
    "64": "interfaces/IMisoFarm.sol"
  },
  "ast": {
    "absolutePath": "contracts/Farms/MasterChef.sol",
    "exportedSymbols": {
      "MasterChef": [
        3192
      ]
    },
    "id": 3193,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2237,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2238,
        "nodeType": "ImportDirective",
        "scope": 3193,
        "sourceUnit": 17788,
        "src": "26:56:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 2239,
        "nodeType": "ImportDirective",
        "scope": 3193,
        "sourceUnit": 18001,
        "src": "83:59:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "id": 2240,
        "nodeType": "ImportDirective",
        "scope": 3193,
        "sourceUnit": 18396,
        "src": "143:57:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2241,
        "nodeType": "ImportDirective",
        "scope": 3193,
        "sourceUnit": 17449,
        "src": "201:51:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2242,
        "nodeType": "ImportDirective",
        "scope": 3193,
        "sourceUnit": 17710,
        "src": "253:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Access/MISOAccessControls.sol",
        "file": "../Access/MISOAccessControls.sol",
        "id": 2243,
        "nodeType": "ImportDirective",
        "scope": 3193,
        "sourceUnit": 283,
        "src": "307:42:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMisoFarm.sol",
        "file": "../../interfaces/IMisoFarm.sol",
        "id": 2244,
        "nodeType": "ImportDirective",
        "scope": 3193,
        "sourceUnit": 18412,
        "src": "350:40:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2245,
              "name": "IMisoFarm",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18411,
              "src": "975:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMisoFarm_$18411",
                "typeString": "contract IMisoFarm"
              }
            },
            "id": 2246,
            "nodeType": "InheritanceSpecifier",
            "src": "975:9:15"
          }
        ],
        "contractDependencies": [
          18411
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3192,
        "linearizedBaseContracts": [
          3192,
          18411
        ],
        "name": "MasterChef",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2249,
            "libraryName": {
              "contractScope": null,
              "id": 2247,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17448,
              "src": "997:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$17448",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "991:27:15",
            "typeName": {
              "id": 2248,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1010:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2252,
            "libraryName": {
              "contractScope": null,
              "id": 2250,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18000,
              "src": "1029:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$18000",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1023:27:15",
            "typeName": {
              "contractScope": null,
              "id": 2251,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17787,
              "src": "1043:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$17787",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "748365ef",
            "id": 2254,
            "mutability": "mutable",
            "name": "accessControls",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "1056:40:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MISOAccessControls_$282",
              "typeString": "contract MISOAccessControls"
            },
            "typeName": {
              "contractScope": null,
              "id": 2253,
              "name": "MISOAccessControls",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 282,
              "src": "1056:18:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                "typeString": "contract MISOAccessControls"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "MasterChef.UserInfo",
            "id": 2259,
            "members": [
              {
                "constant": false,
                "id": 2256,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2259,
                "src": "1156:14:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2255,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1156:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2258,
                "mutability": "mutable",
                "name": "rewardDebt",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2259,
                "src": "1229:18:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2257,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1229:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nodeType": "StructDefinition",
            "scope": 3192,
            "src": "1130:788:15",
            "visibility": "public"
          },
          {
            "canonicalName": "MasterChef.PoolInfo",
            "id": 2268,
            "members": [
              {
                "constant": false,
                "id": 2261,
                "mutability": "mutable",
                "name": "lpToken",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2268,
                "src": "1976:14:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$17787",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 2260,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 17787,
                  "src": "1976:6:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$17787",
                    "typeString": "contract IERC20"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2263,
                "mutability": "mutable",
                "name": "allocPoint",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2268,
                "src": "2043:18:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2262,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2043:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2265,
                "mutability": "mutable",
                "name": "lastRewardBlock",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2268,
                "src": "2162:23:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2264,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2162:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2267,
                "mutability": "mutable",
                "name": "accRewardsPerShare",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2268,
                "src": "2250:26:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2266,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2250:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nodeType": "StructDefinition",
            "scope": 3192,
            "src": "1950:389:15",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9ec5a894",
            "id": 2270,
            "mutability": "mutable",
            "name": "rewards",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "2370:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$17787",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2269,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17787,
              "src": "2370:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$17787",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d49e77cd",
            "id": 2272,
            "mutability": "mutable",
            "name": "devaddr",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "2417:22:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2271,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2417:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3a43824",
            "id": 2274,
            "mutability": "mutable",
            "name": "devPercentage",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "2492:28:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2273,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2492:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1a4e1e78",
            "id": 2276,
            "mutability": "mutable",
            "name": "tips",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "2557:19:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2275,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2557:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1aed6553",
            "id": 2278,
            "mutability": "mutable",
            "name": "bonusEndBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "2634:28:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2277,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2634:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5eeb6710",
            "id": 2280,
            "mutability": "mutable",
            "name": "rewardsPerBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "2708:30:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2279,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2708:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8aa28550",
            "id": 2282,
            "mutability": "mutable",
            "name": "BONUS_MULTIPLIER",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "2793:31:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2281,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2793:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2284,
            "mutability": "mutable",
            "name": "initialised",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "2832:24:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2283,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2832:4:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "1526fe27",
            "id": 2287,
            "mutability": "mutable",
            "name": "poolInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "2889:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2268_storage_$dyn_storage",
              "typeString": "struct MasterChef.PoolInfo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 2285,
                "name": "PoolInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2268,
                "src": "2889:8:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                  "typeString": "struct MasterChef.PoolInfo"
                }
              },
              "id": 2286,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "2889:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2268_storage_$dyn_storage_ptr",
                "typeString": "struct MasterChef.PoolInfo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93f1a40b",
            "id": 2293,
            "mutability": "mutable",
            "name": "userInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "2969:66:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2259_storage_$_$",
              "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"
            },
            "typeName": {
              "id": 2292,
              "keyType": {
                "id": 2288,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2978:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2969:50:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2259_storage_$_$",
                "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"
              },
              "valueType": {
                "id": 2291,
                "keyType": {
                  "id": 2289,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2998:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2989:29:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2259_storage_$",
                  "typeString": "mapping(address => struct MasterChef.UserInfo)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 2290,
                  "name": "UserInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2259,
                  "src": "3009:8:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                    "typeString": "struct MasterChef.UserInfo"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "17caf6f1",
            "id": 2295,
            "mutability": "mutable",
            "name": "totalAllocPoint",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "3128:30:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2294,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3128:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "48cd4cb1",
            "id": 2297,
            "mutability": "mutable",
            "name": "startBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "3216:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2296,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3216:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2305,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2299,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2305,
                  "src": "3262:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3262:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2301,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2305,
                  "src": "3284:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3284:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2303,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2305,
                  "src": "3305:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3305:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3261:59:15"
            },
            "src": "3248:73:15"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2313,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2307,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2313,
                  "src": "3341:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3341:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2309,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2313,
                  "src": "3363:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3363:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2311,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2313,
                  "src": "3384:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3340:59:15"
            },
            "src": "3326:74:15"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2321,
            "name": "EmergencyWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2315,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2321,
                  "src": "3429:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3429:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2317,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2321,
                  "src": "3451:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3451:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2319,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2321,
                  "src": "3472:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3472:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3428:59:15"
            },
            "src": "3405:83:15"
          },
          {
            "baseFunctions": [
              18410
            ],
            "body": {
              "id": 2372,
              "nodeType": "Block",
              "src": "3682:299:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3700:12:15",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 2336,
                          "name": "initialised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2284,
                          "src": "3701:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2335,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3692:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3692:21:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2339,
                  "nodeType": "ExpressionStatement",
                  "src": "3692:21:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2340,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2270,
                      "src": "3723:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$17787",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2342,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2323,
                          "src": "3740:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2341,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17787,
                        "src": "3733:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$17787_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3733:16:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$17787",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3723:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$17787",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2345,
                  "nodeType": "ExpressionStatement",
                  "src": "3723:26:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2346,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2295,
                      "src": "3759:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3777:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3759:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2349,
                  "nodeType": "ExpressionStatement",
                  "src": "3759:19:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2350,
                      "name": "initialised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2284,
                      "src": "3788:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3802:4:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3788:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2353,
                  "nodeType": "ExpressionStatement",
                  "src": "3788:18:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2354,
                      "name": "rewardsPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2280,
                      "src": "3816:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2355,
                      "name": "_rewardsPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2325,
                      "src": "3834:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3816:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2357,
                  "nodeType": "ExpressionStatement",
                  "src": "3816:34:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2358,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2297,
                      "src": "3860:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2359,
                      "name": "_startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2327,
                      "src": "3873:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3860:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2361,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:24:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2362,
                      "name": "devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2272,
                      "src": "3894:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2363,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2329,
                      "src": "3904:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3894:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2365,
                  "nodeType": "ExpressionStatement",
                  "src": "3894:18:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2366,
                      "name": "accessControls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2254,
                      "src": "3922:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2368,
                          "name": "_accessControls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2331,
                          "src": "3958:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2367,
                        "name": "MISOAccessControls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "3939:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MISOAccessControls_$282_$",
                          "typeString": "type(contract MISOAccessControls)"
                        }
                      },
                      "id": 2369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3939:35:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "src": "3922:52:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                      "typeString": "contract MISOAccessControls"
                    }
                  },
                  "id": 2371,
                  "nodeType": "ExpressionStatement",
                  "src": "3922:52:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5befdbca",
            "id": 2373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initFarm",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2333,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3673:8:15"
            },
            "parameters": {
              "id": 2332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2323,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2373,
                  "src": "3521:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3521:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2325,
                  "mutability": "mutable",
                  "name": "_rewardsPerBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2373,
                  "src": "3547:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2327,
                  "mutability": "mutable",
                  "name": "_startBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2373,
                  "src": "3581:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2329,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2373,
                  "src": "3610:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3610:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2331,
                  "mutability": "mutable",
                  "name": "_accessControls",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2373,
                  "src": "3636:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3636:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3511:154:15"
            },
            "returnParameters": {
              "id": 2334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3682:0:15"
            },
            "scope": 3192,
            "src": "3494:487:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2397,
              "nodeType": "Block",
              "src": "4084:225:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2383,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4143:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4143:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2381,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2254,
                            "src": "4115:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 2382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasAdminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 95,
                          "src": "4115:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 2385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4115:39:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6173746572436865662e6164643a2053656e646572206d7573742062652061646d696e",
                        "id": 2386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4168:38:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f84fe4d16e0c4dc801ea14413fd557930cc85137075aa9b46ca2dcd28bc59e0",
                          "typeString": "literal_string \"MasterChef.add: Sender must be admin\""
                        },
                        "value": "MasterChef.add: Sender must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f84fe4d16e0c4dc801ea14413fd557930cc85137075aa9b46ca2dcd28bc59e0",
                          "typeString": "literal_string \"MasterChef.add: Sender must be admin\""
                        }
                      ],
                      "id": 2380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4094:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4094:122:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2388,
                  "nodeType": "ExpressionStatement",
                  "src": "4094:122:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2389,
                      "name": "bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2278,
                      "src": "4227:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2390,
                      "name": "_bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2375,
                      "src": "4243:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4227:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2392,
                  "nodeType": "ExpressionStatement",
                  "src": "4227:30:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2393,
                      "name": "BONUS_MULTIPLIER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2282,
                      "src": "4267:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2394,
                      "name": "_bonusMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2377,
                      "src": "4286:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4267:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2396,
                  "nodeType": "ExpressionStatement",
                  "src": "4267:35:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "037c99b0",
            "id": 2398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBonus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2375,
                  "mutability": "mutable",
                  "name": "_bonusEndBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2398,
                  "src": "4014:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4014:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2377,
                  "mutability": "mutable",
                  "name": "_bonusMultiplier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2398,
                  "src": "4046:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4046:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4004:72:15"
            },
            "returnParameters": {
              "id": 2379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4084:0:15"
            },
            "scope": 3192,
            "src": "3987:322:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2406,
              "nodeType": "Block",
              "src": "4369:39:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2403,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "4386:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2268_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4386:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2402,
                  "id": 2405,
                  "nodeType": "Return",
                  "src": "4379:22:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "081e3eda",
            "id": 2407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4334:2:15"
            },
            "returnParameters": {
              "id": 2402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2401,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2407,
                  "src": "4360:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4360:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4359:9:15"
            },
            "scope": 3192,
            "src": "4315:93:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2466,
              "nodeType": "Block",
              "src": "4655:601:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2419,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4714:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4714:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2417,
                              "name": "accessControls",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2254,
                              "src": "4686:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                                "typeString": "contract MISOAccessControls"
                              }
                            },
                            "id": 2418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasAdminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 95,
                            "src": "4686:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 2421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4686:39:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2424,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4765:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4765:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2422,
                              "name": "accessControls",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2254,
                              "src": "4729:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                                "typeString": "contract MISOAccessControls"
                              }
                            },
                            "id": 2423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasSmartContractRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 123,
                            "src": "4729:35:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 2426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4729:47:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4686:90:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6173746572436865662e6164643a2053656e646572206d7573742062652061646d696e",
                        "id": 2428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4790:38:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f84fe4d16e0c4dc801ea14413fd557930cc85137075aa9b46ca2dcd28bc59e0",
                          "typeString": "literal_string \"MasterChef.add: Sender must be admin\""
                        },
                        "value": "MasterChef.add: Sender must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f84fe4d16e0c4dc801ea14413fd557930cc85137075aa9b46ca2dcd28bc59e0",
                          "typeString": "literal_string \"MasterChef.add: Sender must be admin\""
                        }
                      ],
                      "id": 2416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4665:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4665:173:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2430,
                  "nodeType": "ExpressionStatement",
                  "src": "4665:173:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2431,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2413,
                    "src": "4852:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2436,
                  "nodeType": "IfStatement",
                  "src": "4848:59:15",
                  "trueBody": {
                    "id": 2435,
                    "nodeType": "Block",
                    "src": "4865:42:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2432,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "4879:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4879:17:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2434,
                        "nodeType": "ExpressionStatement",
                        "src": "4879:17:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2438,
                      "mutability": "mutable",
                      "name": "lastRewardBlock",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2466,
                      "src": "4916:23:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2437,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4916:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2447,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2439,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4942:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4942:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2441,
                        "name": "startBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2297,
                        "src": "4957:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4942:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 2445,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2297,
                      "src": "4985:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4942:53:15",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2443,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4970:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4970:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4916:79:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2448,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2295,
                      "src": "5005:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2451,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2409,
                          "src": "5043:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2449,
                          "name": "totalAllocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2295,
                          "src": "5023:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "5023:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5023:32:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5005:50:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2454,
                  "nodeType": "ExpressionStatement",
                  "src": "5005:50:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2459,
                            "name": "_lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2411,
                            "src": "5111:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$17787",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2460,
                            "name": "_allocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2409,
                            "src": "5145:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2461,
                            "name": "lastRewardBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2438,
                            "src": "5187:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5236:1:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$17787",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2458,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2268,
                          "src": "5079:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$2268_storage_ptr_$",
                            "typeString": "type(struct MasterChef.PoolInfo storage pointer)"
                          }
                        },
                        "id": 2463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "lpToken",
                          "allocPoint",
                          "lastRewardBlock",
                          "accRewardsPerShare"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "5079:169:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2268_memory_ptr",
                          "typeString": "struct MasterChef.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$2268_memory_ptr",
                          "typeString": "struct MasterChef.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2455,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2287,
                        "src": "5065:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2268_storage_$dyn_storage",
                          "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 2457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5065:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$2268_storage_$returns$__$",
                        "typeString": "function (struct MasterChef.PoolInfo storage ref)"
                      }
                    },
                    "id": 2464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5065:184:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2465,
                  "nodeType": "ExpressionStatement",
                  "src": "5065:184:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d69de7e7",
            "id": 2467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2409,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2467,
                  "src": "4591:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4591:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2411,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2467,
                  "src": "4612:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$17787",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2410,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17787,
                    "src": "4612:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$17787",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2413,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2467,
                  "src": "4629:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2412,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4629:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4590:56:15"
            },
            "returnParameters": {
              "id": 2415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4655:0:15"
            },
            "scope": 3192,
            "src": "4573:683:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2511,
              "nodeType": "Block",
              "src": "5427:353:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2479,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5489:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5489:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2477,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2254,
                            "src": "5458:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 2478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasOperatorRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 137,
                          "src": "5458:30:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 2481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5458:42:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6173746572436865662e7365743a2053656e646572206d757374206265206f70657261746f72",
                        "id": 2482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5514:41:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6b1719cb12154edaa2dcd3dd718becebff50b66bdd523c1f446822567358dc4",
                          "typeString": "literal_string \"MasterChef.set: Sender must be operator\""
                        },
                        "value": "MasterChef.set: Sender must be operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6b1719cb12154edaa2dcd3dd718becebff50b66bdd523c1f446822567358dc4",
                          "typeString": "literal_string \"MasterChef.set: Sender must be operator\""
                        }
                      ],
                      "id": 2476,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5437:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5437:128:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2484,
                  "nodeType": "ExpressionStatement",
                  "src": "5437:128:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2485,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2473,
                    "src": "5579:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2490,
                  "nodeType": "IfStatement",
                  "src": "5575:59:15",
                  "trueBody": {
                    "id": 2489,
                    "nodeType": "Block",
                    "src": "5592:42:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2486,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "5606:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5606:17:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2488,
                        "nodeType": "ExpressionStatement",
                        "src": "5606:17:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2491,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2295,
                      "src": "5643:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2500,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2471,
                          "src": "5712:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2494,
                                  "name": "poolInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2287,
                                  "src": "5681:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2268_storage_$dyn_storage",
                                    "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 2496,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2495,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2469,
                                  "src": "5690:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5681:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2268_storage",
                                  "typeString": "struct MasterChef.PoolInfo storage ref"
                                }
                              },
                              "id": 2497,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allocPoint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2263,
                              "src": "5681:25:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2492,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2295,
                              "src": "5661:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17298,
                            "src": "5661:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5661:46:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "5661:50:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5661:63:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5643:81:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2503,
                  "nodeType": "ExpressionStatement",
                  "src": "5643:81:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2504,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2287,
                          "src": "5734:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2268_storage_$dyn_storage",
                            "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 2506,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2505,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2469,
                          "src": "5743:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5734:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2268_storage",
                          "typeString": "struct MasterChef.PoolInfo storage ref"
                        }
                      },
                      "id": 2507,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocPoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2263,
                      "src": "5734:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2508,
                      "name": "_allocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2471,
                      "src": "5762:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5734:39:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2510,
                  "nodeType": "ExpressionStatement",
                  "src": "5734:39:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "64482f79",
            "id": 2512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2469,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2512,
                  "src": "5366:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5366:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2471,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2512,
                  "src": "5380:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5380:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2473,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2512,
                  "src": "5401:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2472,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5401:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5365:53:15"
            },
            "returnParameters": {
              "id": 2475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5427:0:15"
            },
            "scope": 3192,
            "src": "5353:427:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2559,
              "nodeType": "Block",
              "src": "5935:332:15",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2521,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2516,
                      "src": "5949:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2522,
                      "name": "bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2278,
                      "src": "5956:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5949:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2533,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "6049:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2534,
                        "name": "bonusEndBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2278,
                        "src": "6058:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6049:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 2556,
                      "nodeType": "Block",
                      "src": "6125:136:15",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2552,
                                    "name": "bonusEndBlock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2278,
                                    "src": "6222:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2550,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2516,
                                    "src": "6214:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17298,
                                  "src": "6214:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6214:22:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2547,
                                    "name": "BONUS_MULTIPLIER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2282,
                                    "src": "6175:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 2544,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2514,
                                        "src": "6164:5:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2542,
                                        "name": "bonusEndBlock",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2278,
                                        "src": "6146:13:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2543,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 17298,
                                      "src": "6146:17:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6146:24:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2546,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17361,
                                  "src": "6146:28:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6146:46:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17281,
                              "src": "6146:50:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6146:104:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 2520,
                          "id": 2555,
                          "nodeType": "Return",
                          "src": "6139:111:15"
                        }
                      ]
                    },
                    "id": 2557,
                    "nodeType": "IfStatement",
                    "src": "6045:216:15",
                    "trueBody": {
                      "id": 2541,
                      "nodeType": "Block",
                      "src": "6073:46:15",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2538,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2514,
                                "src": "6102:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2536,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2516,
                                "src": "6094:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17298,
                              "src": "6094:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6094:14:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 2520,
                          "id": 2540,
                          "nodeType": "Return",
                          "src": "6087:21:15"
                        }
                      ]
                    }
                  },
                  "id": 2558,
                  "nodeType": "IfStatement",
                  "src": "5945:316:15",
                  "trueBody": {
                    "id": 2532,
                    "nodeType": "Block",
                    "src": "5971:68:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2529,
                              "name": "BONUS_MULTIPLIER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2282,
                              "src": "6011:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2526,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2514,
                                  "src": "6000:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2524,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2516,
                                  "src": "5992:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17298,
                                "src": "5992:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5992:14:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17361,
                            "src": "5992:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5992:36:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2520,
                        "id": 2531,
                        "nodeType": "Return",
                        "src": "5985:43:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8dbb1e3a",
            "id": 2560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMultiplier",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2514,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2560,
                  "src": "5877:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5877:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2516,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2560,
                  "src": "5892:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5892:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5876:28:15"
            },
            "returnParameters": {
              "id": 2520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2519,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2560,
                  "src": "5926:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5926:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5925:9:15"
            },
            "scope": 3192,
            "src": "5854:413:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2659,
              "nodeType": "Block",
              "src": "6414:688:15",
              "statements": [
                {
                  "assignments": [
                    2570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2570,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2659,
                      "src": "6424:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2569,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2268,
                        "src": "6424:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2574,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2571,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "6448:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2268_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2573,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2572,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2562,
                      "src": "6457:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6448:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2268_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6424:38:15"
                },
                {
                  "assignments": [
                    2576
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2576,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2659,
                      "src": "6472:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2575,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2259,
                        "src": "6472:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2582,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2577,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2293,
                        "src": "6496:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2259_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 2579,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2578,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "6505:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6496:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2259_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 2581,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2580,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2564,
                      "src": "6511:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6496:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2259_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6472:45:15"
                },
                {
                  "assignments": [
                    2584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2584,
                      "mutability": "mutable",
                      "name": "accRewardsPerShare",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2659,
                      "src": "6527:26:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2583,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6527:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2587,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2585,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2570,
                      "src": "6556:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo storage pointer"
                      }
                    },
                    "id": 2586,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accRewardsPerShare",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2267,
                    "src": "6556:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6527:52:15"
                },
                {
                  "assignments": [
                    2589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2589,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2659,
                      "src": "6589:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2588,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6589:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2598,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2595,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6639:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$3192",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$3192",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 2594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6631:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2593,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6631:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6631:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2590,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2570,
                          "src": "6608:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2591,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2261,
                        "src": "6608:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$17787",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17726,
                      "src": "6608:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6608:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6589:56:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2599,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6659:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6659:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2601,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2570,
                          "src": "6674:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2602,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2265,
                        "src": "6674:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6659:35:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2604,
                        "name": "lpSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2589,
                        "src": "6698:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6710:1:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6698:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6659:52:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2645,
                  "nodeType": "IfStatement",
                  "src": "6655:358:15",
                  "trueBody": {
                    "id": 2644,
                    "nodeType": "Block",
                    "src": "6713:300:15",
                    "statements": [
                      {
                        "assignments": [
                          2609
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2609,
                            "mutability": "mutable",
                            "name": "multiplier",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2644,
                            "src": "6727:18:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2608,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6727:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2616,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2611,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2570,
                                "src": "6762:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 2612,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRewardBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2265,
                              "src": "6762:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2613,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6784:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6784:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2610,
                            "name": "getMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2560,
                            "src": "6748:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 2615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6748:49:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6727:70:15"
                      },
                      {
                        "assignments": [
                          2618
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2618,
                            "mutability": "mutable",
                            "name": "rewardsAccum",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2644,
                            "src": "6811:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2617,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6811:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2630,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2628,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2295,
                              "src": "6891:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2624,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2570,
                                    "src": "6870:4:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                                      "typeString": "struct MasterChef.PoolInfo storage pointer"
                                    }
                                  },
                                  "id": 2625,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allocPoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2263,
                                  "src": "6870:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2621,
                                      "name": "rewardsPerBlock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2280,
                                      "src": "6849:15:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2619,
                                      "name": "multiplier",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2609,
                                      "src": "6834:10:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2620,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17361,
                                    "src": "6834:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2622,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6834:31:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17361,
                                "src": "6834:35:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6834:52:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17378,
                            "src": "6834:56:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6834:73:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6811:96:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2631,
                            "name": "accRewardsPerShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2584,
                            "src": "6921:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2639,
                                    "name": "lpSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2589,
                                    "src": "6992:8:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "31653132",
                                        "id": 2636,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6982:4:15",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        },
                                        "value": "1e12"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2634,
                                        "name": "rewardsAccum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2618,
                                        "src": "6965:12:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2635,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 17361,
                                      "src": "6965:16:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2637,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6965:22:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17378,
                                  "src": "6965:26:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6965:36:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2632,
                                "name": "accRewardsPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2584,
                                "src": "6942:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17281,
                              "src": "6942:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6942:60:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6921:81:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2643,
                        "nodeType": "ExpressionStatement",
                        "src": "6921:81:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2655,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2576,
                          "src": "7079:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                            "typeString": "struct MasterChef.UserInfo storage pointer"
                          }
                        },
                        "id": 2656,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2258,
                        "src": "7079:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 2652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7069:4:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2649,
                                "name": "accRewardsPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2584,
                                "src": "7045:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2646,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2576,
                                  "src": "7029:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 2647,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2256,
                                "src": "7029:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17361,
                              "src": "7029:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7029:35:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17378,
                          "src": "7029:39:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7029:45:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17298,
                      "src": "7029:49:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7029:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2568,
                  "id": 2658,
                  "nodeType": "Return",
                  "src": "7022:73:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d18df53c",
            "id": 2660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingRewards",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2562,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2660,
                  "src": "6353:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6353:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2564,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2660,
                  "src": "6367:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6367:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6352:29:15"
            },
            "returnParameters": {
              "id": 2568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2567,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2660,
                  "src": "6405:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6405:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6404:9:15"
            },
            "scope": 3192,
            "src": "6329:773:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2684,
              "nodeType": "Block",
              "src": "7216:141:15",
              "statements": [
                {
                  "assignments": [
                    2664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2664,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2684,
                      "src": "7226:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2663,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7226:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2667,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2665,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "7243:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2268_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "7243:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7226:32:15"
                },
                {
                  "body": {
                    "id": 2682,
                    "nodeType": "Block",
                    "src": "7311:40:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2679,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2669,
                              "src": "7336:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2678,
                            "name": "updatePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2793,
                            "src": "7325:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7325:15:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2681,
                        "nodeType": "ExpressionStatement",
                        "src": "7325:15:15"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2672,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "7290:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2673,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2664,
                      "src": "7296:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7290:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2683,
                  "initializationExpression": {
                    "assignments": [
                      2669
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2669,
                        "mutability": "mutable",
                        "name": "pid",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2683,
                        "src": "7273:11:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2668,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7273:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2671,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7287:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7273:15:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7304:5:15",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2675,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2669,
                        "src": "7306:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2677,
                    "nodeType": "ExpressionStatement",
                    "src": "7304:5:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "7268:83:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "630b5ba1",
            "id": 2685,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "massUpdatePools",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7206:2:15"
            },
            "returnParameters": {
              "id": 2662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7216:0:15"
            },
            "scope": 3192,
            "src": "7182:175:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2792,
              "nodeType": "Block",
              "src": "7471:758:15",
              "statements": [
                {
                  "assignments": [
                    2691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2691,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2792,
                      "src": "7481:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2690,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2268,
                        "src": "7481:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2695,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2692,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "7505:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2268_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2694,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2693,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2687,
                      "src": "7514:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7505:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2268_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7481:38:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2696,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7533:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7533:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2698,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2691,
                        "src": "7549:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                        }
                      },
                      "id": 2699,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2265,
                      "src": "7549:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7533:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2703,
                  "nodeType": "IfStatement",
                  "src": "7529:73:15",
                  "trueBody": {
                    "id": 2702,
                    "nodeType": "Block",
                    "src": "7571:31:15",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 2689,
                        "id": 2701,
                        "nodeType": "Return",
                        "src": "7585:7:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2705
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2705,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2792,
                      "src": "7611:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2704,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7611:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2714,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2711,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7661:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$3192",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$3192",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 2710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7653:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2709,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7653:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7653:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2706,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2691,
                          "src": "7630:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2707,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2261,
                        "src": "7630:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$17787",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17726,
                      "src": "7630:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7630:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7611:56:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2715,
                      "name": "lpSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2705,
                      "src": "7681:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7693:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7681:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2727,
                  "nodeType": "IfStatement",
                  "src": "7677:99:15",
                  "trueBody": {
                    "id": 2726,
                    "nodeType": "Block",
                    "src": "7696:80:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2718,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2691,
                              "src": "7710:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                                "typeString": "struct MasterChef.PoolInfo storage pointer"
                              }
                            },
                            "id": 2720,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastRewardBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2265,
                            "src": "7710:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2721,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7733:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7733:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7710:35:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2724,
                        "nodeType": "ExpressionStatement",
                        "src": "7710:35:15"
                      },
                      {
                        "expression": null,
                        "functionReturnParameters": 2689,
                        "id": 2725,
                        "nodeType": "Return",
                        "src": "7759:7:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2729,
                      "mutability": "mutable",
                      "name": "multiplier",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2792,
                      "src": "7785:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2728,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7785:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2736,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2731,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2691,
                          "src": "7820:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2732,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2265,
                        "src": "7820:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2733,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7842:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7842:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2730,
                      "name": "getMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2560,
                      "src": "7806:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 2735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7806:49:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7785:70:15"
                },
                {
                  "assignments": [
                    2738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2738,
                      "mutability": "mutable",
                      "name": "rewardsAccum",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2792,
                      "src": "7865:20:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2737,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7865:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2750,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2748,
                        "name": "totalAllocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2295,
                        "src": "7945:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2744,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2691,
                              "src": "7924:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                                "typeString": "struct MasterChef.PoolInfo storage pointer"
                              }
                            },
                            "id": 2745,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allocPoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2263,
                            "src": "7924:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2741,
                                "name": "rewardsPerBlock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2280,
                                "src": "7903:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2739,
                                "name": "multiplier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2729,
                                "src": "7888:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17361,
                              "src": "7888:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7888:31:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17361,
                          "src": "7888:35:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7888:52:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17378,
                      "src": "7888:56:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7888:73:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7865:96:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2751,
                      "name": "devPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2274,
                      "src": "7975:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7991:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7975:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2768,
                  "nodeType": "IfStatement",
                  "src": "7971:106:15",
                  "trueBody": {
                    "id": 2767,
                    "nodeType": "Block",
                    "src": "7994:83:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2754,
                            "name": "tips",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2276,
                            "src": "8008:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030",
                                    "id": 2762,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8060:4:15",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 2759,
                                        "name": "devPercentage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2274,
                                        "src": "8041:13:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2757,
                                        "name": "rewardsAccum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2738,
                                        "src": "8024:12:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2758,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 17361,
                                      "src": "8024:16:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2760,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8024:31:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2761,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17378,
                                  "src": "8024:35:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8024:41:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2755,
                                "name": "tips",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2276,
                                "src": "8015:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17281,
                              "src": "8015:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8015:51:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8008:58:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2766,
                        "nodeType": "ExpressionStatement",
                        "src": "8008:58:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2769,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2691,
                        "src": "8086:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                        }
                      },
                      "id": 2771,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accRewardsPerShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2267,
                      "src": "8086:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2780,
                              "name": "lpSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2705,
                              "src": "8167:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 2777,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8157:4:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2775,
                                  "name": "rewardsAccum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2738,
                                  "src": "8140:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17361,
                                "src": "8140:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8140:22:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17378,
                            "src": "8140:26:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8140:36:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2772,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2691,
                            "src": "8112:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                              "typeString": "struct MasterChef.PoolInfo storage pointer"
                            }
                          },
                          "id": 2773,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accRewardsPerShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2267,
                          "src": "8112:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "8112:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8112:65:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8086:91:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2784,
                  "nodeType": "ExpressionStatement",
                  "src": "8086:91:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2785,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2691,
                        "src": "8187:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                        }
                      },
                      "id": 2787,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2265,
                      "src": "8187:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2788,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8210:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8210:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8187:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2791,
                  "nodeType": "ExpressionStatement",
                  "src": "8187:35:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "51eb05a6",
            "id": 2793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2687,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2793,
                  "src": "7450:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7450:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7449:14:15"
            },
            "returnParameters": {
              "id": 2689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7471:0:15"
            },
            "scope": 3192,
            "src": "7430:799:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2905,
              "nodeType": "Block",
              "src": "8353:690:15",
              "statements": [
                {
                  "assignments": [
                    2801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2801,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2905,
                      "src": "8363:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2800,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2268,
                        "src": "8363:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2805,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2802,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "8387:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2268_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2804,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2803,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2795,
                      "src": "8396:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8387:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2268_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8363:38:15"
                },
                {
                  "assignments": [
                    2807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2807,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2905,
                      "src": "8411:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2806,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2259,
                        "src": "8411:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2814,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2808,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2293,
                        "src": "8435:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2259_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 2810,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2809,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "8444:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8435:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2259_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 2813,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2811,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8450:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8450:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8435:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2259_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8411:50:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2816,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "8482:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2815,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2793,
                      "src": "8471:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8471:16:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2818,
                  "nodeType": "ExpressionStatement",
                  "src": "8471:16:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2819,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2807,
                        "src": "8501:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 2820,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2256,
                      "src": "8501:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8515:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8501:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2851,
                  "nodeType": "IfStatement",
                  "src": "8497:237:15",
                  "trueBody": {
                    "id": 2850,
                    "nodeType": "Block",
                    "src": "8518:216:15",
                    "statements": [
                      {
                        "assignments": [
                          2824
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2824,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2850,
                            "src": "8532:15:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2823,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8532:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2838,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2835,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2807,
                                "src": "8605:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                                  "typeString": "struct MasterChef.UserInfo storage pointer"
                                }
                              },
                              "id": 2836,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardDebt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2258,
                              "src": "8605:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 2832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8595:4:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2828,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2801,
                                        "src": "8566:4:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                                        }
                                      },
                                      "id": 2829,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "accRewardsPerShare",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2267,
                                      "src": "8566:23:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2825,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2807,
                                        "src": "8550:4:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                                          "typeString": "struct MasterChef.UserInfo storage pointer"
                                        }
                                      },
                                      "id": 2826,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2256,
                                      "src": "8550:11:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2827,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17361,
                                    "src": "8550:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2830,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8550:40:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17378,
                                "src": "8550:44:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8550:50:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17298,
                            "src": "8550:54:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8550:71:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8532:89:15"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2839,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2824,
                            "src": "8638:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8648:1:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8638:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2849,
                        "nodeType": "IfStatement",
                        "src": "8635:89:15",
                        "trueBody": {
                          "id": 2848,
                          "nodeType": "Block",
                          "src": "8651:73:15",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2843,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8689:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2844,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8689:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2845,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2824,
                                    "src": "8701:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2842,
                                  "name": "safeRewardsTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3113,
                                  "src": "8669:19:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 2846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8669:40:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2847,
                              "nodeType": "ExpressionStatement",
                              "src": "8669:40:15"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2852,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2797,
                      "src": "8746:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8756:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8746:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2883,
                  "nodeType": "IfStatement",
                  "src": "8743:167:15",
                  "trueBody": {
                    "id": 2882,
                    "nodeType": "Block",
                    "src": "8759:151:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2862,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8811:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "8811:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 2861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8803:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2860,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8803:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8803:19:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2867,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8832:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MasterChef_$3192",
                                    "typeString": "contract MasterChef"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MasterChef_$3192",
                                    "typeString": "contract MasterChef"
                                  }
                                ],
                                "id": 2866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8824:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2865,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8824:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8824:13:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2869,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2797,
                              "src": "8839:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2855,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2801,
                                "src": "8773:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 2858,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2261,
                              "src": "8773:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$17787",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17846,
                            "src": "8773:29:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$17787_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$17787_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 2870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8773:74:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2871,
                        "nodeType": "ExpressionStatement",
                        "src": "8773:74:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2872,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2807,
                              "src": "8861:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                                "typeString": "struct MasterChef.UserInfo storage pointer"
                              }
                            },
                            "id": 2874,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2256,
                            "src": "8861:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2878,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2797,
                                "src": "8891:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2875,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2807,
                                  "src": "8875:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 2876,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2256,
                                "src": "8875:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17281,
                              "src": "8875:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8875:24:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8861:38:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2881,
                        "nodeType": "ExpressionStatement",
                        "src": "8861:38:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2884,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2807,
                        "src": "8919:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 2886,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2258,
                      "src": "8919:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 2894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8982:4:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2890,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2801,
                                "src": "8953:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 2891,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accRewardsPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2267,
                              "src": "8953:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2887,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2807,
                                "src": "8937:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                                  "typeString": "struct MasterChef.UserInfo storage pointer"
                                }
                              },
                              "id": 2888,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2256,
                              "src": "8937:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17361,
                            "src": "8937:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8937:40:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17378,
                        "src": "8937:44:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8937:50:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8919:68:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2897,
                  "nodeType": "ExpressionStatement",
                  "src": "8919:68:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2899,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9010:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9010:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2901,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "9022:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2902,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2797,
                        "src": "9028:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2898,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
                      "src": "9002:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9002:34:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2904,
                  "nodeType": "EmitStatement",
                  "src": "8997:39:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e2bbb158",
            "id": 2906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2795,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2906,
                  "src": "8315:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8315:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2797,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2906,
                  "src": "8329:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8329:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8314:31:15"
            },
            "returnParameters": {
              "id": 2799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8353:0:15"
            },
            "scope": 3192,
            "src": "8298:745:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3016,
              "nodeType": "Block",
              "src": "9148:678:15",
              "statements": [
                {
                  "assignments": [
                    2914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2914,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3016,
                      "src": "9158:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2913,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2268,
                        "src": "9158:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2918,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2915,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "9182:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2268_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2917,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2916,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2908,
                      "src": "9191:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9182:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2268_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9158:38:15"
                },
                {
                  "assignments": [
                    2920
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2920,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3016,
                      "src": "9206:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2919,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2259,
                        "src": "9206:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2927,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2921,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2293,
                        "src": "9230:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2259_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 2923,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2922,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2908,
                        "src": "9239:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9230:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2259_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 2926,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2924,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9245:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9245:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9230:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2259_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9206:50:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2929,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2920,
                            "src": "9274:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                              "typeString": "struct MasterChef.UserInfo storage pointer"
                            }
                          },
                          "id": 2930,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2256,
                          "src": "9274:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2931,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "9289:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9274:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77697468647261773a206e6f7420676f6f64",
                        "id": 2933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9298:20:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        },
                        "value": "withdraw: not good"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        }
                      ],
                      "id": 2928,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9266:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9266:53:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2935,
                  "nodeType": "ExpressionStatement",
                  "src": "9266:53:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2937,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2908,
                        "src": "9340:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2936,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2793,
                      "src": "9329:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9329:16:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2939,
                  "nodeType": "ExpressionStatement",
                  "src": "9329:16:15"
                },
                {
                  "assignments": [
                    2941
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2941,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3016,
                      "src": "9355:15:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2940,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9355:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2955,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2952,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2920,
                          "src": "9428:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                            "typeString": "struct MasterChef.UserInfo storage pointer"
                          }
                        },
                        "id": 2953,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2258,
                        "src": "9428:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 2949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9418:4:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2945,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2914,
                                  "src": "9389:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                                    "typeString": "struct MasterChef.PoolInfo storage pointer"
                                  }
                                },
                                "id": 2946,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accRewardsPerShare",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2267,
                                "src": "9389:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2942,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2920,
                                  "src": "9373:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 2943,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2256,
                                "src": "9373:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17361,
                              "src": "9373:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9373:40:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17378,
                          "src": "9373:44:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9373:50:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17298,
                      "src": "9373:54:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9373:71:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9355:89:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2956,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2941,
                      "src": "9457:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9467:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9457:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2966,
                  "nodeType": "IfStatement",
                  "src": "9454:81:15",
                  "trueBody": {
                    "id": 2965,
                    "nodeType": "Block",
                    "src": "9470:65:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2960,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9504:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9504:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2962,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2941,
                              "src": "9516:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2959,
                            "name": "safeRewardsTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3113,
                            "src": "9484:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9484:40:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2964,
                        "nodeType": "ExpressionStatement",
                        "src": "9484:40:15"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2967,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2910,
                      "src": "9547:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9557:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9547:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2994,
                  "nodeType": "IfStatement",
                  "src": "9544:148:15",
                  "trueBody": {
                    "id": 2993,
                    "nodeType": "Block",
                    "src": "9560:132:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2970,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2920,
                              "src": "9574:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                                "typeString": "struct MasterChef.UserInfo storage pointer"
                              }
                            },
                            "id": 2972,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2256,
                            "src": "9574:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2976,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2910,
                                "src": "9604:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2973,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2920,
                                  "src": "9588:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 2974,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2256,
                                "src": "9588:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17298,
                              "src": "9588:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9588:24:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9574:38:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2979,
                        "nodeType": "ExpressionStatement",
                        "src": "9574:38:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2987,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9660:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2988,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "9660:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 2986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9652:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2985,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9652:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9652:19:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2990,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2910,
                              "src": "9673:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2980,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2914,
                                "src": "9626:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 2983,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2261,
                              "src": "9626:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$17787",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17821,
                            "src": "9626:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$17787_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$17787_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9626:55:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2992,
                        "nodeType": "ExpressionStatement",
                        "src": "9626:55:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2995,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2920,
                        "src": "9701:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 2997,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2258,
                      "src": "9701:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 3005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9764:4:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3001,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2914,
                                "src": "9735:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 3002,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accRewardsPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2267,
                              "src": "9735:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2998,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2920,
                                "src": "9719:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                                  "typeString": "struct MasterChef.UserInfo storage pointer"
                                }
                              },
                              "id": 2999,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2256,
                              "src": "9719:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17361,
                            "src": "9719:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9719:40:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17378,
                        "src": "9719:44:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9719:50:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9701:68:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3008,
                  "nodeType": "ExpressionStatement",
                  "src": "9701:68:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3010,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9793:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9793:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3012,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2908,
                        "src": "9805:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3013,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2910,
                        "src": "9811:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3009,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2313,
                      "src": "9784:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9784:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3015,
                  "nodeType": "EmitStatement",
                  "src": "9779:40:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "441a3e70",
            "id": 3017,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2908,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3017,
                  "src": "9110:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9110:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2910,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3017,
                  "src": "9124:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9124:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9109:31:15"
            },
            "returnParameters": {
              "id": 2912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9148:0:15"
            },
            "scope": 3192,
            "src": "9092:734:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3074,
              "nodeType": "Block",
              "src": "9942:329:15",
              "statements": [
                {
                  "assignments": [
                    3023
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3023,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3074,
                      "src": "9952:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3022,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2268,
                        "src": "9952:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3027,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3024,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "9976:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2268_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3026,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3025,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3019,
                      "src": "9985:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9976:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2268_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9952:38:15"
                },
                {
                  "assignments": [
                    3029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3029,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3074,
                      "src": "10000:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3028,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2259,
                        "src": "10000:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3036,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3030,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2293,
                        "src": "10024:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2259_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 3032,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3031,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3019,
                        "src": "10033:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10024:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2259_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 3035,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3033,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10039:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "10039:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10024:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2259_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10000:50:15"
                },
                {
                  "assignments": [
                    3038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3038,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3074,
                      "src": "10060:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3037,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10060:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3041,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3039,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3029,
                      "src": "10077:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo storage pointer"
                      }
                    },
                    "id": 3040,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2256,
                    "src": "10077:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10060:28:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3042,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3029,
                        "src": "10098:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 3044,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2256,
                      "src": "10098:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10112:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10098:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3047,
                  "nodeType": "ExpressionStatement",
                  "src": "10098:15:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3048,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3029,
                        "src": "10123:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2259_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 3050,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2258,
                      "src": "10123:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10141:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10123:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3053,
                  "nodeType": "ExpressionStatement",
                  "src": "10123:19:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3061,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10186:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10186:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10178:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3059,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10178:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10178:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3064,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3038,
                        "src": "10199:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3054,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3023,
                          "src": "10152:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2268_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 3057,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2261,
                        "src": "10152:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$17787",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17821,
                      "src": "10152:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$17787_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$17787_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10152:54:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3066,
                  "nodeType": "ExpressionStatement",
                  "src": "10152:54:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3068,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10239:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10239:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3070,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3019,
                        "src": "10251:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3071,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3038,
                        "src": "10257:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3067,
                      "name": "EmergencyWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2321,
                      "src": "10221:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10221:43:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3073,
                  "nodeType": "EmitStatement",
                  "src": "10216:48:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5312ea8e",
            "id": 3075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3019,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3075,
                  "src": "9921:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9921:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9920:14:15"
            },
            "returnParameters": {
              "id": 3021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9942:0:15"
            },
            "scope": 3192,
            "src": "9894:377:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3112,
              "nodeType": "Block",
              "src": "10454:224:15",
              "statements": [
                {
                  "assignments": [
                    3083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3083,
                      "mutability": "mutable",
                      "name": "rewardsBal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3112,
                      "src": "10464:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3082,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10464:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3091,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3088,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10511:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$3192",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$3192",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 3087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10503:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3086,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10503:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10503:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3084,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2270,
                        "src": "10485:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$17787",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17726,
                      "src": "10485:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10485:32:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10464:53:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3092,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3079,
                      "src": "10531:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3093,
                      "name": "rewardsBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3083,
                      "src": "10541:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10531:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3110,
                    "nodeType": "Block",
                    "src": "10617:55:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3106,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3077,
                              "src": "10648:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3107,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3079,
                              "src": "10653:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3103,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2270,
                              "src": "10631:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$17787",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17736,
                            "src": "10631:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10631:30:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3109,
                        "nodeType": "ExpressionStatement",
                        "src": "10631:30:15"
                      }
                    ]
                  },
                  "id": 3111,
                  "nodeType": "IfStatement",
                  "src": "10527:145:15",
                  "trueBody": {
                    "id": 3102,
                    "nodeType": "Block",
                    "src": "10553:58:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3098,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3077,
                              "src": "10584:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3099,
                              "name": "rewardsBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3083,
                              "src": "10589:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3095,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2270,
                              "src": "10567:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$17787",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17736,
                            "src": "10567:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10567:33:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3101,
                        "nodeType": "ExpressionStatement",
                        "src": "10567:33:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 3113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeRewardsTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3077,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3113,
                  "src": "10415:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10415:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3079,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3113,
                  "src": "10428:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10428:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10414:30:15"
            },
            "returnParameters": {
              "id": 3081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10454:0:15"
            },
            "scope": 3192,
            "src": "10386:292:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3140,
              "nodeType": "Block",
              "src": "10814:203:15",
              "statements": [
                {
                  "assignments": [
                    3119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3119,
                      "mutability": "mutable",
                      "name": "rewardsBal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3140,
                      "src": "10824:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3118,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10824:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3127,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3124,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10871:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$3192",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$3192",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 3123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10863:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10863:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10863:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3120,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2270,
                        "src": "10845:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$17787",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17726,
                      "src": "10845:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10845:32:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10824:53:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3128,
                      "name": "rewardsPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2280,
                      "src": "10891:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10909:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10891:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3138,
                    "nodeType": "Block",
                    "src": "10978:33:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10999:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 3117,
                        "id": 3137,
                        "nodeType": "Return",
                        "src": "10992:8:15"
                      }
                    ]
                  },
                  "id": 3139,
                  "nodeType": "IfStatement",
                  "src": "10887:124:15",
                  "trueBody": {
                    "id": 3135,
                    "nodeType": "Block",
                    "src": "10912:60:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3131,
                            "name": "rewardsBal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3119,
                            "src": "10933:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3132,
                            "name": "rewardsPerBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2280,
                            "src": "10946:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10933:28:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3117,
                        "id": 3134,
                        "nodeType": "Return",
                        "src": "10926:35:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d0863580",
            "id": 3141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "blocksRemaining",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10787:2:15"
            },
            "returnParameters": {
              "id": 3117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3116,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3141,
                  "src": "10806:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10806:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10805:9:15"
            },
            "scope": 3192,
            "src": "10763:254:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3172,
              "nodeType": "Block",
              "src": "11095:202:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3145,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11113:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11113:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3147,
                          "name": "devaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2272,
                          "src": "11127:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11113:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6465763a207775743f",
                        "id": 3149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11136:11:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        },
                        "value": "dev: wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        }
                      ],
                      "id": 3144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11105:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11105:43:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3151,
                  "nodeType": "ExpressionStatement",
                  "src": "11105:43:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3153,
                          "name": "tips",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2276,
                          "src": "11166:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11173:1:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11166:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6465763a2062726f6b65",
                        "id": 3156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11176:12:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9e90bf8c8678d4c5c05f36598b8e38aa6f142849c613a846dc9373143675b38",
                          "typeString": "literal_string \"dev: broke\""
                        },
                        "value": "dev: broke"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9e90bf8c8678d4c5c05f36598b8e38aa6f142849c613a846dc9373143675b38",
                          "typeString": "literal_string \"dev: broke\""
                        }
                      ],
                      "id": 3152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11158:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11158:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3158,
                  "nodeType": "ExpressionStatement",
                  "src": "11158:31:15"
                },
                {
                  "assignments": [
                    3160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3160,
                      "mutability": "mutable",
                      "name": "claimable",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3172,
                      "src": "11199:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3159,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11199:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3162,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3161,
                    "name": "tips",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2276,
                    "src": "11219:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11199:24:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3163,
                      "name": "tips",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2276,
                      "src": "11233:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11240:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11233:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3166,
                  "nodeType": "ExpressionStatement",
                  "src": "11233:8:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3168,
                        "name": "devaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2272,
                        "src": "11271:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3169,
                        "name": "claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3160,
                        "src": "11280:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3167,
                      "name": "safeRewardsTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3113,
                      "src": "11251:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11251:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3171,
                  "nodeType": "ExpressionStatement",
                  "src": "11251:39:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "06af3dfd",
            "id": 3173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTips",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11085:2:15"
            },
            "returnParameters": {
              "id": 3143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11095:0:15"
            },
            "scope": 3192,
            "src": "11067:230:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3190,
              "nodeType": "Block",
              "src": "11388:88:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3179,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11406:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11406:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3181,
                          "name": "devaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2272,
                          "src": "11420:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11406:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6465763a207775743f",
                        "id": 3183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11429:11:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        },
                        "value": "dev: wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        }
                      ],
                      "id": 3178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11398:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11398:43:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3185,
                  "nodeType": "ExpressionStatement",
                  "src": "11398:43:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3186,
                      "name": "devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2272,
                      "src": "11451:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3187,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3175,
                      "src": "11461:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11451:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3189,
                  "nodeType": "ExpressionStatement",
                  "src": "11451:18:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8d88a90e",
            "id": 3191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dev",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3175,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3191,
                  "src": "11363:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11363:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11362:18:15"
            },
            "returnParameters": {
              "id": 3177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11388:0:15"
            },
            "scope": 3192,
            "src": "11350:126:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3193,
        "src": "952:10526:15"
      }
    ],
    "src": "0:11478:15"
  },
  "bytecode": "608060405234801561001057600080fd5b506119b1806100206000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c8063630b5ba1116100f95780639ec5a89411610097578063d18df53c11610071578063d18df53c14610410578063d49e77cd1461043c578063d69de7e714610444578063e2bbb15814610478576101a9565b80639ec5a894146103f8578063c3a4382414610400578063d086358014610408576101a9565b80638aa28550116100d35780638aa28550146103625780638d88a90e1461036a5780638dbb1e3a1461039057806393f1a40b146103b3576101a9565b8063630b5ba11461030b57806364482f7914610313578063748365ef1461033e576101a9565b80631aed65531161016657806351eb05a61161014057806351eb05a6146102855780635312ea8e146102a25780635befdbca146102bf5780635eeb671014610303576101a9565b80631aed655314610252578063441a3e701461025a57806348cd4cb11461027d576101a9565b8063037c99b0146101ae57806306af3dfd146101d3578063081e3eda146101db5780631526fe27146101f557806317caf6f1146102425780631a4e1e781461024a575b600080fd5b6101d1600480360360408110156101c457600080fd5b508035906020013561049b565b005b6101d1610558565b6101e3610609565b60408051918252519081900360200190f35b6102126004803603602081101561020b57600080fd5b5035610610565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b6101e3610651565b6101e3610657565b6101e361065d565b6101d16004803603604081101561027057600080fd5b5080359060200135610663565b6101e36107c2565b6101d16004803603602081101561029b57600080fd5b50356107c8565b6101d1600480360360208110156102b857600080fd5b503561092b565b6101d1600480360360a08110156102d557600080fd5b506001600160a01b0381358116916020810135916040820135916060810135821691608090910135166109c7565b6101e3610a34565b6101d1610a3a565b6101d16004803603606081101561032957600080fd5b50803590602081013590604001351515610a5d565b610346610b88565b604080516001600160a01b039092168252519081900360200190f35b6101e3610b97565b6101d16004803603602081101561038057600080fd5b50356001600160a01b0316610b9d565b6101e3600480360360408110156103a657600080fd5b5080359060200135610c0a565b6103df600480360360408110156103c957600080fd5b50803590602001356001600160a01b0316610c79565b6040805192835260208301919091528051918290030190f35b610346610c9d565b6101e3610cac565b6101e3610cb2565b6101e36004803603604081101561042657600080fd5b50803590602001356001600160a01b0316610d57565b610346610eb9565b6101d16004803603606081101561045a57600080fd5b508035906001600160a01b0360208201351690604001351515610ec8565b6101d16004803603604081101561048e57600080fd5b508035906020013561111b565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b1580156104e657600080fd5b505afa1580156104fa573d6000803e3d6000fd5b505050506040513d602081101561051057600080fd5b505161054d5760405162461bcd60e51b81526004018080602001828103825260248152602001806118e66024913960400191505060405180910390fd5b600591909155600755565b6002546001600160a01b031633146105a3576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b6000600454116105e7576040805162461bcd60e51b815260206004820152600a6024820152696465763a2062726f6b6560b01b604482015290519081900360640190fd5b600480546000909155600254610606906001600160a01b03168261122d565b50565b6009545b90565b6009818154811061061d57fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b600b5481565b60045481565b60055481565b60006009838154811061067257fe5b60009182526020808320868452600a8252604080852033865290925292208054600490920290920192508311156106e5576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b6106ee846107c8565b6000610728826001015461072264e8d4a5100061071c876003015487600001546113be90919063ffffffff16565b9061141e565b90611460565b9050801561073a5761073a338261122d565b831561076457815461074c9085611460565b82558254610764906001600160a01b031633866114a2565b6003830154825461077f9164e8d4a510009161071c916113be565b6001830155604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050505050565b600c5481565b6000600982815481106107d757fe5b90600052602060002090600402019050806002015443116107f85750610606565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561084257600080fd5b505afa158015610856573d6000803e3d6000fd5b505050506040513d602081101561086c57600080fd5b5051905080610882575043600290910155610606565b6000610892836002015443610c0a565b905060006108bf600b5461071c86600101546108b9600654876113be90919063ffffffff16565b906113be565b600354909150156108f5576108f16108e86103e861071c600354856113be90919063ffffffff16565b600454906114f4565b6004555b61091661090b8461071c8464e8d4a510006113be565b6003860154906114f4565b60038501555050436002909201919091555050565b60006009828154811061093a57fe5b60009182526020808320858452600a82526040808520338087529352842080548582556001820195909555600490930201805490945091929161098a916001600160a01b039190911690836114a2565b604080518281529051859133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a350505050565b60085460ff16156109d757600080fd5b600180546001600160a01b03199081166001600160a01b039788161782556000600b8190556008805460ff1916909317909255600695909555600c9390935560028054851692861692909217909155815490921691909216179055565b60065481565b60095460005b81811015610a5957610a51816107c8565b600101610a40565b5050565b60005460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b158015610aa857600080fd5b505afa158015610abc573d6000803e3d6000fd5b505050506040513d6020811015610ad257600080fd5b5051610b0f5760405162461bcd60e51b81526004018080602001828103825260278152602001806119556027913960400191505060405180910390fd5b8015610b1d57610b1d610a3a565b610b5a82610b5460098681548110610b3157fe5b906000526020600020906004020160010154600b5461146090919063ffffffff16565b906114f4565b600b819055508160098481548110610b6e57fe5b906000526020600020906004020160010181905550505050565b6000546001600160a01b031681565b60075481565b6002546001600160a01b03163314610be8576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006005548211610c2d57600754610c26906108b98486611460565b9050610c73565b6005548310610c4057610c268284611460565b610c26610c586005548461146090919063ffffffff16565b610b546007546108b98760055461146090919063ffffffff16565b92915050565b600a6020908152600092835260408084209091529082529020805460019091015482565b6001546001600160a01b031681565b60035481565b600154604080516370a0823160e01b8152306004820152905160009283926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b158015610d0257600080fd5b505afa158015610d16573d6000803e3d6000fd5b505050506040513d6020811015610d2c57600080fd5b505160065490915015610d4d576006548181610d4457fe5b0491505061060d565b600091505061060d565b60008060098481548110610d6757fe5b60009182526020808320878452600a825260408085206001600160a01b03898116875290845281862060049586029093016003810154815484516370a0823160e01b81523098810198909852935191985093969395939492909116926370a08231926024808301939192829003018186803b158015610de557600080fd5b505afa158015610df9573d6000803e3d6000fd5b505050506040513d6020811015610e0f57600080fd5b5051600285015490915043118015610e2657508015155b15610e86576000610e3b856002015443610c0a565b90506000610e62600b5461071c88600101546108b9600654876113be90919063ffffffff16565b9050610e81610e7a8461071c8464e8d4a510006113be565b85906114f4565b935050505b610eae836001015461072264e8d4a5100061071c8688600001546113be90919063ffffffff16565b979650505050505050565b6002546001600160a01b031681565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b158015610f1357600080fd5b505afa158015610f27573d6000803e3d6000fd5b505050506040513d6020811015610f3d57600080fd5b505180610fbd57506000546040805163089d855960e11b815233600482015290516001600160a01b039092169163113b0ab291602480820192602092909190829003018186803b158015610f9057600080fd5b505afa158015610fa4573d6000803e3d6000fd5b505050506040513d6020811015610fba57600080fd5b50515b610ff85760405162461bcd60e51b81526004018080602001828103825260248152602001806118e66024913960400191505060405180910390fd5b801561100657611006610a3a565b6000600c54431161101957600c5461101b565b435b600b5490915061102b90856114f4565b600b55604080516080810182526001600160a01b0394851681526020810195865290810191825260006060820181815260098054600181018255925291517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af600490920291820180546001600160a01b031916919096161790945593517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0840155517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b18301555090517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b290910155565b60006009838154811061112a57fe5b60009182526020808320868452600a8252604080852033865290925292206004909102909101915061115b846107c8565b8054156111a4576000611190826001015461072264e8d4a5100061071c876003015487600001546113be90919063ffffffff16565b905080156111a2576111a2338261122d565b505b82156111d05781546111c1906001600160a01b031633308661154e565b80546111cd90846114f4565b81555b600382015481546111eb9164e8d4a510009161071c916113be565b6001820155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561127857600080fd5b505afa15801561128c573d6000803e3d6000fd5b505050506040513d60208110156112a257600080fd5b5051905080821115611336576001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561130457600080fd5b505af1158015611318573d6000803e3d6000fd5b505050506040513d602081101561132e57600080fd5b506113b99050565b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561138c57600080fd5b505af11580156113a0573d6000803e3d6000fd5b505050506040513d60208110156113b657600080fd5b50505b505050565b6000826113cd57506000610c73565b828202828482816113da57fe5b04146114175760405162461bcd60e51b815260040180806020018281038252602181526020018061190a6021913960400191505060405180910390fd5b9392505050565b600061141783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506115ae565b600061141783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611650565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526113b99084906116aa565b600082820183811015611417576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526115a89085906116aa565b50505050565b6000818361163a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115ff5781810151838201526020016115e7565b50505050905090810190601f16801561162c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161164657fe5b0495945050505050565b600081848411156116a25760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156115ff5781810151838201526020016115e7565b505050900390565b60606116ff826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661175b9092919063ffffffff16565b8051909150156113b95780806020019051602081101561171e57600080fd5b50516113b95760405162461bcd60e51b815260040180806020018281038252602a81526020018061192b602a913960400191505060405180910390fd5b606061176a8484600085611772565b949350505050565b606061177d856118df565b6117ce576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061180d5780518252601f1990920191602091820191016117ee565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461186f576040519150601f19603f3d011682016040523d82523d6000602084013e611874565b606091505b5091509150811561188857915061176a9050565b8051156118985780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156115ff5781810151838201526020016115e7565b3b15159056fe4d6173746572436865662e6164643a2053656e646572206d7573742062652061646d696e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644d6173746572436865662e7365743a2053656e646572206d757374206265206f70657261746f72a26469706673582212209d0510aba40d069dd5bd140ffe7eac798090326b7f2240aa51a201964982b29364736f6c634300060c0033",
  "bytecodeSha1": "f11ed45833bd836b0a749accb23fcfb0ab59b3aa",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "MasterChef",
  "coverageMap": {
    "branches": {
      "15": {
        "MasterChef.addToken": {
          "94": [
            4686,
            4725,
            true
          ],
          "95": [
            4729,
            4776,
            true
          ],
          "96": [
            4852,
            4863,
            false
          ],
          "97": [
            4942,
            4967,
            true
          ]
        },
        "MasterChef.blocksRemaining": {
          "91": [
            10891,
            10910,
            false
          ]
        },
        "MasterChef.claimTips": {
          "77": [
            11113,
            11134,
            true
          ],
          "78": [
            11166,
            11174,
            true
          ]
        },
        "MasterChef.deposit": {
          "98": [
            8501,
            8516,
            false
          ],
          "99": [
            8638,
            8649,
            false
          ],
          "100": [
            8746,
            8757,
            false
          ]
        },
        "MasterChef.dev": {
          "88": [
            11406,
            11427,
            true
          ]
        },
        "MasterChef.getMultiplier": {
          "89": [
            5949,
            5969,
            false
          ],
          "90": [
            6049,
            6071,
            false
          ]
        },
        "MasterChef.initFarm": {
          "85": [
            3700,
            3712,
            true
          ]
        },
        "MasterChef.pendingRewards": {
          "92": [
            6659,
            6694,
            false
          ],
          "93": [
            6698,
            6711,
            false
          ]
        },
        "MasterChef.safeRewardsTransfer": {
          "101": [
            10531,
            10551,
            false
          ]
        },
        "MasterChef.set": {
          "86": [
            5458,
            5500,
            true
          ],
          "87": [
            5579,
            5590,
            false
          ]
        },
        "MasterChef.setBonus": {
          "76": [
            4115,
            4154,
            true
          ]
        },
        "MasterChef.updatePool": {
          "82": [
            7533,
            7569,
            false
          ],
          "83": [
            7681,
            7694,
            false
          ],
          "84": [
            7975,
            7992,
            false
          ]
        },
        "MasterChef.withdraw": {
          "79": [
            9274,
            9296,
            true
          ],
          "80": [
            9457,
            9468,
            false
          ],
          "81": [
            9547,
            9558,
            false
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "109": [
            986,
            992,
            true
          ]
        },
        "SafeMath.div": {
          "110": [
            3826,
            3831,
            true
          ]
        },
        "SafeMath.mul": {
          "107": [
            2479,
            2485,
            false
          ],
          "108": [
            2565,
            2575,
            true
          ]
        },
        "SafeMath.sub": {
          "111": [
            1859,
            1865,
            true
          ]
        }
      },
      "5": {
        "SafeERC20._callOptionalReturn": {
          "105": [
            3487,
            3508,
            false
          ],
          "106": [
            3616,
            3646,
            true
          ]
        }
      },
      "6": {
        "Address._functionCallWithValue": {
          "102": [
            5082,
            5100,
            true
          ],
          "103": [
            5296,
            5303,
            false
          ],
          "104": [
            5437,
            5458,
            false
          ]
        }
      },
      "64": {}
    },
    "statements": {
      "15": {
        "MasterChef.addToken": {
          "48": [
            4665,
            4838
          ],
          "49": [
            4879,
            4896
          ],
          "50": [
            5005,
            5055
          ],
          "51": [
            5065,
            5249
          ]
        },
        "MasterChef.blocksRemaining": {
          "44": [
            10926,
            10961
          ],
          "45": [
            10992,
            11000
          ]
        },
        "MasterChef.claimTips": {
          "3": [
            11105,
            11148
          ],
          "4": [
            11158,
            11189
          ],
          "5": [
            11233,
            11241
          ],
          "6": [
            11251,
            11290
          ]
        },
        "MasterChef.deposit": {
          "52": [
            8471,
            8487
          ],
          "53": [
            8669,
            8709
          ],
          "54": [
            8773,
            8847
          ],
          "55": [
            8861,
            8899
          ],
          "56": [
            8919,
            8987
          ],
          "57": [
            8997,
            9036
          ]
        },
        "MasterChef.dev": {
          "39": [
            11398,
            11441
          ],
          "40": [
            11451,
            11469
          ]
        },
        "MasterChef.emergencyWithdraw": {
          "21": [
            10098,
            10113
          ],
          "22": [
            10123,
            10142
          ],
          "23": [
            10152,
            10206
          ],
          "24": [
            10216,
            10264
          ]
        },
        "MasterChef.getMultiplier": {
          "41": [
            5985,
            6028
          ],
          "42": [
            6087,
            6108
          ],
          "43": [
            6139,
            6250
          ]
        },
        "MasterChef.initFarm": {
          "25": [
            3692,
            3713
          ],
          "26": [
            3723,
            3749
          ],
          "27": [
            3759,
            3778
          ],
          "28": [
            3788,
            3806
          ],
          "29": [
            3816,
            3850
          ],
          "30": [
            3860,
            3884
          ],
          "31": [
            3894,
            3912
          ],
          "32": [
            3922,
            3974
          ]
        },
        "MasterChef.massUpdatePools": {
          "33": [
            7325,
            7340
          ],
          "34": [
            7304,
            7309
          ]
        },
        "MasterChef.pendingRewards": {
          "46": [
            6921,
            7002
          ],
          "47": [
            7022,
            7095
          ]
        },
        "MasterChef.poolLength": {
          "7": [
            4379,
            4401
          ]
        },
        "MasterChef.safeRewardsTransfer": {
          "58": [
            10567,
            10600
          ],
          "59": [
            10631,
            10661
          ]
        },
        "MasterChef.set": {
          "35": [
            5437,
            5565
          ],
          "36": [
            5606,
            5623
          ],
          "37": [
            5643,
            5724
          ],
          "38": [
            5734,
            5773
          ]
        },
        "MasterChef.setBonus": {
          "0": [
            4094,
            4216
          ],
          "1": [
            4227,
            4257
          ],
          "2": [
            4267,
            4302
          ]
        },
        "MasterChef.updatePool": {
          "15": [
            7585,
            7592
          ],
          "16": [
            7710,
            7745
          ],
          "17": [
            7759,
            7766
          ],
          "18": [
            8008,
            8066
          ],
          "19": [
            8086,
            8177
          ],
          "20": [
            8187,
            8222
          ]
        },
        "MasterChef.withdraw": {
          "8": [
            9266,
            9319
          ],
          "9": [
            9329,
            9345
          ],
          "10": [
            9484,
            9524
          ],
          "11": [
            9574,
            9612
          ],
          "12": [
            9626,
            9681
          ],
          "13": [
            9701,
            9769
          ],
          "14": [
            9779,
            9819
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "66": [
            978,
            1024
          ]
        },
        "SafeMath.div": {
          "63": [
            3178,
            3224
          ],
          "68": [
            3818,
            3846
          ]
        },
        "SafeMath.mul": {
          "60": [
            2501,
            2509
          ],
          "61": [
            2557,
            2613
          ],
          "62": [
            2624,
            2632
          ]
        },
        "SafeMath.sub": {
          "64": [
            1398,
            1448
          ],
          "69": [
            1851,
            1880
          ]
        }
      },
      "5": {
        "SafeERC20._callOptionalReturn": {
          "70": [
            3608,
            3693
          ]
        },
        "SafeERC20.safeTransfer": {
          "65": [
            778,
            864
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "67": [
            977,
            1073
          ]
        }
      },
      "6": {
        "Address._functionCallWithValue": {
          "72": [
            5074,
            5134
          ],
          "73": [
            5319,
            5336
          ],
          "74": [
            5827,
            5847
          ]
        },
        "Address.functionCall": {
          "71": [
            3700,
            3760
          ]
        },
        "Address.isContract": {
          "75": [
            1109,
            1124
          ]
        }
      },
      "64": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Address",
    "IMisoFarm",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101a95760003560e01c8063630b5ba1116100f95780639ec5a89411610097578063d18df53c11610071578063d18df53c14610410578063d49e77cd1461043c578063d69de7e714610444578063e2bbb15814610478576101a9565b80639ec5a894146103f8578063c3a4382414610400578063d086358014610408576101a9565b80638aa28550116100d35780638aa28550146103625780638d88a90e1461036a5780638dbb1e3a1461039057806393f1a40b146103b3576101a9565b8063630b5ba11461030b57806364482f7914610313578063748365ef1461033e576101a9565b80631aed65531161016657806351eb05a61161014057806351eb05a6146102855780635312ea8e146102a25780635befdbca146102bf5780635eeb671014610303576101a9565b80631aed655314610252578063441a3e701461025a57806348cd4cb11461027d576101a9565b8063037c99b0146101ae57806306af3dfd146101d3578063081e3eda146101db5780631526fe27146101f557806317caf6f1146102425780631a4e1e781461024a575b600080fd5b6101d1600480360360408110156101c457600080fd5b508035906020013561049b565b005b6101d1610558565b6101e3610609565b60408051918252519081900360200190f35b6102126004803603602081101561020b57600080fd5b5035610610565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b6101e3610651565b6101e3610657565b6101e361065d565b6101d16004803603604081101561027057600080fd5b5080359060200135610663565b6101e36107c2565b6101d16004803603602081101561029b57600080fd5b50356107c8565b6101d1600480360360208110156102b857600080fd5b503561092b565b6101d1600480360360a08110156102d557600080fd5b506001600160a01b0381358116916020810135916040820135916060810135821691608090910135166109c7565b6101e3610a34565b6101d1610a3a565b6101d16004803603606081101561032957600080fd5b50803590602081013590604001351515610a5d565b610346610b88565b604080516001600160a01b039092168252519081900360200190f35b6101e3610b97565b6101d16004803603602081101561038057600080fd5b50356001600160a01b0316610b9d565b6101e3600480360360408110156103a657600080fd5b5080359060200135610c0a565b6103df600480360360408110156103c957600080fd5b50803590602001356001600160a01b0316610c79565b6040805192835260208301919091528051918290030190f35b610346610c9d565b6101e3610cac565b6101e3610cb2565b6101e36004803603604081101561042657600080fd5b50803590602001356001600160a01b0316610d57565b610346610eb9565b6101d16004803603606081101561045a57600080fd5b508035906001600160a01b0360208201351690604001351515610ec8565b6101d16004803603604081101561048e57600080fd5b508035906020013561111b565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b1580156104e657600080fd5b505afa1580156104fa573d6000803e3d6000fd5b505050506040513d602081101561051057600080fd5b505161054d5760405162461bcd60e51b81526004018080602001828103825260248152602001806118e66024913960400191505060405180910390fd5b600591909155600755565b6002546001600160a01b031633146105a3576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b6000600454116105e7576040805162461bcd60e51b815260206004820152600a6024820152696465763a2062726f6b6560b01b604482015290519081900360640190fd5b600480546000909155600254610606906001600160a01b03168261122d565b50565b6009545b90565b6009818154811061061d57fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b600b5481565b60045481565b60055481565b60006009838154811061067257fe5b60009182526020808320868452600a8252604080852033865290925292208054600490920290920192508311156106e5576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b6106ee846107c8565b6000610728826001015461072264e8d4a5100061071c876003015487600001546113be90919063ffffffff16565b9061141e565b90611460565b9050801561073a5761073a338261122d565b831561076457815461074c9085611460565b82558254610764906001600160a01b031633866114a2565b6003830154825461077f9164e8d4a510009161071c916113be565b6001830155604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050505050565b600c5481565b6000600982815481106107d757fe5b90600052602060002090600402019050806002015443116107f85750610606565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561084257600080fd5b505afa158015610856573d6000803e3d6000fd5b505050506040513d602081101561086c57600080fd5b5051905080610882575043600290910155610606565b6000610892836002015443610c0a565b905060006108bf600b5461071c86600101546108b9600654876113be90919063ffffffff16565b906113be565b600354909150156108f5576108f16108e86103e861071c600354856113be90919063ffffffff16565b600454906114f4565b6004555b61091661090b8461071c8464e8d4a510006113be565b6003860154906114f4565b60038501555050436002909201919091555050565b60006009828154811061093a57fe5b60009182526020808320858452600a82526040808520338087529352842080548582556001820195909555600490930201805490945091929161098a916001600160a01b039190911690836114a2565b604080518281529051859133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a350505050565b60085460ff16156109d757600080fd5b600180546001600160a01b03199081166001600160a01b039788161782556000600b8190556008805460ff1916909317909255600695909555600c9390935560028054851692861692909217909155815490921691909216179055565b60065481565b60095460005b81811015610a5957610a51816107c8565b600101610a40565b5050565b60005460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b158015610aa857600080fd5b505afa158015610abc573d6000803e3d6000fd5b505050506040513d6020811015610ad257600080fd5b5051610b0f5760405162461bcd60e51b81526004018080602001828103825260278152602001806119556027913960400191505060405180910390fd5b8015610b1d57610b1d610a3a565b610b5a82610b5460098681548110610b3157fe5b906000526020600020906004020160010154600b5461146090919063ffffffff16565b906114f4565b600b819055508160098481548110610b6e57fe5b906000526020600020906004020160010181905550505050565b6000546001600160a01b031681565b60075481565b6002546001600160a01b03163314610be8576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006005548211610c2d57600754610c26906108b98486611460565b9050610c73565b6005548310610c4057610c268284611460565b610c26610c586005548461146090919063ffffffff16565b610b546007546108b98760055461146090919063ffffffff16565b92915050565b600a6020908152600092835260408084209091529082529020805460019091015482565b6001546001600160a01b031681565b60035481565b600154604080516370a0823160e01b8152306004820152905160009283926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b158015610d0257600080fd5b505afa158015610d16573d6000803e3d6000fd5b505050506040513d6020811015610d2c57600080fd5b505160065490915015610d4d576006548181610d4457fe5b0491505061060d565b600091505061060d565b60008060098481548110610d6757fe5b60009182526020808320878452600a825260408085206001600160a01b03898116875290845281862060049586029093016003810154815484516370a0823160e01b81523098810198909852935191985093969395939492909116926370a08231926024808301939192829003018186803b158015610de557600080fd5b505afa158015610df9573d6000803e3d6000fd5b505050506040513d6020811015610e0f57600080fd5b5051600285015490915043118015610e2657508015155b15610e86576000610e3b856002015443610c0a565b90506000610e62600b5461071c88600101546108b9600654876113be90919063ffffffff16565b9050610e81610e7a8461071c8464e8d4a510006113be565b85906114f4565b935050505b610eae836001015461072264e8d4a5100061071c8688600001546113be90919063ffffffff16565b979650505050505050565b6002546001600160a01b031681565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b158015610f1357600080fd5b505afa158015610f27573d6000803e3d6000fd5b505050506040513d6020811015610f3d57600080fd5b505180610fbd57506000546040805163089d855960e11b815233600482015290516001600160a01b039092169163113b0ab291602480820192602092909190829003018186803b158015610f9057600080fd5b505afa158015610fa4573d6000803e3d6000fd5b505050506040513d6020811015610fba57600080fd5b50515b610ff85760405162461bcd60e51b81526004018080602001828103825260248152602001806118e66024913960400191505060405180910390fd5b801561100657611006610a3a565b6000600c54431161101957600c5461101b565b435b600b5490915061102b90856114f4565b600b55604080516080810182526001600160a01b0394851681526020810195865290810191825260006060820181815260098054600181018255925291517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af600490920291820180546001600160a01b031916919096161790945593517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0840155517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b18301555090517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b290910155565b60006009838154811061112a57fe5b60009182526020808320868452600a8252604080852033865290925292206004909102909101915061115b846107c8565b8054156111a4576000611190826001015461072264e8d4a5100061071c876003015487600001546113be90919063ffffffff16565b905080156111a2576111a2338261122d565b505b82156111d05781546111c1906001600160a01b031633308661154e565b80546111cd90846114f4565b81555b600382015481546111eb9164e8d4a510009161071c916113be565b6001820155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561127857600080fd5b505afa15801561128c573d6000803e3d6000fd5b505050506040513d60208110156112a257600080fd5b5051905080821115611336576001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561130457600080fd5b505af1158015611318573d6000803e3d6000fd5b505050506040513d602081101561132e57600080fd5b506113b99050565b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561138c57600080fd5b505af11580156113a0573d6000803e3d6000fd5b505050506040513d60208110156113b657600080fd5b50505b505050565b6000826113cd57506000610c73565b828202828482816113da57fe5b04146114175760405162461bcd60e51b815260040180806020018281038252602181526020018061190a6021913960400191505060405180910390fd5b9392505050565b600061141783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506115ae565b600061141783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611650565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526113b99084906116aa565b600082820183811015611417576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526115a89085906116aa565b50505050565b6000818361163a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115ff5781810151838201526020016115e7565b50505050905090810190601f16801561162c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161164657fe5b0495945050505050565b600081848411156116a25760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156115ff5781810151838201526020016115e7565b505050900390565b60606116ff826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661175b9092919063ffffffff16565b8051909150156113b95780806020019051602081101561171e57600080fd5b50516113b95760405162461bcd60e51b815260040180806020018281038252602a81526020018061192b602a913960400191505060405180910390fd5b606061176a8484600085611772565b949350505050565b606061177d856118df565b6117ce576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061180d5780518252601f1990920191602091820191016117ee565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461186f576040519150601f19603f3d011682016040523d82523d6000602084013e611874565b606091505b5091509150811561188857915061176a9050565b8051156118985780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156115ff5781810151838201526020016115e7565b3b15159056fe4d6173746572436865662e6164643a2053656e646572206d7573742062652061646d696e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644d6173746572436865662e7365743a2053656e646572206d757374206265206f70657261746f72a26469706673582212209d0510aba40d069dd5bd140ffe7eac798090326b7f2240aa51a201964982b29364736f6c634300060c0033",
  "deployedSourceMap": "952:10526:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3987:322;;;;;;;;;;;;;;;;-1:-1:-1;3987:322:15;;;;;;;:::i;:::-;;11067:230;;;:::i;4315:93::-;;;:::i;:::-;;;;;;;;;;;;;;;;2889:26;;;;;;;;;;;;;;;;-1:-1:-1;2889:26:15;;:::i;:::-;;;;-1:-1:-1;;;;;2889:26:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3128:30;;;:::i;2557:19::-;;;:::i;2634:28::-;;;:::i;9092:734::-;;;;;;;;;;;;;;;;-1:-1:-1;9092:734:15;;;;;;;:::i;3216:25::-;;;:::i;7430:799::-;;;;;;;;;;;;;;;;-1:-1:-1;7430:799:15;;:::i;9894:377::-;;;;;;;;;;;;;;;;-1:-1:-1;9894:377:15;;:::i;3494:487::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3494:487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2708:30::-;;;:::i;7182:175::-;;;:::i;5353:427::-;;;;;;;;;;;;;;;;-1:-1:-1;5353:427:15;;;;;;;;;;;;;;:::i;1056:40::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1056:40:15;;;;;;;;;;;;;;2793:31;;;:::i;11350:126::-;;;;;;;;;;;;;;;;-1:-1:-1;11350:126:15;-1:-1:-1;;;;;11350:126:15;;:::i;5854:413::-;;;;;;;;;;;;;;;;-1:-1:-1;5854:413:15;;;;;;;:::i;2969:66::-;;;;;;;;;;;;;;;;-1:-1:-1;2969:66:15;;;;;;-1:-1:-1;;;;;2969:66:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2370:21;;;:::i;2492:28::-;;;:::i;10763:254::-;;;:::i;6329:773::-;;;;;;;;;;;;;;;;-1:-1:-1;6329:773:15;;;;;;-1:-1:-1;;;;;6329:773:15;;:::i;2417:22::-;;;:::i;4573:683::-;;;;;;;;;;;;;;;;-1:-1:-1;4573:683:15;;;-1:-1:-1;;;;;4573:683:15;;;;;;;;;;;;:::i;8298:745::-;;;;;;;;;;;;;;;;-1:-1:-1;8298:745:15;;;;;;;:::i;3987:322::-;4115:14;;:39;;;-1:-1:-1;;;4115:39:15;;4143:10;4115:39;;;;;;-1:-1:-1;;;;;4115:14:15;;;;:27;;:39;;;;;;;;;;;;;;;:14;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4115:39:15;4094:122;;;;-1:-1:-1;;;4094:122:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4227:13;:30;;;;4267:16;:35;3987:322::o;11067:230::-;11127:7;;-1:-1:-1;;;;;11127:7:15;11113:10;:21;11105:43;;;;;-1:-1:-1;;;11105:43:15;;;;;;;;;;;;-1:-1:-1;;;11105:43:15;;;;;;;;;;;;;;;11173:1;11166:4;;:8;11158:31;;;;;-1:-1:-1;;;11158:31:15;;;;;;;;;;;;-1:-1:-1;;;11158:31:15;;;;;;;;;;;;;;;11219:4;;;11199:17;11233:8;;;11271:7;;11251:39;;-1:-1:-1;;;;;11271:7:15;11219:4;11251:19;:39::i;:::-;11067:230;:::o;4315:93::-;4386:8;:15;4315:93;;:::o;2889:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2889:26:15;;;;-1:-1:-1;2889:26:15;;;:::o;3128:30::-;;;;:::o;2557:19::-;;;;:::o;2634:28::-;;;;:::o;9092:734::-;9158:21;9182:8;9191:4;9182:14;;;;;;;;;;;;;;;;9230;;;:8;:14;;;;;;9245:10;9230:26;;;;;;;9274:11;;9182:14;;;;;;;;-1:-1:-1;9274:22:15;-1:-1:-1;9274:22:15;9266:53;;;;;-1:-1:-1;;;9266:53:15;;;;;;;;;;;;-1:-1:-1;;;9266:53:15;;;;;;;;;;;;;;;9329:16;9340:4;9329:10;:16::i;:::-;9355:15;9373:71;9428:4;:15;;;9373:50;9418:4;9373:40;9389:4;:23;;;9373:4;:11;;;:15;;:40;;;;:::i;:::-;:44;;:50::i;:::-;:54;;:71::i;:::-;9355:89;-1:-1:-1;9457:11:15;;9454:81;;9484:40;9504:10;9516:7;9484:19;:40::i;:::-;9547:11;;9544:148;;9588:11;;:24;;9604:7;9588:15;:24::i;:::-;9574:38;;9626:12;;:55;;-1:-1:-1;;;;;9626:12:15;9660:10;9673:7;9626:25;:55::i;:::-;9735:23;;;;9719:11;;:50;;9764:4;;9719:40;;:15;:40::i;:50::-;9701:15;;;:68;9784:35;;;;;;;;9805:4;;9793:10;;9784:35;;;;;;;;;9092:734;;;;;:::o;3216:25::-;;;;:::o;7430:799::-;7481:21;7505:8;7514:4;7505:14;;;;;;;;;;;;;;;;;;7481:38;;7549:4;:20;;;7533:12;:36;7529:73;;7585:7;;;7529:73;7630:12;;:37;;;-1:-1:-1;;;7630:37:15;;7661:4;7630:37;;;;;;7611:16;;-1:-1:-1;;;;;7630:12:15;;:22;;:37;;;;;;;;;;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7630:37:15;;-1:-1:-1;7681:13:15;7677:99;;-1:-1:-1;7733:12:15;7710:20;;;;:35;7759:7;;7677:99;7785:18;7806:49;7820:4;:20;;;7842:12;7806:13;:49::i;:::-;7785:70;;7865:20;7888:73;7945:15;;7888:52;7924:4;:15;;;7888:31;7903:15;;7888:10;:14;;:31;;;;:::i;:::-;:35;;:52::i;:73::-;7975:13;;7865:96;;-1:-1:-1;7975:17:15;7971:106;;8015:51;8024:41;8060:4;8024:31;8041:13;;8024:12;:16;;:31;;;;:::i;:41::-;8015:4;;;:8;:51::i;:::-;8008:4;:58;7971:106;8112:65;8140:36;8167:8;8140:22;:12;8157:4;8140:16;:22::i;:36::-;8112:23;;;;;:27;:65::i;:::-;8086:23;;;:91;-1:-1:-1;;8210:12:15;8187:20;;;;:35;;;;-1:-1:-1;7430:799:15;:::o;9894:377::-;9952:21;9976:8;9985:4;9976:14;;;;;;;;;;;;;;;;10024;;;:8;:14;;;;;;10039:10;10024:26;;;;;;;10077:11;;10098:15;;;-1:-1:-1;10123:15:15;;:19;;;;9976:14;;;;;10152:12;;9976:14;;-1:-1:-1;10024:26:15;;10077:11;10152:54;;-1:-1:-1;;;;;10152:12:15;;;;;10077:11;10152:25;:54::i;:::-;10221:43;;;;;;;;10251:4;;10239:10;;10221:43;;;;;;;;;9894:377;;;;:::o;3494:487::-;3701:11;;;;3700:12;3692:21;;;;;;3723:7;:26;;-1:-1:-1;;;;;;3723:26:15;;;-1:-1:-1;;;;;3723:26:15;;;;;;-1:-1:-1;3759:15:15;:19;;;3788:11;:18;;-1:-1:-1;;3788:18:15;;;;;;;3816:15;:34;;;;3860:10;:24;;;;-1:-1:-1;3894:18:15;;;;;;;;;;;;;;3922:52;;;;;;;;;;;;3494:487::o;2708:30::-;;;;:::o;7182:175::-;7243:8;:15;7226:14;7268:83;7296:6;7290:3;:12;7268:83;;;7325:15;7336:3;7325:10;:15::i;:::-;7304:5;;7268:83;;;;7182:175;:::o;5353:427::-;5458:14;;:42;;;-1:-1:-1;;;5458:42:15;;5489:10;5458:42;;;;;;-1:-1:-1;;;;;5458:14:15;;;;:30;;:42;;;;;;;;;;;;;;;:14;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5458:42:15;5437:128;;;;-1:-1:-1;;;5437:128:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5579:11;5575:59;;;5606:17;:15;:17::i;:::-;5661:63;5712:11;5661:46;5681:8;5690:4;5681:14;;;;;;;;;;;;;;;;;;:25;;;5661:15;;:19;;:46;;;;:::i;:::-;:50;;:63::i;:::-;5643:15;:81;;;;5762:11;5734:8;5743:4;5734:14;;;;;;;;;;;;;;;;;;:25;;:39;;;;5353:427;;;:::o;1056:40::-;;;-1:-1:-1;;;;;1056:40:15;;:::o;2793:31::-;;;;:::o;11350:126::-;11420:7;;-1:-1:-1;;;;;11420:7:15;11406:10;:21;11398:43;;;;;-1:-1:-1;;;11398:43:15;;;;;;;;;;;;-1:-1:-1;;;11398:43:15;;;;;;;;;;;;;;;11451:7;:18;;-1:-1:-1;;;;;;11451:18:15;-1:-1:-1;;;;;11451:18:15;;;;;;;;;;11350:126::o;5854:413::-;5926:7;5956:13;;5949:3;:20;5945:316;;6011:16;;5992:36;;:14;:3;6000:5;5992:7;:14::i;:36::-;5985:43;;;;5945:316;6058:13;;6049:5;:22;6045:216;;6094:14;:3;6102:5;6094:7;:14::i;6045:216::-;6146:104;6214:22;6222:13;;6214:3;:7;;:22;;;;:::i;:::-;6146:46;6175:16;;6146:24;6164:5;6146:13;;:17;;:24;;;;:::i;6045:216::-;5854:413;;;;:::o;2969:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2370:21::-;;;-1:-1:-1;;;;;2370:21:15;;:::o;2492:28::-;;;;:::o;10763:254::-;10845:7;;:32;;;-1:-1:-1;;;10845:32:15;;10871:4;10845:32;;;;;;10806:7;;;;-1:-1:-1;;;;;10845:7:15;;;;:17;;:32;;;;;;;;;;;;;;;:7;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10845:32:15;10891:15;;10845:32;;-1:-1:-1;10891:19:15;10887:124;;10946:15;;10933:10;:28;;;;;;10926:35;;;;;10887:124;10999:1;10992:8;;;;;6329:773;6405:7;6424:21;6448:8;6457:4;6448:14;;;;;;;;;;;;;;;;6496;;;:8;:14;;;;;;-1:-1:-1;;;;;6496:21:15;;;;;;;;;;;6448:14;;;;;;;6556:23;;;;6608:12;;:37;;-1:-1:-1;;;6608:37:15;;6639:4;6608:37;;;;;;;;;6448:14;;-1:-1:-1;6496:21:15;;6556:23;;6448:14;;6608:12;;;;;:22;;:37;;;;;6448:14;;6608:37;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6608:37:15;6674:20;;;;6608:37;;-1:-1:-1;6659:12:15;:35;:52;;;;-1:-1:-1;6698:13:15;;;6659:52;6655:358;;;6727:18;6748:49;6762:4;:20;;;6784:12;6748:13;:49::i;:::-;6727:70;;6811:20;6834:73;6891:15;;6834:52;6870:4;:15;;;6834:31;6849:15;;6834:10;:14;;:31;;;;:::i;:73::-;6811:96;-1:-1:-1;6942:60:15;6965:36;6992:8;6965:22;6811:96;6982:4;6965:16;:22::i;:36::-;6942:18;;:22;:60::i;:::-;6921:81;;6655:358;;;7029:66;7079:4;:15;;;7029:45;7069:4;7029:35;7045:18;7029:4;:11;;;:15;;:35;;;;:::i;:66::-;7022:73;6329:773;-1:-1:-1;;;;;;;6329:773:15:o;2417:22::-;;;-1:-1:-1;;;;;2417:22:15;;:::o;4573:683::-;4686:14;;:39;;;-1:-1:-1;;;4686:39:15;;4714:10;4686:39;;;;;;-1:-1:-1;;;;;4686:14:15;;;;:27;;:39;;;;;;;;;;;;;;;:14;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4686:39:15;;:90;;-1:-1:-1;4729:14:15;;:47;;;-1:-1:-1;;;4729:47:15;;4765:10;4729:47;;;;;;-1:-1:-1;;;;;4729:14:15;;;;:35;;:47;;;;;;;;;;;;;;;:14;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4729:47:15;4686:90;4665:173;;;;-1:-1:-1;;;4665:173:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4852:11;4848:59;;;4879:17;:15;:17::i;:::-;4916:23;4957:10;;4942:12;:25;:53;;4985:10;;4942:53;;;4970:12;4942:53;5023:15;;4916:79;;-1:-1:-1;5023:32:15;;5043:11;5023:19;:32::i;:::-;5005:15;:50;5079:169;;;;;;;;-1:-1:-1;;;;;5079:169:15;;;;;;;;;;;;;;;;;-1:-1:-1;5079:169:15;;;;;;5065:8;:184;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5065:184:15;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5065:184:15;;;;;;;4573:683::o;8298:745::-;8363:21;8387:8;8396:4;8387:14;;;;;;;;;;;;;;;;8435;;;:8;:14;;;;;;8450:10;8435:26;;;;;;;8387:14;;;;;;;;-1:-1:-1;8471:16:15;8444:4;8471:10;:16::i;:::-;8501:11;;:15;8497:237;;8532:15;8550:71;8605:4;:15;;;8550:50;8595:4;8550:40;8566:4;:23;;;8550:4;:11;;;:15;;:40;;;;:::i;:71::-;8532:89;-1:-1:-1;8638:11:15;;8635:89;;8669:40;8689:10;8701:7;8669:19;:40::i;:::-;8497:237;;8746:11;;8743:167;;8773:12;;:74;;-1:-1:-1;;;;;8773:12:15;8811:10;8832:4;8839:7;8773:29;:74::i;:::-;8875:11;;:24;;8891:7;8875:15;:24::i;:::-;8861:38;;8743:167;8953:23;;;;8937:11;;:50;;8982:4;;8937:40;;:15;:40::i;:50::-;8919:15;;;:68;9002:34;;;;;;;;9022:4;;9010:10;;9002:34;;;;;;;;;8298:745;;;;:::o;10386:292::-;10485:7;;:32;;;-1:-1:-1;;;10485:32:15;;10511:4;10485:32;;;;;;10464:18;;-1:-1:-1;;;;;10485:7:15;;:17;;:32;;;;;;;;;;;;;;:7;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10485:32:15;;-1:-1:-1;10531:20:15;;;10527:145;;;10567:7;;:33;;;-1:-1:-1;;;10567:33:15;;-1:-1:-1;;;;;10567:33:15;;;;;;;;;;;;;;;:7;;;;;:16;;:33;;;;;;;;;;;;;;:7;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10527:145:15;;-1:-1:-1;10527:145:15;;10631:7;;:30;;;-1:-1:-1;;;10631:30:15;;-1:-1:-1;;;;;10631:30:15;;;;;;;;;;;;;;;:7;;;;;:16;;:30;;;;;;;;;;;;;;:7;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10527:145:15;10386:292;;;:::o;2180:459:3:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:3;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:1;2180:459;-1:-1:-1;;;2180:459:3:o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;1321:134::-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;696:175:5:-;805:58;;;-1:-1:-1;;;;;805:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;805:58:5;-1:-1:-1;;;805:58:5;;;778:86;;798:5;;778:19;:86::i;874:176:3:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;877:203:5;1004:68;;;-1:-1:-1;;;;;1004:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1004:68:5;-1:-1:-1;;;1004:68:5;;;977:96;;997:5;;977:19;:96::i;:::-;877:203;;;;:::o;3713:272:3:-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:3:o;1746:187::-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:3;;;1746:187::o;2959:751:5:-;3378:23;3404:69;3432:4;3404:69;;;;;;;;;;;;;;;;;3412:5;-1:-1:-1;;;;;3404:27:5;;;:69;;;;;:::i;:::-;3487:17;;3378:95;;-1:-1:-1;3487:21:5;3483:221;;3627:10;3616:30;;;;;;;;;;;;;;;-1:-1:-1;3616:30:5;3608:85;;;;-1:-1:-1;;;3608:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3573:194:6;3676:12;3707:53;3730:6;3738:4;3744:1;3747:12;3707:22;:53::i;:::-;3700:60;3573:194;-1:-1:-1;;;;3573:194:6:o;4920:958::-;5050:12;5082:18;5093:6;5082:10;:18::i;:::-;5074:60;;;;;-1:-1:-1;;;5074:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;5205:12;5219:23;5246:6;-1:-1:-1;;;;;5246:11:6;5266:8;5277:4;5246:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5246:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5204:78;;;;5296:7;5292:580;;;5326:10;-1:-1:-1;5319:17:6;;-1:-1:-1;5319:17:6;5292:580;5437:17;;:21;5433:429;;5695:10;5689:17;5755:15;5742:10;5738:2;5734:19;5727:44;5644:145;5827:20;;-1:-1:-1;;;5827:20:6;;;;;;;;;;;;;;;;;5834:12;;5827:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:413;1078:20;1116:8;;;718:413::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    952,
    11478
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x630B5BA1 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x9EC5A894 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD18DF53C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD18DF53C EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xD69DE7E7 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x478 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x9EC5A894 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xC3A43824 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xD0863580 EQ PUSH2 0x408 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x8AA28550 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x8D88A90E EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x3B3 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x748365EF EQ PUSH2 0x33E JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x1AED6553 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x5BEFDBCA EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x5EEB6710 EQ PUSH2 0x303 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x27D JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x37C99B0 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6AF3DFD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x1A4E1E78 EQ PUSH2 0x24A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x49B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH2 0x558 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x651 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x657 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x663 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x92B JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x346 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0xB97 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x3DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x346 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x111B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC395FCB3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC395FCB3 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18E6 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6465763A207775743F PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT PUSH2 0x5E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6465763A2062726F6B65 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH2 0x606 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x122D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x61D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x672 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6EE DUP5 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x728 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x722 PUSH5 0xE8D4A51000 PUSH2 0x71C DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x13BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x141E JUMP JUMPDEST SWAP1 PUSH2 0x1460 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x73A JUMPI PUSH2 0x73A CALLER DUP3 PUSH2 0x122D JUMP JUMPDEST DUP4 ISZERO PUSH2 0x764 JUMPI DUP2 SLOAD PUSH2 0x74C SWAP1 DUP6 PUSH2 0x1460 JUMP JUMPDEST DUP3 SSTORE DUP3 SLOAD PUSH2 0x764 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP3 SLOAD PUSH2 0x77F SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x71C SWAP2 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7D7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x7F8 JUMPI POP PUSH2 0x606 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x856 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x882 JUMPI POP NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH2 0x606 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x892 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xC0A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8BF PUSH1 0xB SLOAD PUSH2 0x71C DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x8B9 PUSH1 0x6 SLOAD DUP8 PUSH2 0x13BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x8F5 JUMPI PUSH2 0x8F1 PUSH2 0x8E8 PUSH2 0x3E8 PUSH2 0x71C PUSH1 0x3 SLOAD DUP6 PUSH2 0x13BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH2 0x916 PUSH2 0x90B DUP5 PUSH2 0x71C DUP5 PUSH5 0xE8D4A51000 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE POP POP NUMBER PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x93A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x4 SWAP1 SWAP4 MUL ADD DUP1 SLOAD SWAP1 SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH2 0x98A SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR DUP3 SSTORE PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x6 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0xC SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD DUP6 AND SWAP3 DUP7 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA59 JUMPI PUSH2 0xA51 DUP2 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xA40 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7E271F05 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xFC4E3E0A SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1955 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xB1D JUMPI PUSH2 0xB1D PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xB5A DUP3 PUSH2 0xB54 PUSH1 0x9 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xB31 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0xB SLOAD PUSH2 0x1460 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB6E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6465763A207775743F PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP3 GT PUSH2 0xC2D JUMPI PUSH1 0x7 SLOAD PUSH2 0xC26 SWAP1 PUSH2 0x8B9 DUP5 DUP7 PUSH2 0x1460 JUMP JUMPDEST SWAP1 POP PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP4 LT PUSH2 0xC40 JUMPI PUSH2 0xC26 DUP3 DUP5 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0xC26 PUSH2 0xC58 PUSH1 0x5 SLOAD DUP5 PUSH2 0x1460 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB54 PUSH1 0x7 SLOAD PUSH2 0x8B9 DUP8 PUSH1 0x5 SLOAD PUSH2 0x1460 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD4D JUMPI PUSH1 0x6 SLOAD DUP2 DUP2 PUSH2 0xD44 JUMPI INVALID JUMPDEST DIV SWAP2 POP POP PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD67 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP8 MSTORE SWAP1 DUP5 MSTORE DUP2 DUP7 KECCAK256 PUSH1 0x4 SWAP6 DUP7 MUL SWAP1 SWAP4 ADD PUSH1 0x3 DUP2 ADD SLOAD DUP2 SLOAD DUP5 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP9 DUP2 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP4 MLOAD SWAP2 SWAP9 POP SWAP4 SWAP7 SWAP4 SWAP6 SWAP4 SWAP5 SWAP3 SWAP1 SWAP2 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 DUP6 ADD SLOAD SWAP1 SWAP2 POP NUMBER GT DUP1 ISZERO PUSH2 0xE26 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE86 JUMPI PUSH1 0x0 PUSH2 0xE3B DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xC0A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE62 PUSH1 0xB SLOAD PUSH2 0x71C DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x8B9 PUSH1 0x6 SLOAD DUP8 PUSH2 0x13BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE81 PUSH2 0xE7A DUP5 PUSH2 0x71C DUP5 PUSH5 0xE8D4A51000 PUSH2 0x13BE JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xEAE DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x722 PUSH5 0xE8D4A51000 PUSH2 0x71C DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x13BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC395FCB3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC395FCB3 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP1 PUSH2 0xFBD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x89D8559 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x113B0AB2 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0xFF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18E6 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1006 JUMPI PUSH2 0x1006 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD NUMBER GT PUSH2 0x1019 JUMPI PUSH1 0xC SLOAD PUSH2 0x101B JUMP JUMPDEST NUMBER JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x102B SWAP1 DUP6 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 DUP7 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE SWAP2 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF PUSH1 0x4 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP4 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0 DUP5 ADD SSTORE MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1 DUP4 ADD SSTORE POP SWAP1 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B2 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x112A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x115B DUP5 PUSH2 0x7C8 JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x11A4 JUMPI PUSH1 0x0 PUSH2 0x1190 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x722 PUSH5 0xE8D4A51000 PUSH2 0x71C DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x13BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x11A2 JUMPI PUSH2 0x11A2 CALLER DUP3 PUSH2 0x122D JUMP JUMPDEST POP JUMPDEST DUP3 ISZERO PUSH2 0x11D0 JUMPI DUP2 SLOAD PUSH2 0x11C1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x154E JUMP JUMPDEST DUP1 SLOAD PUSH2 0x11CD SWAP1 DUP5 PUSH2 0x14F4 JUMP JUMPDEST DUP2 SSTORE JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH2 0x11EB SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x71C SWAP2 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x128C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1336 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B9 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13CD JUMPI POP PUSH1 0x0 PUSH2 0xC73 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x13DA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x190A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1417 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x15AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1417 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x13B9 SWAP1 DUP5 SWAP1 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1417 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x15A8 SWAP1 DUP6 SWAP1 PUSH2 0x16AA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x163A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15FF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15E7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x162C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1646 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x16A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x15FF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15E7 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x16FF DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x175B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x13B9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x171E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x13B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x192B PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x176A DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1772 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x177D DUP6 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x17CE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x180D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x186F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x1888 JUMPI SWAP2 POP PUSH2 0x176A SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1898 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x15FF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15E7 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID 0x4D PUSH2 0x7374 PUSH6 0x72436865662E PUSH2 0x6464 GASPRICE KECCAK256 MSTORE8 PUSH6 0x6E646572206D PUSH22 0x73742062652061646D696E536166654D6174683A206D PUSH22 0x6C7469706C69636174696F6E206F766572666C6F7753 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565644D6173746572436865662E736574 GASPRICE KECCAK256 MSTORE8 PUSH6 0x6E646572206D PUSH22 0x7374206265206F70657261746F72A264697066735822 SLT KECCAK256 SWAP14 SDIV LT 0xAB LOG4 0xD MOD SWAP14 0xD5 0xBD EQ 0xF INVALID PUSH31 0xAC798090326B7F2240AA51A201964982B29364736F6C634300060C00330000 ",
  "pcMap": {
    "0": {
      "offset": [
        952,
        11478
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "6": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "REVERT",
      "path": "15"
    },
    "16": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "POP",
      "path": "15"
    },
    "18": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "21": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "LT",
      "path": "15"
    },
    "22": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A9"
    },
    "25": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "29": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "SHR",
      "path": "15"
    },
    "32": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "33": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x630B5BA1"
    },
    "38": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "GT",
      "path": "15"
    },
    "39": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "43": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "44": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x9EC5A894"
    },
    "49": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "GT",
      "path": "15"
    },
    "50": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "54": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "55": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD18DF53C"
    },
    "60": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "GT",
      "path": "15"
    },
    "61": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "65": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "66": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD18DF53C"
    },
    "71": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "72": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x410"
    },
    "75": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "76": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "77": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD49E77CD"
    },
    "82": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "83": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43C"
    },
    "86": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "87": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "88": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD69DE7E7"
    },
    "93": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "94": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x444"
    },
    "97": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "98": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "99": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE2BBB158"
    },
    "104": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "105": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x478"
    },
    "108": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "109": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A9"
    },
    "112": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMP",
      "path": "15"
    },
    "113": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "114": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "115": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x9EC5A894"
    },
    "120": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "121": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3F8"
    },
    "124": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "125": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "126": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC3A43824"
    },
    "131": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "132": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x400"
    },
    "135": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "136": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "137": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD0863580"
    },
    "142": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "143": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x408"
    },
    "146": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "147": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A9"
    },
    "150": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMP",
      "path": "15"
    },
    "151": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "152": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "153": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8AA28550"
    },
    "158": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "GT",
      "path": "15"
    },
    "159": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "163": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "164": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8AA28550"
    },
    "169": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "170": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x362"
    },
    "173": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "174": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "175": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8D88A90E"
    },
    "180": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "181": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36A"
    },
    "184": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "185": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "186": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8DBB1E3A"
    },
    "191": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "192": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x390"
    },
    "195": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "196": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "197": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x93F1A40B"
    },
    "202": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "203": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3B3"
    },
    "206": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "207": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A9"
    },
    "210": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMP",
      "path": "15"
    },
    "211": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "212": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "213": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x630B5BA1"
    },
    "218": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "219": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30B"
    },
    "222": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "223": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "224": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x64482F79"
    },
    "229": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "230": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x313"
    },
    "233": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "234": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "235": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x748365EF"
    },
    "240": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "241": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33E"
    },
    "244": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "245": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A9"
    },
    "248": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMP",
      "path": "15"
    },
    "249": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "250": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "251": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1AED6553"
    },
    "256": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "GT",
      "path": "15"
    },
    "257": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "261": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "262": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x51EB05A6"
    },
    "267": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "GT",
      "path": "15"
    },
    "268": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "272": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "273": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x51EB05A6"
    },
    "278": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "279": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x285"
    },
    "282": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "283": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "284": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5312EA8E"
    },
    "289": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "290": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A2"
    },
    "293": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "294": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "295": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5BEFDBCA"
    },
    "300": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "301": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BF"
    },
    "304": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "305": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "306": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5EEB6710"
    },
    "311": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "312": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x303"
    },
    "315": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "316": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A9"
    },
    "319": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMP",
      "path": "15"
    },
    "320": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "321": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "322": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1AED6553"
    },
    "327": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "328": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x252"
    },
    "331": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "332": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "333": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x441A3E70"
    },
    "338": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "339": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25A"
    },
    "342": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "343": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "344": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x48CD4CB1"
    },
    "349": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "350": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27D"
    },
    "353": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "354": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A9"
    },
    "357": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMP",
      "path": "15"
    },
    "358": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "359": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "360": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x37C99B0"
    },
    "365": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "366": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AE"
    },
    "369": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "370": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "371": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6AF3DFD"
    },
    "376": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "377": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D3"
    },
    "380": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "381": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "382": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x81E3EDA"
    },
    "387": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "388": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DB"
    },
    "391": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "392": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "393": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1526FE27"
    },
    "398": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "399": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F5"
    },
    "402": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "403": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "404": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x17CAF6F1"
    },
    "409": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "410": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x242"
    },
    "413": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "414": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "415": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1A4E1E78"
    },
    "420": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "EQ",
      "path": "15"
    },
    "421": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24A"
    },
    "424": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "425": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "426": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "428": {
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "DUP1",
      "path": "15"
    },
    "429": {
      "first_revert": true,
      "fn": null,
      "offset": [
        952,
        11478
      ],
      "op": "REVERT",
      "path": "15"
    },
    "430": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "431": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1"
    },
    "434": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "436": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "DUP1",
      "path": "15"
    },
    "437": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "438": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "SUB",
      "path": "15"
    },
    "439": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "441": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "DUP2",
      "path": "15"
    },
    "442": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "LT",
      "path": "15"
    },
    "443": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "444": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C4"
    },
    "447": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "448": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "450": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "DUP1",
      "path": "15"
    },
    "451": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "REVERT",
      "path": "15"
    },
    "452": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "453": {
      "op": "POP"
    },
    "454": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "DUP1",
      "path": "15"
    },
    "455": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "456": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "457": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "459": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "ADD",
      "path": "15"
    },
    "460": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "461": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49B"
    },
    "464": {
      "fn": "MasterChef.setBonus",
      "jump": "i",
      "offset": [
        3987,
        4309
      ],
      "op": "JUMP",
      "path": "15"
    },
    "465": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "466": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "STOP",
      "path": "15"
    },
    "467": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11067,
        11297
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "468": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11067,
        11297
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1"
    },
    "471": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11067,
        11297
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x558"
    },
    "474": {
      "fn": "MasterChef.claimTips",
      "jump": "i",
      "offset": [
        11067,
        11297
      ],
      "op": "JUMP",
      "path": "15"
    },
    "475": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "476": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E3"
    },
    "479": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x609"
    },
    "482": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        4315,
        4408
      ],
      "op": "JUMP",
      "path": "15"
    },
    "483": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "484": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "486": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "DUP1",
      "path": "15"
    },
    "487": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "488": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "489": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "DUP3",
      "path": "15"
    },
    "490": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "491": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "492": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "493": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "DUP2",
      "path": "15"
    },
    "494": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "495": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "SUB",
      "path": "15"
    },
    "496": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "498": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "ADD",
      "path": "15"
    },
    "499": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "500": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "RETURN",
      "path": "15"
    },
    "501": {
      "offset": [
        2889,
        2915
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "502": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x212"
    },
    "505": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "507": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP1",
      "path": "15"
    },
    "508": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "509": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SUB",
      "path": "15"
    },
    "510": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "512": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP2",
      "path": "15"
    },
    "513": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "LT",
      "path": "15"
    },
    "514": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "515": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20B"
    },
    "518": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "519": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "521": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP1",
      "path": "15"
    },
    "522": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "REVERT",
      "path": "15"
    },
    "523": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "524": {
      "op": "POP"
    },
    "525": {
      "offset": [
        2889,
        2915
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "526": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x610"
    },
    "529": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        2889,
        2915
      ],
      "op": "JUMP",
      "path": "15"
    },
    "530": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "531": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "533": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP1",
      "path": "15"
    },
    "534": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "541": {
      "op": "SHL"
    },
    "542": {
      "op": "SUB"
    },
    "543": {
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "544": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "545": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "AND",
      "path": "15"
    },
    "546": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP6",
      "path": "15"
    },
    "547": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "548": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "550": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP6",
      "path": "15"
    },
    "551": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "ADD",
      "path": "15"
    },
    "552": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "553": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "554": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "555": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "556": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP4",
      "path": "15"
    },
    "557": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP4",
      "path": "15"
    },
    "558": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "ADD",
      "path": "15"
    },
    "559": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "560": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "561": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "562": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "563": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "565": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP4",
      "path": "15"
    },
    "566": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "ADD",
      "path": "15"
    },
    "567": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "568": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "569": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "570": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP2",
      "path": "15"
    },
    "571": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "572": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SUB",
      "path": "15"
    },
    "573": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "575": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "ADD",
      "path": "15"
    },
    "576": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "577": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "RETURN",
      "path": "15"
    },
    "578": {
      "offset": [
        3128,
        3158
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "579": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3128,
        3158
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E3"
    },
    "582": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3128,
        3158
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x651"
    },
    "585": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        3128,
        3158
      ],
      "op": "JUMP",
      "path": "15"
    },
    "586": {
      "offset": [
        2557,
        2576
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "587": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2557,
        2576
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E3"
    },
    "590": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2557,
        2576
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x657"
    },
    "593": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        2557,
        2576
      ],
      "op": "JUMP",
      "path": "15"
    },
    "594": {
      "offset": [
        2634,
        2662
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "595": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2634,
        2662
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E3"
    },
    "598": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2634,
        2662
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x65D"
    },
    "601": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        2634,
        2662
      ],
      "op": "JUMP",
      "path": "15"
    },
    "602": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "603": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1"
    },
    "606": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "608": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "DUP1",
      "path": "15"
    },
    "609": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "610": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "SUB",
      "path": "15"
    },
    "611": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "613": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "DUP2",
      "path": "15"
    },
    "614": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "LT",
      "path": "15"
    },
    "615": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "616": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x270"
    },
    "619": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "620": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "622": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "DUP1",
      "path": "15"
    },
    "623": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "REVERT",
      "path": "15"
    },
    "624": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "625": {
      "op": "POP"
    },
    "626": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "DUP1",
      "path": "15"
    },
    "627": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "628": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "629": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "631": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "ADD",
      "path": "15"
    },
    "632": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "633": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x663"
    },
    "636": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9092,
        9826
      ],
      "op": "JUMP",
      "path": "15"
    },
    "637": {
      "offset": [
        3216,
        3241
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "638": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3216,
        3241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E3"
    },
    "641": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3216,
        3241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7C2"
    },
    "644": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        3216,
        3241
      ],
      "op": "JUMP",
      "path": "15"
    },
    "645": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "646": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1"
    },
    "649": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "651": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "DUP1",
      "path": "15"
    },
    "652": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "653": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "SUB",
      "path": "15"
    },
    "654": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "656": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "657": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "LT",
      "path": "15"
    },
    "658": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "659": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29B"
    },
    "662": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "663": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "665": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "DUP1",
      "path": "15"
    },
    "666": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "REVERT",
      "path": "15"
    },
    "667": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "668": {
      "op": "POP"
    },
    "669": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "670": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7C8"
    },
    "673": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        7430,
        8229
      ],
      "op": "JUMP",
      "path": "15"
    },
    "674": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "675": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1"
    },
    "678": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "680": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "DUP1",
      "path": "15"
    },
    "681": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "682": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "SUB",
      "path": "15"
    },
    "683": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "685": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "DUP2",
      "path": "15"
    },
    "686": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "LT",
      "path": "15"
    },
    "687": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "688": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B8"
    },
    "691": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "692": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "694": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "DUP1",
      "path": "15"
    },
    "695": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "REVERT",
      "path": "15"
    },
    "696": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "699": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x92B"
    },
    "702": {
      "fn": "MasterChef.emergencyWithdraw",
      "jump": "i",
      "offset": [
        9894,
        10271
      ],
      "op": "JUMP",
      "path": "15"
    },
    "703": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "704": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1"
    },
    "707": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "709": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "DUP1",
      "path": "15"
    },
    "710": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "711": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "SUB",
      "path": "15"
    },
    "712": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "714": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "DUP2",
      "path": "15"
    },
    "715": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "LT",
      "path": "15"
    },
    "716": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "717": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D5"
    },
    "720": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "721": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "723": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "DUP1",
      "path": "15"
    },
    "724": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "REVERT",
      "path": "15"
    },
    "725": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "726": {
      "op": "POP"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "733": {
      "op": "SHL"
    },
    "734": {
      "op": "SUB"
    },
    "735": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "DUP2",
      "path": "15"
    },
    "736": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "737": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "DUP2",
      "path": "15"
    },
    "738": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "AND",
      "path": "15"
    },
    "739": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "740": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "742": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "DUP2",
      "path": "15"
    },
    "743": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "ADD",
      "path": "15"
    },
    "744": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "745": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "746": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "748": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "DUP3",
      "path": "15"
    },
    "749": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "ADD",
      "path": "15"
    },
    "750": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "751": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "752": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "754": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "DUP2",
      "path": "15"
    },
    "755": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "ADD",
      "path": "15"
    },
    "756": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "757": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "DUP3",
      "path": "15"
    },
    "758": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "AND",
      "path": "15"
    },
    "759": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "760": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "762": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "763": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "764": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "ADD",
      "path": "15"
    },
    "765": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "766": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "AND",
      "path": "15"
    },
    "767": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9C7"
    },
    "770": {
      "fn": "MasterChef.initFarm",
      "jump": "i",
      "offset": [
        3494,
        3981
      ],
      "op": "JUMP",
      "path": "15"
    },
    "771": {
      "offset": [
        2708,
        2738
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "772": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2708,
        2738
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E3"
    },
    "775": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2708,
        2738
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA34"
    },
    "778": {
      "fn": "MasterChef.initFarm",
      "jump": "i",
      "offset": [
        2708,
        2738
      ],
      "op": "JUMP",
      "path": "15"
    },
    "779": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7182,
        7357
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "780": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7182,
        7357
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1"
    },
    "783": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7182,
        7357
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA3A"
    },
    "786": {
      "fn": "MasterChef.massUpdatePools",
      "jump": "i",
      "offset": [
        7182,
        7357
      ],
      "op": "JUMP",
      "path": "15"
    },
    "787": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "788": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1"
    },
    "791": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "793": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "DUP1",
      "path": "15"
    },
    "794": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "795": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "SUB",
      "path": "15"
    },
    "796": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "798": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "DUP2",
      "path": "15"
    },
    "799": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "LT",
      "path": "15"
    },
    "800": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "801": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x329"
    },
    "804": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "805": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "807": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "DUP1",
      "path": "15"
    },
    "808": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "REVERT",
      "path": "15"
    },
    "809": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "810": {
      "op": "POP"
    },
    "811": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "DUP1",
      "path": "15"
    },
    "812": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "813": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "814": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "816": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "DUP2",
      "path": "15"
    },
    "817": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "ADD",
      "path": "15"
    },
    "818": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "819": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "820": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "822": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "ADD",
      "path": "15"
    },
    "823": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "824": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "825": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "826": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA5D"
    },
    "829": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        5353,
        5780
      ],
      "op": "JUMP",
      "path": "15"
    },
    "830": {
      "offset": [
        1056,
        1096
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "831": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x346"
    },
    "834": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB88"
    },
    "837": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        1056,
        1096
      ],
      "op": "JUMP",
      "path": "15"
    },
    "838": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "839": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "841": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "DUP1",
      "path": "15"
    },
    "842": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "849": {
      "op": "SHL"
    },
    "850": {
      "op": "SUB"
    },
    "851": {
      "offset": [
        1056,
        1096
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "852": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "853": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "AND",
      "path": "15"
    },
    "854": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "DUP3",
      "path": "15"
    },
    "855": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "856": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "857": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "858": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "DUP2",
      "path": "15"
    },
    "859": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "860": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "SUB",
      "path": "15"
    },
    "861": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "863": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "ADD",
      "path": "15"
    },
    "864": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "865": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "RETURN",
      "path": "15"
    },
    "866": {
      "offset": [
        2793,
        2824
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "867": {
      "fn": "MasterChef.set",
      "offset": [
        2793,
        2824
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E3"
    },
    "870": {
      "fn": "MasterChef.set",
      "offset": [
        2793,
        2824
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB97"
    },
    "873": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        2793,
        2824
      ],
      "op": "JUMP",
      "path": "15"
    },
    "874": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "875": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1"
    },
    "878": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "880": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "DUP1",
      "path": "15"
    },
    "881": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "882": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "SUB",
      "path": "15"
    },
    "883": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "885": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "DUP2",
      "path": "15"
    },
    "886": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "LT",
      "path": "15"
    },
    "887": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "888": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x380"
    },
    "891": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "892": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "894": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "DUP1",
      "path": "15"
    },
    "895": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "REVERT",
      "path": "15"
    },
    "896": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "897": {
      "op": "POP"
    },
    "898": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "905": {
      "op": "SHL"
    },
    "906": {
      "op": "SUB"
    },
    "907": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "AND",
      "path": "15"
    },
    "908": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB9D"
    },
    "911": {
      "fn": "MasterChef.dev",
      "jump": "i",
      "offset": [
        11350,
        11476
      ],
      "op": "JUMP",
      "path": "15"
    },
    "912": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "913": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E3"
    },
    "916": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "918": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "DUP1",
      "path": "15"
    },
    "919": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "920": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "SUB",
      "path": "15"
    },
    "921": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "923": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "DUP2",
      "path": "15"
    },
    "924": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "LT",
      "path": "15"
    },
    "925": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "926": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3A6"
    },
    "929": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "930": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "932": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "DUP1",
      "path": "15"
    },
    "933": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "REVERT",
      "path": "15"
    },
    "934": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "935": {
      "op": "POP"
    },
    "936": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "DUP1",
      "path": "15"
    },
    "937": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "938": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "939": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "941": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "ADD",
      "path": "15"
    },
    "942": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "943": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC0A"
    },
    "946": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        5854,
        6267
      ],
      "op": "JUMP",
      "path": "15"
    },
    "947": {
      "offset": [
        2969,
        3035
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "948": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3DF"
    },
    "951": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "953": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP1",
      "path": "15"
    },
    "954": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "955": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SUB",
      "path": "15"
    },
    "956": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "958": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP2",
      "path": "15"
    },
    "959": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "LT",
      "path": "15"
    },
    "960": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "961": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3C9"
    },
    "964": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "965": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "967": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP1",
      "path": "15"
    },
    "968": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "REVERT",
      "path": "15"
    },
    "969": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "970": {
      "op": "POP"
    },
    "971": {
      "offset": [
        2969,
        3035
      ],
      "op": "DUP1",
      "path": "15"
    },
    "972": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "973": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "974": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "976": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "ADD",
      "path": "15"
    },
    "977": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "op": "SUB"
    },
    "986": {
      "offset": [
        2969,
        3035
      ],
      "op": "AND",
      "path": "15"
    },
    "987": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC79"
    },
    "990": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        2969,
        3035
      ],
      "op": "JUMP",
      "path": "15"
    },
    "991": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "992": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "994": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP1",
      "path": "15"
    },
    "995": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "996": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "997": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP4",
      "path": "15"
    },
    "998": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "999": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1001": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1002": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "ADD",
      "path": "15"
    },
    "1003": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1004": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1005": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1006": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1007": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1008": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1009": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1010": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1011": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1012": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SUB",
      "path": "15"
    },
    "1013": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "ADD",
      "path": "15"
    },
    "1014": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1015": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "RETURN",
      "path": "15"
    },
    "1016": {
      "offset": [
        2370,
        2391
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1017": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2370,
        2391
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x346"
    },
    "1020": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2370,
        2391
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC9D"
    },
    "1023": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        2370,
        2391
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1024": {
      "offset": [
        2492,
        2520
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1025": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2492,
        2520
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E3"
    },
    "1028": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2492,
        2520
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCAC"
    },
    "1031": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        2492,
        2520
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1032": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10763,
        11017
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1033": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10763,
        11017
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E3"
    },
    "1036": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10763,
        11017
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCB2"
    },
    "1039": {
      "fn": "MasterChef.blocksRemaining",
      "jump": "i",
      "offset": [
        10763,
        11017
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1040": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1041": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E3"
    },
    "1044": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1046": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1047": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1048": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "SUB",
      "path": "15"
    },
    "1049": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1051": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1052": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "LT",
      "path": "15"
    },
    "1053": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1054": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x426"
    },
    "1057": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1058": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1060": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1061": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1062": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1063": {
      "op": "POP"
    },
    "1064": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1065": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "1066": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1067": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1069": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "ADD",
      "path": "15"
    },
    "1070": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1077": {
      "op": "SHL"
    },
    "1078": {
      "op": "SUB"
    },
    "1079": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "AND",
      "path": "15"
    },
    "1080": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD57"
    },
    "1083": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        6329,
        7102
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1084": {
      "offset": [
        2417,
        2439
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1085": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2417,
        2439
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x346"
    },
    "1088": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2417,
        2439
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEB9"
    },
    "1091": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        2417,
        2439
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1092": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1093": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1"
    },
    "1096": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1098": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1099": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1100": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "SUB",
      "path": "15"
    },
    "1101": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "1103": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1104": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "LT",
      "path": "15"
    },
    "1105": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1106": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45A"
    },
    "1109": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1110": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1112": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1113": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1114": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1115": {
      "op": "POP"
    },
    "1116": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1117": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "1118": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "op": "SUB"
    },
    "1127": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1129": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1130": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "ADD",
      "path": "15"
    },
    "1131": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "1132": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "AND",
      "path": "15"
    },
    "1133": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1134": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1136": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "ADD",
      "path": "15"
    },
    "1137": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "1138": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1139": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1140": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEC8"
    },
    "1143": {
      "fn": "MasterChef.addToken",
      "jump": "i",
      "offset": [
        4573,
        5256
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1144": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1145": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1"
    },
    "1148": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1150": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1151": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1152": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "SUB",
      "path": "15"
    },
    "1153": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1155": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1156": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "LT",
      "path": "15"
    },
    "1157": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1158": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48E"
    },
    "1161": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1162": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1164": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1165": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1166": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1167": {
      "op": "POP"
    },
    "1168": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1169": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "1170": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1171": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1173": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "ADD",
      "path": "15"
    },
    "1174": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "1175": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x111B"
    },
    "1178": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8298,
        9043
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1179": {
      "fn": "MasterChef.setBonus",
      "offset": [
        3987,
        4309
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1180": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4129
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 0,
      "value": "0x0"
    },
    "1182": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4129
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1183": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1185": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1186": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1187": {
      "op": "PUSH4",
      "value": "0xC395FCB3"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1196": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1197": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4143,
        4153
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1198": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1200": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1201": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "ADD",
      "path": "15"
    },
    "1202": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1203": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1204": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1211": {
      "op": "SHL"
    },
    "1212": {
      "op": "SUB"
    },
    "1213": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4129
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1214": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4129
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1215": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4129
      ],
      "op": "AND",
      "path": "15"
    },
    "1216": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4129
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1217": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4142
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC395FCB3"
    },
    "1222": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4142
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1223": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1225": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1226": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1227": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "ADD",
      "path": "15"
    },
    "1228": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1229": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1231": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1232": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1233": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1234": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1235": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1236": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1237": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "SUB",
      "path": "15"
    },
    "1238": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "ADD",
      "path": "15"
    },
    "1239": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1240": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4129
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1241": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1242": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "1243": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1244": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1245": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1246": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4E6"
    },
    "1249": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1250": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1252": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1253": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1254": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1255": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "POP",
      "path": "15"
    },
    "1256": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "GAS",
      "path": "15"
    },
    "1257": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "1258": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1259": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1260": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1261": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4FA"
    },
    "1264": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1265": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1266": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1268": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1269": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "1270": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1271": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1273": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1274": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1275": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "POP",
      "path": "15"
    },
    "1276": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "POP",
      "path": "15"
    },
    "1277": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "POP",
      "path": "15"
    },
    "1278": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "POP",
      "path": "15"
    },
    "1279": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1281": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1282": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1283": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1285": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1286": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "LT",
      "path": "15"
    },
    "1287": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1288": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x510"
    },
    "1291": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1292": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1294": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1295": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1296": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1297": {
      "op": "POP"
    },
    "1298": {
      "branch": 76,
      "fn": "MasterChef.setBonus",
      "offset": [
        4115,
        4154
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1299": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x54D"
    },
    "1302": {
      "branch": 76,
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1303": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1305": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1306": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1312": {
      "op": "SHL"
    },
    "1313": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1314": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1315": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1317": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "ADD",
      "path": "15"
    },
    "1318": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1319": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1320": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1322": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "ADD",
      "path": "15"
    },
    "1323": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1324": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1325": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "SUB",
      "path": "15"
    },
    "1326": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1327": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1328": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1330": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1331": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1332": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1334": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "ADD",
      "path": "15"
    },
    "1335": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1336": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18E6"
    },
    "1339": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1341": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1342": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "1343": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1345": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "ADD",
      "path": "15"
    },
    "1346": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1347": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "POP",
      "path": "15"
    },
    "1348": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "POP",
      "path": "15"
    },
    "1349": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1351": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1352": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1353": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1354": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "SUB",
      "path": "15"
    },
    "1355": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1356": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1357": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4094,
        4216
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1358": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4240
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 1,
      "value": "0x5"
    },
    "1360": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4257
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1361": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4257
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1362": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4257
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1363": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4257
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1364": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4267,
        4283
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 2,
      "value": "0x7"
    },
    "1366": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4267,
        4302
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1367": {
      "fn": "MasterChef.setBonus",
      "jump": "o",
      "offset": [
        3987,
        4309
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1368": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11067,
        11297
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1369": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11127,
        11134
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 3,
      "value": "0x2"
    },
    "1371": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11127,
        11134
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "op": "SUB"
    },
    "1380": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11127,
        11134
      ],
      "op": "AND",
      "path": "15"
    },
    "1381": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11113,
        11123
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1382": {
      "branch": 77,
      "fn": "MasterChef.claimTips",
      "offset": [
        11113,
        11134
      ],
      "op": "EQ",
      "path": "15"
    },
    "1383": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5A3"
    },
    "1386": {
      "branch": 77,
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1387": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1389": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1390": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1397": {
      "op": "SHL"
    },
    "1398": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1399": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1400": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1402": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1404": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1405": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "ADD",
      "path": "15"
    },
    "1406": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1407": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "1409": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1411": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1412": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "ADD",
      "path": "15"
    },
    "1413": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1414": {
      "op": "PUSH9",
      "value": "0x6465763A207775743F"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1426": {
      "op": "SHL"
    },
    "1427": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "1429": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1430": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "ADD",
      "path": "15"
    },
    "1431": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1432": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1433": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1434": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1435": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1436": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1437": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "SUB",
      "path": "15"
    },
    "1438": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "1440": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "ADD",
      "path": "15"
    },
    "1441": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1442": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1443": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11105,
        11148
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1444": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11173,
        11174
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 4,
      "value": "0x0"
    },
    "1446": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11166,
        11170
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1448": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11166,
        11170
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1449": {
      "branch": 78,
      "fn": "MasterChef.claimTips",
      "offset": [
        11166,
        11174
      ],
      "op": "GT",
      "path": "15"
    },
    "1450": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5E7"
    },
    "1453": {
      "branch": 78,
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1454": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1456": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1457": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1458": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1464": {
      "op": "SHL"
    },
    "1465": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1466": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1467": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1469": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1471": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1472": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "ADD",
      "path": "15"
    },
    "1473": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1474": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "1476": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1478": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1479": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "ADD",
      "path": "15"
    },
    "1480": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1481": {
      "op": "PUSH10",
      "value": "0x6465763A2062726F6B65"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1494": {
      "op": "SHL"
    },
    "1495": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "1497": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1498": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "ADD",
      "path": "15"
    },
    "1499": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1500": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1501": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1502": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1503": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1504": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1505": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "SUB",
      "path": "15"
    },
    "1506": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "1508": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "ADD",
      "path": "15"
    },
    "1509": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1510": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1511": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11158,
        11189
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1512": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11219,
        11223
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1514": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11219,
        11223
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1515": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11219,
        11223
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1516": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11199,
        11216
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1518": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11233,
        11241
      ],
      "op": "SWAP1",
      "path": "15",
      "statement": 5
    },
    "1519": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11233,
        11241
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1520": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11233,
        11241
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1521": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11271,
        11278
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 6,
      "value": "0x2"
    },
    "1523": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11271,
        11278
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1524": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11251,
        11290
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x606"
    },
    "1527": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11251,
        11290
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1534": {
      "op": "SHL"
    },
    "1535": {
      "op": "SUB"
    },
    "1536": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11271,
        11278
      ],
      "op": "AND",
      "path": "15"
    },
    "1537": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11219,
        11223
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1538": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11251,
        11270
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x122D"
    },
    "1541": {
      "fn": "MasterChef.claimTips",
      "jump": "i",
      "offset": [
        11251,
        11290
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1542": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11251,
        11290
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1543": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11067,
        11297
      ],
      "op": "POP",
      "path": "15"
    },
    "1544": {
      "fn": "MasterChef.claimTips",
      "jump": "o",
      "offset": [
        11067,
        11297
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1545": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1546": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4386,
        4394
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 7,
      "value": "0x9"
    },
    "1548": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4386,
        4401
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1549": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1550": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4315,
        4408
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1551": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        4315,
        4408
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1552": {
      "offset": [
        2889,
        2915
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1553": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "1555": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1556": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1557": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1558": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1559": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "LT",
      "path": "15"
    },
    "1560": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x61D"
    },
    "1563": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1564": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "INVALID",
      "path": "15"
    },
    "1565": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1566": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1568": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1569": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1570": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1571": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1573": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1574": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1575": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1576": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1578": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1579": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1580": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "MUL",
      "path": "15"
    },
    "1581": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "ADD",
      "path": "15"
    },
    "1582": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1583": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1584": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1586": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1587": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "ADD",
      "path": "15"
    },
    "1588": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1589": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1591": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1592": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "ADD",
      "path": "15"
    },
    "1593": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1594": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "1596": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1597": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1598": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "ADD",
      "path": "15"
    },
    "1599": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1606": {
      "op": "SHL"
    },
    "1607": {
      "op": "SUB"
    },
    "1608": {
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1609": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1610": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "AND",
      "path": "15"
    },
    "1611": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1612": {
      "op": "POP"
    },
    "1613": {
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1614": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1615": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2889,
        2915
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1616": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        2889,
        2915
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1617": {
      "offset": [
        3128,
        3158
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1618": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3128,
        3158
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "1620": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3128,
        3158
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1621": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3128,
        3158
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1622": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        3128,
        3158
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1623": {
      "offset": [
        2557,
        2576
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1624": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2557,
        2576
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1626": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2557,
        2576
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1627": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2557,
        2576
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1628": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        2557,
        2576
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1629": {
      "offset": [
        2634,
        2662
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1630": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2634,
        2662
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1632": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2634,
        2662
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1633": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2634,
        2662
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1634": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        2634,
        2662
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1635": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1636": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9158,
        9179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1638": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9190
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "1640": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9191,
        9195
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1641": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1642": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1643": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1644": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "LT",
      "path": "15"
    },
    "1645": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x672"
    },
    "1648": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1649": {
      "dev": "Index out of range",
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "INVALID",
      "path": "15"
    },
    "1650": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1651": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1653": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1654": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1655": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1656": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1658": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1659": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1660": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1661": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9244
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1662": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9244
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1663": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9244
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1664": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9238
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "1666": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9244
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1667": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9244
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1668": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9244
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1670": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9244
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1671": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9244
      ],
      "op": "DUP6",
      "path": "15"
    },
    "1672": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9244
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1673": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9245,
        9255
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1674": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9256
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1675": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9256
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1676": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9256
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1677": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9256
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1678": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9256
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1679": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9256
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1680": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9230,
        9256
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1681": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9274,
        9285
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 8
    },
    "1682": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9274,
        9285
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1683": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1685": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1686": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1687": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "MUL",
      "path": "15"
    },
    "1688": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1689": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1690": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "ADD",
      "path": "15"
    },
    "1691": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9182,
        9196
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1692": {
      "op": "POP"
    },
    "1693": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9274,
        9296
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1694": {
      "op": "GT"
    },
    "1695": {
      "branch": 79,
      "fn": "MasterChef.withdraw",
      "offset": [
        9274,
        9296
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1696": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6E5"
    },
    "1699": {
      "branch": 79,
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1700": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1702": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1703": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1704": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1710": {
      "op": "SHL"
    },
    "1711": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1712": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1713": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1715": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1717": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1718": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "ADD",
      "path": "15"
    },
    "1719": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1720": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x12"
    },
    "1722": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1724": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1725": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "ADD",
      "path": "15"
    },
    "1726": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1727": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "1751": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1752": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "ADD",
      "path": "15"
    },
    "1753": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1754": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1755": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1756": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1757": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1758": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1759": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "SUB",
      "path": "15"
    },
    "1760": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "1762": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "ADD",
      "path": "15"
    },
    "1763": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1764": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1765": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9319
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1766": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9329,
        9345
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 9,
      "value": "0x6EE"
    },
    "1769": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9340,
        9344
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1770": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9329,
        9339
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7C8"
    },
    "1773": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9329,
        9345
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1774": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9329,
        9345
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1775": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9355,
        9370
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1777": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9444
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x728"
    },
    "1780": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9428,
        9432
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1781": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9428,
        9443
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1783": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9428,
        9443
      ],
      "op": "ADD",
      "path": "15"
    },
    "1784": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9428,
        9443
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1785": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9423
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x722"
    },
    "1788": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9418,
        9422
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "1794": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9413
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71C"
    },
    "1797": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9389,
        9393
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1798": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9389,
        9412
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "1800": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9389,
        9412
      ],
      "op": "ADD",
      "path": "15"
    },
    "1801": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9389,
        9412
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1802": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9377
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1803": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9384
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1805": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9384
      ],
      "op": "ADD",
      "path": "15"
    },
    "1806": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9384
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1807": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9388
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "1810": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9388
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1811": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9413
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1812": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9413
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1813": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9413
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1818": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9413
      ],
      "op": "AND",
      "path": "15"
    },
    "1819": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9373,
        9413
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1820": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9413
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1821": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9417
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1822": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9417
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x141E"
    },
    "1825": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9373,
        9423
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1826": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9423
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1827": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9427
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1828": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9427
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1460"
    },
    "1831": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9373,
        9444
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1832": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9373,
        9444
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1833": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9355,
        9444
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1834": {
      "op": "POP"
    },
    "1835": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9457,
        9468
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1836": {
      "branch": 80,
      "fn": "MasterChef.withdraw",
      "offset": [
        9457,
        9468
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1837": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9454,
        9535
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x73A"
    },
    "1840": {
      "branch": 80,
      "fn": "MasterChef.withdraw",
      "offset": [
        9454,
        9535
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1841": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9484,
        9524
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 10,
      "value": "0x73A"
    },
    "1844": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9504,
        9514
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1845": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9516,
        9523
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1846": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9484,
        9503
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x122D"
    },
    "1849": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9484,
        9524
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1850": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9484,
        9524
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1851": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9547,
        9558
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1852": {
      "branch": 81,
      "fn": "MasterChef.withdraw",
      "offset": [
        9547,
        9558
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1853": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9544,
        9692
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x764"
    },
    "1856": {
      "branch": 81,
      "fn": "MasterChef.withdraw",
      "offset": [
        9544,
        9692
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1857": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9588,
        9599
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 11
    },
    "1858": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9588,
        9599
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1859": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9588,
        9612
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x74C"
    },
    "1862": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9588,
        9612
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1863": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9604,
        9611
      ],
      "op": "DUP6",
      "path": "15"
    },
    "1864": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9588,
        9603
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1460"
    },
    "1867": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9588,
        9612
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1868": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9588,
        9612
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1869": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9574,
        9612
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1870": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9574,
        9612
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1871": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9626,
        9638
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 12
    },
    "1872": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9626,
        9638
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1873": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9626,
        9681
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x764"
    },
    "1876": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9626,
        9681
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "op": "SUB"
    },
    "1885": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9626,
        9638
      ],
      "op": "AND",
      "path": "15"
    },
    "1886": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9660,
        9670
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1887": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9673,
        9680
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1888": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9626,
        9651
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14A2"
    },
    "1891": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9626,
        9681
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1892": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9626,
        9681
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1893": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9735,
        9758
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 13,
      "value": "0x3"
    },
    "1895": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9735,
        9758
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1896": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9735,
        9758
      ],
      "op": "ADD",
      "path": "15"
    },
    "1897": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9735,
        9758
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1898": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9730
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1899": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9730
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1900": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9769
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x77F"
    },
    "1903": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9769
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1904": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9764,
        9768
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "1910": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9764,
        9768
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1911": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9759
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71C"
    },
    "1914": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9759
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1915": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9734
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "1918": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9719,
        9759
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1919": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9769
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1920": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9701,
        9716
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1922": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9701,
        9716
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1923": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9701,
        9716
      ],
      "op": "ADD",
      "path": "15"
    },
    "1924": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9701,
        9769
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1925": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 14,
      "value": "0x40"
    },
    "1927": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1928": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1929": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "DUP6",
      "path": "15"
    },
    "1930": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1931": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1932": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1933": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1934": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9805,
        9809
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1935": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9805,
        9809
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1936": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9793,
        9803
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1937": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9793,
        9803
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1938": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
    },
    "1971": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1972": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1973": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1974": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "SUB",
      "path": "15"
    },
    "1975": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1977": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "ADD",
      "path": "15"
    },
    "1978": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1979": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9784,
        9819
      ],
      "op": "LOG3",
      "path": "15"
    },
    "1980": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "POP",
      "path": "15"
    },
    "1981": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "POP",
      "path": "15"
    },
    "1982": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "POP",
      "path": "15"
    },
    "1983": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "POP",
      "path": "15"
    },
    "1984": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9092,
        9826
      ],
      "op": "POP",
      "path": "15"
    },
    "1985": {
      "fn": "MasterChef.withdraw",
      "jump": "o",
      "offset": [
        9092,
        9826
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1986": {
      "offset": [
        3216,
        3241
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1987": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3216,
        3241
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "1989": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3216,
        3241
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1990": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3216,
        3241
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1991": {
      "fn": "MasterChef.withdraw",
      "jump": "o",
      "offset": [
        3216,
        3241
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1992": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1993": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7481,
        7502
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1995": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7513
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "1997": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7514,
        7518
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1998": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1999": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2000": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2001": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "LT",
      "path": "15"
    },
    "2002": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7D7"
    },
    "2005": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2006": {
      "dev": "Index out of range",
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "INVALID",
      "path": "15"
    },
    "2007": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2008": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2009": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2011": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2012": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2014": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2016": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2017": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2018": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2020": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "MUL",
      "path": "15"
    },
    "2021": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7505,
        7519
      ],
      "op": "ADD",
      "path": "15"
    },
    "2022": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7481,
        7519
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2023": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7481,
        7519
      ],
      "op": "POP",
      "path": "15"
    },
    "2024": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7549,
        7553
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2025": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7549,
        7569
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2027": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7549,
        7569
      ],
      "op": "ADD",
      "path": "15"
    },
    "2028": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7549,
        7569
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2029": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7533,
        7545
      ],
      "op": "NUMBER",
      "path": "15"
    },
    "2030": {
      "branch": 82,
      "fn": "MasterChef.updatePool",
      "offset": [
        7533,
        7569
      ],
      "op": "GT",
      "path": "15"
    },
    "2031": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7529,
        7602
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7F8"
    },
    "2034": {
      "branch": 82,
      "fn": "MasterChef.updatePool",
      "offset": [
        7529,
        7602
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2035": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7585,
        7592
      ],
      "op": "POP",
      "path": "15",
      "statement": 15
    },
    "2036": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7585,
        7592
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x606"
    },
    "2039": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7585,
        7592
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2040": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7529,
        7602
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2041": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7642
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2042": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7642
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2043": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2045": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2046": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2047": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2054": {
      "op": "SHL"
    },
    "2055": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2056": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2057": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7661,
        7665
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "2058": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2060": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2061": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "ADD",
      "path": "15"
    },
    "2062": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2063": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2064": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2065": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7611,
        7627
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2067": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7611,
        7627
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2074": {
      "op": "SHL"
    },
    "2075": {
      "op": "SUB"
    },
    "2076": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7642
      ],
      "op": "AND",
      "path": "15"
    },
    "2077": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7642
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2078": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7652
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "2083": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7652
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2084": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2086": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2087": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2088": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "ADD",
      "path": "15"
    },
    "2089": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2090": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2092": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2093": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2094": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2095": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2096": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2097": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "SUB",
      "path": "15"
    },
    "2098": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "ADD",
      "path": "15"
    },
    "2099": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2100": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7642
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2101": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2102": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2103": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2104": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2105": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2106": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x842"
    },
    "2109": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2110": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2112": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2113": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2114": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2115": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "POP",
      "path": "15"
    },
    "2116": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "GAS",
      "path": "15"
    },
    "2117": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "2118": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2119": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2120": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2121": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x856"
    },
    "2124": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2125": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2126": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2128": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2129": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "2130": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2131": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2133": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2134": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2135": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "POP",
      "path": "15"
    },
    "2136": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "POP",
      "path": "15"
    },
    "2137": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "POP",
      "path": "15"
    },
    "2138": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "POP",
      "path": "15"
    },
    "2139": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2141": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2142": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2143": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2145": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2146": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "LT",
      "path": "15"
    },
    "2147": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2148": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x86C"
    },
    "2151": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2152": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2154": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2155": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2156": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2157": {
      "op": "POP"
    },
    "2158": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2159": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7630,
        7667
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2160": {
      "op": "POP"
    },
    "2161": {
      "branch": 83,
      "fn": "MasterChef.updatePool",
      "offset": [
        7681,
        7694
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2162": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7677,
        7776
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x882"
    },
    "2165": {
      "branch": 83,
      "fn": "MasterChef.updatePool",
      "offset": [
        7677,
        7776
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2166": {
      "op": "POP"
    },
    "2167": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7733,
        7745
      ],
      "op": "NUMBER",
      "path": "15",
      "statement": 16
    },
    "2168": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7710,
        7730
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2170": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7710,
        7730
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2171": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7710,
        7730
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2172": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7710,
        7730
      ],
      "op": "ADD",
      "path": "15"
    },
    "2173": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7710,
        7745
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2174": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7759,
        7766
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 17,
      "value": "0x606"
    },
    "2177": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7759,
        7766
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2178": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7677,
        7776
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2179": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7785,
        7803
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2181": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7806,
        7855
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x892"
    },
    "2184": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7820,
        7824
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2185": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7820,
        7840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2187": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7820,
        7840
      ],
      "op": "ADD",
      "path": "15"
    },
    "2188": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7820,
        7840
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2189": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7842,
        7854
      ],
      "op": "NUMBER",
      "path": "15"
    },
    "2190": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7806,
        7819
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC0A"
    },
    "2193": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        7806,
        7855
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2194": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7806,
        7855
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2195": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7785,
        7855
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2196": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7785,
        7855
      ],
      "op": "POP",
      "path": "15"
    },
    "2197": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7865,
        7885
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2199": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7961
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8BF"
    },
    "2202": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7945,
        7960
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "2204": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7945,
        7960
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2205": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7940
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71C"
    },
    "2208": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7924,
        7928
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2209": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7924,
        7939
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2211": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7924,
        7939
      ],
      "op": "ADD",
      "path": "15"
    },
    "2212": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7924,
        7939
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2213": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7919
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8B9"
    },
    "2216": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7903,
        7918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "2218": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7903,
        7918
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2219": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7898
      ],
      "op": "DUP8",
      "path": "15"
    },
    "2220": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7902
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "2223": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7902
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2224": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7919
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2225": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7919
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2226": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7919
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2231": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7919
      ],
      "op": "AND",
      "path": "15"
    },
    "2232": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        7888,
        7919
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2233": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7919
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2234": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7923
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2235": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7923
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "2238": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        7888,
        7940
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2239": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7888,
        7961
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2240": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7975,
        7988
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2242": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7975,
        7988
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2243": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7865,
        7961
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2244": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7865,
        7961
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2245": {
      "op": "POP"
    },
    "2246": {
      "branch": 84,
      "fn": "MasterChef.updatePool",
      "offset": [
        7975,
        7992
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2247": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7971,
        8077
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8F5"
    },
    "2250": {
      "branch": 84,
      "fn": "MasterChef.updatePool",
      "offset": [
        7971,
        8077
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2251": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8015,
        8066
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 18,
      "value": "0x8F1"
    },
    "2254": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8024,
        8065
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8E8"
    },
    "2257": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8060,
        8064
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E8"
    },
    "2260": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8024,
        8055
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71C"
    },
    "2263": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8041,
        8054
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2265": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8041,
        8054
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2266": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8024,
        8036
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2267": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8024,
        8040
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "2270": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8024,
        8040
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2271": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8024,
        8055
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2272": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8024,
        8055
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2273": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8024,
        8055
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2278": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8024,
        8055
      ],
      "op": "AND",
      "path": "15"
    },
    "2279": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        8024,
        8055
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2280": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8024,
        8065
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2281": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8015,
        8019
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2283": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8015,
        8019
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2284": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8015,
        8019
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2285": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8015,
        8023
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F4"
    },
    "2288": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        8015,
        8066
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2289": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8015,
        8066
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2290": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8008,
        8012
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2292": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8008,
        8066
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2293": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7971,
        8077
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2294": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8112,
        8177
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 19,
      "value": "0x916"
    },
    "2297": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8140,
        8176
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x90B"
    },
    "2300": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8167,
        8175
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2301": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8140,
        8162
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71C"
    },
    "2304": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8140,
        8152
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2305": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8157,
        8161
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "2311": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8140,
        8156
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "2314": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        8140,
        8162
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2315": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8140,
        8176
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2316": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8112,
        8135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2318": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8112,
        8135
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2319": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8112,
        8135
      ],
      "op": "ADD",
      "path": "15"
    },
    "2320": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8112,
        8135
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2321": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8112,
        8135
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2322": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8112,
        8139
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F4"
    },
    "2325": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        8112,
        8177
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2326": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8112,
        8177
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2327": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8086,
        8109
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2329": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8086,
        8109
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2330": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8086,
        8109
      ],
      "op": "ADD",
      "path": "15"
    },
    "2331": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8086,
        8177
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2332": {
      "op": "POP"
    },
    "2333": {
      "op": "POP"
    },
    "2334": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8210,
        8222
      ],
      "op": "NUMBER",
      "path": "15",
      "statement": 20
    },
    "2335": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2337": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2338": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2339": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8187,
        8207
      ],
      "op": "ADD",
      "path": "15"
    },
    "2340": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8187,
        8222
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2341": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8187,
        8222
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2342": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8187,
        8222
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2343": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8187,
        8222
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2344": {
      "op": "POP"
    },
    "2345": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7430,
        8229
      ],
      "op": "POP",
      "path": "15"
    },
    "2346": {
      "fn": "MasterChef.updatePool",
      "jump": "o",
      "offset": [
        7430,
        8229
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2347": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2348": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9952,
        9973
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2350": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9984
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "2352": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9985,
        9989
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2353": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2354": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2355": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2356": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "LT",
      "path": "15"
    },
    "2357": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x93A"
    },
    "2360": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2361": {
      "dev": "Index out of range",
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "INVALID",
      "path": "15"
    },
    "2362": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2363": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2365": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2366": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2367": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2368": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2370": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2371": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2372": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2373": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10038
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2374": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10038
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2375": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10038
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2376": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10032
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "2378": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10038
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2379": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10038
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2380": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10038
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2382": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10038
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2383": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10038
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2384": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10038
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2385": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10039,
        10049
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2386": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10050
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2387": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10050
      ],
      "op": "DUP8",
      "path": "15"
    },
    "2388": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10050
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2389": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10050
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2390": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10050
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2391": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10050
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2392": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10050
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2393": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10077,
        10088
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2394": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10077,
        10088
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2395": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10098,
        10113
      ],
      "op": "DUP6",
      "path": "15",
      "statement": 21
    },
    "2396": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10098,
        10113
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2397": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10098,
        10113
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10123,
        10138
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 22
    },
    "2401": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10123,
        10138
      ],
      "op": "ADD",
      "path": "15"
    },
    "2402": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10123,
        10142
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "2403": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10123,
        10142
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2404": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10123,
        10142
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "2405": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10123,
        10142
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2406": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2408": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2409": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2410": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "MUL",
      "path": "15"
    },
    "2411": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "ADD",
      "path": "15"
    },
    "2412": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10152,
        10164
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 23
    },
    "2413": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10152,
        10164
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2414": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2415": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9976,
        9990
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10050
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2418": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10024,
        10050
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2419": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10077,
        10088
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2420": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10152,
        10206
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x98A"
    },
    "2423": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10152,
        10206
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2430": {
      "op": "SHL"
    },
    "2431": {
      "op": "SUB"
    },
    "2432": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10152,
        10164
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2433": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10152,
        10164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2434": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10152,
        10164
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2435": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10152,
        10164
      ],
      "op": "AND",
      "path": "15"
    },
    "2436": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10152,
        10164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2437": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10077,
        10088
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2438": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10152,
        10177
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14A2"
    },
    "2441": {
      "fn": "MasterChef.emergencyWithdraw",
      "jump": "i",
      "offset": [
        10152,
        10206
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2442": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10152,
        10206
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2443": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 24,
      "value": "0x40"
    },
    "2445": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2446": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2447": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2448": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2449": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2450": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2451": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2452": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10251,
        10255
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2453": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10251,
        10255
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2454": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10239,
        10249
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2455": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10239,
        10249
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2456": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
    },
    "2489": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2490": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2491": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2492": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "SUB",
      "path": "15"
    },
    "2493": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2495": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "ADD",
      "path": "15"
    },
    "2496": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2497": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10221,
        10264
      ],
      "op": "LOG3",
      "path": "15"
    },
    "2498": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "POP",
      "path": "15"
    },
    "2499": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "POP",
      "path": "15"
    },
    "2500": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "POP",
      "path": "15"
    },
    "2501": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9894,
        10271
      ],
      "op": "POP",
      "path": "15"
    },
    "2502": {
      "fn": "MasterChef.emergencyWithdraw",
      "jump": "o",
      "offset": [
        9894,
        10271
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2503": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3494,
        3981
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2504": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3701,
        3712
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 25,
      "value": "0x8"
    },
    "2506": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3701,
        3712
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2507": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3701,
        3712
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2509": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3701,
        3712
      ],
      "op": "AND",
      "path": "15"
    },
    "2510": {
      "branch": 85,
      "fn": "MasterChef.initFarm",
      "offset": [
        3700,
        3712
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2511": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3692,
        3713
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9D7"
    },
    "2514": {
      "branch": 85,
      "fn": "MasterChef.initFarm",
      "offset": [
        3692,
        3713
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2515": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3692,
        3713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2517": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3692,
        3713
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2518": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3692,
        3713
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2519": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3692,
        3713
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2520": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3723,
        3730
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 26,
      "value": "0x1"
    },
    "2522": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3723,
        3749
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2523": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3723,
        3749
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2530": {
      "op": "SHL"
    },
    "2531": {
      "op": "SUB"
    },
    "2532": {
      "op": "NOT"
    },
    "2533": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3723,
        3749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2534": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3723,
        3749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2535": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3723,
        3749
      ],
      "op": "AND",
      "path": "15"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2542": {
      "op": "SHL"
    },
    "2543": {
      "op": "SUB"
    },
    "2544": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3723,
        3749
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "2545": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3723,
        3749
      ],
      "op": "DUP9",
      "path": "15"
    },
    "2546": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3723,
        3749
      ],
      "op": "AND",
      "path": "15"
    },
    "2547": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3723,
        3749
      ],
      "op": "OR",
      "path": "15"
    },
    "2548": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3723,
        3749
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2549": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3723,
        3749
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2552": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3759,
        3774
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 27,
      "value": "0xB"
    },
    "2554": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3759,
        3778
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2555": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3759,
        3778
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2556": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3759,
        3778
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2557": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3788,
        3799
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 28,
      "value": "0x8"
    },
    "2559": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3788,
        3806
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2560": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3788,
        3806
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2563": {
      "op": "NOT"
    },
    "2564": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3788,
        3806
      ],
      "op": "AND",
      "path": "15"
    },
    "2565": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3788,
        3806
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2566": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3788,
        3806
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2567": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3788,
        3806
      ],
      "op": "OR",
      "path": "15"
    },
    "2568": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3788,
        3806
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2569": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3788,
        3806
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2570": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3788,
        3806
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2571": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3816,
        3831
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 29,
      "value": "0x6"
    },
    "2573": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3816,
        3850
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "2574": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3816,
        3850
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2575": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3816,
        3850
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "2576": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3816,
        3850
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2577": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3860,
        3870
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 30,
      "value": "0xC"
    },
    "2579": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3860,
        3884
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2580": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3860,
        3884
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2581": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3860,
        3884
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2582": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3860,
        3884
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2585": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 31
    },
    "2586": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2587": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2588": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "AND",
      "path": "15"
    },
    "2589": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2590": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2591": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "AND",
      "path": "15"
    },
    "2592": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2593": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2594": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2595": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "OR",
      "path": "15"
    },
    "2596": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2597": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2598": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3894,
        3912
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2599": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3922,
        3974
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 32
    },
    "2600": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3922,
        3974
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2601": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3922,
        3974
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2602": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3922,
        3974
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2603": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3922,
        3974
      ],
      "op": "AND",
      "path": "15"
    },
    "2604": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3922,
        3974
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2605": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3922,
        3974
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2606": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3922,
        3974
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2607": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3922,
        3974
      ],
      "op": "AND",
      "path": "15"
    },
    "2608": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3922,
        3974
      ],
      "op": "OR",
      "path": "15"
    },
    "2609": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3922,
        3974
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2610": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3922,
        3974
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2611": {
      "fn": "MasterChef.initFarm",
      "jump": "o",
      "offset": [
        3494,
        3981
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2612": {
      "offset": [
        2708,
        2738
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2613": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2708,
        2738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "2615": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2708,
        2738
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2616": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2708,
        2738
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2617": {
      "fn": "MasterChef.initFarm",
      "jump": "o",
      "offset": [
        2708,
        2738
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2618": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7182,
        7357
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2619": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7243,
        7251
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "2621": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7243,
        7258
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2622": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7226,
        7240
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2624": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7268,
        7351
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2625": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7296,
        7302
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2626": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7290,
        7293
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2627": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7290,
        7302
      ],
      "op": "LT",
      "path": "15"
    },
    "2628": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7268,
        7351
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2629": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7268,
        7351
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA59"
    },
    "2632": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7268,
        7351
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2633": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7325,
        7340
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 33,
      "value": "0xA51"
    },
    "2636": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7336,
        7339
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2637": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7325,
        7335
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7C8"
    },
    "2640": {
      "fn": "MasterChef.massUpdatePools",
      "jump": "i",
      "offset": [
        7325,
        7340
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2641": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7325,
        7340
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2642": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7304,
        7309
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 34,
      "value": "0x1"
    },
    "2644": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7304,
        7309
      ],
      "op": "ADD",
      "path": "15"
    },
    "2645": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7268,
        7351
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA40"
    },
    "2648": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7268,
        7351
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2649": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7268,
        7351
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2650": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7268,
        7351
      ],
      "op": "POP",
      "path": "15"
    },
    "2651": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7182,
        7357
      ],
      "op": "POP",
      "path": "15"
    },
    "2652": {
      "fn": "MasterChef.massUpdatePools",
      "jump": "o",
      "offset": [
        7182,
        7357
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2653": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2654": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5472
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 35,
      "value": "0x0"
    },
    "2656": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5472
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2657": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2659": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2660": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2661": {
      "op": "PUSH4",
      "value": "0x7E271F05"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2668": {
      "op": "SHL"
    },
    "2669": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2670": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2671": {
      "fn": "MasterChef.set",
      "offset": [
        5489,
        5499
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2672": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2674": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2675": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "ADD",
      "path": "15"
    },
    "2676": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2677": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2678": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2685": {
      "op": "SHL"
    },
    "2686": {
      "op": "SUB"
    },
    "2687": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5472
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2688": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5472
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2689": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5472
      ],
      "op": "AND",
      "path": "15"
    },
    "2690": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5472
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2691": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5488
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFC4E3E0A"
    },
    "2696": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5488
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2697": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2699": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2700": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2701": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "ADD",
      "path": "15"
    },
    "2702": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2703": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2705": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2706": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2707": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2708": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2709": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2710": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2711": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "SUB",
      "path": "15"
    },
    "2712": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "ADD",
      "path": "15"
    },
    "2713": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2714": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5472
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2715": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2716": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2717": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2718": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2719": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2720": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAA8"
    },
    "2723": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2724": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2726": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2727": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2728": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2729": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "POP",
      "path": "15"
    },
    "2730": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "GAS",
      "path": "15"
    },
    "2731": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "2732": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2733": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2734": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2735": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xABC"
    },
    "2738": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2739": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2740": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2742": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2743": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "2744": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2745": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2747": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2748": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2749": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "POP",
      "path": "15"
    },
    "2750": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "POP",
      "path": "15"
    },
    "2751": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "POP",
      "path": "15"
    },
    "2752": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "POP",
      "path": "15"
    },
    "2753": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2755": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2756": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2757": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2759": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2760": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "LT",
      "path": "15"
    },
    "2761": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2762": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAD2"
    },
    "2765": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2766": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2768": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2769": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2770": {
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2771": {
      "op": "POP"
    },
    "2772": {
      "branch": 86,
      "fn": "MasterChef.set",
      "offset": [
        5458,
        5500
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2773": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB0F"
    },
    "2776": {
      "branch": 86,
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2777": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2779": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2786": {
      "op": "SHL"
    },
    "2787": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2788": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2789": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2791": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "ADD",
      "path": "15"
    },
    "2792": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2793": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2794": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2796": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "ADD",
      "path": "15"
    },
    "2797": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2798": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2799": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "SUB",
      "path": "15"
    },
    "2800": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2801": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2802": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x27"
    },
    "2804": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2805": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2806": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2808": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "ADD",
      "path": "15"
    },
    "2809": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2810": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1955"
    },
    "2813": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x27"
    },
    "2815": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2816": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "2817": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2819": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "ADD",
      "path": "15"
    },
    "2820": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2821": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "POP",
      "path": "15"
    },
    "2822": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "POP",
      "path": "15"
    },
    "2823": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2825": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2826": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2827": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2828": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "SUB",
      "path": "15"
    },
    "2829": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2830": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2831": {
      "fn": "MasterChef.set",
      "offset": [
        5437,
        5565
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2832": {
      "branch": 87,
      "fn": "MasterChef.set",
      "offset": [
        5579,
        5590
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2833": {
      "fn": "MasterChef.set",
      "offset": [
        5575,
        5634
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2834": {
      "fn": "MasterChef.set",
      "offset": [
        5575,
        5634
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB1D"
    },
    "2837": {
      "branch": 87,
      "fn": "MasterChef.set",
      "offset": [
        5575,
        5634
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2838": {
      "fn": "MasterChef.set",
      "offset": [
        5606,
        5623
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 36,
      "value": "0xB1D"
    },
    "2841": {
      "fn": "MasterChef.set",
      "offset": [
        5606,
        5621
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA3A"
    },
    "2844": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        5606,
        5623
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2845": {
      "fn": "MasterChef.set",
      "offset": [
        5606,
        5623
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2846": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5724
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 37,
      "value": "0xB5A"
    },
    "2849": {
      "fn": "MasterChef.set",
      "offset": [
        5712,
        5723
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2850": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB54"
    },
    "2853": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5689
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "2855": {
      "fn": "MasterChef.set",
      "offset": [
        5690,
        5694
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2856": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2857": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2858": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2859": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "LT",
      "path": "15"
    },
    "2860": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB31"
    },
    "2863": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2864": {
      "dev": "Index out of range",
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "INVALID",
      "path": "15"
    },
    "2865": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2866": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2867": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2869": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2870": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2872": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2874": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2875": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2876": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2878": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "MUL",
      "path": "15"
    },
    "2879": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5695
      ],
      "op": "ADD",
      "path": "15"
    },
    "2880": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5706
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2882": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5706
      ],
      "op": "ADD",
      "path": "15"
    },
    "2883": {
      "fn": "MasterChef.set",
      "offset": [
        5681,
        5706
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2884": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5676
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "2886": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5676
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2887": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5680
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1460"
    },
    "2890": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5680
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2891": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5707
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2892": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2893": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5707
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2898": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5707
      ],
      "op": "AND",
      "path": "15"
    },
    "2899": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        5661,
        5707
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2900": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5707
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2901": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5711
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2902": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5711
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F4"
    },
    "2905": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        5661,
        5724
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2906": {
      "fn": "MasterChef.set",
      "offset": [
        5661,
        5724
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2907": {
      "fn": "MasterChef.set",
      "offset": [
        5643,
        5658
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "2909": {
      "fn": "MasterChef.set",
      "offset": [
        5643,
        5724
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2910": {
      "fn": "MasterChef.set",
      "offset": [
        5643,
        5724
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2911": {
      "fn": "MasterChef.set",
      "offset": [
        5643,
        5724
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2912": {
      "fn": "MasterChef.set",
      "offset": [
        5643,
        5724
      ],
      "op": "POP",
      "path": "15"
    },
    "2913": {
      "fn": "MasterChef.set",
      "offset": [
        5762,
        5773
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 38
    },
    "2914": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5742
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "2916": {
      "fn": "MasterChef.set",
      "offset": [
        5743,
        5747
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2917": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2918": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2919": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2920": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "LT",
      "path": "15"
    },
    "2921": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB6E"
    },
    "2924": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2925": {
      "dev": "Index out of range",
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "INVALID",
      "path": "15"
    },
    "2926": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2927": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2928": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2930": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2931": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2933": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2935": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2936": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2937": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2939": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "MUL",
      "path": "15"
    },
    "2940": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5748
      ],
      "op": "ADD",
      "path": "15"
    },
    "2941": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5759
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2943": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5759
      ],
      "op": "ADD",
      "path": "15"
    },
    "2944": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5773
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2945": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5773
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2946": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5773
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2947": {
      "fn": "MasterChef.set",
      "offset": [
        5734,
        5773
      ],
      "op": "POP",
      "path": "15"
    },
    "2948": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "POP",
      "path": "15"
    },
    "2949": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "POP",
      "path": "15"
    },
    "2950": {
      "fn": "MasterChef.set",
      "offset": [
        5353,
        5780
      ],
      "op": "POP",
      "path": "15"
    },
    "2951": {
      "fn": "MasterChef.set",
      "jump": "o",
      "offset": [
        5353,
        5780
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2952": {
      "offset": [
        1056,
        1096
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2953": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2955": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2962": {
      "op": "SHL"
    },
    "2963": {
      "op": "SUB"
    },
    "2964": {
      "offset": [
        1056,
        1096
      ],
      "op": "AND",
      "path": "15"
    },
    "2965": {
      "fn": "MasterChef.set",
      "offset": [
        1056,
        1096
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2966": {
      "fn": "MasterChef.set",
      "jump": "o",
      "offset": [
        1056,
        1096
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2967": {
      "offset": [
        2793,
        2824
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2968": {
      "fn": "MasterChef.set",
      "offset": [
        2793,
        2824
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "2970": {
      "fn": "MasterChef.set",
      "offset": [
        2793,
        2824
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2971": {
      "fn": "MasterChef.set",
      "offset": [
        2793,
        2824
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2972": {
      "fn": "MasterChef.set",
      "jump": "o",
      "offset": [
        2793,
        2824
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2973": {
      "fn": "MasterChef.dev",
      "offset": [
        11350,
        11476
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2974": {
      "fn": "MasterChef.dev",
      "offset": [
        11420,
        11427
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 39,
      "value": "0x2"
    },
    "2976": {
      "fn": "MasterChef.dev",
      "offset": [
        11420,
        11427
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2983": {
      "op": "SHL"
    },
    "2984": {
      "op": "SUB"
    },
    "2985": {
      "fn": "MasterChef.dev",
      "offset": [
        11420,
        11427
      ],
      "op": "AND",
      "path": "15"
    },
    "2986": {
      "fn": "MasterChef.dev",
      "offset": [
        11406,
        11416
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2987": {
      "branch": 88,
      "fn": "MasterChef.dev",
      "offset": [
        11406,
        11427
      ],
      "op": "EQ",
      "path": "15"
    },
    "2988": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBE8"
    },
    "2991": {
      "branch": 88,
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2992": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2994": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2995": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2996": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3002": {
      "op": "SHL"
    },
    "3003": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3004": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3005": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3007": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3009": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3010": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "ADD",
      "path": "15"
    },
    "3011": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3012": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "3014": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "3016": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3017": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "ADD",
      "path": "15"
    },
    "3018": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3019": {
      "op": "PUSH9",
      "value": "0x6465763A207775743F"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "3031": {
      "op": "SHL"
    },
    "3032": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "3034": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3035": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "ADD",
      "path": "15"
    },
    "3036": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3037": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3038": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3039": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3040": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3041": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3042": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "SUB",
      "path": "15"
    },
    "3043": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "3045": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "ADD",
      "path": "15"
    },
    "3046": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3047": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3048": {
      "fn": "MasterChef.dev",
      "offset": [
        11398,
        11441
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3049": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11458
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 40,
      "value": "0x2"
    },
    "3051": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3052": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3059": {
      "op": "SHL"
    },
    "3060": {
      "op": "SUB"
    },
    "3061": {
      "op": "NOT"
    },
    "3062": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "AND",
      "path": "15"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3069": {
      "op": "SHL"
    },
    "3070": {
      "op": "SUB"
    },
    "3071": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3072": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3073": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3074": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "AND",
      "path": "15"
    },
    "3075": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3076": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3077": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3078": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "OR",
      "path": "15"
    },
    "3079": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3080": {
      "fn": "MasterChef.dev",
      "offset": [
        11451,
        11469
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3081": {
      "fn": "MasterChef.dev",
      "jump": "o",
      "offset": [
        11350,
        11476
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3082": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3083": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5926,
        5933
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3085": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5956,
        5969
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "3087": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5956,
        5969
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3088": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        5952
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3089": {
      "branch": 89,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        5969
      ],
      "op": "GT",
      "path": "15"
    },
    "3090": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5945,
        6261
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC2D"
    },
    "3093": {
      "branch": 89,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5945,
        6261
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3094": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6011,
        6027
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 41,
      "value": "0x7"
    },
    "3096": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6011,
        6027
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3097": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5992,
        6028
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC26"
    },
    "3100": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5992,
        6028
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3101": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5992,
        6006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8B9"
    },
    "3104": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5992,
        5995
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3105": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6000,
        6005
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3106": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5992,
        5999
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1460"
    },
    "3109": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        5992,
        6006
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3110": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5992,
        6028
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3111": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5985,
        6028
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3112": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5985,
        6028
      ],
      "op": "POP",
      "path": "15"
    },
    "3113": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5985,
        6028
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC73"
    },
    "3116": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5985,
        6028
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3117": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5945,
        6261
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3118": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6058,
        6071
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "3120": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6058,
        6071
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3121": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6049,
        6054
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3122": {
      "branch": 90,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6049,
        6071
      ],
      "op": "LT",
      "path": "15"
    },
    "3123": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6045,
        6261
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC40"
    },
    "3126": {
      "branch": 90,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6045,
        6261
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3127": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6094,
        6108
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 42,
      "value": "0xC26"
    },
    "3130": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6094,
        6097
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3131": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6102,
        6107
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3132": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6094,
        6101
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1460"
    },
    "3135": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        6094,
        6108
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3136": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6045,
        6261
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3137": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6146,
        6250
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 43,
      "value": "0xC26"
    },
    "3140": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6214,
        6236
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC58"
    },
    "3143": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6222,
        6235
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "3145": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6222,
        6235
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3146": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6214,
        6217
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3147": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6214,
        6221
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1460"
    },
    "3150": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6214,
        6221
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3151": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6214,
        6236
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3152": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6214,
        6236
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3153": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6214,
        6236
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3158": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6214,
        6236
      ],
      "op": "AND",
      "path": "15"
    },
    "3159": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        6214,
        6236
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3160": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6214,
        6236
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3161": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6146,
        6192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB54"
    },
    "3164": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6175,
        6191
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "3166": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6175,
        6191
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3167": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6146,
        6170
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8B9"
    },
    "3170": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6164,
        6169
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3171": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6146,
        6159
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "3173": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6146,
        6159
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3174": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6146,
        6163
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1460"
    },
    "3177": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6146,
        6163
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3178": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6146,
        6170
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3179": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6146,
        6170
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3180": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6146,
        6170
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3185": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6146,
        6170
      ],
      "op": "AND",
      "path": "15"
    },
    "3186": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        6146,
        6170
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3187": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6045,
        6261
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3188": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3189": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3190": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "POP",
      "path": "15"
    },
    "3191": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5854,
        6267
      ],
      "op": "POP",
      "path": "15"
    },
    "3192": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        5854,
        6267
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3193": {
      "offset": [
        2969,
        3035
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3194": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "3196": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3198": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3199": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3200": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3201": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3203": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3204": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3205": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3206": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3208": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3209": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3210": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3211": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3212": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3213": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3214": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3215": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3216": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3217": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3218": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3219": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3220": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3221": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3223": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3224": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3225": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "ADD",
      "path": "15"
    },
    "3226": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3227": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2969,
        3035
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3228": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        2969,
        3035
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3229": {
      "offset": [
        2370,
        2391
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3230": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2370,
        2391
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3232": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2370,
        2391
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3239": {
      "op": "SHL"
    },
    "3240": {
      "op": "SUB"
    },
    "3241": {
      "offset": [
        2370,
        2391
      ],
      "op": "AND",
      "path": "15"
    },
    "3242": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2370,
        2391
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3243": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        2370,
        2391
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3244": {
      "offset": [
        2492,
        2520
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3245": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2492,
        2520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "3247": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2492,
        2520
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3248": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2492,
        2520
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3249": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        2492,
        2520
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3250": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10763,
        11017
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3251": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10852
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3253": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10852
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3254": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3256": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3257": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3258": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3265": {
      "op": "SHL"
    },
    "3266": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3267": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3268": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10871,
        10875
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "3269": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3271": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3272": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "ADD",
      "path": "15"
    },
    "3273": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3274": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3275": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3276": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10806,
        10813
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3278": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10806,
        10813
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3279": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10806,
        10813
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3280": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10806,
        10813
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3287": {
      "op": "SHL"
    },
    "3288": {
      "op": "SUB"
    },
    "3289": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10852
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3290": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10852
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3291": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10852
      ],
      "op": "AND",
      "path": "15"
    },
    "3292": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10852
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3293": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10862
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "3298": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10862
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3299": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "3301": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3302": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3303": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "ADD",
      "path": "15"
    },
    "3304": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3305": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3307": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3308": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3309": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3310": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3311": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3312": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3313": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "SUB",
      "path": "15"
    },
    "3314": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "ADD",
      "path": "15"
    },
    "3315": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3316": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10852
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3317": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3318": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3319": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3320": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3321": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3322": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD02"
    },
    "3325": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3326": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3328": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3329": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3330": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3331": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "POP",
      "path": "15"
    },
    "3332": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "GAS",
      "path": "15"
    },
    "3333": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "3334": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3335": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3336": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3337": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD16"
    },
    "3340": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3341": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3342": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3344": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3345": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "3346": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3347": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3349": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3350": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3351": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "POP",
      "path": "15"
    },
    "3352": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "POP",
      "path": "15"
    },
    "3353": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "POP",
      "path": "15"
    },
    "3354": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "POP",
      "path": "15"
    },
    "3355": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3357": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3358": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3359": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3361": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3362": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "LT",
      "path": "15"
    },
    "3363": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3364": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD2C"
    },
    "3367": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3368": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3370": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3371": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3372": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3373": {
      "op": "POP"
    },
    "3374": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3375": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10891,
        10906
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "3377": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10891,
        10906
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3378": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3379": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10845,
        10877
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3380": {
      "op": "POP"
    },
    "3381": {
      "branch": 91,
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10891,
        10910
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3382": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10887,
        11011
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD4D"
    },
    "3385": {
      "branch": 91,
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10887,
        11011
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3386": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10946,
        10961
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 44,
      "value": "0x6"
    },
    "3388": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10946,
        10961
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3389": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10933,
        10943
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3390": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10933,
        10961
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3391": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10933,
        10961
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD44"
    },
    "3394": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10933,
        10961
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3395": {
      "dev": "Division by zero",
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10933,
        10961
      ],
      "op": "INVALID",
      "path": "15"
    },
    "3396": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10933,
        10961
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3397": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10933,
        10961
      ],
      "op": "DIV",
      "path": "15"
    },
    "3398": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10926,
        10961
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3399": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10926,
        10961
      ],
      "op": "POP",
      "path": "15"
    },
    "3400": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10926,
        10961
      ],
      "op": "POP",
      "path": "15"
    },
    "3401": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10926,
        10961
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x60D"
    },
    "3404": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10926,
        10961
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3405": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10887,
        11011
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3406": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10999,
        11000
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 45,
      "value": "0x0"
    },
    "3408": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10992,
        11000
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3409": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10992,
        11000
      ],
      "op": "POP",
      "path": "15"
    },
    "3410": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10992,
        11000
      ],
      "op": "POP",
      "path": "15"
    },
    "3411": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10992,
        11000
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x60D"
    },
    "3414": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10992,
        11000
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3415": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3416": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6405,
        6412
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3418": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6424,
        6445
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3419": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "3421": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6457,
        6461
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3422": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3423": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3424": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3425": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "LT",
      "path": "15"
    },
    "3426": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD67"
    },
    "3429": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3430": {
      "dev": "Index out of range",
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "INVALID",
      "path": "15"
    },
    "3431": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3432": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3434": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3435": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3436": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3437": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3439": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3440": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3441": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3442": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6510
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3443": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6510
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3444": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6510
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3445": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "3447": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6510
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3448": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6510
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3449": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6510
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3451": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6510
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3452": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6510
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3453": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6510
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3460": {
      "op": "SHL"
    },
    "3461": {
      "op": "SUB"
    },
    "3462": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "DUP10",
      "path": "15"
    },
    "3463": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3464": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "AND",
      "path": "15"
    },
    "3465": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3466": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3467": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3468": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3469": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3470": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3471": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3472": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3473": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3475": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "3476": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3477": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "MUL",
      "path": "15"
    },
    "3478": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3479": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3480": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "ADD",
      "path": "15"
    },
    "3481": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6579
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "3483": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6579
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3484": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6579
      ],
      "op": "ADD",
      "path": "15"
    },
    "3485": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6579
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3486": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6620
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3487": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6620
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3488": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3489": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3490": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3497": {
      "op": "SHL"
    },
    "3498": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3499": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3500": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6639,
        6643
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "3501": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "3502": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3503": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "ADD",
      "path": "15"
    },
    "3504": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "3505": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3506": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "3507": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3508": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3509": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3510": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3511": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "3512": {
      "op": "POP"
    },
    "3513": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3514": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6496,
        6517
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "3515": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6579
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3516": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6579
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "3517": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3518": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "3519": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6620
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3520": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6620
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3521": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6620
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3522": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6620
      ],
      "op": "AND",
      "path": "15"
    },
    "3523": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6620
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3524": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6630
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "3529": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6630
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3530": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "3532": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3533": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3534": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "ADD",
      "path": "15"
    },
    "3535": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3536": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3537": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6448,
        6462
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3538": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3539": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3540": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "SUB",
      "path": "15"
    },
    "3541": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "ADD",
      "path": "15"
    },
    "3542": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3543": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6620
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3544": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3545": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3546": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3547": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3548": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3549": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDE5"
    },
    "3552": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3553": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3555": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3556": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3557": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3558": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "POP",
      "path": "15"
    },
    "3559": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "GAS",
      "path": "15"
    },
    "3560": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "3561": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3562": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3563": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3564": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDF9"
    },
    "3567": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3568": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3569": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3571": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3572": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "3573": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3574": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3576": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3577": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3578": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "POP",
      "path": "15"
    },
    "3579": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "POP",
      "path": "15"
    },
    "3580": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "POP",
      "path": "15"
    },
    "3581": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "POP",
      "path": "15"
    },
    "3582": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3584": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3585": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3586": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3588": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3589": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "LT",
      "path": "15"
    },
    "3590": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3591": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE0F"
    },
    "3594": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3595": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3597": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3598": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3599": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3600": {
      "op": "POP"
    },
    "3601": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3602": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6674,
        6694
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "3604": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6674,
        6694
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3605": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6674,
        6694
      ],
      "op": "ADD",
      "path": "15"
    },
    "3606": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6674,
        6694
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3607": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3608": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6608,
        6645
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3609": {
      "op": "POP"
    },
    "3610": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6659,
        6671
      ],
      "op": "NUMBER",
      "path": "15"
    },
    "3611": {
      "branch": 92,
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6659,
        6694
      ],
      "op": "GT",
      "path": "15"
    },
    "3612": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6659,
        6711
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3613": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6659,
        6711
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3614": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6659,
        6711
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE26"
    },
    "3617": {
      "branch": 92,
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6659,
        6711
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3618": {
      "op": "POP"
    },
    "3619": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6698,
        6711
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3620": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6698,
        6711
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3621": {
      "branch": 93,
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6698,
        6711
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3622": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6659,
        6711
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3623": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6655,
        7013
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3624": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6655,
        7013
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE86"
    },
    "3627": {
      "branch": 93,
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6655,
        7013
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3628": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6727,
        6745
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3630": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6748,
        6797
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE3B"
    },
    "3633": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6762,
        6766
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3634": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6762,
        6782
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "3636": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6762,
        6782
      ],
      "op": "ADD",
      "path": "15"
    },
    "3637": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6762,
        6782
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3638": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6784,
        6796
      ],
      "op": "NUMBER",
      "path": "15"
    },
    "3639": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6748,
        6761
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC0A"
    },
    "3642": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        6748,
        6797
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3643": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6748,
        6797
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3644": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6727,
        6797
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3645": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6727,
        6797
      ],
      "op": "POP",
      "path": "15"
    },
    "3646": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6811,
        6831
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3648": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6834,
        6907
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE62"
    },
    "3651": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6891,
        6906
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "3653": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6891,
        6906
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3654": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6834,
        6886
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71C"
    },
    "3657": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6870,
        6874
      ],
      "op": "DUP9",
      "path": "15"
    },
    "3658": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6870,
        6885
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3660": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6870,
        6885
      ],
      "op": "ADD",
      "path": "15"
    },
    "3661": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6870,
        6885
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3662": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6834,
        6865
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8B9"
    },
    "3665": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6849,
        6864
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "3667": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6849,
        6864
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3668": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6834,
        6844
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3669": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6834,
        6848
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "3672": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6834,
        6848
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3673": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6834,
        6865
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3674": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6834,
        6865
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3675": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6834,
        6865
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3680": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6834,
        6865
      ],
      "op": "AND",
      "path": "15"
    },
    "3681": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        6834,
        6865
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3682": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6834,
        6907
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3683": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6811,
        6907
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3684": {
      "op": "POP"
    },
    "3685": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        7002
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 46,
      "value": "0xE81"
    },
    "3688": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6965,
        7001
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE7A"
    },
    "3691": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6992,
        7000
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3692": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6965,
        6987
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71C"
    },
    "3695": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6811,
        6907
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3696": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6982,
        6986
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "3702": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6965,
        6981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "3705": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        6965,
        6987
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3706": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6965,
        7001
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3707": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6960
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3708": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6960
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3709": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6964
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F4"
    },
    "3712": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        6942,
        7002
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3713": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        7002
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3714": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6921,
        7002
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3715": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6921,
        7002
      ],
      "op": "POP",
      "path": "15"
    },
    "3716": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6655,
        7013
      ],
      "op": "POP",
      "path": "15"
    },
    "3717": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6655,
        7013
      ],
      "op": "POP",
      "path": "15"
    },
    "3718": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6655,
        7013
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3719": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7095
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 47,
      "value": "0xEAE"
    },
    "3722": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7079,
        7083
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3723": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7079,
        7094
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3725": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7079,
        7094
      ],
      "op": "ADD",
      "path": "15"
    },
    "3726": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7079,
        7094
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3727": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7074
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x722"
    },
    "3730": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7069,
        7073
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "3736": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7064
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71C"
    },
    "3739": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7045,
        7063
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3740": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7033
      ],
      "op": "DUP9",
      "path": "15"
    },
    "3741": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7040
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3743": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7040
      ],
      "op": "ADD",
      "path": "15"
    },
    "3744": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7040
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3745": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7044
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "3748": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7044
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3749": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7064
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3750": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7064
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3751": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7064
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3756": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7064
      ],
      "op": "AND",
      "path": "15"
    },
    "3757": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        7029,
        7064
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3758": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7095
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3759": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7022,
        7095
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "3760": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6329,
        7102
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "3761": {
      "op": "POP"
    },
    "3762": {
      "op": "POP"
    },
    "3763": {
      "op": "POP"
    },
    "3764": {
      "op": "POP"
    },
    "3765": {
      "op": "POP"
    },
    "3766": {
      "op": "POP"
    },
    "3767": {
      "op": "POP"
    },
    "3768": {
      "fn": "MasterChef.pendingRewards",
      "jump": "o",
      "offset": [
        6329,
        7102
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3769": {
      "offset": [
        2417,
        2439
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3770": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2417,
        2439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "3772": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2417,
        2439
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3779": {
      "op": "SHL"
    },
    "3780": {
      "op": "SUB"
    },
    "3781": {
      "offset": [
        2417,
        2439
      ],
      "op": "AND",
      "path": "15"
    },
    "3782": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2417,
        2439
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3783": {
      "fn": "MasterChef.pendingRewards",
      "jump": "o",
      "offset": [
        2417,
        2439
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3784": {
      "fn": "MasterChef.addToken",
      "offset": [
        4573,
        5256
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3785": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4700
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 48,
      "value": "0x0"
    },
    "3787": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4700
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3788": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3790": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3791": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3792": {
      "op": "PUSH4",
      "value": "0xC395FCB3"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3799": {
      "op": "SHL"
    },
    "3800": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3801": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3802": {
      "fn": "MasterChef.addToken",
      "offset": [
        4714,
        4724
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3803": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3805": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3806": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "ADD",
      "path": "15"
    },
    "3807": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3808": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3809": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3816": {
      "op": "SHL"
    },
    "3817": {
      "op": "SUB"
    },
    "3818": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4700
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3819": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4700
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3820": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4700
      ],
      "op": "AND",
      "path": "15"
    },
    "3821": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4700
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3822": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4713
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC395FCB3"
    },
    "3827": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4713
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3828": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "3830": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3831": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3832": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "ADD",
      "path": "15"
    },
    "3833": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3834": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3836": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3837": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3838": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3839": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3840": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3841": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3842": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "SUB",
      "path": "15"
    },
    "3843": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "ADD",
      "path": "15"
    },
    "3844": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3845": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4700
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3846": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3847": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3848": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3849": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3850": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3851": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF13"
    },
    "3854": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3855": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3857": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3858": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3859": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3860": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "POP",
      "path": "15"
    },
    "3861": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "GAS",
      "path": "15"
    },
    "3862": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "3863": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3864": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3865": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3866": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF27"
    },
    "3869": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3870": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3871": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3873": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3874": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "3875": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3876": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3878": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3879": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3880": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "POP",
      "path": "15"
    },
    "3881": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "POP",
      "path": "15"
    },
    "3882": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "POP",
      "path": "15"
    },
    "3883": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "POP",
      "path": "15"
    },
    "3884": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3886": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3887": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3888": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3890": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3891": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "LT",
      "path": "15"
    },
    "3892": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3893": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF3D"
    },
    "3896": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3897": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3899": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3900": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3901": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3902": {
      "op": "POP"
    },
    "3903": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3904": {
      "branch": 94,
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4725
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3905": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4776
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFBD"
    },
    "3908": {
      "branch": 94,
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4776
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3909": {
      "op": "POP"
    },
    "3910": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4743
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3912": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4743
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3913": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3915": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3916": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3917": {
      "op": "PUSH4",
      "value": "0x89D8559"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3924": {
      "op": "SHL"
    },
    "3925": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3926": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3927": {
      "fn": "MasterChef.addToken",
      "offset": [
        4765,
        4775
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3928": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3930": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3931": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "ADD",
      "path": "15"
    },
    "3932": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3933": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3934": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3941": {
      "op": "SHL"
    },
    "3942": {
      "op": "SUB"
    },
    "3943": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4743
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3944": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4743
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3945": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4743
      ],
      "op": "AND",
      "path": "15"
    },
    "3946": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4743
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3947": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4764
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x113B0AB2"
    },
    "3952": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4764
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3953": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "3955": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3956": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3957": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "ADD",
      "path": "15"
    },
    "3958": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3959": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3961": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3962": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3963": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3964": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3965": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3966": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3967": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "SUB",
      "path": "15"
    },
    "3968": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "ADD",
      "path": "15"
    },
    "3969": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3970": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4743
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3971": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3972": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3973": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3974": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3975": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3976": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF90"
    },
    "3979": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3980": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3982": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3983": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3984": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3985": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "POP",
      "path": "15"
    },
    "3986": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "GAS",
      "path": "15"
    },
    "3987": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "3988": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3989": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3990": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3991": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFA4"
    },
    "3994": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3995": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3996": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3998": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3999": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4000": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4001": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4003": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4004": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4005": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "POP",
      "path": "15"
    },
    "4006": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "POP",
      "path": "15"
    },
    "4007": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "POP",
      "path": "15"
    },
    "4008": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "POP",
      "path": "15"
    },
    "4009": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4011": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4012": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4013": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4015": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4016": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "LT",
      "path": "15"
    },
    "4017": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4018": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFBA"
    },
    "4021": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4022": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4024": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4025": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4026": {
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4027": {
      "op": "POP"
    },
    "4028": {
      "branch": 95,
      "fn": "MasterChef.addToken",
      "offset": [
        4729,
        4776
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4029": {
      "fn": "MasterChef.addToken",
      "offset": [
        4686,
        4776
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4030": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF8"
    },
    "4033": {
      "branch": 95,
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4034": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4036": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4037": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4043": {
      "op": "SHL"
    },
    "4044": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4045": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4046": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4048": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "ADD",
      "path": "15"
    },
    "4049": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4050": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4051": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4053": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "ADD",
      "path": "15"
    },
    "4054": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4055": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4056": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "SUB",
      "path": "15"
    },
    "4057": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4058": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4059": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4061": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4062": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4063": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4065": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "ADD",
      "path": "15"
    },
    "4066": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4067": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18E6"
    },
    "4070": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4072": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4073": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "CODECOPY",
      "path": "15"
    },
    "4074": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4076": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "ADD",
      "path": "15"
    },
    "4077": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4078": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "POP",
      "path": "15"
    },
    "4079": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "POP",
      "path": "15"
    },
    "4080": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4082": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4083": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4084": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4085": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "SUB",
      "path": "15"
    },
    "4086": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4087": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4088": {
      "fn": "MasterChef.addToken",
      "offset": [
        4665,
        4838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4089": {
      "branch": 96,
      "fn": "MasterChef.addToken",
      "offset": [
        4852,
        4863
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4090": {
      "fn": "MasterChef.addToken",
      "offset": [
        4848,
        4907
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4091": {
      "fn": "MasterChef.addToken",
      "offset": [
        4848,
        4907
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1006"
    },
    "4094": {
      "branch": 96,
      "fn": "MasterChef.addToken",
      "offset": [
        4848,
        4907
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4095": {
      "fn": "MasterChef.addToken",
      "offset": [
        4879,
        4896
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 49,
      "value": "0x1006"
    },
    "4098": {
      "fn": "MasterChef.addToken",
      "offset": [
        4879,
        4894
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA3A"
    },
    "4101": {
      "fn": "MasterChef.addToken",
      "jump": "i",
      "offset": [
        4879,
        4896
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4102": {
      "fn": "MasterChef.addToken",
      "offset": [
        4879,
        4896
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4103": {
      "fn": "MasterChef.addToken",
      "offset": [
        4916,
        4939
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4105": {
      "fn": "MasterChef.addToken",
      "offset": [
        4957,
        4967
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "4107": {
      "fn": "MasterChef.addToken",
      "offset": [
        4957,
        4967
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4108": {
      "fn": "MasterChef.addToken",
      "offset": [
        4942,
        4954
      ],
      "op": "NUMBER",
      "path": "15"
    },
    "4109": {
      "branch": 97,
      "fn": "MasterChef.addToken",
      "offset": [
        4942,
        4967
      ],
      "op": "GT",
      "path": "15"
    },
    "4110": {
      "fn": "MasterChef.addToken",
      "offset": [
        4942,
        4995
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1019"
    },
    "4113": {
      "branch": 97,
      "fn": "MasterChef.addToken",
      "offset": [
        4942,
        4995
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4114": {
      "fn": "MasterChef.addToken",
      "offset": [
        4985,
        4995
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC"
    },
    "4116": {
      "fn": "MasterChef.addToken",
      "offset": [
        4985,
        4995
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4117": {
      "fn": "MasterChef.addToken",
      "offset": [
        4942,
        4995
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x101B"
    },
    "4120": {
      "fn": "MasterChef.addToken",
      "offset": [
        4942,
        4995
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4121": {
      "fn": "MasterChef.addToken",
      "offset": [
        4942,
        4995
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4122": {
      "fn": "MasterChef.addToken",
      "offset": [
        4970,
        4982
      ],
      "op": "NUMBER",
      "path": "15"
    },
    "4123": {
      "fn": "MasterChef.addToken",
      "offset": [
        4942,
        4995
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4124": {
      "fn": "MasterChef.addToken",
      "offset": [
        5023,
        5038
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 50,
      "value": "0xB"
    },
    "4126": {
      "fn": "MasterChef.addToken",
      "offset": [
        5023,
        5038
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4127": {
      "fn": "MasterChef.addToken",
      "offset": [
        4916,
        4995
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4128": {
      "fn": "MasterChef.addToken",
      "offset": [
        4916,
        4995
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4129": {
      "op": "POP"
    },
    "4130": {
      "fn": "MasterChef.addToken",
      "offset": [
        5023,
        5055
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x102B"
    },
    "4133": {
      "fn": "MasterChef.addToken",
      "offset": [
        5023,
        5055
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4134": {
      "fn": "MasterChef.addToken",
      "offset": [
        5043,
        5054
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4135": {
      "fn": "MasterChef.addToken",
      "offset": [
        5023,
        5042
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F4"
    },
    "4138": {
      "fn": "MasterChef.addToken",
      "jump": "i",
      "offset": [
        5023,
        5055
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4139": {
      "fn": "MasterChef.addToken",
      "offset": [
        5023,
        5055
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4140": {
      "fn": "MasterChef.addToken",
      "offset": [
        5005,
        5020
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "4142": {
      "fn": "MasterChef.addToken",
      "offset": [
        5005,
        5055
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4143": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 51,
      "value": "0x40"
    },
    "4145": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4146": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4147": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "4149": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4150": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "ADD",
      "path": "15"
    },
    "4151": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4152": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4159": {
      "op": "SHL"
    },
    "4160": {
      "op": "SUB"
    },
    "4161": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "4162": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4163": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "AND",
      "path": "15"
    },
    "4164": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4165": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4166": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4168": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4169": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "ADD",
      "path": "15"
    },
    "4170": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "4171": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4172": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4173": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4174": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4175": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "ADD",
      "path": "15"
    },
    "4176": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4177": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4178": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4181": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4183": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4184": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "ADD",
      "path": "15"
    },
    "4185": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4186": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4187": {
      "fn": "MasterChef.addToken",
      "offset": [
        5079,
        5248
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4188": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5073
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "4190": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4191": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4192": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4194": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4195": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "ADD",
      "path": "15"
    },
    "4196": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4197": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4198": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4199": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4200": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4201": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4202": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
    },
    "4235": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4237": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4238": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4239": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "MUL",
      "path": "15"
    },
    "4240": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4241": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4242": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "ADD",
      "path": "15"
    },
    "4243": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4244": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4251": {
      "op": "SHL"
    },
    "4252": {
      "op": "SUB"
    },
    "4253": {
      "op": "NOT"
    },
    "4254": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "AND",
      "path": "15"
    },
    "4255": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4256": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4257": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "4258": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "AND",
      "path": "15"
    },
    "4259": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "OR",
      "path": "15"
    },
    "4260": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4261": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "4262": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4263": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4264": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4265": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0"
    },
    "4298": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4299": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "ADD",
      "path": "15"
    },
    "4300": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4301": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4302": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1"
    },
    "4335": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4336": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "ADD",
      "path": "15"
    },
    "4337": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4338": {
      "op": "POP"
    },
    "4339": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4340": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4341": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B2"
    },
    "4374": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4375": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4376": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "ADD",
      "path": "15"
    },
    "4377": {
      "fn": "MasterChef.addToken",
      "offset": [
        5065,
        5249
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4378": {
      "fn": "MasterChef.addToken",
      "jump": "o",
      "offset": [
        4573,
        5256
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4379": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4380": {
      "fn": "MasterChef.deposit",
      "offset": [
        8363,
        8384
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4382": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8395
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "4384": {
      "fn": "MasterChef.deposit",
      "offset": [
        8396,
        8400
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4385": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4386": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4387": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4388": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "LT",
      "path": "15"
    },
    "4389": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x112A"
    },
    "4392": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4393": {
      "dev": "Index out of range",
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "INVALID",
      "path": "15"
    },
    "4394": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4395": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4397": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4398": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4399": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4400": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4402": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4403": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4404": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4405": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8449
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4406": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8449
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4407": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8449
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4408": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8443
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "4410": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8449
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4411": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8449
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4412": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8449
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4414": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8449
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4415": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8449
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4416": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8449
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4417": {
      "fn": "MasterChef.deposit",
      "offset": [
        8450,
        8460
      ],
      "op": "CALLER",
      "path": "15"
    },
    "4418": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8461
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4419": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8461
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4420": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8461
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4421": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8461
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4422": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8461
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4423": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8461
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4424": {
      "fn": "MasterChef.deposit",
      "offset": [
        8435,
        8461
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4425": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4427": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4428": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4429": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "MUL",
      "path": "15"
    },
    "4430": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4431": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4432": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "ADD",
      "path": "15"
    },
    "4433": {
      "fn": "MasterChef.deposit",
      "offset": [
        8387,
        8401
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4434": {
      "op": "POP"
    },
    "4435": {
      "fn": "MasterChef.deposit",
      "offset": [
        8471,
        8487
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 52,
      "value": "0x115B"
    },
    "4438": {
      "fn": "MasterChef.deposit",
      "offset": [
        8444,
        8448
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4439": {
      "fn": "MasterChef.deposit",
      "offset": [
        8471,
        8481
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7C8"
    },
    "4442": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8471,
        8487
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4443": {
      "fn": "MasterChef.deposit",
      "offset": [
        8471,
        8487
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4444": {
      "fn": "MasterChef.deposit",
      "offset": [
        8501,
        8512
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4445": {
      "fn": "MasterChef.deposit",
      "offset": [
        8501,
        8512
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4446": {
      "branch": 98,
      "fn": "MasterChef.deposit",
      "offset": [
        8501,
        8516
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4447": {
      "fn": "MasterChef.deposit",
      "offset": [
        8497,
        8734
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11A4"
    },
    "4450": {
      "branch": 98,
      "fn": "MasterChef.deposit",
      "offset": [
        8497,
        8734
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4451": {
      "fn": "MasterChef.deposit",
      "offset": [
        8532,
        8547
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4453": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8621
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1190"
    },
    "4456": {
      "fn": "MasterChef.deposit",
      "offset": [
        8605,
        8609
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4457": {
      "fn": "MasterChef.deposit",
      "offset": [
        8605,
        8620
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4459": {
      "fn": "MasterChef.deposit",
      "offset": [
        8605,
        8620
      ],
      "op": "ADD",
      "path": "15"
    },
    "4460": {
      "fn": "MasterChef.deposit",
      "offset": [
        8605,
        8620
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4461": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8600
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x722"
    },
    "4464": {
      "fn": "MasterChef.deposit",
      "offset": [
        8595,
        8599
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "4470": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8590
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71C"
    },
    "4473": {
      "fn": "MasterChef.deposit",
      "offset": [
        8566,
        8570
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4474": {
      "fn": "MasterChef.deposit",
      "offset": [
        8566,
        8589
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4476": {
      "fn": "MasterChef.deposit",
      "offset": [
        8566,
        8589
      ],
      "op": "ADD",
      "path": "15"
    },
    "4477": {
      "fn": "MasterChef.deposit",
      "offset": [
        8566,
        8589
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4478": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8554
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4479": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8561
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4481": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8561
      ],
      "op": "ADD",
      "path": "15"
    },
    "4482": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8561
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4483": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8565
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "4486": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8565
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4487": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8590
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4488": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8590
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4489": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8590
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4494": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8590
      ],
      "op": "AND",
      "path": "15"
    },
    "4495": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8550,
        8590
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4496": {
      "fn": "MasterChef.deposit",
      "offset": [
        8550,
        8621
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4497": {
      "fn": "MasterChef.deposit",
      "offset": [
        8532,
        8621
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4498": {
      "op": "POP"
    },
    "4499": {
      "fn": "MasterChef.deposit",
      "offset": [
        8638,
        8649
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4500": {
      "branch": 99,
      "fn": "MasterChef.deposit",
      "offset": [
        8638,
        8649
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4501": {
      "fn": "MasterChef.deposit",
      "offset": [
        8635,
        8724
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11A2"
    },
    "4504": {
      "branch": 99,
      "fn": "MasterChef.deposit",
      "offset": [
        8635,
        8724
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4505": {
      "fn": "MasterChef.deposit",
      "offset": [
        8669,
        8709
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 53,
      "value": "0x11A2"
    },
    "4508": {
      "fn": "MasterChef.deposit",
      "offset": [
        8689,
        8699
      ],
      "op": "CALLER",
      "path": "15"
    },
    "4509": {
      "fn": "MasterChef.deposit",
      "offset": [
        8701,
        8708
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4510": {
      "fn": "MasterChef.deposit",
      "offset": [
        8669,
        8688
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x122D"
    },
    "4513": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8669,
        8709
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4514": {
      "fn": "MasterChef.deposit",
      "offset": [
        8669,
        8709
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4515": {
      "fn": "MasterChef.deposit",
      "offset": [
        8497,
        8734
      ],
      "op": "POP",
      "path": "15"
    },
    "4516": {
      "fn": "MasterChef.deposit",
      "offset": [
        8497,
        8734
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4517": {
      "fn": "MasterChef.deposit",
      "offset": [
        8746,
        8757
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4518": {
      "branch": 100,
      "fn": "MasterChef.deposit",
      "offset": [
        8746,
        8757
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4519": {
      "fn": "MasterChef.deposit",
      "offset": [
        8743,
        8910
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11D0"
    },
    "4522": {
      "branch": 100,
      "fn": "MasterChef.deposit",
      "offset": [
        8743,
        8910
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4523": {
      "fn": "MasterChef.deposit",
      "offset": [
        8773,
        8785
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 54
    },
    "4524": {
      "fn": "MasterChef.deposit",
      "offset": [
        8773,
        8785
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4525": {
      "fn": "MasterChef.deposit",
      "offset": [
        8773,
        8847
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11C1"
    },
    "4528": {
      "fn": "MasterChef.deposit",
      "offset": [
        8773,
        8847
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4535": {
      "op": "SHL"
    },
    "4536": {
      "op": "SUB"
    },
    "4537": {
      "fn": "MasterChef.deposit",
      "offset": [
        8773,
        8785
      ],
      "op": "AND",
      "path": "15"
    },
    "4538": {
      "fn": "MasterChef.deposit",
      "offset": [
        8811,
        8821
      ],
      "op": "CALLER",
      "path": "15"
    },
    "4539": {
      "fn": "MasterChef.deposit",
      "offset": [
        8832,
        8836
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "4540": {
      "fn": "MasterChef.deposit",
      "offset": [
        8839,
        8846
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4541": {
      "fn": "MasterChef.deposit",
      "offset": [
        8773,
        8802
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x154E"
    },
    "4544": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8773,
        8847
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4545": {
      "fn": "MasterChef.deposit",
      "offset": [
        8773,
        8847
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4546": {
      "fn": "MasterChef.deposit",
      "offset": [
        8875,
        8886
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 55
    },
    "4547": {
      "fn": "MasterChef.deposit",
      "offset": [
        8875,
        8886
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4548": {
      "fn": "MasterChef.deposit",
      "offset": [
        8875,
        8899
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11CD"
    },
    "4551": {
      "fn": "MasterChef.deposit",
      "offset": [
        8875,
        8899
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4552": {
      "fn": "MasterChef.deposit",
      "offset": [
        8891,
        8898
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4553": {
      "fn": "MasterChef.deposit",
      "offset": [
        8875,
        8890
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F4"
    },
    "4556": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8875,
        8899
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4557": {
      "fn": "MasterChef.deposit",
      "offset": [
        8875,
        8899
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4558": {
      "fn": "MasterChef.deposit",
      "offset": [
        8861,
        8899
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4559": {
      "fn": "MasterChef.deposit",
      "offset": [
        8861,
        8899
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4560": {
      "fn": "MasterChef.deposit",
      "offset": [
        8743,
        8910
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4561": {
      "fn": "MasterChef.deposit",
      "offset": [
        8953,
        8976
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 56,
      "value": "0x3"
    },
    "4563": {
      "fn": "MasterChef.deposit",
      "offset": [
        8953,
        8976
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4564": {
      "fn": "MasterChef.deposit",
      "offset": [
        8953,
        8976
      ],
      "op": "ADD",
      "path": "15"
    },
    "4565": {
      "fn": "MasterChef.deposit",
      "offset": [
        8953,
        8976
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4566": {
      "fn": "MasterChef.deposit",
      "offset": [
        8937,
        8948
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4567": {
      "fn": "MasterChef.deposit",
      "offset": [
        8937,
        8948
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4568": {
      "fn": "MasterChef.deposit",
      "offset": [
        8937,
        8987
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11EB"
    },
    "4571": {
      "fn": "MasterChef.deposit",
      "offset": [
        8937,
        8987
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4572": {
      "fn": "MasterChef.deposit",
      "offset": [
        8982,
        8986
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "4578": {
      "fn": "MasterChef.deposit",
      "offset": [
        8982,
        8986
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4579": {
      "fn": "MasterChef.deposit",
      "offset": [
        8937,
        8977
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x71C"
    },
    "4582": {
      "fn": "MasterChef.deposit",
      "offset": [
        8937,
        8977
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4583": {
      "fn": "MasterChef.deposit",
      "offset": [
        8937,
        8952
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "4586": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8937,
        8977
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4587": {
      "fn": "MasterChef.deposit",
      "offset": [
        8937,
        8987
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4588": {
      "fn": "MasterChef.deposit",
      "offset": [
        8919,
        8934
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4590": {
      "fn": "MasterChef.deposit",
      "offset": [
        8919,
        8934
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4591": {
      "fn": "MasterChef.deposit",
      "offset": [
        8919,
        8934
      ],
      "op": "ADD",
      "path": "15"
    },
    "4592": {
      "fn": "MasterChef.deposit",
      "offset": [
        8919,
        8987
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4593": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 57,
      "value": "0x40"
    },
    "4595": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4596": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4597": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4598": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4599": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4600": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4601": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4602": {
      "fn": "MasterChef.deposit",
      "offset": [
        9022,
        9026
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4603": {
      "fn": "MasterChef.deposit",
      "offset": [
        9022,
        9026
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4604": {
      "fn": "MasterChef.deposit",
      "offset": [
        9010,
        9020
      ],
      "op": "CALLER",
      "path": "15"
    },
    "4605": {
      "fn": "MasterChef.deposit",
      "offset": [
        9010,
        9020
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4606": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
    },
    "4639": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4640": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4641": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4642": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "SUB",
      "path": "15"
    },
    "4643": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4645": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "ADD",
      "path": "15"
    },
    "4646": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4647": {
      "fn": "MasterChef.deposit",
      "offset": [
        9002,
        9036
      ],
      "op": "LOG3",
      "path": "15"
    },
    "4648": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "POP",
      "path": "15"
    },
    "4649": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "POP",
      "path": "15"
    },
    "4650": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "POP",
      "path": "15"
    },
    "4651": {
      "fn": "MasterChef.deposit",
      "offset": [
        8298,
        9043
      ],
      "op": "POP",
      "path": "15"
    },
    "4652": {
      "fn": "MasterChef.deposit",
      "jump": "o",
      "offset": [
        8298,
        9043
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4653": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10386,
        10678
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4654": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10492
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4656": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10492
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4657": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4659": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4660": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4661": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4668": {
      "op": "SHL"
    },
    "4669": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4670": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4671": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10511,
        10515
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "4672": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4674": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4675": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "ADD",
      "path": "15"
    },
    "4676": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4677": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4678": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4679": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10464,
        10482
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4681": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10464,
        10482
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4688": {
      "op": "SHL"
    },
    "4689": {
      "op": "SUB"
    },
    "4690": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10492
      ],
      "op": "AND",
      "path": "15"
    },
    "4691": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10492
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4692": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10502
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "4697": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10502
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4698": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4700": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4701": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4702": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "ADD",
      "path": "15"
    },
    "4703": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4704": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4706": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4707": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4708": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4709": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4710": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4711": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "SUB",
      "path": "15"
    },
    "4712": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "ADD",
      "path": "15"
    },
    "4713": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4714": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10492
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4715": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4716": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4717": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4718": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4719": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4720": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1278"
    },
    "4723": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4724": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4726": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4727": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4728": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4729": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "POP",
      "path": "15"
    },
    "4730": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "GAS",
      "path": "15"
    },
    "4731": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "4732": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4733": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4734": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4735": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x128C"
    },
    "4738": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4739": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4740": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4742": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4743": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4744": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4745": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4747": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4748": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4749": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "POP",
      "path": "15"
    },
    "4750": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "POP",
      "path": "15"
    },
    "4751": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "POP",
      "path": "15"
    },
    "4752": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "POP",
      "path": "15"
    },
    "4753": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4755": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4756": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4757": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4759": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4760": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "LT",
      "path": "15"
    },
    "4761": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4762": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12A2"
    },
    "4765": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4766": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4768": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4769": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4770": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4771": {
      "op": "POP"
    },
    "4772": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4773": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10485,
        10517
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4774": {
      "op": "POP"
    },
    "4775": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10531,
        10551
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4776": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10531,
        10551
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4777": {
      "branch": 101,
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10531,
        10551
      ],
      "op": "GT",
      "path": "15"
    },
    "4778": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10527,
        10672
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4779": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10527,
        10672
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1336"
    },
    "4782": {
      "branch": 101,
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10527,
        10672
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4783": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10574
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 58,
      "value": "0x1"
    },
    "4785": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10574
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4786": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4788": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4789": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4790": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4797": {
      "op": "SHL"
    },
    "4798": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4799": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4806": {
      "op": "SHL"
    },
    "4807": {
      "op": "SUB"
    },
    "4808": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4809": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4810": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "AND",
      "path": "15"
    },
    "4811": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4813": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4814": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "ADD",
      "path": "15"
    },
    "4815": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4816": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4818": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4819": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "ADD",
      "path": "15"
    },
    "4820": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4821": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4822": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4823": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4824": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4825": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10574
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4826": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10574
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4827": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10574
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4828": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10574
      ],
      "op": "AND",
      "path": "15"
    },
    "4829": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10574
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4830": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10583
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA9059CBB"
    },
    "4835": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10583
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4836": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4838": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4839": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4840": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "ADD",
      "path": "15"
    },
    "4841": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4842": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4844": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4845": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4846": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4847": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4848": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4849": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "SUB",
      "path": "15"
    },
    "4850": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "ADD",
      "path": "15"
    },
    "4851": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4852": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4854": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10574
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4855": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4856": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4857": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4858": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4859": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4860": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1304"
    },
    "4863": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4864": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4866": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4867": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4868": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4869": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "POP",
      "path": "15"
    },
    "4870": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "GAS",
      "path": "15"
    },
    "4871": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "CALL",
      "path": "15"
    },
    "4872": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4873": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4874": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4875": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1318"
    },
    "4878": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4879": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4880": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4882": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4883": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4884": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4885": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4887": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4888": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4889": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "POP",
      "path": "15"
    },
    "4890": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "POP",
      "path": "15"
    },
    "4891": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "POP",
      "path": "15"
    },
    "4892": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "POP",
      "path": "15"
    },
    "4893": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4895": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4896": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4897": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4899": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4900": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "LT",
      "path": "15"
    },
    "4901": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4902": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x132E"
    },
    "4905": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4906": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4908": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4909": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4910": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10567,
        10600
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4911": {
      "op": "POP"
    },
    "4912": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10527,
        10672
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13B9"
    },
    "4915": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10527,
        10672
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4916": {
      "op": "POP"
    },
    "4917": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10527,
        10672
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4918": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10527,
        10672
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4919": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10638
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 59,
      "value": "0x1"
    },
    "4921": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10638
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4922": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4924": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4925": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4926": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4933": {
      "op": "SHL"
    },
    "4934": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4935": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4942": {
      "op": "SHL"
    },
    "4943": {
      "op": "SUB"
    },
    "4944": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4945": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4946": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "AND",
      "path": "15"
    },
    "4947": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4949": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4950": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "ADD",
      "path": "15"
    },
    "4951": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4952": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4954": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4955": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "ADD",
      "path": "15"
    },
    "4956": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4957": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4958": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4959": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4960": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4961": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10638
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4962": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10638
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4963": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10638
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4964": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10638
      ],
      "op": "AND",
      "path": "15"
    },
    "4965": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10638
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4966": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10647
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA9059CBB"
    },
    "4971": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10647
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4972": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4974": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4975": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4976": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "ADD",
      "path": "15"
    },
    "4977": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4978": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4980": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4981": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4982": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4983": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4984": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4985": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "SUB",
      "path": "15"
    },
    "4986": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "ADD",
      "path": "15"
    },
    "4987": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4988": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10638
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4990": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10638
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4991": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4992": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4993": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4994": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4995": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4996": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x138C"
    },
    "4999": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5000": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5002": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5003": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "REVERT",
      "path": "15"
    },
    "5004": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5005": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "POP",
      "path": "15"
    },
    "5006": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "GAS",
      "path": "15"
    },
    "5007": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "CALL",
      "path": "15"
    },
    "5008": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5009": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5010": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5011": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13A0"
    },
    "5014": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5015": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "5016": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5018": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5019": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "5020": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "5021": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5023": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "REVERT",
      "path": "15"
    },
    "5024": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5025": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "POP",
      "path": "15"
    },
    "5026": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "POP",
      "path": "15"
    },
    "5027": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "POP",
      "path": "15"
    },
    "5028": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "POP",
      "path": "15"
    },
    "5029": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5031": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5032": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "5033": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5035": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5036": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "LT",
      "path": "15"
    },
    "5037": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5038": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13B6"
    },
    "5041": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5042": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5044": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5045": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "REVERT",
      "path": "15"
    },
    "5046": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10631,
        10661
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5047": {
      "op": "POP"
    },
    "5048": {
      "op": "POP"
    },
    "5049": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10527,
        10672
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5050": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10386,
        10678
      ],
      "op": "POP",
      "path": "15"
    },
    "5051": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10386,
        10678
      ],
      "op": "POP",
      "path": "15"
    },
    "5052": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10386,
        10678
      ],
      "op": "POP",
      "path": "15"
    },
    "5053": {
      "fn": "MasterChef.safeRewardsTransfer",
      "jump": "o",
      "offset": [
        10386,
        10678
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5054": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5055": {
      "fn": "SafeMath.mul",
      "offset": [
        2238,
        2245
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5057": {
      "branch": 107,
      "fn": "SafeMath.mul",
      "offset": [
        2479,
        2485
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5058": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13CD"
    },
    "5061": {
      "branch": 107,
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5062": {
      "op": "POP"
    },
    "5063": {
      "fn": "SafeMath.mul",
      "offset": [
        2508,
        2509
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 60,
      "value": "0x0"
    },
    "5065": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC73"
    },
    "5068": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5069": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5070": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5071": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5072": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "MUL",
      "path": "3"
    },
    "5073": {
      "fn": "SafeMath.mul",
      "offset": [
        2546,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5074": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5075": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5076": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5077": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 61,
      "value": "0x13DA"
    },
    "5080": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5081": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "INVALID",
      "path": "3"
    },
    "5082": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5083": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "DIV",
      "path": "3"
    },
    "5084": {
      "branch": 108,
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2575
      ],
      "op": "EQ",
      "path": "3"
    },
    "5085": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1417"
    },
    "5088": {
      "branch": 108,
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5089": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5091": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5092": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5098": {
      "op": "SHL"
    },
    "5099": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5100": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5101": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5103": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "5104": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5105": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5106": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5108": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "5109": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5110": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5111": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SUB",
      "path": "3"
    },
    "5112": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5113": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5114": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "5116": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5117": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5118": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5120": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "5121": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5122": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x190A"
    },
    "5125": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "5127": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5128": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "5129": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5131": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "5132": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5133": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "POP",
      "path": "3"
    },
    "5134": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "POP",
      "path": "3"
    },
    "5135": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5137": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5138": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5139": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5140": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SUB",
      "path": "3"
    },
    "5141": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5142": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5143": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5144": {
      "fn": "SafeMath.mul",
      "offset": [
        2631,
        2632
      ],
      "op": "SWAP4",
      "path": "3",
      "statement": 62
    },
    "5145": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5146": {
      "op": "POP"
    },
    "5147": {
      "op": "POP"
    },
    "5148": {
      "op": "POP"
    },
    "5149": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5150": {
      "fn": "SafeMath.div",
      "offset": [
        3101,
        3231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5151": {
      "fn": "SafeMath.div",
      "offset": [
        3159,
        3166
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5153": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 63,
      "value": "0x1417"
    },
    "5156": {
      "fn": "SafeMath.div",
      "offset": [
        3189,
        3190
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5157": {
      "fn": "SafeMath.div",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5158": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5160": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5161": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5162": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5164": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "3"
    },
    "5165": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5167": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5168": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5169": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "5171": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5172": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5173": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5175": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "3"
    },
    "5176": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "5209": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5210": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5211": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "POP",
      "path": "3"
    },
    "5212": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3188
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15AE"
    },
    "5215": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3185,
        3224
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5216": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5217": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5219": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 64,
      "value": "0x1417"
    },
    "5222": {
      "fn": "SafeMath.sub",
      "offset": [
        1409,
        1410
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5223": {
      "fn": "SafeMath.sub",
      "offset": [
        1412,
        1413
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5224": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5226": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5227": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5228": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5230": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "5231": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5233": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5234": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5235": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "5237": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5238": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5239": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5241": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "5242": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "5275": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5276": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5277": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "POP",
      "path": "3"
    },
    "5278": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1650"
    },
    "5281": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1405,
        1448
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5282": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        696,
        871
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5283": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 65,
      "value": "0x40"
    },
    "5285": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5286": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5293": {
      "op": "SHL"
    },
    "5294": {
      "op": "SUB"
    },
    "5295": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5296": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "AND",
      "path": "5"
    },
    "5297": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5299": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5300": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "5301": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5302": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "5304": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5305": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5306": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "5307": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5308": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5309": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5310": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5311": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5312": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5313": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5314": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SUB",
      "path": "5"
    },
    "5315": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5316": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5317": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "5318": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5319": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5320": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "5322": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5323": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5324": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "5325": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5326": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5327": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5328": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5330": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5331": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "5332": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5333": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5340": {
      "op": "SHL"
    },
    "5341": {
      "op": "SUB"
    },
    "5342": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "AND",
      "path": "5"
    },
    "5343": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5350": {
      "op": "SHL"
    },
    "5351": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "OR",
      "path": "5"
    },
    "5352": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5353": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5354": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13B9"
    },
    "5357": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        864
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5358": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        798,
        803
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5359": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        798,
        803
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5360": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        797
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16AA"
    },
    "5363": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        778,
        864
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5364": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5365": {
      "fn": "SafeMath.add",
      "offset": [
        932,
        939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5367": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5368": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5369": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "ADD",
      "path": "3"
    },
    "5370": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 66
    },
    "5371": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5372": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "LT",
      "path": "3"
    },
    "5373": {
      "branch": 109,
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5374": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1417"
    },
    "5377": {
      "branch": 109,
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5378": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5380": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5381": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5382": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5388": {
      "op": "SHL"
    },
    "5389": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5390": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5391": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5393": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5395": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5396": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5397": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5398": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "5400": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5402": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5403": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5404": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5405": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "5438": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "5440": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5441": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5442": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5443": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5444": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5445": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5446": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5447": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5448": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SUB",
      "path": "3"
    },
    "5449": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5451": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5452": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5453": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5454": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5455": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 67,
      "value": "0x40"
    },
    "5457": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5458": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5465": {
      "op": "SHL"
    },
    "5466": {
      "op": "SUB"
    },
    "5467": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5468": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5469": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "5"
    },
    "5470": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5472": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5473": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "5474": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5475": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5476": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "5"
    },
    "5477": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "5479": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5480": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "5481": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5482": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "5484": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5485": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5486": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "5487": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5488": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5489": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5490": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5491": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5492": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5493": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5494": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SUB",
      "path": "5"
    },
    "5495": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5496": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5497": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "5498": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5499": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5500": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x84"
    },
    "5502": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5503": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5504": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "5505": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5506": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5507": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5508": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5510": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5511": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "5512": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5513": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5520": {
      "op": "SHL"
    },
    "5521": {
      "op": "SUB"
    },
    "5522": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "5"
    },
    "5523": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5530": {
      "op": "SHL"
    },
    "5531": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "OR",
      "path": "5"
    },
    "5532": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5533": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5534": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15A8"
    },
    "5537": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5538": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        997,
        1002
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5539": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        997,
        1002
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5540": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16AA"
    },
    "5543": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        977,
        1073
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5544": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5545": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "5546": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "5547": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "5548": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "5549": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        877,
        1080
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5550": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5551": {
      "fn": "SafeMath.div",
      "offset": [
        3799,
        3806
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5553": {
      "fn": "SafeMath.div",
      "offset": [
        3833,
        3845
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 68
    },
    "5554": {
      "branch": 110,
      "fn": "SafeMath.div",
      "offset": [
        3826,
        3831
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5555": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x163A"
    },
    "5558": {
      "branch": 110,
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5559": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5561": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5568": {
      "op": "SHL"
    },
    "5569": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5570": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5571": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5573": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5574": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5575": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5576": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5578": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5579": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5580": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5581": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5582": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5583": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5584": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5585": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5586": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5587": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5588": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5589": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5590": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5592": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5593": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5594": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5595": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5596": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5597": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5598": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5600": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5601": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5602": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5603": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5604": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5605": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5607": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5608": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5609": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5610": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "LT",
      "path": "3"
    },
    "5611": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5612": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15FF"
    },
    "5615": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5616": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5617": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5618": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5619": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5620": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5621": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5622": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5623": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5624": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5626": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5627": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15E7"
    },
    "5630": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5631": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5632": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5633": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5634": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5635": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5636": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5637": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5638": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5639": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5640": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5641": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5642": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5644": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "AND",
      "path": "3"
    },
    "5645": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5646": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5647": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x162C"
    },
    "5650": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5651": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5652": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5653": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5654": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5655": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5656": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5658": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5659": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5661": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5662": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5665": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "EXP",
      "path": "3"
    },
    "5666": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5667": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "NOT",
      "path": "3"
    },
    "5668": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "AND",
      "path": "3"
    },
    "5669": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5670": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5671": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5673": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5674": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5675": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5676": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5677": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5678": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5679": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5680": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5681": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5682": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5684": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5685": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5686": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5687": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5688": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5689": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5690": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5691": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5692": {
      "fn": "SafeMath.div",
      "offset": [
        3856,
        3865
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5694": {
      "fn": "SafeMath.div",
      "offset": [
        3872,
        3873
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5695": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3869
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5696": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5697": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1646"
    },
    "5700": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5701": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "INVALID",
      "path": "3"
    },
    "5702": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5703": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DIV",
      "path": "3"
    },
    "5704": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "5705": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5706": {
      "op": "POP"
    },
    "5707": {
      "op": "POP"
    },
    "5708": {
      "op": "POP"
    },
    "5709": {
      "op": "POP"
    },
    "5710": {
      "op": "POP"
    },
    "5711": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5712": {
      "fn": "SafeMath.sub",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5713": {
      "fn": "SafeMath.sub",
      "offset": [
        1832,
        1839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5715": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1879
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 69
    },
    "5716": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5717": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5718": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "GT",
      "path": "3"
    },
    "5719": {
      "branch": 111,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5720": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16A2"
    },
    "5723": {
      "branch": 111,
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5724": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5726": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5727": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5733": {
      "op": "SHL"
    },
    "5734": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5735": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5736": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5738": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5740": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5741": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5742": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5743": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5744": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5745": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5746": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5747": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5749": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5750": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5751": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5752": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5753": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5754": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5755": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5756": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5757": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5758": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "5760": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5761": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5762": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5763": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5764": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5765": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5766": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5767": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5768": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5769": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5770": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5771": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5773": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5774": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5775": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15FF"
    },
    "5778": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5779": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5780": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5781": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5782": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5783": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5784": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5785": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5786": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5787": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5789": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5790": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15E7"
    },
    "5793": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5794": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5795": {
      "op": "POP"
    },
    "5796": {
      "op": "POP"
    },
    "5797": {
      "op": "POP"
    },
    "5798": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5799": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SUB",
      "path": "3"
    },
    "5800": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5801": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5802": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2959,
        3710
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5803": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3401
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5805": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16FF"
    },
    "5808": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3432,
        3436
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5809": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5811": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5812": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5813": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5815": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "5816": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5818": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5819": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5820": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5822": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5823": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5824": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5826": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "5827": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "5860": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5861": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5862": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "POP",
      "path": "5"
    },
    "5863": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3417
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5870": {
      "op": "SHL"
    },
    "5871": {
      "op": "SUB"
    },
    "5872": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "AND",
      "path": "5"
    },
    "5873": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x175B"
    },
    "5876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5878": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5879": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5880": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "5885": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "AND",
      "path": "5"
    },
    "5886": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3404,
        3473
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5887": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5888": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3504
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5889": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3504
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5890": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5891": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5892": {
      "op": "POP"
    },
    "5893": {
      "branch": 105,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3508
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5894": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3483,
        3704
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13B9"
    },
    "5897": {
      "branch": 105,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3483,
        3704
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5898": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3627,
        3637
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 70
    },
    "5899": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5900": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "ADD",
      "path": "5"
    },
    "5903": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5904": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5905": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5907": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5908": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "LT",
      "path": "5"
    },
    "5909": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5910": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x171E"
    },
    "5913": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5914": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5917": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5918": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5919": {
      "op": "POP"
    },
    "5920": {
      "branch": 106,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5921": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13B9"
    },
    "5924": {
      "branch": 106,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5925": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5927": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5928": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5934": {
      "op": "SHL"
    },
    "5935": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5936": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5937": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5939": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "5940": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5941": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5942": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5944": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "5945": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5946": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5947": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SUB",
      "path": "5"
    },
    "5948": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5949": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5950": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "5952": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5953": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5954": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "5957": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5958": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x192B"
    },
    "5961": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "5963": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5964": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "5965": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5967": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "5968": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5969": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "POP",
      "path": "5"
    },
    "5970": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "POP",
      "path": "5"
    },
    "5971": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5973": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5974": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5975": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5976": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SUB",
      "path": "5"
    },
    "5977": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5978": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5979": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3767
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5980": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "5982": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3760
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 71,
      "value": "0x176A"
    },
    "5985": {
      "fn": "Address.functionCall",
      "offset": [
        3730,
        3736
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5986": {
      "fn": "Address.functionCall",
      "offset": [
        3738,
        3742
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5987": {
      "fn": "Address.functionCall",
      "offset": [
        3744,
        3745
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5989": {
      "fn": "Address.functionCall",
      "offset": [
        3747,
        3759
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5990": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3729
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1772"
    },
    "5993": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3707,
        3760
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5994": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3760
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5995": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3760
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "5996": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3767
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5997": {
      "op": "POP"
    },
    "5998": {
      "op": "POP"
    },
    "5999": {
      "op": "POP"
    },
    "6000": {
      "op": "POP"
    },
    "6001": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3573,
        3767
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6002": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        4920,
        5878
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6003": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5050,
        5062
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6005": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5082,
        5100
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 72,
      "value": "0x177D"
    },
    "6008": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5093,
        5099
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6009": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5082,
        5092
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18DF"
    },
    "6012": {
      "fn": "Address._functionCallWithValue",
      "jump": "i",
      "offset": [
        5082,
        5100
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6013": {
      "branch": 102,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5082,
        5100
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6014": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17CE"
    },
    "6017": {
      "branch": 102,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6018": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6020": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6021": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6022": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6026": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6028": {
      "op": "SHL"
    },
    "6029": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6030": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6031": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6033": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6035": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6036": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "6037": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6038": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1D"
    },
    "6040": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "6042": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6043": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "6044": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6045": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "6078": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "6080": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6081": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "6082": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6083": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6084": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6085": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6086": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6087": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6088": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SUB",
      "path": "6"
    },
    "6089": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "6091": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "6092": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6093": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6094": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6095": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5205,
        5217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6097": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5219,
        5242
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6099": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5252
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6106": {
      "op": "SHL"
    },
    "6107": {
      "op": "SUB"
    },
    "6108": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5257
      ],
      "op": "AND",
      "path": "6"
    },
    "6109": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5266,
        5274
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6110": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5277,
        5281
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6111": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6113": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6114": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6115": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6116": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6117": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6118": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6119": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6121": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6122": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6123": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6124": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6125": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6126": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6127": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6129": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6130": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "LT",
      "path": "6"
    },
    "6131": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x180D"
    },
    "6134": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6135": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6136": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6137": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6138": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6141": {
      "op": "NOT"
    },
    "6142": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6143": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6144": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6145": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6146": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6148": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6149": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6150": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6151": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6152": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6153": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17EE"
    },
    "6156": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6157": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6158": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6160": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6161": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6163": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SUB",
      "path": "6"
    },
    "6164": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "6167": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "EXP",
      "path": "6"
    },
    "6168": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SUB",
      "path": "6"
    },
    "6169": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6170": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "NOT",
      "path": "6"
    },
    "6171": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6172": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6173": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "AND",
      "path": "6"
    },
    "6174": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6175": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6176": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6177": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "AND",
      "path": "6"
    },
    "6178": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6179": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6180": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "OR",
      "path": "6"
    },
    "6181": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6182": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6183": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6184": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6185": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6186": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6187": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6188": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6189": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6190": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6191": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6192": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6193": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6194": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6195": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6197": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6199": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6200": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6201": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6202": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SUB",
      "path": "6"
    },
    "6203": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6204": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6205": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6206": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "GAS",
      "path": "6"
    },
    "6207": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "CALL",
      "path": "6"
    },
    "6208": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6209": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6210": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6211": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6212": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6213": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6214": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6216": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6217": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "EQ",
      "path": "6"
    },
    "6218": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x186F"
    },
    "6221": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6222": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6224": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6225": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6226": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6227": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "6229": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "NOT",
      "path": "6"
    },
    "6230": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "6232": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6233": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6234": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "AND",
      "path": "6"
    },
    "6235": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6236": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6237": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6239": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6240": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6241": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6242": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6243": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6244": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6246": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6248": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6249": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6250": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "6251": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1874"
    },
    "6254": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6255": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6256": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6258": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6259": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6260": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6261": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6262": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6263": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6264": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6265": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6266": {
      "branch": 103,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5296,
        5303
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6267": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6268": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1888"
    },
    "6271": {
      "branch": 103,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6272": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5326,
        5336
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 73
    },
    "6273": {
      "op": "POP"
    },
    "6274": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5319,
        5336
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x176A"
    },
    "6277": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5319,
        5336
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6278": {
      "op": "POP"
    },
    "6279": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5319,
        5336
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6280": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6281": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5437,
        5454
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6282": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5437,
        5454
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6283": {
      "branch": 104,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5437,
        5458
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6284": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5433,
        5862
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1898"
    },
    "6287": {
      "branch": 104,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5433,
        5862
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6288": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5695,
        5705
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6289": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5689,
        5706
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6290": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5755,
        5770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6291": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5742,
        5752
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6292": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5738,
        5740
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6294": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5734,
        5753
      ],
      "op": "ADD",
      "path": "6"
    },
    "6295": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5727,
        5771
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6296": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5644,
        5789
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6297": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 74,
      "value": "0x40"
    },
    "6299": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6300": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6304": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6306": {
      "op": "SHL"
    },
    "6307": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6308": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6309": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6311": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6313": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6314": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6315": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6316": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6317": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6318": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6319": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6320": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "6322": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6323": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6324": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6325": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6326": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6327": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5834,
        5846
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6328": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5834,
        5846
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "6329": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6330": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6331": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6332": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6333": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "6335": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6336": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6337": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6338": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6339": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6340": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6341": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6342": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6343": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6344": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6346": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6347": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6348": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15FF"
    },
    "6351": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6352": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6353": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6354": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6355": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6356": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6357": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6358": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6359": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6360": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6362": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6363": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15E7"
    },
    "6366": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6367": {
      "fn": "Address.isContract",
      "offset": [
        718,
        1131
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6368": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "6369": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "6",
      "statement": 75
    },
    "6370": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6371": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6372": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        718,
        1131
      ],
      "op": "JUMP",
      "path": "6"
    }
  },
  "sha1": "03c2a80990a6063eff504bf5e95ce84d0d6ace72",
  "source": "pragma solidity 0.6.12;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"../Access/MISOAccessControls.sol\";\nimport \"../../interfaces/IMisoFarm.sol\";\n\n\n// MasterChef is the master of Rewards. He can make Rewards and he is a fair guy.\n//\n// Note that it's ownable and the owner wields tremendous power. The ownership\n// will be transferred to a governance smart contract once tokens are sufficiently\n// distributed and the community can show to govern itself.\n//\n// Have fun reading it. Hopefully it's bug-free. God bless.\n//\n// MISO Update - Removed LP migrator\n// MISO Update - Removed minter - Contract holds token\n// MISO Update - Dev tips parameterised\n// MISO Update - Replaced owner with access controls\n\ncontract MasterChef is IMisoFarm {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    MISOAccessControls public accessControls;\n\n\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount;     // How many LP tokens the user has provided.\n        uint256 rewardDebt; // Reward debt. See explanation below.\n        //\n        // We do some fancy math here. Basically, any point in time, the amount of tokens\n        // entitled to a user but is pending to be distributed is:\n        //\n        //   pending reward = (user.amount * pool.accRewardsPerShare) - user.rewardDebt\n        //\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\n        //   1. The pool's `accRewardsPerShare` (and `lastRewardBlock`) gets updated.\n        //   2. User receives the pending reward sent to his/her address.\n        //   3. User's `amount` gets updated.\n        //   4. User's `rewardDebt` gets updated.\n    }\n\n    // Info of each pool.\n    struct PoolInfo {\n        IERC20 lpToken;           // Address of LP token contract.\n        uint256 allocPoint;       // How many allocation points assigned to this pool. tokens to distribute per block.\n        uint256 lastRewardBlock;  // Last block number that tokens distribution occurs.\n        uint256 accRewardsPerShare; // Accumulated tokens per share, times 1e12. See below.\n    }\n\n    // The rewards token\n    IERC20 public rewards;\n    // Dev address.\n    address public devaddr;\n    // Percentage amount to be tipped to devs.\n    uint256 public devPercentage;\n    // Tips owed to develpers.\n    uint256 public tips;\n\n    // Block number when bonus tokens period ends.\n    uint256 public bonusEndBlock;\n    // Reward tokens created per block.\n    uint256 public rewardsPerBlock;\n    // Bonus muliplier for early rewards makers.\n    uint256 public BONUS_MULTIPLIER;\n\n\n    bool private initialised;\n\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n    // Info of each user that stakes LP tokens.\n    mapping (uint256 => mapping (address => UserInfo)) public userInfo;\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\n    uint256 public totalAllocPoint;\n    // The block number when rewards mining starts.\n    uint256 public startBlock;\n\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\n\n    function initFarm(\n        address _rewards,\n        uint256 _rewardsPerBlock,\n        uint256 _startBlock,\n        address _devaddr,\n        address _accessControls\n    ) public override {\n        require(!initialised);\n        rewards = IERC20(_rewards);\n        totalAllocPoint = 0;\n        initialised = true;\n        rewardsPerBlock = _rewardsPerBlock;\n        startBlock = _startBlock;\n        devaddr = _devaddr;\n        accessControls = MISOAccessControls(_accessControls);\n    }\n\n    function setBonus(\n        uint256 _bonusEndBlock,\n        uint256 _bonusMultiplier\n    ) public {\n        require(\n            accessControls.hasAdminRole(msg.sender),\n            \"MasterChef.add: Sender must be admin\"\n        );\n\n        bonusEndBlock = _bonusEndBlock;\n        BONUS_MULTIPLIER = _bonusMultiplier;\n    }\n\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    // Add a new lp to the pool. Can only be called by the owner.\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    function addToken(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public  {\n        require(\n            accessControls.hasAdminRole(msg.sender) || accessControls.hasSmartContractRole(msg.sender),\n            \"MasterChef.add: Sender must be admin\"\n        );\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n        poolInfo.push(PoolInfo({\n            lpToken: _lpToken,\n            allocPoint: _allocPoint,\n            lastRewardBlock: lastRewardBlock,\n            accRewardsPerShare: 0\n        }));\n    }\n\n    // Update the given pool's token allocation point. Can only be called by the operator.\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public  {\n        require(\n            accessControls.hasOperatorRole(msg.sender),\n            \"MasterChef.set: Sender must be operator\"\n        );\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\n        poolInfo[_pid].allocPoint = _allocPoint;\n    }\n\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\n        if (_to <= bonusEndBlock) {\n            return _to.sub(_from).mul(BONUS_MULTIPLIER);\n        } else if (_from >= bonusEndBlock) {\n            return _to.sub(_from);\n        } else {\n            return bonusEndBlock.sub(_from).mul(BONUS_MULTIPLIER).add(\n                _to.sub(bonusEndBlock)\n            );\n        }\n    }\n\n    // View function to see pending tokens on frontend.\n    function pendingRewards(uint256 _pid, address _user) external view returns (uint256) {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accRewardsPerShare = pool.accRewardsPerShare;\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n            uint256 rewardsAccum = multiplier.mul(rewardsPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\n            accRewardsPerShare = accRewardsPerShare.add(rewardsAccum.mul(1e12).div(lpSupply));\n        }\n        return user.amount.mul(accRewardsPerShare).div(1e12).sub(user.rewardDebt);\n    }\n\n    // Update reward vairables for all pools. Be careful of gas spending!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        if (block.number <= pool.lastRewardBlock) {\n            return;\n        }\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (lpSupply == 0) {\n            pool.lastRewardBlock = block.number;\n            return;\n        }\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n        uint256 rewardsAccum = multiplier.mul(rewardsPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\n        if (devPercentage > 0) {\n            tips = tips.add(rewardsAccum.mul(devPercentage).div(1000));\n        }\n        pool.accRewardsPerShare = pool.accRewardsPerShare.add(rewardsAccum.mul(1e12).div(lpSupply));\n        pool.lastRewardBlock = block.number;\n    }\n\n    // Deposit LP tokens to MasterChef for rewards allocation.\n    function deposit(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        updatePool(_pid);\n        if (user.amount > 0) {\n            uint256 pending = user.amount.mul(pool.accRewardsPerShare).div(1e12).sub(user.rewardDebt);\n            if(pending > 0) {\n                safeRewardsTransfer(msg.sender, pending);\n            }\n        }\n        if(_amount > 0) {\n            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\n            user.amount = user.amount.add(_amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accRewardsPerShare).div(1e12);\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw LP tokens from MasterChef.\n    function withdraw(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        require(user.amount >= _amount, \"withdraw: not good\");\n        updatePool(_pid);\n        uint256 pending = user.amount.mul(pool.accRewardsPerShare).div(1e12).sub(user.rewardDebt);\n        if(pending > 0) {\n            safeRewardsTransfer(msg.sender, pending);\n        }\n        if(_amount > 0) {\n            user.amount = user.amount.sub(_amount);\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accRewardsPerShare).div(1e12);\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        uint256 amount = user.amount;\n        user.amount = 0;\n        user.rewardDebt = 0;\n        pool.lpToken.safeTransfer(address(msg.sender), amount);\n        emit EmergencyWithdraw(msg.sender, _pid, amount);\n    }\n\n    // Safe rewards transfer function, just in case if rounding error causes pool to not have enough tokens.\n    function safeRewardsTransfer(address _to, uint256 _amount) internal {\n        uint256 rewardsBal = rewards.balanceOf(address(this));\n        if (_amount > rewardsBal) {\n            rewards.transfer(_to, rewardsBal);\n        } else {\n            rewards.transfer(_to, _amount);\n        }\n    }\n\n    // Returns the number of blocks remaining with the current rewards balance\n    function blocksRemaining() public returns (uint256){\n        uint256 rewardsBal = rewards.balanceOf(address(this));\n        if (rewardsPerBlock > 0) {\n            return rewardsBal / rewardsPerBlock;\n        } else {\n            return 0;\n        }\n    }\n\n    // Claims any rewards for the developer\n    function claimTips() public {\n        require(msg.sender == devaddr, \"dev: wut?\");\n        require(tips > 0, \"dev: broke\");\n        uint256 claimable = tips;\n        tips = 0;\n        safeRewardsTransfer(devaddr, claimable);\n    }\n\n    // Update dev address by the previous dev.\n    function dev(address _devaddr) public {\n        require(msg.sender == devaddr, \"dev: wut?\");\n        devaddr = _devaddr;\n    }\n}",
  "sourceMap": "952:10526:15:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Farms/MasterChef.sol",
  "type": "contract"
}