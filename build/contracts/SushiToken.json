{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "initToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/GSN/Context.sol",
    "27": "contracts/Tokens/ERC20.sol",
    "3": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
    "32": "contracts/Tokens/SushiToken.sol",
    "53": "contracts/Utils/Owned.sol",
    "6": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/Address.sol",
    "60": "interfaces/IERC20.sol",
    "66": "interfaces/IMisoToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/Tokens/SushiToken.sol",
    "exportedSymbols": {
      "SushiToken": [
        7658
      ]
    },
    "id": 7659,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7000,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:32"
      },
      {
        "absolutePath": "contracts/Tokens/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 7001,
        "nodeType": "ImportDirective",
        "scope": 7659,
        "sourceUnit": 6720,
        "src": "26:21:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Utils/Owned.sol",
        "file": "../Utils/Owned.sol",
        "id": 7002,
        "nodeType": "ImportDirective",
        "scope": 7659,
        "sourceUnit": 15280,
        "src": "48:28:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMisoToken.sol",
        "file": "../../interfaces/IMisoToken.sol",
        "id": 7003,
        "nodeType": "ImportDirective",
        "scope": 7659,
        "sourceUnit": 18510,
        "src": "77:41:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7004,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15279,
              "src": "261:5:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$15279",
                "typeString": "contract Owned"
              }
            },
            "id": 7005,
            "nodeType": "InheritanceSpecifier",
            "src": "261:5:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7006,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6719,
              "src": "268:5:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$6719",
                "typeString": "contract ERC20"
              }
            },
            "id": 7007,
            "nodeType": "InheritanceSpecifier",
            "src": "268:5:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7008,
              "name": "IMisoToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18509,
              "src": "275:10:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMisoToken_$18509",
                "typeString": "contract IMisoToken"
              }
            },
            "id": 7009,
            "nodeType": "InheritanceSpecifier",
            "src": "275:10:32"
          }
        ],
        "contractDependencies": [
          6719,
          15279,
          17559,
          17600,
          18509
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7658,
        "linearizedBaseContracts": [
          7658,
          18509,
          6719,
          17600,
          17559,
          15279
        ],
        "name": "SushiToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              18508
            ],
            "body": {
              "id": 7028,
              "nodeType": "Block",
              "src": "389:70:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7020,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7015,
                        "src": "410:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7019,
                      "name": "_initOwned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15211,
                      "src": "399:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:17:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7022,
                  "nodeType": "ExpressionStatement",
                  "src": "399:17:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7024,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7011,
                        "src": "437:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7025,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7013,
                        "src": "444:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 7023,
                      "name": "_initERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6265,
                      "src": "426:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 7026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "426:26:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7027,
                  "nodeType": "ExpressionStatement",
                  "src": "426:26:32"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "893c8bba",
            "id": 7029,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7017,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "380:8:32"
            },
            "parameters": {
              "id": 7016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7011,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7029,
                  "src": "312:19:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7010,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7013,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7029,
                  "src": "333:21:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7012,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7015,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7029,
                  "src": "356:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "311:59:32"
            },
            "returnParameters": {
              "id": 7018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "389:0:32"
            },
            "scope": 7658,
            "src": "293:166:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7055,
              "nodeType": "Block",
              "src": "623:98:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7040,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7032,
                        "src": "639:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7041,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7034,
                        "src": "644:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7039,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6595,
                      "src": "633:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:19:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7043,
                  "nodeType": "ExpressionStatement",
                  "src": "633:19:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 7047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "685:1:32",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 7046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "677:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7045,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "677:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 7048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "677:10:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7049,
                          "name": "_delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7061,
                          "src": "689:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 7051,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7050,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7032,
                          "src": "700:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "689:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7052,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7034,
                        "src": "706:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7044,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7548,
                      "src": "662:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "662:52:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7054,
                  "nodeType": "ExpressionStatement",
                  "src": "662:52:32"
                }
              ]
            },
            "documentation": {
              "id": 7030,
              "nodeType": "StructuredDocumentation",
              "src": "465:92:32",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
            },
            "functionSelector": "40c10f19",
            "id": 7056,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7037,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7036,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15178,
                  "src": "613:9:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "613:9:32"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7032,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7056,
                  "src": "576:11:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7034,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7056,
                  "src": "589:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "575:30:32"
            },
            "returnParameters": {
              "id": 7038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "623:0:32"
            },
            "scope": 7658,
            "src": "562:159:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7057,
              "nodeType": "StructuredDocumentation",
              "src": "1125:46:32",
              "text": "@notice A record of each accounts delegate"
            },
            "id": 7061,
            "mutability": "mutable",
            "name": "_delegates",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 7658,
            "src": "1176:48:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 7060,
              "keyType": {
                "id": 7058,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1185:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1176:28:32",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 7059,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1196:7:32",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "SushiToken.Checkpoint",
            "id": 7066,
            "members": [
              {
                "constant": false,
                "id": 7063,
                "mutability": "mutable",
                "name": "fromBlock",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 7066,
                "src": "1335:16:32",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 7062,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1335:6:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7065,
                "mutability": "mutable",
                "name": "votes",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 7066,
                "src": "1361:13:32",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7064,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1361:7:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Checkpoint",
            "nodeType": "StructDefinition",
            "scope": 7658,
            "src": "1307:74:32",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7067,
              "nodeType": "StructuredDocumentation",
              "src": "1387:68:32",
              "text": "@notice A record of votes checkpoints for each account, by index"
            },
            "functionSelector": "f1127ed8",
            "id": 7073,
            "mutability": "mutable",
            "name": "checkpoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 7658,
            "src": "1460:70:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))"
            },
            "typeName": {
              "id": 7072,
              "keyType": {
                "id": 7068,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1469:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1460:51:32",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
                "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))"
              },
              "valueType": {
                "id": 7071,
                "keyType": {
                  "id": 7069,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1489:6:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1480:30:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$",
                  "typeString": "mapping(uint32 => struct SushiToken.Checkpoint)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 7070,
                  "name": "Checkpoint",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 7066,
                  "src": "1499:10:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$7066_storage_ptr",
                    "typeString": "struct SushiToken.Checkpoint"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7074,
              "nodeType": "StructuredDocumentation",
              "src": "1537:54:32",
              "text": "@notice The number of checkpoints for each account"
            },
            "functionSelector": "6fcfff45",
            "id": 7078,
            "mutability": "mutable",
            "name": "numCheckpoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 7658,
            "src": "1596:49:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
              "typeString": "mapping(address => uint32)"
            },
            "typeName": {
              "id": 7077,
              "keyType": {
                "id": 7075,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1605:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1596:27:32",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                "typeString": "mapping(address => uint32)"
              },
              "valueType": {
                "id": 7076,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1616:6:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 7079,
              "nodeType": "StructuredDocumentation",
              "src": "1652:58:32",
              "text": "@notice The EIP-712 typehash for the contract's domain"
            },
            "functionSelector": "20606b70",
            "id": 7084,
            "mutability": "constant",
            "name": "DOMAIN_TYPEHASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 7658,
            "src": "1715:122:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 7080,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1715:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                  "id": 7082,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1767:69:32",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                    "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                  },
                  "value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                    "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                  }
                ],
                "id": 7081,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1757:9:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 7083,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1757:80:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 7085,
              "nodeType": "StructuredDocumentation",
              "src": "1844:79:32",
              "text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
            },
            "functionSelector": "e7a324dc",
            "id": 7090,
            "mutability": "constant",
            "name": "DELEGATION_TYPEHASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 7658,
            "src": "1928:117:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 7086,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1928:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
                  "id": 7088,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1984:60:32",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  },
                  "value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  }
                ],
                "id": 7087,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1974:9:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 7089,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1974:71:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7091,
              "nodeType": "StructuredDocumentation",
              "src": "2052:66:32",
              "text": "@notice A record of states for signing / validating signatures"
            },
            "functionSelector": "7ecebe00",
            "id": 7095,
            "mutability": "mutable",
            "name": "nonces",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 7658,
            "src": "2123:39:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 7094,
              "keyType": {
                "id": 7092,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2132:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2123:25:32",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 7093,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2143:4:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7096,
              "nodeType": "StructuredDocumentation",
              "src": "2171:71:32",
              "text": "@notice An event thats emitted when an account changes its delegate"
            },
            "id": 7104,
            "name": "DelegateChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7098,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7104,
                  "src": "2269:25:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2269:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7100,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromDelegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7104,
                  "src": "2296:28:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2296:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7102,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "toDelegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7104,
                  "src": "2326:26:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2326:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2268:85:32"
            },
            "src": "2247:107:32"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7105,
              "nodeType": "StructuredDocumentation",
              "src": "2360:81:32",
              "text": "@notice An event thats emitted when a delegate account's vote balance changes"
            },
            "id": 7113,
            "name": "DelegateVotesChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7107,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7113,
                  "src": "2473:24:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2473:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7113,
                  "src": "2499:20:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2499:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7111,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7113,
                  "src": "2521:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7110,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2521:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2472:65:32"
            },
            "src": "2446:92:32"
          },
          {
            "body": {
              "id": 7125,
              "nodeType": "Block",
              "src": "2778:45:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7121,
                      "name": "_delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7061,
                      "src": "2795:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 7123,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7122,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7116,
                      "src": "2806:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2795:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7120,
                  "id": 7124,
                  "nodeType": "Return",
                  "src": "2788:28:32"
                }
              ]
            },
            "documentation": {
              "id": 7114,
              "nodeType": "StructuredDocumentation",
              "src": "2544:131:32",
              "text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegator The address to get delegatee for"
            },
            "functionSelector": "587cde1e",
            "id": 7126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegates",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7116,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7126,
                  "src": "2699:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2699:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2698:19:32"
            },
            "returnParameters": {
              "id": 7120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7119,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7126,
                  "src": "2765:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2765:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2764:9:32"
            },
            "scope": 7658,
            "src": "2680:143:32",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7138,
              "nodeType": "Block",
              "src": "3007:56:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7133,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3034:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3034:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7135,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7129,
                        "src": "3046:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7132,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7441,
                      "src": "3024:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3024:32:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 7131,
                  "id": 7137,
                  "nodeType": "Return",
                  "src": "3017:39:32"
                }
              ]
            },
            "documentation": {
              "id": 7127,
              "nodeType": "StructuredDocumentation",
              "src": "2828:128:32",
              "text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
            },
            "functionSelector": "5c19a95c",
            "id": 7139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7129,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7139,
                  "src": "2979:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2979:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2978:19:32"
            },
            "returnParameters": {
              "id": 7131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3007:0:32"
            },
            "scope": 7658,
            "src": "2961:102:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7241,
              "nodeType": "Block",
              "src": "3659:967:32",
              "statements": [
                {
                  "assignments": [
                    7156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7156,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7241,
                      "src": "3669:23:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7155,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3669:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7176,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7160,
                            "name": "DOMAIN_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7084,
                            "src": "3746:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 7164,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6275,
                                      "src": "3795:4:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () view returns (string memory)"
                                      }
                                    },
                                    "id": 7165,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3795:6:32",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 7163,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3789:5:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 7162,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3789:5:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 7166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3789:13:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 7161,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3779:9:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 7167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3779:24:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 7168,
                              "name": "getChainId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7657,
                              "src": "3821:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 7169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3821:12:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 7172,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3859:4:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiToken_$7658",
                                  "typeString": "contract SushiToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SushiToken_$7658",
                                  "typeString": "contract SushiToken"
                                }
                              ],
                              "id": 7171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3851:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7170,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3851:7:32",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 7173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3851:13:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7158,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3718:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3718:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3718:160:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7157,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3695:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3695:193:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3669:219:32"
                },
                {
                  "assignments": [
                    7178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7178,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7241,
                      "src": "3899:18:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7177,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3899:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7188,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7182,
                            "name": "DELEGATION_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7090,
                            "src": "3971:19:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7183,
                            "name": "delegatee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7142,
                            "src": "4008:9:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7184,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7144,
                            "src": "4035:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7185,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7146,
                            "src": "4058:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7180,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3943:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3943:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3943:135:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7179,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3920:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3920:168:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3899:189:32"
                },
                {
                  "assignments": [
                    7190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7190,
                      "mutability": "mutable",
                      "name": "digest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7241,
                      "src": "4099:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7189,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4099:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7199,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "1901",
                            "id": 7194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4173:10:32",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string \"\u0019\u0001\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "argumentTypes": null,
                            "id": 7195,
                            "name": "domainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7156,
                            "src": "4201:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7196,
                            "name": "structHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7178,
                            "src": "4234:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string \"\u0019\u0001\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7192,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4139:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4139:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4139:119:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7191,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4116:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4116:152:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4099:169:32"
                },
                {
                  "assignments": [
                    7201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7201,
                      "mutability": "mutable",
                      "name": "signatory",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7241,
                      "src": "4279:17:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7200,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4279:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7208,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7203,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7190,
                        "src": "4309:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7204,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7148,
                        "src": "4317:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7205,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7150,
                        "src": "4320:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7206,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7152,
                        "src": "4323:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7202,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "4299:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 7207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4299:26:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4279:46:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7210,
                          "name": "signatory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7201,
                          "src": "4343:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4364:1:32",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4356:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7211,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4356:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 7214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4356:10:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4343:23:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
                        "id": 7216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4368:41:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid signature\""
                        },
                        "value": "SUSHI::delegateBySig: invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid signature\""
                        }
                      ],
                      "id": 7209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4335:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4335:75:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7218,
                  "nodeType": "ExpressionStatement",
                  "src": "4335:75:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7220,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7144,
                          "src": "4428:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4437:19:32",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7221,
                              "name": "nonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7095,
                              "src": "4437:6:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 7223,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7222,
                              "name": "signatory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7201,
                              "src": "4444:9:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4437:17:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4428:28:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
                        "id": 7226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4458:37:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid nonce\""
                        },
                        "value": "SUSHI::delegateBySig: invalid nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid nonce\""
                        }
                      ],
                      "id": 7219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4420:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4420:76:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7228,
                  "nodeType": "ExpressionStatement",
                  "src": "4420:76:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7230,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "4514:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7231,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7146,
                          "src": "4521:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4514:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a64656c656761746542795369673a207369676e61747572652065787069726564",
                        "id": 7233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4529:41:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c",
                          "typeString": "literal_string \"SUSHI::delegateBySig: signature expired\""
                        },
                        "value": "SUSHI::delegateBySig: signature expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c",
                          "typeString": "literal_string \"SUSHI::delegateBySig: signature expired\""
                        }
                      ],
                      "id": 7229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4506:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4506:65:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7235,
                  "nodeType": "ExpressionStatement",
                  "src": "4506:65:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7237,
                        "name": "signatory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7201,
                        "src": "4598:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7238,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7142,
                        "src": "4609:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7236,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7441,
                      "src": "4588:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4588:31:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 7154,
                  "id": 7240,
                  "nodeType": "Return",
                  "src": "4581:38:32"
                }
              ]
            },
            "documentation": {
              "id": 7140,
              "nodeType": "StructuredDocumentation",
              "src": "3069:412:32",
              "text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
            },
            "functionSelector": "c3cda520",
            "id": 7242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateBySig",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7142,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7242,
                  "src": "3518:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3518:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7144,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7242,
                  "src": "3545:10:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7143,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3545:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7146,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7242,
                  "src": "3565:11:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7145,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3565:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7148,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7242,
                  "src": "3586:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7147,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3586:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7150,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7242,
                  "src": "3603:9:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7149,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7152,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7242,
                  "src": "3622:9:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7151,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3508:129:32"
            },
            "returnParameters": {
              "id": 7154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3659:0:32"
            },
            "scope": 7658,
            "src": "3486:1140:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7270,
              "nodeType": "Block",
              "src": "4922:146:32",
              "statements": [
                {
                  "assignments": [
                    7251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7251,
                      "mutability": "mutable",
                      "name": "nCheckpoints",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7270,
                      "src": "4932:19:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 7250,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4932:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7255,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7252,
                      "name": "numCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7078,
                      "src": "4954:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 7254,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7253,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7245,
                      "src": "4969:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4954:23:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4932:45:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 7258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 7256,
                        "name": "nCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7251,
                        "src": "4994:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 7257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5009:1:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4994:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5060:1:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 7268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4994:67:32",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7259,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7073,
                            "src": "5013:11:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 7261,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7260,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7245,
                            "src": "5025:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5013:20:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$",
                            "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 7265,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 7264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 7262,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7251,
                            "src": "5034:12:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 7263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5049:1:32",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5034:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5013:38:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$7066_storage",
                          "typeString": "struct SushiToken.Checkpoint storage ref"
                        }
                      },
                      "id": 7266,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "votes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7065,
                      "src": "5013:44:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7249,
                  "id": 7269,
                  "nodeType": "Return",
                  "src": "4987:74:32"
                }
              ]
            },
            "documentation": {
              "id": 7243,
              "nodeType": "StructuredDocumentation",
              "src": "4632:183:32",
              "text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
            },
            "functionSelector": "b4b5ea57",
            "id": 7271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentVotes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7245,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7271,
                  "src": "4845:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4845:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4844:17:32"
            },
            "returnParameters": {
              "id": 7249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7248,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7271,
                  "src": "4909:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4909:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4908:9:32"
            },
            "scope": 7658,
            "src": "4820:248:32",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7402,
              "nodeType": "Block",
              "src": "5608:1100:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7282,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "5626:11:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7283,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5640:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 7284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5640:12:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5626:26:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
                        "id": 7286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5654:42:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33",
                          "typeString": "literal_string \"SUSHI::getPriorVotes: not yet determined\""
                        },
                        "value": "SUSHI::getPriorVotes: not yet determined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33",
                          "typeString": "literal_string \"SUSHI::getPriorVotes: not yet determined\""
                        }
                      ],
                      "id": 7281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5618:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5618:79:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7288,
                  "nodeType": "ExpressionStatement",
                  "src": "5618:79:32"
                },
                {
                  "assignments": [
                    7290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7290,
                      "mutability": "mutable",
                      "name": "nCheckpoints",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7402,
                      "src": "5708:19:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 7289,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5708:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7294,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7291,
                      "name": "numCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7078,
                      "src": "5730:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 7293,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7292,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7274,
                      "src": "5745:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5730:23:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5708:45:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 7297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7295,
                      "name": "nCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7290,
                      "src": "5767:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5783:1:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5767:17:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7301,
                  "nodeType": "IfStatement",
                  "src": "5763:56:32",
                  "trueBody": {
                    "id": 7300,
                    "nodeType": "Block",
                    "src": "5786:33:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 7298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5807:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 7280,
                        "id": 7299,
                        "nodeType": "Return",
                        "src": "5800:8:32"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7302,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7073,
                            "src": "5876:11:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 7304,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7303,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7274,
                            "src": "5888:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5876:20:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$",
                            "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 7308,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 7307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 7305,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7290,
                            "src": "5897:12:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 7306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5912:1:32",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5897:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5876:38:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$7066_storage",
                          "typeString": "struct SushiToken.Checkpoint storage ref"
                        }
                      },
                      "id": 7309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7063,
                      "src": "5876:48:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 7310,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7276,
                      "src": "5928:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5876:63:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7322,
                  "nodeType": "IfStatement",
                  "src": "5872:145:32",
                  "trueBody": {
                    "id": 7321,
                    "nodeType": "Block",
                    "src": "5941:76:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 7312,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7073,
                                "src": "5962:11:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                }
                              },
                              "id": 7314,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 7313,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7274,
                                "src": "5974:7:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5962:20:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$",
                                "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                              }
                            },
                            "id": 7318,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 7317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 7315,
                                "name": "nCheckpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7290,
                                "src": "5983:12:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 7316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5998:1:32",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5983:16:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5962:38:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$7066_storage",
                              "typeString": "struct SushiToken.Checkpoint storage ref"
                            }
                          },
                          "id": 7319,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7065,
                          "src": "5962:44:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 7280,
                        "id": 7320,
                        "nodeType": "Return",
                        "src": "5955:51:32"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7323,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7073,
                            "src": "6075:11:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 7325,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7324,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7274,
                            "src": "6087:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6075:20:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$",
                            "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 7327,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 7326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6096:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6075:23:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$7066_storage",
                          "typeString": "struct SushiToken.Checkpoint storage ref"
                        }
                      },
                      "id": 7328,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7063,
                      "src": "6075:33:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 7329,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7276,
                      "src": "6111:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6075:47:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7334,
                  "nodeType": "IfStatement",
                  "src": "6071:86:32",
                  "trueBody": {
                    "id": 7333,
                    "nodeType": "Block",
                    "src": "6124:33:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 7331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6145:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 7280,
                        "id": 7332,
                        "nodeType": "Return",
                        "src": "6138:8:32"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    7336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7336,
                      "mutability": "mutable",
                      "name": "lower",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7402,
                      "src": "6167:12:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 7335,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6167:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7338,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 7337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6182:1:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6167:16:32"
                },
                {
                  "assignments": [
                    7340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7340,
                      "mutability": "mutable",
                      "name": "upper",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7402,
                      "src": "6193:12:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 7339,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6193:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7344,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 7343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7341,
                      "name": "nCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7290,
                      "src": "6208:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 7342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6223:1:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6208:16:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6193:31:32"
                },
                {
                  "body": {
                    "id": 7393,
                    "nodeType": "Block",
                    "src": "6256:396:32",
                    "statements": [
                      {
                        "assignments": [
                          7349
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7349,
                            "mutability": "mutable",
                            "name": "center",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 7393,
                            "src": "6270:13:32",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 7348,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6270:6:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 7358,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 7357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 7350,
                            "name": "upper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7340,
                            "src": "6286:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 7356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 7353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 7351,
                                    "name": "upper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7340,
                                    "src": "6295:5:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 7352,
                                    "name": "lower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7336,
                                    "src": "6303:5:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "6295:13:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "id": 7354,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6294:15:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 7355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6312:1:32",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "6294:19:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "6286:27:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6270:43:32"
                      },
                      {
                        "assignments": [
                          7360
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7360,
                            "mutability": "mutable",
                            "name": "cp",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 7393,
                            "src": "6354:20:32",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$7066_memory_ptr",
                              "typeString": "struct SushiToken.Checkpoint"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 7359,
                              "name": "Checkpoint",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 7066,
                              "src": "6354:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$7066_storage_ptr",
                                "typeString": "struct SushiToken.Checkpoint"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 7366,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7361,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7073,
                              "src": "6377:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
                                "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                              }
                            },
                            "id": 7363,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7362,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7274,
                              "src": "6389:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6377:20:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$",
                              "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                            }
                          },
                          "id": 7365,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7364,
                            "name": "center",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7349,
                            "src": "6398:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6377:28:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$7066_storage",
                            "typeString": "struct SushiToken.Checkpoint storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6354:51:32"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 7370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7367,
                              "name": "cp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7360,
                              "src": "6423:2:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$7066_memory_ptr",
                                "typeString": "struct SushiToken.Checkpoint memory"
                              }
                            },
                            "id": 7368,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7063,
                            "src": "6423:12:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 7369,
                            "name": "blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7276,
                            "src": "6439:11:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6423:27:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 7378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7375,
                                "name": "cp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7360,
                                "src": "6510:2:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Checkpoint_$7066_memory_ptr",
                                  "typeString": "struct SushiToken.Checkpoint memory"
                                }
                              },
                              "id": 7376,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fromBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7063,
                              "src": "6510:12:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 7377,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7276,
                              "src": "6525:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6510:26:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 7390,
                            "nodeType": "Block",
                            "src": "6591:51:32",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "argumentTypes": null,
                                    "id": 7384,
                                    "name": "upper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7340,
                                    "src": "6609:5:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 7387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 7385,
                                      "name": "center",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7349,
                                      "src": "6617:6:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 7386,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6626:1:32",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "6617:10:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "6609:18:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 7389,
                                "nodeType": "ExpressionStatement",
                                "src": "6609:18:32"
                              }
                            ]
                          },
                          "id": 7391,
                          "nodeType": "IfStatement",
                          "src": "6506:136:32",
                          "trueBody": {
                            "id": 7383,
                            "nodeType": "Block",
                            "src": "6538:47:32",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "argumentTypes": null,
                                    "id": 7379,
                                    "name": "lower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7336,
                                    "src": "6556:5:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "argumentTypes": null,
                                    "id": 7380,
                                    "name": "center",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7349,
                                    "src": "6564:6:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "6556:14:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 7382,
                                "nodeType": "ExpressionStatement",
                                "src": "6556:14:32"
                              }
                            ]
                          }
                        },
                        "id": 7392,
                        "nodeType": "IfStatement",
                        "src": "6419:223:32",
                        "trueBody": {
                          "id": 7374,
                          "nodeType": "Block",
                          "src": "6452:48:32",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7371,
                                  "name": "cp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7360,
                                  "src": "6477:2:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checkpoint_$7066_memory_ptr",
                                    "typeString": "struct SushiToken.Checkpoint memory"
                                  }
                                },
                                "id": 7372,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7065,
                                "src": "6477:8:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 7280,
                              "id": 7373,
                              "nodeType": "Return",
                              "src": "6470:15:32"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 7347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7345,
                      "name": "upper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7340,
                      "src": "6241:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 7346,
                      "name": "lower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7336,
                      "src": "6249:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6241:13:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7394,
                  "nodeType": "WhileStatement",
                  "src": "6234:418:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7395,
                          "name": "checkpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7073,
                          "src": "6668:11:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
                            "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                          }
                        },
                        "id": 7397,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7396,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7274,
                          "src": "6680:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6668:20:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$",
                          "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                        }
                      },
                      "id": 7399,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7398,
                        "name": "lower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7336,
                        "src": "6689:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6668:27:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$7066_storage",
                        "typeString": "struct SushiToken.Checkpoint storage ref"
                      }
                    },
                    "id": 7400,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "votes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7065,
                    "src": "6668:33:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7280,
                  "id": 7401,
                  "nodeType": "Return",
                  "src": "6661:40:32"
                }
              ]
            },
            "documentation": {
              "id": 7272,
              "nodeType": "StructuredDocumentation",
              "src": "5074:411:32",
              "text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
            },
            "functionSelector": "782d6fe1",
            "id": 7403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVotes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7274,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7403,
                  "src": "5513:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5513:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7276,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7403,
                  "src": "5530:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5530:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5512:35:32"
            },
            "returnParameters": {
              "id": 7280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7279,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7403,
                  "src": "5595:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5595:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5594:9:32"
            },
            "scope": 7658,
            "src": "5490:1218:32",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7440,
              "nodeType": "Block",
              "src": "6792:351:32",
              "statements": [
                {
                  "assignments": [
                    7411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7411,
                      "mutability": "mutable",
                      "name": "currentDelegate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7440,
                      "src": "6802:23:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7410,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6802:7:32",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7415,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7412,
                      "name": "_delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7061,
                      "src": "6828:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 7414,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7413,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7405,
                      "src": "6839:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6828:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6802:47:32"
                },
                {
                  "assignments": [
                    7417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7417,
                      "mutability": "mutable",
                      "name": "delegatorBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7440,
                      "src": "6859:24:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6859:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7421,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7419,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7405,
                        "src": "6896:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7418,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6319,
                      "src": "6886:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 7420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6886:20:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6859:47:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7422,
                        "name": "_delegates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7061,
                        "src": "6962:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 7424,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7423,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7405,
                        "src": "6973:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6962:21:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7425,
                      "name": "delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7407,
                      "src": "6986:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6962:33:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7427,
                  "nodeType": "ExpressionStatement",
                  "src": "6962:33:32"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7429,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7405,
                        "src": "7027:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7430,
                        "name": "currentDelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7411,
                        "src": "7038:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7431,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7407,
                        "src": "7055:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7428,
                      "name": "DelegateChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7104,
                      "src": "7011:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 7432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7011:54:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7433,
                  "nodeType": "EmitStatement",
                  "src": "7006:59:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7435,
                        "name": "currentDelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7411,
                        "src": "7091:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7436,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7407,
                        "src": "7108:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7437,
                        "name": "delegatorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7417,
                        "src": "7119:16:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7434,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7548,
                      "src": "7076:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7076:60:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7439,
                  "nodeType": "ExpressionStatement",
                  "src": "7076:60:32"
                }
              ]
            },
            "documentation": null,
            "id": 7441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7405,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7441,
                  "src": "6733:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6733:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7407,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7441,
                  "src": "6752:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6752:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6732:38:32"
            },
            "returnParameters": {
              "id": 7409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6792:0:32"
            },
            "scope": 7658,
            "src": "6714:429:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7547,
              "nodeType": "Block",
              "src": "7230:848:32",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 7456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 7452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 7450,
                        "name": "srcRep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7443,
                        "src": "7244:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 7451,
                        "name": "dstRep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7445,
                        "src": "7254:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7244:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 7453,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7447,
                        "src": "7264:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 7454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7273:1:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7264:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7244:30:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7546,
                  "nodeType": "IfStatement",
                  "src": "7240:832:32",
                  "trueBody": {
                    "id": 7545,
                    "nodeType": "Block",
                    "src": "7276:796:32",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 7462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 7457,
                            "name": "srcRep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7443,
                            "src": "7294:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 7460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7312:1:32",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 7459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7304:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7458,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7304:7:32",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 7461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7304:10:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7294:20:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 7500,
                        "nodeType": "IfStatement",
                        "src": "7290:379:32",
                        "trueBody": {
                          "id": 7499,
                          "nodeType": "Block",
                          "src": "7316:353:32",
                          "statements": [
                            {
                              "assignments": [
                                7464
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 7464,
                                  "mutability": "mutable",
                                  "name": "srcRepNum",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 7499,
                                  "src": "7381:16:32",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 7463,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7381:6:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 7468,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 7465,
                                  "name": "numCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7078,
                                  "src": "7400:14:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                    "typeString": "mapping(address => uint32)"
                                  }
                                },
                                "id": 7467,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 7466,
                                  "name": "srcRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7443,
                                  "src": "7415:6:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7400:22:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7381:41:32"
                            },
                            {
                              "assignments": [
                                7470
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 7470,
                                  "mutability": "mutable",
                                  "name": "srcRepOld",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 7499,
                                  "src": "7440:17:32",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 7469,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7440:7:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 7484,
                              "initialValue": {
                                "argumentTypes": null,
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 7473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 7471,
                                    "name": "srcRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7464,
                                    "src": "7460:9:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 7472,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7472:1:32",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "7460:13:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 7482,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7519:1:32",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 7483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "7460:60:32",
                                "trueExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 7474,
                                        "name": "checkpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7073,
                                        "src": "7476:11:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 7476,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 7475,
                                        "name": "srcRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7443,
                                        "src": "7488:6:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7476:19:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$",
                                        "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 7480,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 7479,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 7477,
                                        "name": "srcRepNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7464,
                                        "src": "7496:9:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 7478,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7508:1:32",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "7496:13:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7476:34:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$7066_storage",
                                      "typeString": "struct SushiToken.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 7481,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7065,
                                  "src": "7476:40:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7440:80:32"
                            },
                            {
                              "assignments": [
                                7486
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 7486,
                                  "mutability": "mutable",
                                  "name": "srcRepNew",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 7499,
                                  "src": "7538:17:32",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 7485,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7538:7:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 7491,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7489,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7447,
                                    "src": "7572:6:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7487,
                                    "name": "srcRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7470,
                                    "src": "7558:9:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 7488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17298,
                                  "src": "7558:13:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 7490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7558:21:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7538:41:32"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7493,
                                    "name": "srcRep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7443,
                                    "src": "7614:6:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7494,
                                    "name": "srcRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7464,
                                    "src": "7622:9:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7495,
                                    "name": "srcRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7470,
                                    "src": "7633:9:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7496,
                                    "name": "srcRepNew",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7486,
                                    "src": "7644:9:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 7492,
                                  "name": "_writeCheckpoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7621,
                                  "src": "7597:16:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint32,uint256,uint256)"
                                  }
                                },
                                "id": 7497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7597:57:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 7498,
                              "nodeType": "ExpressionStatement",
                              "src": "7597:57:32"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 7506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 7501,
                            "name": "dstRep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7445,
                            "src": "7687:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 7504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7705:1:32",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 7503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7697:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7502,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7697:7:32",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 7505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7697:10:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7687:20:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 7544,
                        "nodeType": "IfStatement",
                        "src": "7683:379:32",
                        "trueBody": {
                          "id": 7543,
                          "nodeType": "Block",
                          "src": "7709:353:32",
                          "statements": [
                            {
                              "assignments": [
                                7508
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 7508,
                                  "mutability": "mutable",
                                  "name": "dstRepNum",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 7543,
                                  "src": "7774:16:32",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 7507,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7774:6:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 7512,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 7509,
                                  "name": "numCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7078,
                                  "src": "7793:14:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                    "typeString": "mapping(address => uint32)"
                                  }
                                },
                                "id": 7511,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 7510,
                                  "name": "dstRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7445,
                                  "src": "7808:6:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7793:22:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7774:41:32"
                            },
                            {
                              "assignments": [
                                7514
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 7514,
                                  "mutability": "mutable",
                                  "name": "dstRepOld",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 7543,
                                  "src": "7833:17:32",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 7513,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7833:7:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 7528,
                              "initialValue": {
                                "argumentTypes": null,
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 7517,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 7515,
                                    "name": "dstRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7508,
                                    "src": "7853:9:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 7516,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7865:1:32",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "7853:13:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 7526,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7912:1:32",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 7527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "7853:60:32",
                                "trueExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 7518,
                                        "name": "checkpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7073,
                                        "src": "7869:11:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 7520,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 7519,
                                        "name": "dstRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7445,
                                        "src": "7881:6:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7869:19:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$",
                                        "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 7524,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 7523,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 7521,
                                        "name": "dstRepNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7508,
                                        "src": "7889:9:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 7522,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7901:1:32",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "7889:13:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7869:34:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$7066_storage",
                                      "typeString": "struct SushiToken.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 7525,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7065,
                                  "src": "7869:40:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7833:80:32"
                            },
                            {
                              "assignments": [
                                7530
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 7530,
                                  "mutability": "mutable",
                                  "name": "dstRepNew",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 7543,
                                  "src": "7931:17:32",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 7529,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7931:7:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 7535,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7533,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7447,
                                    "src": "7965:6:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7531,
                                    "name": "dstRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7514,
                                    "src": "7951:9:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 7532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17281,
                                  "src": "7951:13:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 7534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7951:21:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7931:41:32"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7537,
                                    "name": "dstRep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7445,
                                    "src": "8007:6:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7538,
                                    "name": "dstRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7508,
                                    "src": "8015:9:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7539,
                                    "name": "dstRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7514,
                                    "src": "8026:9:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7540,
                                    "name": "dstRepNew",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7530,
                                    "src": "8037:9:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 7536,
                                  "name": "_writeCheckpoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7621,
                                  "src": "7990:16:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint32,uint256,uint256)"
                                  }
                                },
                                "id": 7541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7990:57:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 7542,
                              "nodeType": "ExpressionStatement",
                              "src": "7990:57:32"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 7548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_moveDelegates",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7443,
                  "mutability": "mutable",
                  "name": "srcRep",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7548,
                  "src": "7173:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7173:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7445,
                  "mutability": "mutable",
                  "name": "dstRep",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7548,
                  "src": "7189:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7189:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7447,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7548,
                  "src": "7205:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7205:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7172:48:32"
            },
            "returnParameters": {
              "id": 7449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7230:0:32"
            },
            "scope": 7658,
            "src": "7149:929:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7620,
              "nodeType": "Block",
              "src": "8245:526:32",
              "statements": [
                {
                  "assignments": [
                    7560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7560,
                      "mutability": "mutable",
                      "name": "blockNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7620,
                      "src": "8255:18:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 7559,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8255:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7566,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7562,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8283:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8283:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
                        "id": 7564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8297:55:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74",
                          "typeString": "literal_string \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\""
                        },
                        "value": "SUSHI::_writeCheckpoint: block number exceeds 32 bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74",
                          "typeString": "literal_string \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\""
                        }
                      ],
                      "id": 7561,
                      "name": "safe32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7645,
                      "src": "8276:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
                        "typeString": "function (uint256,string memory) pure returns (uint32)"
                      }
                    },
                    "id": 7565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8276:77:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8255:98:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 7580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 7569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 7567,
                        "name": "nCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7552,
                        "src": "8368:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 7568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8383:1:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8368:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 7579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7570,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7073,
                              "src": "8388:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
                                "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                              }
                            },
                            "id": 7572,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7571,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7550,
                              "src": "8400:9:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8388:22:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$",
                              "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                            }
                          },
                          "id": 7576,
                          "indexExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 7575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 7573,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7552,
                              "src": "8411:12:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 7574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8426:1:32",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8411:16:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8388:40:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$7066_storage",
                            "typeString": "struct SushiToken.Checkpoint storage ref"
                          }
                        },
                        "id": 7577,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7063,
                        "src": "8388:50:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 7578,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7560,
                        "src": "8442:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "8388:65:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8368:85:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 7612,
                    "nodeType": "Block",
                    "src": "8543:155:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 7593,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7073,
                                "src": "8557:11:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                }
                              },
                              "id": 7596,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 7594,
                                "name": "delegatee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7550,
                                "src": "8569:9:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8557:22:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$",
                                "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                              }
                            },
                            "id": 7597,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7595,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7552,
                              "src": "8580:12:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8557:36:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$7066_storage",
                              "typeString": "struct SushiToken.Checkpoint storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 7599,
                                "name": "blockNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7560,
                                "src": "8607:11:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 7600,
                                "name": "newVotes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7556,
                                "src": "8620:8:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 7598,
                              "name": "Checkpoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7066,
                              "src": "8596:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Checkpoint_$7066_storage_ptr_$",
                                "typeString": "type(struct SushiToken.Checkpoint storage pointer)"
                              }
                            },
                            "id": 7601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8596:33:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$7066_memory_ptr",
                              "typeString": "struct SushiToken.Checkpoint memory"
                            }
                          },
                          "src": "8557:72:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$7066_storage",
                            "typeString": "struct SushiToken.Checkpoint storage ref"
                          }
                        },
                        "id": 7603,
                        "nodeType": "ExpressionStatement",
                        "src": "8557:72:32"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7604,
                              "name": "numCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7078,
                              "src": "8643:14:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                "typeString": "mapping(address => uint32)"
                              }
                            },
                            "id": 7606,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7605,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7550,
                              "src": "8658:9:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8643:25:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 7609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 7607,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7552,
                              "src": "8671:12:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 7608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8686:1:32",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8671:16:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "8643:44:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 7611,
                        "nodeType": "ExpressionStatement",
                        "src": "8643:44:32"
                      }
                    ]
                  },
                  "id": 7613,
                  "nodeType": "IfStatement",
                  "src": "8364:334:32",
                  "trueBody": {
                    "id": 7592,
                    "nodeType": "Block",
                    "src": "8455:82:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 7581,
                                  "name": "checkpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7073,
                                  "src": "8469:11:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                  }
                                },
                                "id": 7586,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 7582,
                                  "name": "delegatee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7550,
                                  "src": "8481:9:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8469:22:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$7066_storage_$",
                                  "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                                }
                              },
                              "id": 7587,
                              "indexExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 7585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 7583,
                                  "name": "nCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7552,
                                  "src": "8492:12:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 7584,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8507:1:32",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "8492:16:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8469:40:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$7066_storage",
                                "typeString": "struct SushiToken.Checkpoint storage ref"
                              }
                            },
                            "id": 7588,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7065,
                            "src": "8469:46:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 7589,
                            "name": "newVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7556,
                            "src": "8518:8:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8469:57:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7591,
                        "nodeType": "ExpressionStatement",
                        "src": "8469:57:32"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7615,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7550,
                        "src": "8734:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7616,
                        "name": "oldVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7554,
                        "src": "8745:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7617,
                        "name": "newVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7556,
                        "src": "8755:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7614,
                      "name": "DelegateVotesChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7113,
                      "src": "8713:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 7618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8713:51:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7619,
                  "nodeType": "EmitStatement",
                  "src": "8708:56:32"
                }
              ]
            },
            "documentation": null,
            "id": 7621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_writeCheckpoint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7550,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7621,
                  "src": "8119:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8119:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7552,
                  "mutability": "mutable",
                  "name": "nCheckpoints",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7621,
                  "src": "8146:19:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7551,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8146:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7554,
                  "mutability": "mutable",
                  "name": "oldVotes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7621,
                  "src": "8175:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8175:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7556,
                  "mutability": "mutable",
                  "name": "newVotes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7621,
                  "src": "8201:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8201:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8109:114:32"
            },
            "returnParameters": {
              "id": 7558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8245:0:32"
            },
            "scope": 7658,
            "src": "8084:687:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7644,
              "nodeType": "Block",
              "src": "8860:75:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7631,
                          "name": "n",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7623,
                          "src": "8878:1:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          },
                          "id": 7634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 7632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8882:1:32",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3332",
                            "id": 7633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8885:2:32",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "8882:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          }
                        },
                        "src": "8878:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7636,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7625,
                        "src": "8889:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 7630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8870:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8870:32:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7638,
                  "nodeType": "ExpressionStatement",
                  "src": "8870:32:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7641,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7623,
                        "src": "8926:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8919:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 7639,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8919:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 7642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8919:9:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 7629,
                  "id": 7643,
                  "nodeType": "Return",
                  "src": "8912:16:32"
                }
              ]
            },
            "documentation": null,
            "id": 7645,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safe32",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7623,
                  "mutability": "mutable",
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7645,
                  "src": "8793:6:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7622,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8793:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7625,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7645,
                  "src": "8801:26:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7624,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8801:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8792:36:32"
            },
            "returnParameters": {
              "id": 7629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7628,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7645,
                  "src": "8852:6:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7627,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8852:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8851:8:32"
            },
            "scope": 7658,
            "src": "8777:158:32",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7656,
              "nodeType": "Block",
              "src": "8992:98:32",
              "statements": [
                {
                  "assignments": [
                    7651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7651,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 7656,
                      "src": "9002:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7650,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9002:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7652,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9002:15:32"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "9036:24:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9038:20:32",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "9049:7:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9049:9:32"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "9038:7:32"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 7651,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9038:7:32",
                      "valueSize": 1
                    }
                  ],
                  "id": 7653,
                  "nodeType": "InlineAssembly",
                  "src": "9027:33:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7654,
                    "name": "chainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7651,
                    "src": "9076:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7649,
                  "id": 7655,
                  "nodeType": "Return",
                  "src": "9069:14:32"
                }
              ]
            },
            "documentation": null,
            "id": 7657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8960:2:32"
            },
            "returnParameters": {
              "id": 7649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7648,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7657,
                  "src": "8986:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7647,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8986:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8985:6:32"
            },
            "scope": 7658,
            "src": "8941:149:32",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 7659,
        "src": "238:8854:32"
      }
    ],
    "src": "0:9092:32"
  },
  "bytecode": "",
  "bytecodeSha1": "b32eb98047cf70a9f940b72a0fa2a98fe0f1e492",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "SushiToken",
  "coverageMap": {
    "branches": {
      "0": {},
      "27": {
        "ERC20._approve": {
          "99": [
            9713,
            9732,
            true
          ],
          "100": [
            9791,
            9812,
            true
          ]
        },
        "ERC20._initERC20": {
          "104": [
            2214,
            2227,
            true
          ]
        },
        "ERC20._mint": {
          "103": [
            8173,
            8194,
            true
          ]
        },
        "ERC20._transfer": {
          "101": [
            7395,
            7415,
            true
          ],
          "102": [
            7475,
            7498,
            true
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "110": [
            986,
            992,
            true
          ]
        },
        "SafeMath.sub": {
          "109": [
            1859,
            1865,
            true
          ]
        }
      },
      "32": {
        "SushiToken._moveDelegates": {
          "90": [
            7244,
            7260,
            false
          ],
          "91": [
            7264,
            7274,
            false
          ],
          "92": [
            7294,
            7314,
            false
          ],
          "93": [
            7460,
            7473,
            true
          ],
          "94": [
            7687,
            7707,
            false
          ],
          "95": [
            7853,
            7866,
            true
          ]
        },
        "SushiToken._writeCheckpoint": {
          "96": [
            8368,
            8384,
            false
          ],
          "97": [
            8388,
            8453,
            false
          ]
        },
        "SushiToken.delegateBySig": {
          "87": [
            4343,
            4366,
            true
          ],
          "88": [
            4428,
            4456,
            true
          ],
          "89": [
            4514,
            4527,
            true
          ]
        },
        "SushiToken.getCurrentVotes": {
          "86": [
            4994,
            5010,
            true
          ]
        },
        "SushiToken.getPriorVotes": {
          "80": [
            5626,
            5652,
            true
          ],
          "81": [
            5767,
            5784,
            false
          ],
          "82": [
            5876,
            5939,
            false
          ],
          "83": [
            6075,
            6122,
            false
          ],
          "84": [
            6423,
            6450,
            false
          ],
          "85": [
            6510,
            6536,
            false
          ]
        },
        "SushiToken.safe32": {
          "98": [
            8878,
            8887,
            true
          ]
        }
      },
      "53": {
        "Owned._initOwned": {
          "108": [
            412,
            424,
            true
          ]
        },
        "Owned.acceptOwnership": {
          "106": [
            918,
            940,
            true
          ]
        },
        "Owned.transferOwnership": {
          "107": [
            813,
            822,
            true
          ]
        },
        "SushiToken.mint": {
          "105": [
            315,
            324,
            true
          ]
        }
      },
      "6": {},
      "60": {},
      "66": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "41": [
            670,
            687
          ]
        }
      },
      "27": {
        "ERC20._approve": {
          "42": [
            9705,
            9773
          ],
          "43": [
            9783,
            9851
          ],
          "44": [
            9862,
            9898
          ],
          "45": [
            9908,
            9945
          ]
        },
        "ERC20._initERC20": {
          "68": [
            2206,
            2274
          ],
          "69": [
            2284,
            2296
          ],
          "70": [
            2306,
            2322
          ],
          "71": [
            2332,
            2346
          ],
          "72": [
            2356,
            2375
          ]
        },
        "ERC20._mint": {
          "54": [
            8165,
            8230
          ],
          "55": [
            8241,
            8290
          ],
          "56": [
            8301,
            8340
          ],
          "57": [
            8350,
            8401
          ],
          "58": [
            8411,
            8453
          ]
        },
        "ERC20._transfer": {
          "46": [
            7387,
            7457
          ],
          "47": [
            7467,
            7538
          ],
          "48": [
            7549,
            7596
          ],
          "49": [
            7607,
            7698
          ],
          "50": [
            7708,
            7763
          ],
          "51": [
            7773,
            7813
          ]
        },
        "ERC20.allowance": {
          "38": [
            4331,
            4365
          ]
        },
        "ERC20.approve": {
          "1": [
            4609,
            4648
          ],
          "2": [
            4658,
            4669
          ]
        },
        "ERC20.balanceOf": {
          "13": [
            3758,
            3783
          ]
        },
        "ERC20.decimals": {
          "7": [
            3434,
            3450
          ]
        },
        "ERC20.decreaseAllowance": {
          "31": [
            6659,
            6788
          ]
        },
        "ERC20.increaseAllowance": {
          "8": [
            5952,
            6035
          ]
        },
        "ERC20.name": {
          "0": [
            2518,
            2530
          ]
        },
        "ERC20.symbol": {
          "30": [
            2723,
            2737
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3589,
            3608
          ]
        },
        "ERC20.transfer": {
          "32": [
            4095,
            4137
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            5258,
            5294
          ],
          "5": [
            5304,
            5425
          ],
          "6": [
            5435,
            5446
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "53": [
            978,
            1024
          ]
        },
        "SafeMath.sub": {
          "52": [
            1851,
            1880
          ],
          "73": [
            1398,
            1448
          ]
        }
      },
      "32": {
        "SushiToken._delegate": {
          "61": [
            6962,
            6995
          ],
          "62": [
            7006,
            7065
          ],
          "63": [
            7076,
            7136
          ]
        },
        "SushiToken._moveDelegates": {
          "59": [
            7597,
            7654
          ],
          "60": [
            7990,
            8047
          ]
        },
        "SushiToken._writeCheckpoint": {
          "74": [
            8469,
            8526
          ],
          "75": [
            8557,
            8629
          ],
          "76": [
            8643,
            8687
          ],
          "77": [
            8708,
            8764
          ]
        },
        "SushiToken.delegate": {
          "12": [
            3017,
            3056
          ]
        },
        "SushiToken.delegateBySig": {
          "34": [
            4335,
            4410
          ],
          "35": [
            4420,
            4496
          ],
          "36": [
            4506,
            4571
          ],
          "37": [
            4581,
            4619
          ]
        },
        "SushiToken.delegates": {
          "11": [
            2788,
            2816
          ]
        },
        "SushiToken.getCurrentVotes": {
          "33": [
            4987,
            5061
          ]
        },
        "SushiToken.getPriorVotes": {
          "14": [
            5618,
            5697
          ],
          "15": [
            5800,
            5808
          ],
          "16": [
            5955,
            6006
          ],
          "17": [
            6138,
            6146
          ],
          "18": [
            6470,
            6485
          ],
          "19": [
            6556,
            6570
          ],
          "20": [
            6609,
            6627
          ],
          "21": [
            6661,
            6701
          ]
        },
        "SushiToken.initToken": {
          "26": [
            399,
            416
          ],
          "27": [
            426,
            452
          ]
        },
        "SushiToken.mint": {
          "9": [
            633,
            652
          ],
          "10": [
            662,
            714
          ]
        },
        "SushiToken.safe32": {
          "78": [
            8870,
            8902
          ],
          "79": [
            8912,
            8928
          ]
        }
      },
      "53": {
        "Owned._initOwned": {
          "64": [
            404,
            425
          ],
          "65": [
            435,
            468
          ],
          "66": [
            478,
            496
          ],
          "67": [
            506,
            551
          ]
        },
        "Owned.acceptOwnership": {
          "22": [
            910,
            941
          ],
          "23": [
            951,
            994
          ],
          "24": [
            1004,
            1039
          ],
          "25": [
            1049,
            1070
          ]
        },
        "Owned.isOwner": {
          "29": [
            702,
            729
          ]
        },
        "Owned.owner": {
          "28": [
            621,
            634
          ]
        },
        "Owned.transferOwnership": {
          "39": [
            805,
            823
          ],
          "40": [
            833,
            853
          ]
        }
      },
      "6": {},
      "60": {},
      "66": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Context",
    "ERC20",
    "IERC20",
    "IMisoToken",
    "Owned",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "238:8854:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:90:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4510:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4510:166:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3517:98;;;:::i;:::-;;;;;;;;;;;;;;;;1715:122:32;;;:::i;5136:317:27:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5136:317:27;;;;;;;;;;;;;;;;;:::i;3367:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5848:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5848:215:27;;;;;;;;:::i;562:159:32:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;562:159:32;;;;;;;;:::i;:::-;;2680:143;;;;;;;;;;;;;;;;-1:-1:-1;2680:143:32;-1:-1:-1;;;;;2680:143:32;;:::i;:::-;;;;-1:-1:-1;;;;;2680:143:32;;;;;;;;;;;;;;2961:102;;;;;;;;;;;;;;;;-1:-1:-1;2961:102:32;-1:-1:-1;;;;;2961:102:32;;:::i;1596:49::-;;;;;;;;;;;;;;;;-1:-1:-1;1596:49:32;-1:-1:-1;;;;;1596:49:32;;:::i;:::-;;;;;;;;;;;;;;;;;;;3673:117:27;;;;;;;;;;;;;;;;-1:-1:-1;3673:117:27;-1:-1:-1;;;;;3673:117:27;;:::i;5490:1218:32:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5490:1218:32;;;;;;;;:::i;866:211:53:-;;;:::i;2123:39:32:-;;;;;;;;;;;;;;;;-1:-1:-1;2123:39:32;-1:-1:-1;;;;;2123:39:32;;:::i;293:166::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;293:166:32;;;;;;;;-1:-1:-1;293:166:32;;-1:-1:-1;;293:166:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;293:166:32;;-1:-1:-1;;;293:166:32;;-1:-1:-1;;;;;293:166:32;;-1:-1:-1;293:166:32;;-1:-1:-1;293:166:32:i;564:77:53:-;;;:::i;646:90::-;;;:::i;2650:94:27:-;;;:::i;6550:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6550:266:27;;;;;;;;:::i;3993:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3993:172:27;;;;;;;;:::i;4820:248:32:-;;;;;;;;;;;;;;;;-1:-1:-1;4820:248:32;-1:-1:-1;;;;;4820:248:32;;:::i;3486:1140::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3486:1140:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;156:23:53:-;;;:::i;4223:149:27:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4223:149:27;;;;;;;;;;:::i;1928:117:32:-;;;:::i;1460:70::-;;;;;;;;;;;;;;;;-1:-1:-1;1460:70:32;;-1:-1:-1;;;;;1460:70:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;742:118:53;;;;;;;;;;;;;;;;-1:-1:-1;742:118:53;-1:-1:-1;;;;;742:118:53;;:::i;2447:90:27:-;2525:5;2518:12;;;;;;;;-1:-1:-1;;2518:12:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:13;;2518:12;;2525:5;;2518:12;;2525:5;2518:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:90;:::o;4510:166::-;4593:4;4609:39;4618:12;:10;:12::i;:::-;4632:7;4641:6;4609:8;:39::i;:::-;-1:-1:-1;4665:4:27;4510:166;;;;;:::o;3517:98::-;3596:12;;3517:98;:::o;1715:122:32:-;1757:80;1715:122;:::o;5136:317:27:-;5242:4;5258:36;5268:6;5276:9;5287:6;5258:9;:36::i;:::-;5304:121;5313:6;5321:12;:10;:12::i;:::-;5335:89;5373:6;5335:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5335:19:27;;;;;;:11;:19;;;;;;5355:12;:10;:12::i;:::-;-1:-1:-1;;;;;5335:33:27;;;;;;;;;;;;-1:-1:-1;5335:33:27;;;:89;:37;:89::i;:::-;5304:8;:121::i;:::-;-1:-1:-1;5442:4:27;5136:317;;;;;:::o;3367:90::-;3441:9;;;;3367:90;:::o;5848:215::-;5936:4;5952:83;5961:12;:10;:12::i;:::-;5975:7;5984:50;6023:10;5984:11;:25;5996:12;:10;:12::i;:::-;-1:-1:-1;;;;;5984:25:27;;;;;;;;;;;;;;;;;-1:-1:-1;5984:25:27;;;:34;;;;;;;;;;;:38;:50::i;562:159:32:-;315:9:53;:7;:9::i;:::-;307:18;;;;;;633:19:32::1;639:3;644:7;633:5;:19::i;:::-;-1:-1:-1::0;;;;;689:15:32;;::::1;685:1;689:15:::0;;;:10:::1;:15;::::0;;;;;662:52:::1;::::0;689:15:::1;706:7:::0;662:14:::1;:52::i;:::-;562:159:::0;;:::o;2680:143::-;-1:-1:-1;;;;;2795:21:32;;;2765:7;2795:21;;;:10;:21;;;;;;;;2680:143::o;2961:102::-;3024:32;3034:10;3046:9;3024;:32::i;:::-;2961:102;:::o;1596:49::-;;;;;;;;;;;;;;;:::o;3673:117:27:-;-1:-1:-1;;;;;3765:18:27;3739:7;3765:18;;;:9;:18;;;;;;;3673:117::o;5490:1218:32:-;5595:7;5640:12;5626:11;:26;5618:79;;;;-1:-1:-1;;;5618:79:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5730:23:32;;5708:19;5730:23;;;:14;:23;;;;;;;;5767:17;5763:56;;5807:1;5800:8;;;;;5763:56;-1:-1:-1;;;;;5876:20:32;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;5897:16:32;;5876:38;;;;;;;;;:48;;:63;-1:-1:-1;5872:145:32;;-1:-1:-1;;;;;5962:20:32;;;;;;:11;:20;;;;;;;;-1:-1:-1;;5983:16:32;;;;5962:38;;;;;;;;5998:1;5962:44;;;-1:-1:-1;5955:51:32;;5872:145;-1:-1:-1;;;;;6075:20:32;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;6071:86:32;;;6145:1;6138:8;;;;;6071:86;6167:12;-1:-1:-1;;6208:16:32;;6234:418;6249:5;6241:13;;:5;:13;;;6234:418;;;6312:1;6295:13;;;6294:19;;;6286:27;;6354:20;;:::i;:::-;-1:-1:-1;;;;;;6377:20:32;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;6354:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6423:27;;6419:223;;;6477:8;;;;-1:-1:-1;6470:15:32;;-1:-1:-1;;;;6470:15:32;6419:223;6510:12;;:26;;;-1:-1:-1;6506:136:32;;;6564:6;6556:14;;6506:136;;;6626:1;6617:6;:10;6609:18;;6506:136;6234:418;;;;;-1:-1:-1;;;;;;6668:20:32;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;;;;-1:-1:-1;;5490:1218:32;;;;:::o;866:211:53:-;932:8;;-1:-1:-1;;;;;932:8:53;918:10;:22;910:31;;;;;;985:8;;;977:6;;956:38;;-1:-1:-1;;;;;985:8:53;;;;977:6;;;;956:38;;;1029:8;;;;1004:35;;-1:-1:-1;;;;;;1004:35:53;;;-1:-1:-1;;;;;1029:8:53;;1004:35;;;;1049:21;;;866:211::o;2123:39:32:-;;;;;;;;;;;;;:::o;293:166::-;399:17;410:5;399:10;:17::i;:::-;426:26;437:5;444:7;426:10;:26::i;:::-;293:166;;;:::o;564:77:53:-;602:7;628:6;-1:-1:-1;;;;;628:6:53;564:77;:::o;646:90::-;686:4;723:6;-1:-1:-1;;;;;723:6:53;709:10;:20;;646:90::o;2650:94:27:-;2730:7;2723:14;;;;;;;;-1:-1:-1;;2723:14:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2698:13;;2723:14;;2730:7;;2723:14;;2730:7;2723:14;;;;;;;;;;;;;;;;;;;;;;;;6550:266;6643:4;6659:129;6668:12;:10;:12::i;:::-;6682:7;6691:96;6730:15;6691:96;;;;;;;;;;;;;;;;;:11;:25;6703:12;:10;:12::i;:::-;-1:-1:-1;;;;;6691:25:27;;;;;;;;;;;;;;;;;-1:-1:-1;6691:25:27;;;:34;;;;;;;;;;;:96;:38;:96::i;3993:172::-;4079:4;4095:42;4105:12;:10;:12::i;:::-;4119:9;4130:6;4095:9;:42::i;4820:248:32:-;-1:-1:-1;;;;;4954:23:32;;4909:7;4954:23;;;:14;:23;;;;;;;;4994:16;:67;;5060:1;4994:67;;;-1:-1:-1;;;;;5013:20:32;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;5034:16:32;;5013:38;;;;;;;;5049:1;5013:44;;4994:67;4987:74;4820:248;-1:-1:-1;;;4820:248:32:o;3486:1140::-;3669:23;1757:80;3795:6;:4;:6::i;:::-;3779:24;;;;;;3821:12;:10;:12::i;:::-;3718:160;;;;;;;;;;;;;;;;;;;;;;;;;3859:4;3718:160;;;;;;;;;;;;;;;;;;;;;;;3695:193;;;;;;1974:71;3943:135;;;;-1:-1:-1;;;;;3943:135:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3920:168;;;;;;-1:-1:-1;;;4139:119:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4116:152;;;;;;;;;-1:-1:-1;4299:26:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3695:193;;-1:-1:-1;3920:168:32;;4116:152;;-1:-1:-1;;4299:26:32;;;;;;;-1:-1:-1;;4299:26:32;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4299:26:32;;-1:-1:-1;;4299:26:32;;;-1:-1:-1;;;;;;;4343:23:32;;4335:75;;;;-1:-1:-1;;;4335:75:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4437:17:32;;;;;;:6;:17;;;;;:19;;;;;;;;4428:28;;4420:76;;;;-1:-1:-1;;;4420:76:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4521:6;4514:3;:13;;4506:65;;;;-1:-1:-1;;;4506:65:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4588:31;4598:9;4609;4588;:31::i;:::-;4581:38;;;;3486:1140;;;;;;;:::o;156:23:53:-;;;-1:-1:-1;;;;;156:23:53;;:::o;4223:149:27:-;-1:-1:-1;;;;;4338:18:27;;;4312:7;4338:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4223:149::o;1928:117:32:-;1974:71;1928:117;:::o;1460:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;742:118:53:-;813:9;:7;:9::i;:::-;805:18;;;;;;833:8;:20;;-1:-1:-1;;;;;;833:20:53;-1:-1:-1;;;;;833:20:53;;;;;;;;;;742:118::o;590:104:0:-;677:10;590:104;:::o;9612:340:27:-;-1:-1:-1;;;;;9713:19:27;;9705:68;;;;-1:-1:-1;;;9705:68:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9791:21:27;;9783:68;;;;-1:-1:-1;;;9783:68:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9862:18:27;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9913:32;;;;;;;;;;;;;;;;;9612:340;;;:::o;7290:530::-;-1:-1:-1;;;;;7395:20:27;;7387:70;;;;-1:-1:-1;;;7387:70:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7475:23:27;;7467:71;;;;-1:-1:-1;;;7467:71:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7549:47;7570:6;7578:9;7589:6;7549:20;:47::i;:::-;7627:71;7649:6;7627:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7627:17:27;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7607:17:27;;;;;;;:9;:17;;;;;;:91;;;;7731:20;;;;;;;:32;;7756:6;7731:24;:32::i;:::-;-1:-1:-1;;;;;7708:20:27;;;;;;;:9;:20;;;;;;;;;:55;;;;7778:35;;;;;;;7708:20;;7778:35;;;;;;;;;;;;;7290:530;;;:::o;1746:187:3:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:3;;;1746:187::o;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;8090:370:27;-1:-1:-1;;;;;8173:21:27;;8165:65;;;;;-1:-1:-1;;;8165:65:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;8241:49;8270:1;8274:7;8283:6;8241:20;:49::i;:::-;8316:12;;:24;;8333:6;8316:16;:24::i;:::-;8301:12;:39;-1:-1:-1;;;;;8371:18:27;;;;;;:9;:18;;;;;;:30;;8394:6;8371:22;:30::i;:::-;-1:-1:-1;;;;;8350:18:27;;;;;;:9;:18;;;;;;;;:51;;;;8416:37;;;;;;;8350:18;;;;8416:37;;;;;;;;;;8090:370;;:::o;7149:929:32:-;7254:6;-1:-1:-1;;;;;7244:16:32;:6;-1:-1:-1;;;;;7244:16:32;;;:30;;;;;7273:1;7264:6;:10;7244:30;7240:832;;;-1:-1:-1;;;;;7294:20:32;;;7290:379;;-1:-1:-1;;;;;7400:22:32;;7381:16;7400:22;;;:14;:22;;;;;;;;;7460:13;:60;;7519:1;7460:60;;;-1:-1:-1;;;;;7476:19:32;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;7496:13:32;;7476:34;;;;;;;;7508:1;7476:40;;7460:60;7440:80;-1:-1:-1;7538:17:32;7558:21;7440:80;7572:6;7558:13;:21::i;:::-;7538:41;;7597:57;7614:6;7622:9;7633;7644;7597:16;:57::i;:::-;7290:379;;;;-1:-1:-1;;;;;7687:20:32;;;7683:379;;-1:-1:-1;;;;;7793:22:32;;7774:16;7793:22;;;:14;:22;;;;;;;;;7853:13;:60;;7912:1;7853:60;;;-1:-1:-1;;;;;7869:19:32;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;7889:13:32;;7869:34;;;;;;;;7901:1;7869:40;;7853:60;7833:80;-1:-1:-1;7931:17:32;7951:21;7833:80;7965:6;7951:13;:21::i;:::-;7931:41;;7990:57;8007:6;8015:9;8026;8037;7990:16;:57::i;6714:429::-;-1:-1:-1;;;;;6828:21:32;;;6802:23;6828:21;;;:10;:21;;;;;;;;;;6886:20;6839:9;6886;:20::i;:::-;-1:-1:-1;;;;;6962:21:32;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;6962:33:32;;;;;;;;;;7011:54;;6859:47;;-1:-1:-1;6962:33:32;7011:54;;;;;;6962:21;7011:54;7076:60;7091:15;7108:9;7119:16;7076:14;:60::i;:::-;6714:429;;;;:::o;349:209:53:-;413:11;;-1:-1:-1;;;413:11:53;;;;412:12;404:21;;;;;;435:6;:33;;-1:-1:-1;;;;;;;;;435:33:53;;;-1:-1:-1;;;;;;435:33:53;;;;;;;478:18;-1:-1:-1;;;478:18:53;;;;511:40;;544:6;;;435;511:40;;435:6;;511:40;349:209;:::o;2125:257:27:-;2215:12;;;;;;;2214:13;2206:68;;;;-1:-1:-1;;;2206:68:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2284:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2306:16:27;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2332:9:27;:14;;-1:-1:-1;;;;2332:14:27;;;2344:2;2332:14;2356:19;2332:14;2356:19;;;-1:-1:-1;2125:257:27:o;8941:149:32:-;9049:9;8941:149;:::o;1321:134:3:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;8084:687:32:-;8255:18;8276:77;8283:12;8276:77;;;;;;;;;;;;;;;;;:6;:77::i;:::-;8255:98;;8383:1;8368:12;:16;;;:85;;;;-1:-1:-1;;;;;;8388:22:32;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;8411:16:32;;8388:40;;;;;;;;;:50;:65;;;:50;;:65;8368:85;8364:334;;;-1:-1:-1;;;;;8469:22:32;;;;;;:11;:22;;;;;;;;:40;-1:-1:-1;;8492:16:32;;8469:40;;;;;;;;8507:1;8469:46;:57;;;8364:334;;;8596:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8557:22:32;;-1:-1:-1;8557:22:32;;;:11;:22;;;;;:36;;;;;;;;;;:72;;;;;;;-1:-1:-1;;8557:72:32;;;;;;;;;;;;;8643:25;;;:14;:25;;;;;;:44;;8671:16;;;8643:44;;;;;;;;;;8364:334;8713:51;;;;;;;;;;;;;;-1:-1:-1;;;;;8713:51:32;;;;;;;;;;;8084:687;;;;;:::o;8777:158::-;8852:6;8889:12;8882:5;8878:9;;8870:32;;;;-1:-1:-1;;;8870:32:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8926:1:32;;8777:158;-1:-1:-1;;8777:158:32:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "events": {
      "DelegateChanged(address,address,address)": {
        "notice": "An event thats emitted when an account changes its delegate"
      },
      "DelegateVotesChanged(address,uint256,uint256)": {
        "notice": "An event thats emitted when a delegate account's vote balance changes"
      }
    },
    "kind": "dev",
    "methods": {
      "DELEGATION_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the delegation struct used by the contract"
      },
      "DOMAIN_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the contract's domain"
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "checkpoints(address,uint32)": {
        "notice": "A record of votes checkpoints for each account, by index"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "delegate(address)": {
        "notice": "Delegate votes from `msg.sender` to `delegatee`",
        "params": {
          "delegatee": "The address to delegate votes to"
        }
      },
      "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Delegates votes from signatory to `delegatee`",
        "params": {
          "delegatee": "The address to delegate votes to",
          "expiry": "The time at which to expire the signature",
          "nonce": "The contract state required to match the signature",
          "r": "Half of the ECDSA signature pair",
          "s": "Half of the ECDSA signature pair",
          "v": "The recovery byte of the signature"
        }
      },
      "delegates(address)": {
        "notice": "Delegate votes from `msg.sender` to `delegatee`",
        "params": {
          "delegator": "The address to get delegatee for"
        }
      },
      "getCurrentVotes(address)": {
        "notice": "Gets the current votes balance for `account`",
        "params": {
          "account": "The address to get votes balance"
        },
        "returns": {
          "_0": "The number of current votes for `account`"
        }
      },
      "getPriorVotes(address,uint256)": {
        "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
        "notice": "Determine the prior number of votes for an account as of a block number",
        "params": {
          "account": "The address of the account to check",
          "blockNumber": "The block number to get the vote balance at"
        },
        "returns": {
          "_0": "The number of votes the account had as of the given block"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "nonces(address)": {
        "notice": "A record of states for signing / validating signatures"
      },
      "numCheckpoints(address)": {
        "notice": "The number of checkpoints for each account"
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    238,
    9092
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x6C8 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x722 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x692 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x8F32D59B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5F9 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x893C8BBA EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B5 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x44F JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x398 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x20606B70 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2FC JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x286 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x748 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x238 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x802 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x826 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x904 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x948 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x966 JUMP JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x98B JUMP JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x354 PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0xC3B SWAP1 POP JUMP JUMPDEST PUSH2 0x37C PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x272 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD50 JUMP JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0x37C PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x28E PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x702 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 PUSH2 0x7EB PUSH2 0x10E5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10E9 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x833 DUP5 DUP5 DUP5 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x8A3 DUP5 PUSH2 0x83F PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x89E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BB4 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x87D PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x10E9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 PUSH2 0x8C3 PUSH2 0x10E5 JUMP JUMPDEST DUP5 PUSH2 0x89E DUP6 PUSH1 0x3 PUSH1 0x0 PUSH2 0x8D4 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x90C PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91F DUP3 DUP3 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x944 SWAP3 AND DUP4 PUSH2 0x1515 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x970 CALLER DUP3 PUSH2 0x1652 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B8C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xA14 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xA83 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP5 SWAP1 SWAP5 ADD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xB77 JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xAF0 PUSH2 0x19F0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0xB52 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x7F6 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xB69 JUMPI DUP2 SWAP4 POP PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xAC6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC44 DUP2 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0xC4E DUP4 DUP4 PUSH2 0x175C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 PUSH2 0xCE1 PUSH2 0x10E5 JUMP JUMPDEST DUP5 PUSH2 0x89E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C6F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0xD0B PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 PUSH2 0xD49 PUSH2 0x10E5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xD7B JUMPI PUSH1 0x0 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0xDDF PUSH2 0x748 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xDEE PUSH2 0x17E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD DUP11 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP6 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x162 DUP5 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x1A2 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x1C2 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP12 AND PUSH2 0x1E2 DUP8 ADD MSTORE PUSH2 0x202 DUP7 ADD DUP11 SWAP1 MSTORE PUSH2 0x222 DUP7 ADD DUP10 SWAP1 MSTORE SWAP4 MLOAD SWAP3 SWAP7 POP SWAP1 SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x242 DUP1 DUP5 ADD SWAP4 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BFF PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0xFD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BDC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1010 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1ABE PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101A DUP2 DUP12 PUSH2 0x1652 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x10BA PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x10C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x112E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C4B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AE5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x121A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C26 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A9B PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x126A DUP4 DUP4 DUP4 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x12A7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B07 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x12D6 SWAP1 DUP3 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x13C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1386 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x136E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13B3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xDAD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x147E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x148A PUSH1 0x0 DUP4 DUP4 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1497 SWAP1 DUP3 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x14BD SWAP1 DUP3 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1537 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xC4E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x15C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1577 JUMPI PUSH1 0x0 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15B7 DUP3 DUP6 PUSH2 0x17EB JUMP JUMPDEST SWAP1 POP PUSH2 0x15C5 DUP7 DUP5 DUP5 DUP5 PUSH2 0x182D JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xC4E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1604 JUMPI PUSH1 0x0 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1644 DUP3 DUP6 PUSH2 0x13C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x101F DUP6 DUP5 DUP5 DUP5 PUSH2 0x182D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH2 0x1679 DUP5 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP10 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 DUP7 AND SWAP3 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x16E1 DUP3 DUP5 DUP4 PUSH2 0x1515 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP1 DUP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x17A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B2D PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17B6 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1A07 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x17CA SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1A07 JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH2 0xFF00 NOT PUSH1 0xFF NOT SWAP1 SWAP2 AND PUSH1 0x12 OR AND PUSH2 0x100 OR SWAP1 SSTORE POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAD DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1851 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B57 PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x1992 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x189A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x18D7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x19E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1386 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x136E JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1A48 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1A75 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1A75 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1A75 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1A5A JUMP JUMPDEST POP PUSH2 0x1A81 SWAP3 SWAP2 POP PUSH2 0x1A85 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1A81 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A86 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A207369676E617475726520657870 PUSH10 0x72656445524332303A20 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x6F6B656E2068617320616C7265616479206265656E KECCAK256 PUSH10 0x6E697469616C697A6564 0x21 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636553555348493A3A64656C PUSH6 0x676174654279 MSTORE8 PUSH10 0x673A20696E76616C6964 KECCAK256 PUSH15 0x6F6E636553555348493A3A64656C65 PUSH8 0x6174654279536967 GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x617475726545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220DB57 0xED SDIV DUP4 SHL 0xD9 SLT 0xF PUSH15 0xC169F7371AFB63A29BE1DDA093F74A PUSH27 0x7922A74F314264736F6C634300060C003300000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        238,
        9092
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "CALLVALUE",
      "path": "32"
    },
    "6": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "7": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "8": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "12": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "REVERT",
      "path": "32"
    },
    "16": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "17": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "POP",
      "path": "32"
    },
    "18": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "21": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "LT",
      "path": "32"
    },
    "22": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1C4"
    },
    "25": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "26": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "29": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "SHR",
      "path": "32"
    },
    "32": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "33": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x7ECEBE00"
    },
    "38": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "GT",
      "path": "32"
    },
    "39": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "43": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "44": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xB4B5EA57"
    },
    "49": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "GT",
      "path": "32"
    },
    "50": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "54": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "55": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xDD62ED3E"
    },
    "60": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "GT",
      "path": "32"
    },
    "61": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "65": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "66": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "72": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x69A"
    },
    "75": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "76": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "77": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xE7A324DC"
    },
    "82": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "83": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x6C8"
    },
    "86": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "87": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "88": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xF1127ED8"
    },
    "93": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "94": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x6D0"
    },
    "97": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "98": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "99": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "105": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x722"
    },
    "108": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "109": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1C4"
    },
    "112": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMP",
      "path": "32"
    },
    "113": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "114": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "115": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xB4B5EA57"
    },
    "120": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "121": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x625"
    },
    "124": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "125": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "126": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xC3CDA520"
    },
    "131": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "132": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x64B"
    },
    "135": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "136": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "137": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xD4EE1D90"
    },
    "142": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "143": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x692"
    },
    "146": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "147": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1C4"
    },
    "150": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMP",
      "path": "32"
    },
    "151": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "152": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "153": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x8F32D59B"
    },
    "158": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "GT",
      "path": "32"
    },
    "159": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "163": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "164": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x8F32D59B"
    },
    "169": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "170": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5BD"
    },
    "173": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "174": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "175": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x95D89B41"
    },
    "180": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "181": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5C5"
    },
    "184": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "185": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "186": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xA457C2D7"
    },
    "191": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "192": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5CD"
    },
    "195": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "196": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "197": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xA9059CBB"
    },
    "202": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "203": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5F9"
    },
    "206": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "207": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1C4"
    },
    "210": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMP",
      "path": "32"
    },
    "211": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "212": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "213": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x7ECEBE00"
    },
    "218": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "219": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x457"
    },
    "222": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "223": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "224": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x893C8BBA"
    },
    "229": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "230": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x47D"
    },
    "233": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "234": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "235": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x8DA5CB5B"
    },
    "240": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "241": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5B5"
    },
    "244": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "245": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1C4"
    },
    "248": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMP",
      "path": "32"
    },
    "249": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "250": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "251": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x40C10F19"
    },
    "256": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "GT",
      "path": "32"
    },
    "257": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "261": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "262": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x6FCFFF45"
    },
    "267": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "GT",
      "path": "32"
    },
    "268": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "272": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "273": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x6FCFFF45"
    },
    "278": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "279": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3BE"
    },
    "282": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "283": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "284": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x70A08231"
    },
    "289": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "290": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3FD"
    },
    "293": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "294": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "295": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x782D6FE1"
    },
    "300": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "301": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x423"
    },
    "304": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "305": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "306": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x79BA5097"
    },
    "311": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "312": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x44F"
    },
    "315": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "316": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1C4"
    },
    "319": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMP",
      "path": "32"
    },
    "320": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "321": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "322": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x40C10F19"
    },
    "327": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "328": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x328"
    },
    "331": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "332": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "333": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x587CDE1E"
    },
    "338": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "339": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x356"
    },
    "342": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "343": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "344": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x5C19A95C"
    },
    "349": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "350": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x398"
    },
    "353": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "354": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1C4"
    },
    "357": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMP",
      "path": "32"
    },
    "358": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "359": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "360": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x20606B70"
    },
    "365": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "GT",
      "path": "32"
    },
    "366": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1A2"
    },
    "369": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "370": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "371": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x20606B70"
    },
    "376": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "377": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2A0"
    },
    "380": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "381": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "382": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x23B872DD"
    },
    "387": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "388": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2A8"
    },
    "391": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "392": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "393": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x313CE567"
    },
    "398": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "399": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2DE"
    },
    "402": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "403": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "404": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x39509351"
    },
    "409": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "410": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2FC"
    },
    "413": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "414": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1C4"
    },
    "417": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMP",
      "path": "32"
    },
    "418": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "419": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "420": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x6FDDE03"
    },
    "425": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "426": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1C9"
    },
    "429": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "430": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "431": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x95EA7B3"
    },
    "436": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "437": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x246"
    },
    "440": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "441": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "442": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x18160DDD"
    },
    "447": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "EQ",
      "path": "32"
    },
    "448": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x286"
    },
    "451": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "452": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "453": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "DUP1",
      "path": "32"
    },
    "456": {
      "first_revert": true,
      "fn": null,
      "offset": [
        238,
        9092
      ],
      "op": "REVERT",
      "path": "32"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "458": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D1"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x748"
    },
    "464": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMP",
      "path": "27"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "468": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "27"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "472": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "27"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP3",
      "path": "27"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "475": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "27"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "27"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "27"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "27"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "27"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "484": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "27"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "27"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "27"
    },
    "490": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP6",
      "path": "27"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "27"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "27"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "27"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "27"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "27"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "27"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "LT",
      "path": "27"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x20B"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "27"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "27"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "27"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "27"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP3",
      "path": "27"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "27"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "518": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "27"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1F3"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMP",
      "path": "27"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "27"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "27"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "27"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "27"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "27"
    },
    "530": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "27"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "27"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "AND",
      "path": "27"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "27"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x238"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "27"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP3",
      "path": "27"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SUB",
      "path": "27"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "27"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "27"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SUB",
      "path": "27"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "EXP",
      "path": "27"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SUB",
      "path": "27"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "NOT",
      "path": "27"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "AND",
      "path": "27"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "27"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "27"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "27"
    },
    "568": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "27"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "27"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "27"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "27"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "27"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "579": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SUB",
      "path": "27"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "RETURN",
      "path": "27"
    },
    "582": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "583": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x272"
    },
    "586": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "588": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP1",
      "path": "27"
    },
    "589": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "590": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SUB",
      "path": "27"
    },
    "591": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "593": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP2",
      "path": "27"
    },
    "594": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "LT",
      "path": "27"
    },
    "595": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "596": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x25C"
    },
    "599": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "600": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "602": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP1",
      "path": "27"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "REVERT",
      "path": "27"
    },
    "604": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "605": {
      "op": "POP"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "op": "SUB"
    },
    "614": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP2",
      "path": "27"
    },
    "615": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "616": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "AND",
      "path": "27"
    },
    "617": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "618": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "620": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ADD",
      "path": "27"
    },
    "621": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "622": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7DE"
    },
    "625": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMP",
      "path": "27"
    },
    "626": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "627": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "629": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP1",
      "path": "27"
    },
    "630": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "631": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "632": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "633": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "634": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP3",
      "path": "27"
    },
    "635": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "636": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "637": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "638": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP2",
      "path": "27"
    },
    "639": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "640": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SUB",
      "path": "27"
    },
    "641": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "643": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ADD",
      "path": "27"
    },
    "644": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "645": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "RETURN",
      "path": "27"
    },
    "646": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "647": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x28E"
    },
    "650": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7FC"
    },
    "653": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMP",
      "path": "27"
    },
    "654": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "655": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "657": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "DUP1",
      "path": "27"
    },
    "658": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "659": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "660": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "DUP3",
      "path": "27"
    },
    "661": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "662": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "663": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "664": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "DUP2",
      "path": "27"
    },
    "665": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "666": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SUB",
      "path": "27"
    },
    "667": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "669": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "ADD",
      "path": "27"
    },
    "670": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "671": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "RETURN",
      "path": "27"
    },
    "672": {
      "offset": [
        1715,
        1837
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "673": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1715,
        1837
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x28E"
    },
    "676": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1715,
        1837
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x802"
    },
    "679": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        1715,
        1837
      ],
      "op": "JUMP",
      "path": "32"
    },
    "680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x272"
    },
    "684": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP1",
      "path": "27"
    },
    "687": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "688": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SUB",
      "path": "27"
    },
    "689": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP2",
      "path": "27"
    },
    "692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "LT",
      "path": "27"
    },
    "693": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "694": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2BE"
    },
    "697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "700": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP1",
      "path": "27"
    },
    "701": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "REVERT",
      "path": "27"
    },
    "702": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "703": {
      "op": "POP"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "710": {
      "op": "SHL"
    },
    "711": {
      "op": "SUB"
    },
    "712": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP2",
      "path": "27"
    },
    "713": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP2",
      "path": "27"
    },
    "715": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "AND",
      "path": "27"
    },
    "716": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "717": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "719": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP2",
      "path": "27"
    },
    "720": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "ADD",
      "path": "27"
    },
    "721": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "722": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "723": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "AND",
      "path": "27"
    },
    "725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "726": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "ADD",
      "path": "27"
    },
    "729": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "730": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x826"
    },
    "733": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMP",
      "path": "27"
    },
    "734": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "735": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2E6"
    },
    "738": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8AD"
    },
    "741": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMP",
      "path": "27"
    },
    "742": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "743": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "745": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "DUP1",
      "path": "27"
    },
    "746": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "747": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "749": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "750": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "751": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "AND",
      "path": "27"
    },
    "752": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "DUP3",
      "path": "27"
    },
    "753": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "754": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "755": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "756": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "DUP2",
      "path": "27"
    },
    "757": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "758": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SUB",
      "path": "27"
    },
    "759": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "761": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "ADD",
      "path": "27"
    },
    "762": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "763": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "RETURN",
      "path": "27"
    },
    "764": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "765": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x272"
    },
    "768": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "770": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "DUP1",
      "path": "27"
    },
    "771": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "772": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "SUB",
      "path": "27"
    },
    "773": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "775": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "DUP2",
      "path": "27"
    },
    "776": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "LT",
      "path": "27"
    },
    "777": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "778": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x312"
    },
    "781": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "782": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "784": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "DUP1",
      "path": "27"
    },
    "785": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "REVERT",
      "path": "27"
    },
    "786": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "787": {
      "op": "POP"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "op": "SUB"
    },
    "796": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "DUP2",
      "path": "27"
    },
    "797": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "798": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "AND",
      "path": "27"
    },
    "799": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "800": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "802": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "ADD",
      "path": "27"
    },
    "803": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "804": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8B6"
    },
    "807": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMP",
      "path": "27"
    },
    "808": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "809": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x354"
    },
    "812": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "814": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "DUP1",
      "path": "32"
    },
    "815": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "816": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "SUB",
      "path": "32"
    },
    "817": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "819": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "DUP2",
      "path": "32"
    },
    "820": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "LT",
      "path": "32"
    },
    "821": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "822": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x33E"
    },
    "825": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "826": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "828": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "DUP1",
      "path": "32"
    },
    "829": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "REVERT",
      "path": "32"
    },
    "830": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "831": {
      "op": "POP"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "838": {
      "op": "SHL"
    },
    "839": {
      "op": "SUB"
    },
    "840": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "DUP2",
      "path": "32"
    },
    "841": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "842": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "AND",
      "path": "32"
    },
    "843": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "844": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "846": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "ADD",
      "path": "32"
    },
    "847": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "848": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x904"
    },
    "851": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        562,
        721
      ],
      "op": "JUMP",
      "path": "32"
    },
    "852": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "853": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "STOP",
      "path": "32"
    },
    "854": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "855": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x37C"
    },
    "858": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "860": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "DUP1",
      "path": "32"
    },
    "861": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "862": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "SUB",
      "path": "32"
    },
    "863": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "865": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "DUP2",
      "path": "32"
    },
    "866": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "LT",
      "path": "32"
    },
    "867": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "868": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x36C"
    },
    "871": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "872": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "874": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "DUP1",
      "path": "32"
    },
    "875": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "REVERT",
      "path": "32"
    },
    "876": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "877": {
      "op": "POP"
    },
    "878": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "885": {
      "op": "SHL"
    },
    "886": {
      "op": "SUB"
    },
    "887": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "AND",
      "path": "32"
    },
    "888": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x948"
    },
    "891": {
      "fn": "SushiToken.delegates",
      "jump": "i",
      "offset": [
        2680,
        2823
      ],
      "op": "JUMP",
      "path": "32"
    },
    "892": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "893": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "895": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "DUP1",
      "path": "32"
    },
    "896": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "903": {
      "op": "SHL"
    },
    "904": {
      "op": "SUB"
    },
    "905": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "906": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "907": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "AND",
      "path": "32"
    },
    "908": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "DUP3",
      "path": "32"
    },
    "909": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "910": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "911": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "912": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "DUP2",
      "path": "32"
    },
    "913": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "914": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "SUB",
      "path": "32"
    },
    "915": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "917": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "ADD",
      "path": "32"
    },
    "918": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "919": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "RETURN",
      "path": "32"
    },
    "920": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "921": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x354"
    },
    "924": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "926": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "DUP1",
      "path": "32"
    },
    "927": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "928": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "SUB",
      "path": "32"
    },
    "929": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "931": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "DUP2",
      "path": "32"
    },
    "932": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "LT",
      "path": "32"
    },
    "933": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "934": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3AE"
    },
    "937": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "938": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "940": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "DUP1",
      "path": "32"
    },
    "941": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "REVERT",
      "path": "32"
    },
    "942": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "943": {
      "op": "POP"
    },
    "944": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "951": {
      "op": "SHL"
    },
    "952": {
      "op": "SUB"
    },
    "953": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "AND",
      "path": "32"
    },
    "954": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x966"
    },
    "957": {
      "fn": "SushiToken.delegate",
      "jump": "i",
      "offset": [
        2961,
        3063
      ],
      "op": "JUMP",
      "path": "32"
    },
    "958": {
      "offset": [
        1596,
        1645
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "959": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3E4"
    },
    "962": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "964": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "DUP1",
      "path": "32"
    },
    "965": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "966": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "SUB",
      "path": "32"
    },
    "967": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "969": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "DUP2",
      "path": "32"
    },
    "970": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "LT",
      "path": "32"
    },
    "971": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "972": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3D4"
    },
    "975": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "976": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "978": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "DUP1",
      "path": "32"
    },
    "979": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "REVERT",
      "path": "32"
    },
    "980": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "offset": [
        1596,
        1645
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "op": "SUB"
    },
    "991": {
      "offset": [
        1596,
        1645
      ],
      "op": "AND",
      "path": "32"
    },
    "992": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x973"
    },
    "995": {
      "fn": "SushiToken.delegate",
      "jump": "i",
      "offset": [
        1596,
        1645
      ],
      "op": "JUMP",
      "path": "32"
    },
    "996": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "997": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "999": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1000": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1001": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "1006": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1007": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1008": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "AND",
      "path": "32"
    },
    "1009": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1010": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1011": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1012": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1013": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1014": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1015": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "SUB",
      "path": "32"
    },
    "1016": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1018": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "ADD",
      "path": "32"
    },
    "1019": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1020": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "RETURN",
      "path": "32"
    },
    "1021": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1022": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x28E"
    },
    "1025": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1027": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1028": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1029": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "SUB",
      "path": "27"
    },
    "1030": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1032": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1033": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "LT",
      "path": "27"
    },
    "1034": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1035": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x413"
    },
    "1038": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1039": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1041": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1042": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "REVERT",
      "path": "27"
    },
    "1043": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1044": {
      "op": "POP"
    },
    "1045": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1052": {
      "op": "SHL"
    },
    "1053": {
      "op": "SUB"
    },
    "1054": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "AND",
      "path": "27"
    },
    "1055": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x98B"
    },
    "1058": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1059": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1060": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x28E"
    },
    "1063": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1065": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1066": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1067": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "SUB",
      "path": "32"
    },
    "1068": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1070": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1071": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "LT",
      "path": "32"
    },
    "1072": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1073": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x439"
    },
    "1076": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1077": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1079": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1080": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1081": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "op": "SUB"
    },
    "1091": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1092": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1093": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "AND",
      "path": "32"
    },
    "1094": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1095": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1097": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "ADD",
      "path": "32"
    },
    "1098": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1099": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x9A6"
    },
    "1102": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "i",
      "offset": [
        5490,
        6708
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1103": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "1104": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x354"
    },
    "1107": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0xBAE"
    },
    "1110": {
      "fn": "Owned.acceptOwnership",
      "jump": "i",
      "offset": [
        866,
        1077
      ],
      "op": "JUMP",
      "path": "53"
    },
    "1111": {
      "offset": [
        2123,
        2162
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1112": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x28E"
    },
    "1115": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1117": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1118": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1119": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "SUB",
      "path": "32"
    },
    "1120": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1122": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1123": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "LT",
      "path": "32"
    },
    "1124": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1125": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x46D"
    },
    "1128": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1129": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1131": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1132": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1133": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1134": {
      "op": "POP"
    },
    "1135": {
      "offset": [
        2123,
        2162
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1142": {
      "op": "SHL"
    },
    "1143": {
      "op": "SUB"
    },
    "1144": {
      "offset": [
        2123,
        2162
      ],
      "op": "AND",
      "path": "32"
    },
    "1145": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xC29"
    },
    "1148": {
      "fn": "Owned.acceptOwnership",
      "jump": "i",
      "offset": [
        2123,
        2162
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1149": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1150": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x354"
    },
    "1153": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1155": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1156": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1157": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SUB",
      "path": "32"
    },
    "1158": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "1160": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1161": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "LT",
      "path": "32"
    },
    "1162": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1163": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x493"
    },
    "1166": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1167": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1169": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1170": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1171": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1172": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1173": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1174": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1175": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1177": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1178": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1179": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1180": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1181": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH5",
      "path": "32",
      "value": "0x100000000"
    },
    "1187": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1188": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "GT",
      "path": "32"
    },
    "1189": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1190": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4AE"
    },
    "1193": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1194": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1196": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1197": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1198": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1199": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1200": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1201": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1202": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1204": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1205": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1206": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "GT",
      "path": "32"
    },
    "1207": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1208": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4C0"
    },
    "1211": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1212": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1214": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1215": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1216": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1217": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1218": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1219": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1220": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1222": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1223": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1224": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP5",
      "path": "32"
    },
    "1225": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "1227": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1228": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "MUL",
      "path": "32"
    },
    "1229": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP5",
      "path": "32"
    },
    "1230": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1231": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "GT",
      "path": "32"
    },
    "1232": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH5",
      "path": "32",
      "value": "0x100000000"
    },
    "1238": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1239": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "GT",
      "path": "32"
    },
    "1240": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "OR",
      "path": "32"
    },
    "1241": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1242": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4E2"
    },
    "1245": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1246": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1248": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1249": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1250": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1251": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1252": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1253": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1254": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1255": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "1257": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1258": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1260": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1261": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1262": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DIV",
      "path": "32"
    },
    "1263": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "MUL",
      "path": "32"
    },
    "1264": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1266": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1267": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1269": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1270": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1271": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1272": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1273": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1275": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1276": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1277": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "1278": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1279": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1280": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1281": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1282": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1283": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1284": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1286": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1287": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1288": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1289": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1290": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1291": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP5",
      "path": "32"
    },
    "1292": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "CALLDATACOPY",
      "path": "32"
    },
    "1293": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1295": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1296": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1297": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1298": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1299": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1300": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1301": {
      "op": "POP"
    },
    "1302": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1303": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP6",
      "path": "32"
    },
    "1304": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "1305": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "1306": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1308": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1309": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1310": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1313": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1314": {
      "op": "POP"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH5",
      "path": "32",
      "value": "0x100000000"
    },
    "1322": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1323": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "GT",
      "path": "32"
    },
    "1324": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1325": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x535"
    },
    "1328": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1329": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1331": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1332": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1333": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1334": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1335": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1336": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1337": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1339": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1340": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1341": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "GT",
      "path": "32"
    },
    "1342": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1343": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x547"
    },
    "1346": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1347": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1349": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1350": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1351": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1352": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1353": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1354": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1355": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1357": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1358": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1359": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP5",
      "path": "32"
    },
    "1360": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "1362": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1363": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "MUL",
      "path": "32"
    },
    "1364": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP5",
      "path": "32"
    },
    "1365": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1366": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "GT",
      "path": "32"
    },
    "1367": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH5",
      "path": "32",
      "value": "0x100000000"
    },
    "1373": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1374": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "GT",
      "path": "32"
    },
    "1375": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "OR",
      "path": "32"
    },
    "1376": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1377": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x569"
    },
    "1380": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1381": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1383": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1384": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1385": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1386": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1387": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1388": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1389": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1390": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "1392": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1393": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1395": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1396": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1397": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DIV",
      "path": "32"
    },
    "1398": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "MUL",
      "path": "32"
    },
    "1399": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1401": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1402": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1404": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1405": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1406": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1407": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1408": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1410": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1411": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1412": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "1413": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1414": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1415": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1416": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1417": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1418": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1419": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1421": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1422": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1423": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1424": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1425": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1426": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "DUP5",
      "path": "32"
    },
    "1427": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "CALLDATACOPY",
      "path": "32"
    },
    "1428": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1430": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1431": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "ADD",
      "path": "32"
    },
    "1432": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1433": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1434": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1435": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1436": {
      "op": "POP"
    },
    "1437": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1438": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP6",
      "path": "32"
    },
    "1439": {
      "op": "POP"
    },
    "1440": {
      "op": "POP"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1443": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "op": "SUB"
    },
    "1452": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "AND",
      "path": "32"
    },
    "1453": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xC3B"
    },
    "1458": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1459": {
      "op": "POP"
    },
    "1460": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        293,
        459
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1461": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "1462": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x37C"
    },
    "1465": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0xC53"
    },
    "1468": {
      "fn": "Owned.owner",
      "jump": "i",
      "offset": [
        564,
        641
      ],
      "op": "JUMP",
      "path": "53"
    },
    "1469": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "1470": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x272"
    },
    "1473": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0xC62"
    },
    "1476": {
      "fn": "Owned.isOwner",
      "jump": "i",
      "offset": [
        646,
        736
      ],
      "op": "JUMP",
      "path": "53"
    },
    "1477": {
      "fn": "ERC20.symbol",
      "offset": [
        2650,
        2744
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1478": {
      "fn": "ERC20.symbol",
      "offset": [
        2650,
        2744
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D1"
    },
    "1481": {
      "fn": "ERC20.symbol",
      "offset": [
        2650,
        2744
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC73"
    },
    "1484": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2650,
        2744
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1485": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1486": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x272"
    },
    "1489": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1491": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1492": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1493": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "SUB",
      "path": "27"
    },
    "1494": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1496": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1497": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "LT",
      "path": "27"
    },
    "1498": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1499": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5E3"
    },
    "1502": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1503": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1505": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1506": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "REVERT",
      "path": "27"
    },
    "1507": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "SUB"
    },
    "1517": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1518": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "1519": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "AND",
      "path": "27"
    },
    "1520": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1521": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1523": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "ADD",
      "path": "27"
    },
    "1524": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "1525": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCD4"
    },
    "1528": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1529": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1530": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x272"
    },
    "1533": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1535": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1536": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1537": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "SUB",
      "path": "27"
    },
    "1538": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1540": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1541": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "LT",
      "path": "27"
    },
    "1542": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1543": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x60F"
    },
    "1546": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1547": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1549": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1550": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "REVERT",
      "path": "27"
    },
    "1551": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1552": {
      "op": "POP"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "op": "SUB"
    },
    "1561": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1562": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "1563": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "AND",
      "path": "27"
    },
    "1564": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1565": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1567": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "ADD",
      "path": "27"
    },
    "1568": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "1569": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD3C"
    },
    "1572": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1573": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1574": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x28E"
    },
    "1577": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1579": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1580": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1581": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "SUB",
      "path": "32"
    },
    "1582": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1584": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1585": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "LT",
      "path": "32"
    },
    "1586": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1587": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x63B"
    },
    "1590": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1591": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1593": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1594": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1595": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1596": {
      "op": "POP"
    },
    "1597": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1604": {
      "op": "SHL"
    },
    "1605": {
      "op": "SUB"
    },
    "1606": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "AND",
      "path": "32"
    },
    "1607": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xD50"
    },
    "1610": {
      "fn": "SushiToken.getCurrentVotes",
      "jump": "i",
      "offset": [
        4820,
        5068
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1611": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1612": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x354"
    },
    "1615": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1617": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1618": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1619": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "SUB",
      "path": "32"
    },
    "1620": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xC0"
    },
    "1622": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1623": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "LT",
      "path": "32"
    },
    "1624": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1625": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x661"
    },
    "1628": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1629": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1631": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1632": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1633": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "op": "SUB"
    },
    "1643": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1644": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1645": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "AND",
      "path": "32"
    },
    "1646": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1647": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1649": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1650": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "ADD",
      "path": "32"
    },
    "1651": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1652": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1653": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1655": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1656": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "ADD",
      "path": "32"
    },
    "1657": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1658": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1659": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xFF"
    },
    "1661": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "1663": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1664": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "ADD",
      "path": "32"
    },
    "1665": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1666": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "AND",
      "path": "32"
    },
    "1667": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1668": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x80"
    },
    "1670": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1671": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "ADD",
      "path": "32"
    },
    "1672": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1673": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1674": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xA0"
    },
    "1676": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "ADD",
      "path": "32"
    },
    "1677": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1678": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xDB4"
    },
    "1681": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        3486,
        4626
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1682": {
      "offset": [
        156,
        179
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "1683": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        156,
        179
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x37C"
    },
    "1686": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        156,
        179
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x1027"
    },
    "1689": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        156,
        179
      ],
      "op": "JUMP",
      "path": "53"
    },
    "1690": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1691": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x28E"
    },
    "1694": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1696": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1697": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "1698": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "SUB",
      "path": "27"
    },
    "1699": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1701": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1702": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "LT",
      "path": "27"
    },
    "1703": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1704": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6B0"
    },
    "1707": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1708": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1710": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1711": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "REVERT",
      "path": "27"
    },
    "1712": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1720": {
      "op": "SHL"
    },
    "1721": {
      "op": "SUB"
    },
    "1722": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1723": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "1724": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1725": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "AND",
      "path": "27"
    },
    "1726": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1727": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1729": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "ADD",
      "path": "27"
    },
    "1730": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "1731": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "AND",
      "path": "27"
    },
    "1732": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1036"
    },
    "1735": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1736": {
      "offset": [
        1928,
        2045
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1737": {
      "fn": "ERC20.allowance",
      "offset": [
        1928,
        2045
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x28E"
    },
    "1740": {
      "fn": "ERC20.allowance",
      "offset": [
        1928,
        2045
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1061"
    },
    "1743": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1928,
        2045
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1744": {
      "offset": [
        1460,
        1530
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1745": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x702"
    },
    "1748": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1750": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1751": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1752": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SUB",
      "path": "32"
    },
    "1753": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1755": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1756": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "LT",
      "path": "32"
    },
    "1757": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1758": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x6E6"
    },
    "1761": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1762": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1764": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1765": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1766": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1767": {
      "op": "POP"
    },
    "1768": {
      "offset": [
        1460,
        1530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1769": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "op": "SUB"
    },
    "1778": {
      "offset": [
        1460,
        1530
      ],
      "op": "AND",
      "path": "32"
    },
    "1779": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1780": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1782": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "ADD",
      "path": "32"
    },
    "1783": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1784": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "1789": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "AND",
      "path": "32"
    },
    "1790": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1085"
    },
    "1793": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1460,
        1530
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1794": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1795": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1797": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1798": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1799": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "1804": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1805": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "1806": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "AND",
      "path": "32"
    },
    "1807": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1808": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1809": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1811": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1812": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "ADD",
      "path": "32"
    },
    "1813": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1814": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1815": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1816": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1817": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1818": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1819": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1820": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1821": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1822": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SUB",
      "path": "32"
    },
    "1823": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "ADD",
      "path": "32"
    },
    "1824": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1825": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "RETURN",
      "path": "32"
    },
    "1826": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "1827": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x354"
    },
    "1830": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x4"
    },
    "1832": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP1",
      "path": "53"
    },
    "1833": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "CALLDATASIZE",
      "path": "53"
    },
    "1834": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "SUB",
      "path": "53"
    },
    "1835": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x20"
    },
    "1837": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP2",
      "path": "53"
    },
    "1838": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "LT",
      "path": "53"
    },
    "1839": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "1840": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x738"
    },
    "1843": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "1844": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "1846": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP1",
      "path": "53"
    },
    "1847": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "REVERT",
      "path": "53"
    },
    "1848": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "1849": {
      "op": "POP"
    },
    "1850": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "CALLDATALOAD",
      "path": "53"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1857": {
      "op": "SHL"
    },
    "1858": {
      "op": "SUB"
    },
    "1859": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "AND",
      "path": "53"
    },
    "1860": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x10B2"
    },
    "1863": {
      "fn": "Owned.transferOwnership",
      "jump": "i",
      "offset": [
        742,
        860
      ],
      "op": "JUMP",
      "path": "53"
    },
    "1864": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1865": {
      "fn": "ERC20.name",
      "offset": [
        2525,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 0,
      "value": "0x5"
    },
    "1867": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1868": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1869": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1871": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1872": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1873": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1875": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "1877": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1881": {
      "op": "NOT"
    },
    "1882": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "1885": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "1887": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP9",
      "path": "27"
    },
    "1888": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "AND",
      "path": "27"
    },
    "1889": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1890": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MUL",
      "path": "27"
    },
    "1891": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "27"
    },
    "1892": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1893": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP6",
      "path": "27"
    },
    "1894": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "AND",
      "path": "27"
    },
    "1895": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "1896": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1897": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "1898": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DIV",
      "path": "27"
    },
    "1899": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "1900": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP5",
      "path": "27"
    },
    "1901": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "27"
    },
    "1902": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1903": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1904": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DIV",
      "path": "27"
    },
    "1905": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1906": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MUL",
      "path": "27"
    },
    "1907": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1908": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "27"
    },
    "1909": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1910": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "27"
    },
    "1911": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1912": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1913": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1914": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1915": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1916": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1917": {
      "fn": "ERC20.name",
      "offset": [
        2493,
        2506
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "1919": {
      "fn": "ERC20.name",
      "offset": [
        2493,
        2506
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "1920": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1921": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1922": {
      "fn": "ERC20.name",
      "offset": [
        2525,
        2530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1923": {
      "fn": "ERC20.name",
      "offset": [
        2525,
        2530
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1924": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1925": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "27"
    },
    "1926": {
      "fn": "ERC20.name",
      "offset": [
        2525,
        2530
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1927": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1928": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1929": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1930": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7D4"
    },
    "1933": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1934": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1935": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "1937": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "LT",
      "path": "27"
    },
    "1938": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7A9"
    },
    "1941": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1942": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "1945": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1946": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1947": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1948": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DIV",
      "path": "27"
    },
    "1949": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MUL",
      "path": "27"
    },
    "1950": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1951": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1952": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1953": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1955": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "27"
    },
    "1956": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1957": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7D4"
    },
    "1960": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1961": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1962": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1963": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "27"
    },
    "1964": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1965": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1966": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1968": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1969": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1971": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1973": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1974": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1975": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1976": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1977": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1978": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1979": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1980": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1981": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "1983": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "27"
    },
    "1984": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1985": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1987": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "27"
    },
    "1988": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1989": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1990": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "GT",
      "path": "27"
    },
    "1991": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7B7"
    },
    "1994": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1995": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1996": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1997": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SUB",
      "path": "27"
    },
    "1998": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "2000": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "AND",
      "path": "27"
    },
    "2001": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2002": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "27"
    },
    "2003": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2004": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2005": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "27"
    },
    "2006": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "27"
    },
    "2007": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "27"
    },
    "2008": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "27"
    },
    "2009": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "27"
    },
    "2010": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2011": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "27"
    },
    "2012": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2013": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2014": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2015": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4597
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2017": {
      "fn": "ERC20.approve",
      "offset": [
        4609,
        4648
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 1,
      "value": "0x7F2"
    },
    "2020": {
      "fn": "ERC20.approve",
      "offset": [
        4618,
        4630
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7EB"
    },
    "2023": {
      "fn": "ERC20.approve",
      "offset": [
        4618,
        4628
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10E5"
    },
    "2026": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4618,
        4630
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2027": {
      "fn": "ERC20.approve",
      "offset": [
        4618,
        4630
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2028": {
      "fn": "ERC20.approve",
      "offset": [
        4632,
        4639
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2029": {
      "fn": "ERC20.approve",
      "offset": [
        4641,
        4647
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2030": {
      "fn": "ERC20.approve",
      "offset": [
        4609,
        4617
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10E9"
    },
    "2033": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4609,
        4648
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2034": {
      "fn": "ERC20.approve",
      "offset": [
        4609,
        4648
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "fn": "ERC20.approve",
      "offset": [
        4665,
        4669
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 2,
      "value": "0x1"
    },
    "2038": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2039": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2040": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2041": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "POP",
      "path": "27"
    },
    "2042": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "POP",
      "path": "27"
    },
    "2043": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2044": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2045": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3596,
        3608
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 3,
      "value": "0x4"
    },
    "2047": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3596,
        3608
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2048": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2049": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2050": {
      "offset": [
        1715,
        1837
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2051": {
      "offset": [
        1757,
        1837
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
    },
    "2084": {
      "offset": [
        1715,
        1837
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2085": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        1715,
        1837
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2086": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2087": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5242,
        5246
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2089": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5258,
        5294
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 4,
      "value": "0x833"
    },
    "2092": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5268,
        5274
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2093": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5276,
        5285
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2094": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5287,
        5293
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2095": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5258,
        5267
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x11D5"
    },
    "2098": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5258,
        5294
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2099": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5258,
        5294
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2100": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5304,
        5425
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 5,
      "value": "0x8A3"
    },
    "2103": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5313,
        5319
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2104": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5321,
        5333
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x83F"
    },
    "2107": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5321,
        5331
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10E5"
    },
    "2110": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5321,
        5333
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2111": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5321,
        5333
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2112": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x89E"
    },
    "2115": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5373,
        5379
      ],
      "op": "DUP6",
      "path": "27"
    },
    "2116": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2118": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2119": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2120": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "2122": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "ADD",
      "path": "27"
    },
    "2123": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2125": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2126": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2127": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x28"
    },
    "2129": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2130": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2131": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2133": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "ADD",
      "path": "27"
    },
    "2134": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1BB4"
    },
    "2137": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x28"
    },
    "2139": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2140": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "CODECOPY",
      "path": "27"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2147": {
      "op": "SHL"
    },
    "2148": {
      "op": "SUB"
    },
    "2149": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "DUP11",
      "path": "27"
    },
    "2150": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "AND",
      "path": "27"
    },
    "2151": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2153": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2154": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2155": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2156": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5346
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "2158": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2160": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2161": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2163": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2164": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2165": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2166": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5355,
        5367
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x87D"
    },
    "2169": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5355,
        5365
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10E5"
    },
    "2172": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5355,
        5367
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2173": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5355,
        5367
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2180": {
      "op": "SHL"
    },
    "2181": {
      "op": "SUB"
    },
    "2182": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "AND",
      "path": "27"
    },
    "2183": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2184": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2185": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2187": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2188": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "ADD",
      "path": "27"
    },
    "2189": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2190": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2191": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2192": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2193": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2195": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "ADD",
      "path": "27"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2198": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2199": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2200": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2201": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2202": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5372
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1332"
    },
    "2205": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5335,
        5424
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2206": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2207": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5304,
        5312
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10E9"
    },
    "2210": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5304,
        5425
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2211": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5304,
        5425
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5442,
        5446
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 6,
      "value": "0x1"
    },
    "2215": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "2216": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2217": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "POP",
      "path": "27"
    },
    "2218": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "POP",
      "path": "27"
    },
    "2219": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "POP",
      "path": "27"
    },
    "2220": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2221": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2222": {
      "fn": "ERC20.decimals",
      "offset": [
        3441,
        3450
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 7,
      "value": "0x7"
    },
    "2224": {
      "fn": "ERC20.decimals",
      "offset": [
        3441,
        3450
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2225": {
      "fn": "ERC20.decimals",
      "offset": [
        3441,
        3450
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "2227": {
      "fn": "ERC20.decimals",
      "offset": [
        3441,
        3450
      ],
      "op": "AND",
      "path": "27"
    },
    "2228": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2229": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2230": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2231": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5936,
        5940
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2233": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5952,
        6035
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 8,
      "value": "0x7F2"
    },
    "2236": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5973
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8C3"
    },
    "2239": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5971
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10E5"
    },
    "2242": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5961,
        5973
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2243": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5973
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2244": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5975,
        5982
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2245": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6034
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x89E"
    },
    "2248": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6023,
        6033
      ],
      "op": "DUP6",
      "path": "27"
    },
    "2249": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        5995
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "2251": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2253": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5996,
        6008
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8D4"
    },
    "2256": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5996,
        6006
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10E5"
    },
    "2259": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5996,
        6008
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2260": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5996,
        6008
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2267": {
      "op": "SHL"
    },
    "2268": {
      "op": "SUB"
    },
    "2269": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2270": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2271": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "AND",
      "path": "27"
    },
    "2272": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2273": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2274": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2276": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2277": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP4",
      "path": "27"
    },
    "2278": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "ADD",
      "path": "27"
    },
    "2279": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "2280": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2281": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "2282": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2283": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2285": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2286": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2287": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "ADD",
      "path": "27"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2290": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2293": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2294": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "DUP13",
      "path": "27"
    },
    "2295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "AND",
      "path": "27"
    },
    "2296": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2297": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2300": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2302": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2303": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2304": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6022
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13C9"
    },
    "2307": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5984,
        6034
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2308": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2309": {
      "offset": [
        315,
        324
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x90C"
    },
    "2312": {
      "offset": [
        315,
        322
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0xC62"
    },
    "2315": {
      "jump": "i",
      "offset": [
        315,
        324
      ],
      "op": "JUMP",
      "path": "53"
    },
    "2316": {
      "branch": 105,
      "fn": "SushiToken.mint",
      "offset": [
        315,
        324
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "2317": {
      "offset": [
        307,
        325
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x915"
    },
    "2320": {
      "branch": 105,
      "offset": [
        307,
        325
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "2321": {
      "fn": "SushiToken.mint",
      "offset": [
        307,
        325
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "2323": {
      "fn": "SushiToken.mint",
      "offset": [
        307,
        325
      ],
      "op": "DUP1",
      "path": "53"
    },
    "2324": {
      "fn": "SushiToken.mint",
      "offset": [
        307,
        325
      ],
      "op": "REVERT",
      "path": "53"
    },
    "2325": {
      "fn": "SushiToken.mint",
      "offset": [
        307,
        325
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "2326": {
      "fn": "SushiToken.mint",
      "offset": [
        633,
        652
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 9,
      "value": "0x91F"
    },
    "2329": {
      "fn": "SushiToken.mint",
      "offset": [
        639,
        642
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2330": {
      "fn": "SushiToken.mint",
      "offset": [
        644,
        651
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2331": {
      "fn": "SushiToken.mint",
      "offset": [
        633,
        638
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1423"
    },
    "2334": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        633,
        652
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2335": {
      "fn": "SushiToken.mint",
      "offset": [
        633,
        652
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2342": {
      "op": "SHL"
    },
    "2343": {
      "op": "SUB"
    },
    "2344": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 10
    },
    "2345": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2346": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "AND",
      "path": "32"
    },
    "2347": {
      "fn": "SushiToken.mint",
      "offset": [
        685,
        686
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2349": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2350": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2351": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2352": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        699
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x8"
    },
    "2354": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2356": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2357": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2359": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2360": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2361": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2362": {
      "fn": "SushiToken.mint",
      "offset": [
        662,
        714
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x944"
    },
    "2365": {
      "fn": "SushiToken.mint",
      "offset": [
        662,
        714
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2366": {
      "fn": "SushiToken.mint",
      "offset": [
        689,
        704
      ],
      "op": "AND",
      "path": "32"
    },
    "2367": {
      "fn": "SushiToken.mint",
      "offset": [
        706,
        713
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2368": {
      "fn": "SushiToken.mint",
      "offset": [
        662,
        676
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1515"
    },
    "2371": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        662,
        714
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2372": {
      "fn": "SushiToken.mint",
      "offset": [
        662,
        714
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2373": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "POP",
      "path": "32"
    },
    "2374": {
      "fn": "SushiToken.mint",
      "offset": [
        562,
        721
      ],
      "op": "POP",
      "path": "32"
    },
    "2375": {
      "fn": "SushiToken.mint",
      "jump": "o",
      "offset": [
        562,
        721
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2376": {
      "fn": "SushiToken.delegates",
      "offset": [
        2680,
        2823
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2383": {
      "op": "SHL"
    },
    "2384": {
      "op": "SUB"
    },
    "2385": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "SWAP1",
      "path": "32",
      "statement": 11
    },
    "2386": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2387": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "AND",
      "path": "32"
    },
    "2388": {
      "fn": "SushiToken.delegates",
      "offset": [
        2765,
        2772
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2390": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2391": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2392": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2393": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2805
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x8"
    },
    "2395": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2397": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2398": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2400": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2401": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2402": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2403": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "AND",
      "path": "32"
    },
    "2404": {
      "fn": "SushiToken.delegates",
      "offset": [
        2795,
        2816
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2405": {
      "fn": "SushiToken.delegates",
      "jump": "o",
      "offset": [
        2680,
        2823
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2406": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2407": {
      "fn": "SushiToken.delegate",
      "offset": [
        3024,
        3056
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 12,
      "value": "0x970"
    },
    "2410": {
      "fn": "SushiToken.delegate",
      "offset": [
        3034,
        3044
      ],
      "op": "CALLER",
      "path": "32"
    },
    "2411": {
      "fn": "SushiToken.delegate",
      "offset": [
        3046,
        3055
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2412": {
      "fn": "SushiToken.delegate",
      "offset": [
        3024,
        3033
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1652"
    },
    "2415": {
      "fn": "SushiToken.delegate",
      "jump": "i",
      "offset": [
        3024,
        3056
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2416": {
      "fn": "SushiToken.delegate",
      "offset": [
        3024,
        3056
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2417": {
      "fn": "SushiToken.delegate",
      "offset": [
        2961,
        3063
      ],
      "op": "POP",
      "path": "32"
    },
    "2418": {
      "fn": "SushiToken.delegate",
      "jump": "o",
      "offset": [
        2961,
        3063
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2419": {
      "offset": [
        1596,
        1645
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2420": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xA"
    },
    "2422": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2424": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2425": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2427": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2428": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2429": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2430": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2432": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2433": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2434": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2435": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "2440": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "AND",
      "path": "32"
    },
    "2441": {
      "fn": "SushiToken.delegate",
      "offset": [
        1596,
        1645
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2442": {
      "fn": "SushiToken.delegate",
      "jump": "o",
      "offset": [
        1596,
        1645
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2443": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2450": {
      "op": "SHL"
    },
    "2451": {
      "op": "SUB"
    },
    "2452": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "AND",
      "path": "27",
      "statement": 13
    },
    "2453": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3739,
        3746
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2455": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2456": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2457": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2458": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3774
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "2460": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2462": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2463": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2465": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2466": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2467": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2468": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2469": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2470": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2471": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5595,
        5602
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2473": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5640,
        5652
      ],
      "op": "NUMBER",
      "path": "32",
      "statement": 14
    },
    "2474": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5626,
        5637
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2475": {
      "branch": 80,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5626,
        5652
      ],
      "op": "LT",
      "path": "32"
    },
    "2476": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x9E6"
    },
    "2479": {
      "branch": 80,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "2480": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2482": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "2483": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2489": {
      "op": "SHL"
    },
    "2490": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2491": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2492": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "2494": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "ADD",
      "path": "32"
    },
    "2495": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2496": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2497": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2499": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "ADD",
      "path": "32"
    },
    "2500": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2501": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2502": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "SUB",
      "path": "32"
    },
    "2503": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2504": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2505": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x28"
    },
    "2507": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2508": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2509": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2511": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "ADD",
      "path": "32"
    },
    "2512": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2513": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1B8C"
    },
    "2516": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x28"
    },
    "2518": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2519": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "2520": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2522": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "ADD",
      "path": "32"
    },
    "2523": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2524": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "POP",
      "path": "32"
    },
    "2525": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "POP",
      "path": "32"
    },
    "2526": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2528": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "2529": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2530": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2531": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "SUB",
      "path": "32"
    },
    "2532": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2533": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "REVERT",
      "path": "32"
    },
    "2534": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5618,
        5697
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2541": {
      "op": "SHL"
    },
    "2542": {
      "op": "SUB"
    },
    "2543": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2544": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "AND",
      "path": "32"
    },
    "2545": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5708,
        5727
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2547": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2548": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2549": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2550": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5744
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xA"
    },
    "2552": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2554": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2555": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2557": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2558": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2559": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2560": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "2565": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5730,
        5753
      ],
      "op": "AND",
      "path": "32"
    },
    "2566": {
      "branch": 81,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5767,
        5784
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2567": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5763,
        5819
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xA14"
    },
    "2570": {
      "branch": 81,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5763,
        5819
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "2571": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5807,
        5808
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 15,
      "value": "0x0"
    },
    "2573": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5800,
        5808
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2574": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5800,
        5808
      ],
      "op": "POP",
      "path": "32"
    },
    "2575": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5800,
        5808
      ],
      "op": "POP",
      "path": "32"
    },
    "2576": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5800,
        5808
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x7F6"
    },
    "2579": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5800,
        5808
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2580": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5763,
        5819
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2587": {
      "op": "SHL"
    },
    "2588": {
      "op": "SUB"
    },
    "2589": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "DUP5",
      "path": "32"
    },
    "2590": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "AND",
      "path": "32"
    },
    "2591": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2593": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2594": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2595": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2596": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5887
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x9"
    },
    "2598": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2600": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2601": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2602": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2603": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2605": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2606": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2607": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2608": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2615": {
      "op": "NOT"
    },
    "2616": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5897,
        5913
      ],
      "op": "DUP7",
      "path": "32"
    },
    "2617": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5897,
        5913
      ],
      "op": "ADD",
      "path": "32"
    },
    "2618": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2619": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "AND",
      "path": "32"
    },
    "2620": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "DUP6",
      "path": "32"
    },
    "2621": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2622": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2623": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2624": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2625": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2626": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2627": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5924
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2628": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5924
      ],
      "op": "AND",
      "path": "32"
    },
    "2629": {
      "branch": 82,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5939
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2630": {
      "op": "LT"
    },
    "2631": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5872,
        6017
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xA83"
    },
    "2634": {
      "branch": 82,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5872,
        6017
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2641": {
      "op": "SHL"
    },
    "2642": {
      "op": "SUB"
    },
    "2643": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "DUP5",
      "path": "32",
      "statement": 16
    },
    "2644": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "AND",
      "path": "32"
    },
    "2645": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2647": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2648": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2649": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2650": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5973
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x9"
    },
    "2652": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2654": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2655": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2656": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2657": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2659": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2660": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2661": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        5982
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2664": {
      "op": "NOT"
    },
    "2665": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5983,
        5999
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "2666": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5983,
        5999
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2667": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5983,
        5999
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "2668": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5983,
        5999
      ],
      "op": "ADD",
      "path": "32"
    },
    "2669": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        6000
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "2674": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        6000
      ],
      "op": "AND",
      "path": "32"
    },
    "2675": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        6000
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2676": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        6000
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2677": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        6000
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2678": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        6000
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2679": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        6000
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2680": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        6000
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2681": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5998,
        5999
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "2683": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        6006
      ],
      "op": "ADD",
      "path": "32"
    },
    "2684": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        6006
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2685": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5962,
        6006
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5955,
        6006
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x7F6"
    },
    "2690": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5955,
        6006
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2691": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5872,
        6017
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2698": {
      "op": "SHL"
    },
    "2699": {
      "op": "SUB"
    },
    "2700": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "DUP5",
      "path": "32"
    },
    "2701": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "AND",
      "path": "32"
    },
    "2702": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2704": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2705": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2706": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2707": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6086
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x9"
    },
    "2709": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2711": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2712": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2713": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2714": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2716": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2717": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2718": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6095
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2719": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6098
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2720": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6098
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2721": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6098
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2722": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6098
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2723": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6098
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2724": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6098
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2725": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6098
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2726": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6098
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2727": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6108
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2728": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6098
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "2733": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6108
      ],
      "op": "AND",
      "path": "32"
    },
    "2734": {
      "branch": 83,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6075,
        6122
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2735": {
      "op": "LT"
    },
    "2736": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6071,
        6157
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "2737": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6071,
        6157
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xABE"
    },
    "2740": {
      "branch": 83,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6071,
        6157
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "2741": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6145,
        6146
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 17,
      "value": "0x0"
    },
    "2743": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6138,
        6146
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2744": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6138,
        6146
      ],
      "op": "POP",
      "path": "32"
    },
    "2745": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6138,
        6146
      ],
      "op": "POP",
      "path": "32"
    },
    "2746": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6138,
        6146
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x7F6"
    },
    "2749": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6138,
        6146
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2750": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6071,
        6157
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2751": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6167,
        6179
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2755": {
      "op": "NOT"
    },
    "2756": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6208,
        6224
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2757": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6208,
        6224
      ],
      "op": "ADD",
      "path": "32"
    },
    "2758": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6234,
        6652
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2759": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6249,
        6254
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2760": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6241,
        6254
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "2765": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6241,
        6254
      ],
      "op": "AND",
      "path": "32"
    },
    "2766": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6241,
        6246
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2767": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6241,
        6254
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "2772": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6241,
        6254
      ],
      "op": "AND",
      "path": "32"
    },
    "2773": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6241,
        6254
      ],
      "op": "GT",
      "path": "32"
    },
    "2774": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6234,
        6652
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "2775": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6234,
        6652
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xB77"
    },
    "2778": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6234,
        6652
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "2779": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6312,
        6313
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x2"
    },
    "2781": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6295,
        6308
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2782": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6295,
        6308
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2783": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6295,
        6308
      ],
      "op": "SUB",
      "path": "32"
    },
    "2784": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6294,
        6313
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "2789": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6294,
        6313
      ],
      "op": "AND",
      "path": "32"
    },
    "2790": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6294,
        6313
      ],
      "op": "DIV",
      "path": "32"
    },
    "2791": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6286,
        6313
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2792": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6286,
        6313
      ],
      "op": "SUB",
      "path": "32"
    },
    "2793": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6374
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xAF0"
    },
    "2796": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6374
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x19F0"
    },
    "2799": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "i",
      "offset": [
        6354,
        6374
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2800": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6374
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2801": {
      "op": "POP"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2808": {
      "op": "SHL"
    },
    "2809": {
      "op": "SUB"
    },
    "2810": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "DUP8",
      "path": "32"
    },
    "2811": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "AND",
      "path": "32"
    },
    "2812": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2814": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2815": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2816": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2817": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6388
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x9"
    },
    "2819": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2821": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2822": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2823": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2824": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2826": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2827": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2828": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6397
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2829": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "2834": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2835": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "DUP7",
      "path": "32"
    },
    "2836": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "AND",
      "path": "32"
    },
    "2837": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "DUP6",
      "path": "32"
    },
    "2838": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2839": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2840": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2841": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2842": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2843": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2844": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2845": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6377,
        6405
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2846": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2847": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "2848": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2849": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2850": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "ADD",
      "path": "32"
    },
    "2851": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2852": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2853": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2854": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2855": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2856": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2857": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "2858": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "AND",
      "path": "32"
    },
    "2859": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2860": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2861": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2862": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "2864": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2865": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "2866": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "ADD",
      "path": "32"
    },
    "2867": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2868": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2869": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2870": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "ADD",
      "path": "32"
    },
    "2871": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2872": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2873": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2874": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2875": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6354,
        6405
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2876": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6423,
        6450
      ],
      "op": "DUP8",
      "path": "32"
    },
    "2877": {
      "branch": 84,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6423,
        6450
      ],
      "op": "EQ",
      "path": "32"
    },
    "2878": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6419,
        6642
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "2879": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6419,
        6642
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xB52"
    },
    "2882": {
      "branch": 84,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6419,
        6642
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "2883": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6477,
        6485
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 18,
      "value": "0x20"
    },
    "2885": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6477,
        6485
      ],
      "op": "ADD",
      "path": "32"
    },
    "2886": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6477,
        6485
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "2887": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6477,
        6485
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "2888": {
      "op": "POP"
    },
    "2889": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6470,
        6485
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x7F6"
    },
    "2892": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6470,
        6485
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "2893": {
      "op": "POP"
    },
    "2894": {
      "op": "POP"
    },
    "2895": {
      "op": "POP"
    },
    "2896": {
      "op": "POP"
    },
    "2897": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6470,
        6485
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2898": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6419,
        6642
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2899": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6510,
        6522
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2900": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6510,
        6522
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "2901": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6510,
        6536
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "2906": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6510,
        6536
      ],
      "op": "AND",
      "path": "32"
    },
    "2907": {
      "branch": 85,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6510,
        6536
      ],
      "op": "DUP8",
      "path": "32"
    },
    "2908": {
      "op": "GT"
    },
    "2909": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6506,
        6642
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "2910": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6506,
        6642
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xB69"
    },
    "2913": {
      "branch": 85,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6506,
        6642
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "2914": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6564,
        6570
      ],
      "op": "DUP2",
      "path": "32",
      "statement": 19
    },
    "2915": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6556,
        6570
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "2916": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6556,
        6570
      ],
      "op": "POP",
      "path": "32"
    },
    "2917": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6506,
        6642
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xB70"
    },
    "2920": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6506,
        6642
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2921": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6506,
        6642
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2922": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6626,
        6627
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 20,
      "value": "0x1"
    },
    "2924": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6617,
        6623
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2925": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6617,
        6627
      ],
      "op": "SUB",
      "path": "32"
    },
    "2926": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6609,
        6627
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2927": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6609,
        6627
      ],
      "op": "POP",
      "path": "32"
    },
    "2928": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6506,
        6642
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2929": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6234,
        6652
      ],
      "op": "POP",
      "path": "32"
    },
    "2930": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6234,
        6652
      ],
      "op": "POP",
      "path": "32"
    },
    "2931": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6234,
        6652
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xAC6"
    },
    "2934": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6234,
        6652
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2935": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6234,
        6652
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2936": {
      "op": "POP"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "op": "SUB"
    },
    "2945": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "DUP6",
      "path": "32",
      "statement": 21
    },
    "2946": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "AND",
      "path": "32"
    },
    "2947": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2949": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2950": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2951": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2952": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6679
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x9"
    },
    "2954": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2956": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2957": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2958": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2959": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2961": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2962": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2963": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6688
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2964": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6695
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "2969": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6695
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2970": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6695
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "2971": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6695
      ],
      "op": "AND",
      "path": "32"
    },
    "2972": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6695
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2973": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6695
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2974": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6695
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2975": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6695
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2976": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6695
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2977": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6695
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2978": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6701
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "2980": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6701
      ],
      "op": "ADD",
      "path": "32"
    },
    "2981": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6701
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2982": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6668,
        6701
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2983": {
      "op": "POP"
    },
    "2984": {
      "op": "POP"
    },
    "2985": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2986": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2987": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "POP",
      "path": "32"
    },
    "2988": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5490,
        6708
      ],
      "op": "POP",
      "path": "32"
    },
    "2989": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "o",
      "offset": [
        5490,
        6708
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2990": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "2991": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 22,
      "value": "0x1"
    },
    "2993": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3000": {
      "op": "SHL"
    },
    "3001": {
      "op": "SUB"
    },
    "3002": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "AND",
      "path": "53"
    },
    "3003": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        918,
        928
      ],
      "op": "CALLER",
      "path": "53"
    },
    "3004": {
      "branch": 106,
      "fn": "Owned.acceptOwnership",
      "offset": [
        918,
        940
      ],
      "op": "EQ",
      "path": "53"
    },
    "3005": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0xBC5"
    },
    "3008": {
      "branch": 106,
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "3009": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "3011": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "DUP1",
      "path": "53"
    },
    "3012": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "REVERT",
      "path": "53"
    },
    "3013": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "3014": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 23,
      "value": "0x1"
    },
    "3016": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "3017": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "3019": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "DUP1",
      "path": "53"
    },
    "3020": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "3021": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x40"
    },
    "3023": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3030": {
      "op": "SHL"
    },
    "3031": {
      "op": "SUB"
    },
    "3032": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SWAP4",
      "path": "53"
    },
    "3033": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "DUP5",
      "path": "53"
    },
    "3034": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "AND",
      "path": "53"
    },
    "3035": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SWAP4",
      "path": "53"
    },
    "3036": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "3037": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "3038": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "AND",
      "path": "53"
    },
    "3039": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "3040": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "PUSH32",
      "path": "53",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3073": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "3074": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "LOG3",
      "path": "53"
    },
    "3075": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 24,
      "value": "0x1"
    },
    "3077": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "DUP1",
      "path": "53"
    },
    "3078": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "3079": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "3081": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "DUP1",
      "path": "53"
    },
    "3082": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "op": "SUB"
    },
    "3091": {
      "op": "NOT"
    },
    "3092": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "3093": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "DUP2",
      "path": "53"
    },
    "3094": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "AND",
      "path": "53"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3101": {
      "op": "SHL"
    },
    "3102": {
      "op": "SUB"
    },
    "3103": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "DUP5",
      "path": "53"
    },
    "3104": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "AND",
      "path": "53"
    },
    "3105": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "OR",
      "path": "53"
    },
    "3106": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "3107": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "3108": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SSTORE",
      "path": "53"
    },
    "3109": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "AND",
      "path": "53",
      "statement": 25
    },
    "3110": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "3111": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "SSTORE",
      "path": "53"
    },
    "3112": {
      "fn": "Owned.acceptOwnership",
      "jump": "o",
      "offset": [
        866,
        1077
      ],
      "op": "JUMP",
      "path": "53"
    },
    "3113": {
      "offset": [
        2123,
        2162
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3114": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xB"
    },
    "3116": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3118": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3119": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3121": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3122": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3123": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3124": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3126": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3127": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3128": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "3129": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2123,
        2162
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3130": {
      "fn": "Owned.acceptOwnership",
      "jump": "o",
      "offset": [
        2123,
        2162
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3131": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3132": {
      "fn": "SushiToken.initToken",
      "offset": [
        399,
        416
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 26,
      "value": "0xC44"
    },
    "3135": {
      "fn": "SushiToken.initToken",
      "offset": [
        410,
        415
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3136": {
      "fn": "SushiToken.initToken",
      "offset": [
        399,
        409
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x16E7"
    },
    "3139": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        399,
        416
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3140": {
      "fn": "SushiToken.initToken",
      "offset": [
        399,
        416
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3141": {
      "fn": "SushiToken.initToken",
      "offset": [
        426,
        452
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 27,
      "value": "0xC4E"
    },
    "3144": {
      "fn": "SushiToken.initToken",
      "offset": [
        437,
        442
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3145": {
      "fn": "SushiToken.initToken",
      "offset": [
        444,
        451
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3146": {
      "fn": "SushiToken.initToken",
      "offset": [
        426,
        436
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x175C"
    },
    "3149": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        426,
        452
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3150": {
      "fn": "SushiToken.initToken",
      "offset": [
        426,
        452
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3151": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "POP",
      "path": "32"
    },
    "3152": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "POP",
      "path": "32"
    },
    "3153": {
      "fn": "SushiToken.initToken",
      "offset": [
        293,
        459
      ],
      "op": "POP",
      "path": "32"
    },
    "3154": {
      "fn": "SushiToken.initToken",
      "jump": "o",
      "offset": [
        293,
        459
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3155": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "3156": {
      "fn": "Owned.owner",
      "offset": [
        602,
        609
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "3158": {
      "fn": "Owned.owner",
      "offset": [
        628,
        634
      ],
      "op": "SLOAD",
      "path": "53",
      "statement": 28
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3165": {
      "op": "SHL"
    },
    "3166": {
      "op": "SUB"
    },
    "3167": {
      "fn": "Owned.owner",
      "offset": [
        628,
        634
      ],
      "op": "AND",
      "path": "53"
    },
    "3168": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "3169": {
      "fn": "Owned.owner",
      "jump": "o",
      "offset": [
        564,
        641
      ],
      "op": "JUMP",
      "path": "53"
    },
    "3170": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "3171": {
      "fn": "Owned.isOwner",
      "offset": [
        686,
        690
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "3173": {
      "fn": "Owned.isOwner",
      "offset": [
        723,
        729
      ],
      "op": "SLOAD",
      "path": "53",
      "statement": 29
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "op": "SUB"
    },
    "3182": {
      "fn": "Owned.isOwner",
      "offset": [
        723,
        729
      ],
      "op": "AND",
      "path": "53"
    },
    "3183": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "53"
    },
    "3184": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        729
      ],
      "op": "EQ",
      "path": "53"
    },
    "3185": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        729
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "3186": {
      "fn": "Owned.isOwner",
      "jump": "o",
      "offset": [
        646,
        736
      ],
      "op": "JUMP",
      "path": "53"
    },
    "3187": {
      "fn": "ERC20.symbol",
      "offset": [
        2650,
        2744
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3188": {
      "fn": "ERC20.symbol",
      "offset": [
        2730,
        2737
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 30,
      "value": "0x6"
    },
    "3190": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3191": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3192": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3194": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3195": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3196": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3198": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3200": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3204": {
      "op": "NOT"
    },
    "3205": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "3208": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "3210": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP9",
      "path": "27"
    },
    "3211": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "AND",
      "path": "27"
    },
    "3212": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3213": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MUL",
      "path": "27"
    },
    "3214": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "27"
    },
    "3215": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3216": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP6",
      "path": "27"
    },
    "3217": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "AND",
      "path": "27"
    },
    "3218": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "3219": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3220": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "3221": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DIV",
      "path": "27"
    },
    "3222": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "3223": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP5",
      "path": "27"
    },
    "3224": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "27"
    },
    "3225": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3226": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3227": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DIV",
      "path": "27"
    },
    "3228": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3229": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MUL",
      "path": "27"
    },
    "3230": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3231": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "27"
    },
    "3232": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3233": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "27"
    },
    "3234": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3235": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3236": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3237": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3238": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3239": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3240": {
      "fn": "ERC20.symbol",
      "offset": [
        2698,
        2711
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "3242": {
      "fn": "ERC20.symbol",
      "offset": [
        2698,
        2711
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "3243": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3244": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3245": {
      "fn": "ERC20.symbol",
      "offset": [
        2730,
        2737
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3246": {
      "fn": "ERC20.symbol",
      "offset": [
        2730,
        2737
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3247": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3248": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "27"
    },
    "3249": {
      "fn": "ERC20.symbol",
      "offset": [
        2730,
        2737
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3250": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3251": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3252": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3253": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7D4"
    },
    "3256": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3257": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3258": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3260": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "LT",
      "path": "27"
    },
    "3261": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7A9"
    },
    "3264": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3265": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "3268": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3269": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3270": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3271": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DIV",
      "path": "27"
    },
    "3272": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MUL",
      "path": "27"
    },
    "3273": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3274": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3275": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3276": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3278": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "27"
    },
    "3279": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3280": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7D4"
    },
    "3283": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3284": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3285": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6643,
        6647
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3287": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6659,
        6788
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 31,
      "value": "0x7F2"
    },
    "3290": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6668,
        6680
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCE1"
    },
    "3293": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6668,
        6678
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10E5"
    },
    "3296": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6668,
        6680
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3297": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6668,
        6680
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3298": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6689
      ],
      "op": "DUP5",
      "path": "27"
    },
    "3299": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x89E"
    },
    "3302": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6730,
        6745
      ],
      "op": "DUP6",
      "path": "27"
    },
    "3303": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3305": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3306": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3307": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "3309": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "ADD",
      "path": "27"
    },
    "3310": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3312": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3313": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3314": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x25"
    },
    "3316": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3317": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3318": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3320": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "ADD",
      "path": "27"
    },
    "3321": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C6F"
    },
    "3324": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x25"
    },
    "3326": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3327": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "CODECOPY",
      "path": "27"
    },
    "3328": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6702
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "3330": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3332": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6703,
        6715
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD0B"
    },
    "3335": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6703,
        6713
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10E5"
    },
    "3338": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6703,
        6715
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3339": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6703,
        6715
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3346": {
      "op": "SHL"
    },
    "3347": {
      "op": "SUB"
    },
    "3348": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3349": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3350": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "AND",
      "path": "27"
    },
    "3351": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3352": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3353": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3355": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3356": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3357": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "ADD",
      "path": "27"
    },
    "3358": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "3359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "3361": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3362": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3364": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3365": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "ADD",
      "path": "27"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3370": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3371": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3372": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "DUP14",
      "path": "27"
    },
    "3374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "AND",
      "path": "27"
    },
    "3375": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3376": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3377": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3378": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3379": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3380": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3381": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3382": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3383": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3384": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6729
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1332"
    },
    "3387": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6691,
        6787
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3388": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3389": {
      "fn": "ERC20.transfer",
      "offset": [
        4079,
        4083
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3391": {
      "fn": "ERC20.transfer",
      "offset": [
        4095,
        4137
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 32,
      "value": "0x7F2"
    },
    "3394": {
      "fn": "ERC20.transfer",
      "offset": [
        4105,
        4117
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD49"
    },
    "3397": {
      "fn": "ERC20.transfer",
      "offset": [
        4105,
        4115
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10E5"
    },
    "3400": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4105,
        4117
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3401": {
      "fn": "ERC20.transfer",
      "offset": [
        4105,
        4117
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3402": {
      "fn": "ERC20.transfer",
      "offset": [
        4119,
        4128
      ],
      "op": "DUP5",
      "path": "27"
    },
    "3403": {
      "fn": "ERC20.transfer",
      "offset": [
        4130,
        4136
      ],
      "op": "DUP5",
      "path": "27"
    },
    "3404": {
      "fn": "ERC20.transfer",
      "offset": [
        4095,
        4104
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x11D5"
    },
    "3407": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4095,
        4137
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3408": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "op": "SUB"
    },
    "3417": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3418": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "AND",
      "path": "32"
    },
    "3419": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4909,
        4916
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3421": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3422": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3423": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3424": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4968
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xA"
    },
    "3426": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3428": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3429": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3431": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3432": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3433": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "3434": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "3439": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4954,
        4977
      ],
      "op": "AND",
      "path": "32"
    },
    "3440": {
      "branch": 86,
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4994,
        5010
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 33
    },
    "3441": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4994,
        5061
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xD7B"
    },
    "3444": {
      "branch": 86,
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4994,
        5061
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "3445": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5060,
        5061
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3447": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4994,
        5061
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xDAD"
    },
    "3450": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4994,
        5061
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3451": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4994,
        5061
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3458": {
      "op": "SHL"
    },
    "3459": {
      "op": "SUB"
    },
    "3460": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3461": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "AND",
      "path": "32"
    },
    "3462": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3464": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3465": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3466": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3467": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5024
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x9"
    },
    "3469": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3471": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3472": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3473": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3474": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3476": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3477": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3478": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5033
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3479": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5051
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3486": {
      "op": "NOT"
    },
    "3487": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5034,
        5050
      ],
      "op": "DUP7",
      "path": "32"
    },
    "3488": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5034,
        5050
      ],
      "op": "ADD",
      "path": "32"
    },
    "3489": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5051
      ],
      "op": "AND",
      "path": "32"
    },
    "3490": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5051
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3491": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5051
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3492": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5051
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3493": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5051
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3494": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5051
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3495": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5051
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3496": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5051
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3497": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5049,
        5050
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "3499": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5057
      ],
      "op": "ADD",
      "path": "32"
    },
    "3500": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5013,
        5057
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "3501": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4994,
        5061
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3502": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4987,
        5061
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "3503": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4820,
        5068
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "op": "POP"
    },
    "3506": {
      "op": "POP"
    },
    "3507": {
      "fn": "SushiToken.getCurrentVotes",
      "jump": "o",
      "offset": [
        4820,
        5068
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3508": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3509": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3669,
        3692
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3511": {
      "offset": [
        1757,
        1837
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
    },
    "3544": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3795,
        3801
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xDDF"
    },
    "3547": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3795,
        3799
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x748"
    },
    "3550": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        3795,
        3801
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3551": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3795,
        3801
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3552": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3779,
        3803
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3553": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3779,
        3803
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3554": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3779,
        3803
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3555": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3779,
        3803
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3557": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3779,
        3803
      ],
      "op": "ADD",
      "path": "32"
    },
    "3558": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3779,
        3803
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3559": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3821,
        3833
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xDEE"
    },
    "3562": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3821,
        3831
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x17E7"
    },
    "3565": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        3821,
        3833
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3566": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3821,
        3833
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3567": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3569": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3570": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3571": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3573": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3574": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3575": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "ADD",
      "path": "32"
    },
    "3576": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP6",
      "path": "32"
    },
    "3577": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3578": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP6",
      "path": "32"
    },
    "3579": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3580": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3581": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3582": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "ADD",
      "path": "32"
    },
    "3583": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "3584": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3585": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "3586": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3587": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "3589": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3590": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "ADD",
      "path": "32"
    },
    "3591": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3592": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3593": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3594": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3595": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3859,
        3863
      ],
      "op": "ADDRESS",
      "path": "32"
    },
    "3596": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x80"
    },
    "3598": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3599": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3600": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "ADD",
      "path": "32"
    },
    "3601": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3602": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3603": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3604": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3605": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3606": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3607": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3608": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3609": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SUB",
      "path": "32"
    },
    "3610": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3611": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3612": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "ADD",
      "path": "32"
    },
    "3613": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3614": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3615": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xA0"
    },
    "3617": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3618": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "ADD",
      "path": "32"
    },
    "3619": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3620": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3718,
        3878
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3621": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3695,
        3888
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3622": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3695,
        3888
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3623": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3695,
        3888
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3624": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3695,
        3888
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3625": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3695,
        3888
      ],
      "op": "ADD",
      "path": "32"
    },
    "3626": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3695,
        3888
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3627": {
      "offset": [
        1974,
        2045
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
    },
    "3660": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xC0"
    },
    "3662": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3663": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "ADD",
      "path": "32"
    },
    "3664": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3671": {
      "op": "SHL"
    },
    "3672": {
      "op": "SUB"
    },
    "3673": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP12",
      "path": "32"
    },
    "3674": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "AND",
      "path": "32"
    },
    "3675": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xE0"
    },
    "3677": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3678": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "ADD",
      "path": "32"
    },
    "3679": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3680": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x100"
    },
    "3683": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3684": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "ADD",
      "path": "32"
    },
    "3685": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP11",
      "path": "32"
    },
    "3686": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3687": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3688": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x120"
    },
    "3691": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3692": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3693": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "ADD",
      "path": "32"
    },
    "3694": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP11",
      "path": "32"
    },
    "3695": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3696": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3697": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3698": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3699": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3700": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3701": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "SUB",
      "path": "32"
    },
    "3702": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3703": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3704": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "ADD",
      "path": "32"
    },
    "3705": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3706": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3707": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x140"
    },
    "3710": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3711": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "ADD",
      "path": "32"
    },
    "3712": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3713": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3943,
        4078
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3714": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3920,
        4088
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3715": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3920,
        4088
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3716": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3920,
        4088
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3717": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3920,
        4088
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3718": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3920,
        4088
      ],
      "op": "ADD",
      "path": "32"
    },
    "3719": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3920,
        4088
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3720": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3725": {
      "op": "SHL"
    },
    "3726": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x160"
    },
    "3729": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3730": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "ADD",
      "path": "32"
    },
    "3731": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3732": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x162"
    },
    "3735": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3736": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "ADD",
      "path": "32"
    },
    "3737": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3738": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3739": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3740": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x182"
    },
    "3743": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3744": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3745": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "ADD",
      "path": "32"
    },
    "3746": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3747": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3748": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3749": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3750": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3751": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3752": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP7",
      "path": "32"
    },
    "3753": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "SUB",
      "path": "32"
    },
    "3754": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3755": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3756": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "ADD",
      "path": "32"
    },
    "3757": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3758": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3759": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1A2"
    },
    "3762": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3763": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "ADD",
      "path": "32"
    },
    "3764": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3765": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3766": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4139,
        4258
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3767": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4116,
        4268
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3768": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4116,
        4268
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3769": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4116,
        4268
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3770": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4116,
        4268
      ],
      "op": "DUP8",
      "path": "32"
    },
    "3771": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4116,
        4268
      ],
      "op": "ADD",
      "path": "32"
    },
    "3772": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4116,
        4268
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3773": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4116,
        4268
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3774": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4116,
        4268
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3775": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4116,
        4268
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3778": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3779": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3780": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3781": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3782": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1C2"
    },
    "3785": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP7",
      "path": "32"
    },
    "3786": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "ADD",
      "path": "32"
    },
    "3787": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3788": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP7",
      "path": "32"
    },
    "3789": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3790": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3791": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3792": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3793": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xFF"
    },
    "3795": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP12",
      "path": "32"
    },
    "3796": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "AND",
      "path": "32"
    },
    "3797": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1E2"
    },
    "3800": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP8",
      "path": "32"
    },
    "3801": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "ADD",
      "path": "32"
    },
    "3802": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3803": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x202"
    },
    "3806": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP7",
      "path": "32"
    },
    "3807": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "ADD",
      "path": "32"
    },
    "3808": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP11",
      "path": "32"
    },
    "3809": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3810": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3811": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x222"
    },
    "3814": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP7",
      "path": "32"
    },
    "3815": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "ADD",
      "path": "32"
    },
    "3816": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP10",
      "path": "32"
    },
    "3817": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3818": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3819": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "3820": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3821": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3695,
        3888
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "3822": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3695,
        3888
      ],
      "op": "SWAP7",
      "path": "32"
    },
    "3823": {
      "op": "POP"
    },
    "3824": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3920,
        4088
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3825": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3920,
        4088
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "3826": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4116,
        4268
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "3827": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4116,
        4268
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "3828": {
      "op": "SWAP1"
    },
    "3829": {
      "op": "SWAP3"
    },
    "3830": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "3832": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "3833": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x242"
    },
    "3836": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3837": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3838": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "ADD",
      "path": "32"
    },
    "3839": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3842": {
      "op": "NOT"
    },
    "3843": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3844": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "ADD",
      "path": "32"
    },
    "3845": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "3846": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3847": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3848": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3849": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SUB",
      "path": "32"
    },
    "3850": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3851": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3852": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "ADD",
      "path": "32"
    },
    "3853": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3854": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3855": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "GAS",
      "path": "32"
    },
    "3856": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "STATICCALL",
      "path": "32"
    },
    "3857": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "3858": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3859": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "3860": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xF21"
    },
    "3863": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "3864": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "RETURNDATASIZE",
      "path": "32"
    },
    "3865": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3867": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3868": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "RETURNDATACOPY",
      "path": "32"
    },
    "3869": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "RETURNDATASIZE",
      "path": "32"
    },
    "3870": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3872": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "REVERT",
      "path": "32"
    },
    "3873": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3874": {
      "op": "POP"
    },
    "3875": {
      "op": "POP"
    },
    "3876": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3878": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3881": {
      "op": "NOT"
    },
    "3882": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "ADD",
      "path": "32"
    },
    "3883": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3884": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4299,
        4325
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3885": {
      "op": "POP"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3893": {
      "op": "SHL"
    },
    "3894": {
      "op": "SUB"
    },
    "3895": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4343,
        4366
      ],
      "op": "DUP2",
      "path": "32",
      "statement": 34
    },
    "3896": {
      "branch": 87,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4343,
        4366
      ],
      "op": "AND",
      "path": "32"
    },
    "3897": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xF73"
    },
    "3900": {
      "branch": 87,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "3901": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3903": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3910": {
      "op": "SHL"
    },
    "3911": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3912": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3913": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "3915": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "ADD",
      "path": "32"
    },
    "3916": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3917": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3918": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3920": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "ADD",
      "path": "32"
    },
    "3921": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3922": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3923": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "SUB",
      "path": "32"
    },
    "3924": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3925": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3926": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x27"
    },
    "3928": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3929": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3930": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3932": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "ADD",
      "path": "32"
    },
    "3933": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3934": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1BFF"
    },
    "3937": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x27"
    },
    "3939": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3940": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "3941": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3943": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "ADD",
      "path": "32"
    },
    "3944": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3945": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "POP",
      "path": "32"
    },
    "3946": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "POP",
      "path": "32"
    },
    "3947": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3949": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3950": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3951": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3952": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "SUB",
      "path": "32"
    },
    "3953": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3954": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "REVERT",
      "path": "32"
    },
    "3955": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4335,
        4410
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3962": {
      "op": "SHL"
    },
    "3963": {
      "op": "SUB"
    },
    "3964": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4454
      ],
      "op": "DUP2",
      "path": "32",
      "statement": 35
    },
    "3965": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4454
      ],
      "op": "AND",
      "path": "32"
    },
    "3966": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4454
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3968": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4454
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3969": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4454
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3970": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4454
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3971": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4443
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xB"
    },
    "3973": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4454
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3975": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4454
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3976": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4454
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3978": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4454
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3979": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4454
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3980": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4456
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3981": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4456
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "3982": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4456
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "3984": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4456
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3985": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4456
      ],
      "op": "ADD",
      "path": "32"
    },
    "3986": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4456
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3987": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4456
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3988": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4437,
        4456
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "3989": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4428,
        4456
      ],
      "op": "DUP10",
      "path": "32"
    },
    "3990": {
      "branch": 88,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4428,
        4456
      ],
      "op": "EQ",
      "path": "32"
    },
    "3991": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xFD1"
    },
    "3994": {
      "branch": 88,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "3995": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3997": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3998": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4004": {
      "op": "SHL"
    },
    "4005": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4006": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4007": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "4009": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "ADD",
      "path": "32"
    },
    "4010": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4011": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4012": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "4014": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "ADD",
      "path": "32"
    },
    "4015": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "DUP3",
      "path": "32"
    },
    "4016": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4017": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "SUB",
      "path": "32"
    },
    "4018": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "DUP3",
      "path": "32"
    },
    "4019": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4020": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x23"
    },
    "4022": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4023": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4024": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "4026": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "ADD",
      "path": "32"
    },
    "4027": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4028": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1BDC"
    },
    "4031": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x23"
    },
    "4033": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4034": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "4035": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "4037": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "ADD",
      "path": "32"
    },
    "4038": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4039": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "POP",
      "path": "32"
    },
    "4040": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "POP",
      "path": "32"
    },
    "4041": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "4043": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "4044": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4045": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4046": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "SUB",
      "path": "32"
    },
    "4047": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4048": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "REVERT",
      "path": "32"
    },
    "4049": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4496
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "4050": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4521,
        4527
      ],
      "op": "DUP8",
      "path": "32",
      "statement": 36
    },
    "4051": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4514,
        4517
      ],
      "op": "TIMESTAMP",
      "path": "32"
    },
    "4052": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4514,
        4527
      ],
      "op": "GT",
      "path": "32"
    },
    "4053": {
      "branch": 89,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4514,
        4527
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "4054": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1010"
    },
    "4057": {
      "branch": 89,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "4058": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "4060": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "4061": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4067": {
      "op": "SHL"
    },
    "4068": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4069": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4070": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "4072": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "ADD",
      "path": "32"
    },
    "4073": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4074": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4075": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "4077": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "ADD",
      "path": "32"
    },
    "4078": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "DUP3",
      "path": "32"
    },
    "4079": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4080": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "SUB",
      "path": "32"
    },
    "4081": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "DUP3",
      "path": "32"
    },
    "4082": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4083": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x27"
    },
    "4085": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4086": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4087": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "4089": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "ADD",
      "path": "32"
    },
    "4090": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4091": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1ABE"
    },
    "4094": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x27"
    },
    "4096": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4097": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "4098": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "4100": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "ADD",
      "path": "32"
    },
    "4101": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4102": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "POP",
      "path": "32"
    },
    "4103": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "POP",
      "path": "32"
    },
    "4104": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "4106": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "4107": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4108": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4109": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "SUB",
      "path": "32"
    },
    "4110": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4111": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "REVERT",
      "path": "32"
    },
    "4112": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4506,
        4571
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "4113": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4588,
        4619
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 37,
      "value": "0x101A"
    },
    "4116": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4598,
        4607
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4117": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4609,
        4618
      ],
      "op": "DUP12",
      "path": "32"
    },
    "4118": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4588,
        4597
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1652"
    },
    "4121": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        4588,
        4619
      ],
      "op": "JUMP",
      "path": "32"
    },
    "4122": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4588,
        4619
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "4123": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4581,
        4619
      ],
      "op": "POP",
      "path": "32"
    },
    "4124": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4581,
        4619
      ],
      "op": "POP",
      "path": "32"
    },
    "4125": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4581,
        4619
      ],
      "op": "POP",
      "path": "32"
    },
    "4126": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4581,
        4619
      ],
      "op": "POP",
      "path": "32"
    },
    "4127": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "4128": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "POP",
      "path": "32"
    },
    "4129": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "POP",
      "path": "32"
    },
    "4130": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "POP",
      "path": "32"
    },
    "4131": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "POP",
      "path": "32"
    },
    "4132": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "POP",
      "path": "32"
    },
    "4133": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3486,
        4626
      ],
      "op": "POP",
      "path": "32"
    },
    "4134": {
      "fn": "SushiToken.delegateBySig",
      "jump": "o",
      "offset": [
        3486,
        4626
      ],
      "op": "JUMP",
      "path": "32"
    },
    "4135": {
      "offset": [
        156,
        179
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "4136": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        156,
        179
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x1"
    },
    "4138": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        156,
        179
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4145": {
      "op": "SHL"
    },
    "4146": {
      "op": "SUB"
    },
    "4147": {
      "offset": [
        156,
        179
      ],
      "op": "AND",
      "path": "53"
    },
    "4148": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        156,
        179
      ],
      "op": "DUP2",
      "path": "53"
    },
    "4149": {
      "fn": "SushiToken.delegateBySig",
      "jump": "o",
      "offset": [
        156,
        179
      ],
      "op": "JUMP",
      "path": "53"
    },
    "4150": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4157": {
      "op": "SHL"
    },
    "4158": {
      "op": "SUB"
    },
    "4159": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "SWAP2",
      "path": "27",
      "statement": 38
    },
    "4160": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4161": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "AND",
      "path": "27"
    },
    "4162": {
      "fn": "ERC20.allowance",
      "offset": [
        4312,
        4319
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4164": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4165": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4166": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4167": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4349
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "4169": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4171": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4172": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4173": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4174": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4176": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4177": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4178": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4179": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "4180": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4181": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "4182": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "AND",
      "path": "27"
    },
    "4183": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4184": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4185": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4186": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4187": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4188": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4189": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4190": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4191": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4192": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4193": {
      "offset": [
        1928,
        2045
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "4194": {
      "offset": [
        1974,
        2045
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
    },
    "4227": {
      "offset": [
        1928,
        2045
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4228": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        1928,
        2045
      ],
      "op": "JUMP",
      "path": "32"
    },
    "4229": {
      "offset": [
        1460,
        1530
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "4230": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x9"
    },
    "4232": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "4234": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4235": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4236": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4237": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "4239": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "4240": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP4",
      "path": "32"
    },
    "4241": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4242": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "4244": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4245": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP5",
      "path": "32"
    },
    "4246": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "4247": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4248": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4249": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4250": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4251": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP3",
      "path": "32"
    },
    "4252": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4253": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4254": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "4255": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4256": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "4257": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "4259": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4260": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4261": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "ADD",
      "path": "32"
    },
    "4262": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "4263": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "4268": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4269": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4270": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "AND",
      "path": "32"
    },
    "4271": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4272": {
      "fn": "ERC20.allowance",
      "offset": [
        1460,
        1530
      ],
      "op": "DUP3",
      "path": "32"
    },
    "4273": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        1460,
        1530
      ],
      "op": "JUMP",
      "path": "32"
    },
    "4274": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "4275": {
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        822
      ],
      "op": "PUSH2",
      "path": "53",
      "statement": 39,
      "value": "0x10BA"
    },
    "4278": {
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        820
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0xC62"
    },
    "4281": {
      "fn": "Owned.transferOwnership",
      "jump": "i",
      "offset": [
        813,
        822
      ],
      "op": "JUMP",
      "path": "53"
    },
    "4282": {
      "branch": 107,
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        822
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "4283": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x10C3"
    },
    "4286": {
      "branch": 107,
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "4287": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "4289": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "DUP1",
      "path": "53"
    },
    "4290": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "REVERT",
      "path": "53"
    },
    "4291": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "4292": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        841
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 40,
      "value": "0x1"
    },
    "4294": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "DUP1",
      "path": "53"
    },
    "4295": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4302": {
      "op": "SHL"
    },
    "4303": {
      "op": "SUB"
    },
    "4304": {
      "op": "NOT"
    },
    "4305": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "AND",
      "path": "53"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4312": {
      "op": "SHL"
    },
    "4313": {
      "op": "SUB"
    },
    "4314": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP3",
      "path": "53"
    },
    "4315": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "4316": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP3",
      "path": "53"
    },
    "4317": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "AND",
      "path": "53"
    },
    "4318": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "4319": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "4320": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "4321": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "OR",
      "path": "53"
    },
    "4322": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "4323": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SSTORE",
      "path": "53"
    },
    "4324": {
      "fn": "Owned.transferOwnership",
      "jump": "o",
      "offset": [
        742,
        860
      ],
      "op": "JUMP",
      "path": "53"
    },
    "4325": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4326": {
      "fn": "Context._msgSender",
      "offset": [
        677,
        687
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 41
    },
    "4327": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4328": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        590,
        694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4329": {
      "fn": "ERC20._approve",
      "offset": [
        9612,
        9952
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4336": {
      "op": "SHL"
    },
    "4337": {
      "op": "SUB"
    },
    "4338": {
      "fn": "ERC20._approve",
      "offset": [
        9713,
        9732
      ],
      "op": "DUP4",
      "path": "27",
      "statement": 42
    },
    "4339": {
      "branch": 99,
      "fn": "ERC20._approve",
      "offset": [
        9713,
        9732
      ],
      "op": "AND",
      "path": "27"
    },
    "4340": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x112E"
    },
    "4343": {
      "branch": 99,
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4344": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4346": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4353": {
      "op": "SHL"
    },
    "4354": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4355": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4356": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4358": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "ADD",
      "path": "27"
    },
    "4359": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4360": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4361": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4363": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "ADD",
      "path": "27"
    },
    "4364": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4365": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4366": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SUB",
      "path": "27"
    },
    "4367": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4368": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4369": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x24"
    },
    "4371": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4372": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4373": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4375": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "ADD",
      "path": "27"
    },
    "4376": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4377": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C4B"
    },
    "4380": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x24"
    },
    "4382": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4383": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "CODECOPY",
      "path": "27"
    },
    "4384": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4386": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "ADD",
      "path": "27"
    },
    "4387": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4388": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "POP",
      "path": "27"
    },
    "4389": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "POP",
      "path": "27"
    },
    "4390": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4392": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4393": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4394": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4395": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SUB",
      "path": "27"
    },
    "4396": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4397": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "REVERT",
      "path": "27"
    },
    "4398": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4405": {
      "op": "SHL"
    },
    "4406": {
      "op": "SUB"
    },
    "4407": {
      "fn": "ERC20._approve",
      "offset": [
        9791,
        9812
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 43
    },
    "4408": {
      "branch": 100,
      "fn": "ERC20._approve",
      "offset": [
        9791,
        9812
      ],
      "op": "AND",
      "path": "27"
    },
    "4409": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1173"
    },
    "4412": {
      "branch": 100,
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4413": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4415": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4416": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4422": {
      "op": "SHL"
    },
    "4423": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4424": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4425": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4427": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "ADD",
      "path": "27"
    },
    "4428": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4429": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4430": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4432": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "ADD",
      "path": "27"
    },
    "4433": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4434": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4435": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SUB",
      "path": "27"
    },
    "4436": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4437": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4438": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x22"
    },
    "4440": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4441": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4442": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4444": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "ADD",
      "path": "27"
    },
    "4445": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4446": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1AE5"
    },
    "4449": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x22"
    },
    "4451": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4452": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "CODECOPY",
      "path": "27"
    },
    "4453": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4455": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "ADD",
      "path": "27"
    },
    "4456": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4457": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "POP",
      "path": "27"
    },
    "4458": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "POP",
      "path": "27"
    },
    "4459": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4461": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4462": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4463": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4464": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SUB",
      "path": "27"
    },
    "4465": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4466": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "REVERT",
      "path": "27"
    },
    "4467": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4474": {
      "op": "SHL"
    },
    "4475": {
      "op": "SUB"
    },
    "4476": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 44
    },
    "4477": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP5",
      "path": "27"
    },
    "4478": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "AND",
      "path": "27"
    },
    "4479": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4481": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4482": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4483": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4484": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9873
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "4486": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4488": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4489": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4490": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4491": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4493": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4494": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4495": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4496": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "4497": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP8",
      "path": "27"
    },
    "4498": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "AND",
      "path": "27"
    },
    "4499": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4500": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP5",
      "path": "27"
    },
    "4501": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4502": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "4503": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4504": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4505": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4506": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4507": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4508": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4509": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9898
      ],
      "op": "DUP6",
      "path": "27"
    },
    "4510": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9898
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4511": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9898
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4512": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 45
    },
    "4513": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4514": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "DUP6",
      "path": "27"
    },
    "4515": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4516": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4517": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4518": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4519": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "4552": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "4553": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4554": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4555": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SUB",
      "path": "27"
    },
    "4556": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4557": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4558": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "ADD",
      "path": "27"
    },
    "4559": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4560": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "LOG3",
      "path": "27"
    },
    "4561": {
      "fn": "ERC20._approve",
      "offset": [
        9612,
        9952
      ],
      "op": "POP",
      "path": "27"
    },
    "4562": {
      "fn": "ERC20._approve",
      "offset": [
        9612,
        9952
      ],
      "op": "POP",
      "path": "27"
    },
    "4563": {
      "fn": "ERC20._approve",
      "offset": [
        9612,
        9952
      ],
      "op": "POP",
      "path": "27"
    },
    "4564": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9612,
        9952
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4565": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7820
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4572": {
      "op": "SHL"
    },
    "4573": {
      "op": "SUB"
    },
    "4574": {
      "fn": "ERC20._transfer",
      "offset": [
        7395,
        7415
      ],
      "op": "DUP4",
      "path": "27",
      "statement": 46
    },
    "4575": {
      "branch": 101,
      "fn": "ERC20._transfer",
      "offset": [
        7395,
        7415
      ],
      "op": "AND",
      "path": "27"
    },
    "4576": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x121A"
    },
    "4579": {
      "branch": 101,
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4580": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4582": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4583": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4589": {
      "op": "SHL"
    },
    "4590": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4591": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4592": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4594": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "ADD",
      "path": "27"
    },
    "4595": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4596": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4597": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4599": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "ADD",
      "path": "27"
    },
    "4600": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4601": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4602": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SUB",
      "path": "27"
    },
    "4603": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4604": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4605": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x25"
    },
    "4607": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4608": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4609": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4611": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "ADD",
      "path": "27"
    },
    "4612": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4613": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C26"
    },
    "4616": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x25"
    },
    "4618": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4619": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "CODECOPY",
      "path": "27"
    },
    "4620": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4622": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "ADD",
      "path": "27"
    },
    "4623": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4624": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "POP",
      "path": "27"
    },
    "4625": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "POP",
      "path": "27"
    },
    "4626": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4628": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4629": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4630": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4631": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SUB",
      "path": "27"
    },
    "4632": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4633": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "REVERT",
      "path": "27"
    },
    "4634": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4641": {
      "op": "SHL"
    },
    "4642": {
      "op": "SUB"
    },
    "4643": {
      "fn": "ERC20._transfer",
      "offset": [
        7475,
        7498
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 47
    },
    "4644": {
      "branch": 102,
      "fn": "ERC20._transfer",
      "offset": [
        7475,
        7498
      ],
      "op": "AND",
      "path": "27"
    },
    "4645": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x125F"
    },
    "4648": {
      "branch": 102,
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4649": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4651": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4658": {
      "op": "SHL"
    },
    "4659": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4660": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4661": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "4663": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "ADD",
      "path": "27"
    },
    "4664": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4665": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4666": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4668": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "ADD",
      "path": "27"
    },
    "4669": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4670": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4671": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SUB",
      "path": "27"
    },
    "4672": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4673": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4674": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x23"
    },
    "4676": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4677": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4678": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4680": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "ADD",
      "path": "27"
    },
    "4681": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4682": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A9B"
    },
    "4685": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x23"
    },
    "4687": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4688": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "CODECOPY",
      "path": "27"
    },
    "4689": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4691": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "ADD",
      "path": "27"
    },
    "4692": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4693": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "POP",
      "path": "27"
    },
    "4694": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "POP",
      "path": "27"
    },
    "4695": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4697": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4698": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4699": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4700": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SUB",
      "path": "27"
    },
    "4701": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4702": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "REVERT",
      "path": "27"
    },
    "4703": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4704": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7596
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 48,
      "value": "0x126A"
    },
    "4707": {
      "fn": "ERC20._transfer",
      "offset": [
        7570,
        7576
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4708": {
      "fn": "ERC20._transfer",
      "offset": [
        7578,
        7587
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4709": {
      "fn": "ERC20._transfer",
      "offset": [
        7589,
        7595
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4710": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7569
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC4E"
    },
    "4713": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7549,
        7596
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4714": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7596
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4715": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 49,
      "value": "0x12A7"
    },
    "4718": {
      "fn": "ERC20._transfer",
      "offset": [
        7649,
        7655
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4719": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4721": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4722": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4723": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "4725": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "ADD",
      "path": "27"
    },
    "4726": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4728": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4729": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4730": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x26"
    },
    "4732": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4733": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4734": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4736": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "ADD",
      "path": "27"
    },
    "4737": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B07"
    },
    "4740": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x26"
    },
    "4742": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4743": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "CODECOPY",
      "path": "27"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4750": {
      "op": "SHL"
    },
    "4751": {
      "op": "SUB"
    },
    "4752": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "DUP7",
      "path": "27"
    },
    "4753": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "AND",
      "path": "27"
    },
    "4754": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4756": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4757": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4758": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4759": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7636
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "4761": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4763": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4764": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4766": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4767": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4768": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4769": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4770": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4771": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7648
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1332"
    },
    "4774": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7627,
        7698
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4775": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4782": {
      "op": "SHL"
    },
    "4783": {
      "op": "SUB"
    },
    "4784": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4785": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP6",
      "path": "27"
    },
    "4786": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "AND",
      "path": "27"
    },
    "4787": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4789": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4790": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4791": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4792": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7616
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "4794": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4796": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4797": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4799": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4800": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4801": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4802": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7698
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "4803": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7698
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4804": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7698
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "4805": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7698
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4806": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "SWAP1",
      "path": "27",
      "statement": 50
    },
    "4807": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "DUP5",
      "path": "27"
    },
    "4808": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "AND",
      "path": "27"
    },
    "4809": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4810": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4811": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4812": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4813": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x12D6"
    },
    "4816": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4817": {
      "fn": "ERC20._transfer",
      "offset": [
        7756,
        7762
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4818": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7755
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13C9"
    },
    "4821": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4822": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4829": {
      "op": "SHL"
    },
    "4830": {
      "op": "SUB"
    },
    "4831": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP1",
      "path": "27"
    },
    "4832": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP5",
      "path": "27"
    },
    "4833": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "AND",
      "path": "27"
    },
    "4834": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4836": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4837": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4838": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4839": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7717
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "4841": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4843": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4844": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4845": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4846": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4848": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4849": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4850": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4851": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4852": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7763
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "4853": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7763
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4854": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7763
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "4855": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7763
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "4856": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 51
    },
    "4857": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4858": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP6",
      "path": "27"
    },
    "4859": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4860": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4861": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4862": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "4863": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4864": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "4865": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "4866": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP8",
      "path": "27"
    },
    "4867": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "AND",
      "path": "27"
    },
    "4868": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "4869": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4902": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "4903": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4904": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP3",
      "path": "27"
    },
    "4905": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4906": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SUB",
      "path": "27"
    },
    "4907": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "ADD",
      "path": "27"
    },
    "4908": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4909": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "LOG3",
      "path": "27"
    },
    "4910": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7820
      ],
      "op": "POP",
      "path": "27"
    },
    "4911": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7820
      ],
      "op": "POP",
      "path": "27"
    },
    "4912": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7820
      ],
      "op": "POP",
      "path": "27"
    },
    "4913": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7290,
        7820
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4914": {
      "fn": "SafeMath.sub",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4915": {
      "fn": "SafeMath.sub",
      "offset": [
        1832,
        1839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4917": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1879
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 52
    },
    "4918": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4919": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4920": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "GT",
      "path": "3"
    },
    "4921": {
      "branch": 109,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4922": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C1"
    },
    "4925": {
      "branch": 109,
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4926": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4928": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4935": {
      "op": "SHL"
    },
    "4936": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4937": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4938": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4940": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4941": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4942": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4943": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4945": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4946": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4947": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4948": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "4949": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4950": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4951": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4952": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4953": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4954": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4955": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4956": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4957": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4959": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4960": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4961": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "4962": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4963": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4964": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4965": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4967": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4968": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4969": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4970": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4971": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4972": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4974": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4975": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4976": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4977": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "LT",
      "path": "3"
    },
    "4978": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4979": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1386"
    },
    "4982": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4983": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4984": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4985": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4986": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4987": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4988": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4989": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4990": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4991": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4993": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4994": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x136E"
    },
    "4997": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4998": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4999": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5000": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5001": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5002": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5003": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5004": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5005": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5006": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5007": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5008": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5009": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5011": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "3"
    },
    "5012": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5013": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5014": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13B3"
    },
    "5017": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5018": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5019": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5020": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5021": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5022": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5023": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5025": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5026": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5028": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5029": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5032": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "EXP",
      "path": "3"
    },
    "5033": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5034": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "NOT",
      "path": "3"
    },
    "5035": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "3"
    },
    "5036": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5037": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5038": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5040": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5041": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5042": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5043": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5044": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5045": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5046": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5047": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5048": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5049": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5051": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5052": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5053": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5054": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5055": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5056": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5057": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5058": {
      "op": "POP"
    },
    "5059": {
      "op": "POP"
    },
    "5060": {
      "op": "POP"
    },
    "5061": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5062": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SUB",
      "path": "3"
    },
    "5063": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5064": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5065": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5066": {
      "fn": "SafeMath.add",
      "offset": [
        932,
        939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5068": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5069": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5070": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "ADD",
      "path": "3"
    },
    "5071": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 53
    },
    "5072": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5073": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "LT",
      "path": "3"
    },
    "5074": {
      "branch": 110,
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5075": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDAD"
    },
    "5078": {
      "branch": 110,
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5079": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5081": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5082": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5089": {
      "op": "SHL"
    },
    "5090": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5091": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5092": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5094": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5096": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5097": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5098": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5099": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "5101": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5103": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5104": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5105": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5106": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "5139": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "5141": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5142": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5143": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5144": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5145": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5146": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5147": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5148": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5149": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SUB",
      "path": "3"
    },
    "5150": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5152": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5153": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5154": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5155": {
      "fn": "ERC20._mint",
      "offset": [
        8090,
        8460
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5162": {
      "op": "SHL"
    },
    "5163": {
      "op": "SUB"
    },
    "5164": {
      "fn": "ERC20._mint",
      "offset": [
        8173,
        8194
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 54
    },
    "5165": {
      "branch": 103,
      "fn": "ERC20._mint",
      "offset": [
        8173,
        8194
      ],
      "op": "AND",
      "path": "27"
    },
    "5166": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x147E"
    },
    "5169": {
      "branch": 103,
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5170": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5172": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5173": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5180": {
      "op": "SHL"
    },
    "5181": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5182": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5183": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5185": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5187": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5188": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "ADD",
      "path": "27"
    },
    "5189": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5190": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "5192": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x24"
    },
    "5194": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5195": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "ADD",
      "path": "27"
    },
    "5196": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5197": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "5230": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x44"
    },
    "5232": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5233": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "ADD",
      "path": "27"
    },
    "5234": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5235": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5236": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5237": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5238": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5239": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5240": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SUB",
      "path": "27"
    },
    "5241": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x64"
    },
    "5243": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "ADD",
      "path": "27"
    },
    "5244": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5245": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "REVERT",
      "path": "27"
    },
    "5246": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5247": {
      "fn": "ERC20._mint",
      "offset": [
        8241,
        8290
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 55,
      "value": "0x148A"
    },
    "5250": {
      "fn": "ERC20._mint",
      "offset": [
        8270,
        8271
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5252": {
      "fn": "ERC20._mint",
      "offset": [
        8274,
        8281
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5253": {
      "fn": "ERC20._mint",
      "offset": [
        8283,
        8289
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5254": {
      "fn": "ERC20._mint",
      "offset": [
        8241,
        8261
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC4E"
    },
    "5257": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8241,
        8290
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5258": {
      "fn": "ERC20._mint",
      "offset": [
        8241,
        8290
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5259": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8328
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 56,
      "value": "0x4"
    },
    "5261": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8328
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5262": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8340
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1497"
    },
    "5265": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8340
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5266": {
      "fn": "ERC20._mint",
      "offset": [
        8333,
        8339
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5267": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8332
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13C9"
    },
    "5270": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8316,
        8340
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5271": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8340
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5272": {
      "fn": "ERC20._mint",
      "offset": [
        8301,
        8313
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "5274": {
      "fn": "ERC20._mint",
      "offset": [
        8301,
        8340
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5281": {
      "op": "SHL"
    },
    "5282": {
      "op": "SUB"
    },
    "5283": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 57
    },
    "5284": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "AND",
      "path": "27"
    },
    "5285": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5287": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5288": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5289": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5290": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8380
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "5292": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5294": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5295": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5297": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5298": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5299": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5300": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8401
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14BD"
    },
    "5303": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8401
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5304": {
      "fn": "ERC20._mint",
      "offset": [
        8394,
        8400
      ],
      "op": "DUP3",
      "path": "27"
    },
    "5305": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8393
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13C9"
    },
    "5308": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8371,
        8401
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5309": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8401
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5316": {
      "op": "SHL"
    },
    "5317": {
      "op": "SUB"
    },
    "5318": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5319": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "AND",
      "path": "27"
    },
    "5320": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5322": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5323": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5324": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5325": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8359
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "5327": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "5329": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5330": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5331": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5332": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5334": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP1",
      "path": "27"
    },
    "5335": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP4",
      "path": "27"
    },
    "5336": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "5337": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8401
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "5338": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8401
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5339": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8401
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "5340": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8401
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "5341": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "DUP4",
      "path": "27",
      "statement": 58
    },
    "5342": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5343": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "DUP6",
      "path": "27"
    },
    "5344": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5345": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5346": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "5347": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "5348": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5349": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "5350": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5351": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5352": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5385": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "5386": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "DUP2",
      "path": "27"
    },
    "5387": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5388": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SUB",
      "path": "27"
    },
    "5389": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5390": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "5391": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "ADD",
      "path": "27"
    },
    "5392": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5393": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "LOG3",
      "path": "27"
    },
    "5394": {
      "fn": "ERC20._mint",
      "offset": [
        8090,
        8460
      ],
      "op": "POP",
      "path": "27"
    },
    "5395": {
      "fn": "ERC20._mint",
      "offset": [
        8090,
        8460
      ],
      "op": "POP",
      "path": "27"
    },
    "5396": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8090,
        8460
      ],
      "op": "JUMP",
      "path": "27"
    },
    "5397": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7149,
        8078
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5398": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7254,
        7260
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5405": {
      "op": "SHL"
    },
    "5406": {
      "op": "SUB"
    },
    "5407": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7244,
        7260
      ],
      "op": "AND",
      "path": "32"
    },
    "5408": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7244,
        7250
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5415": {
      "op": "SHL"
    },
    "5416": {
      "op": "SUB"
    },
    "5417": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7244,
        7260
      ],
      "op": "AND",
      "path": "32"
    },
    "5418": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7244,
        7260
      ],
      "op": "EQ",
      "path": "32"
    },
    "5419": {
      "branch": 90,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7244,
        7260
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "5420": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7244,
        7274
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5421": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7244,
        7274
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "5422": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7244,
        7274
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1537"
    },
    "5425": {
      "branch": 90,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7244,
        7274
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5426": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7244,
        7274
      ],
      "op": "POP",
      "path": "32"
    },
    "5427": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7273,
        7274
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5429": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7264,
        7270
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5430": {
      "branch": 91,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7264,
        7274
      ],
      "op": "GT",
      "path": "32"
    },
    "5431": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7244,
        7274
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5432": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7240,
        8072
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "5433": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7240,
        8072
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xC4E"
    },
    "5436": {
      "branch": 91,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7240,
        8072
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5443": {
      "op": "SHL"
    },
    "5444": {
      "op": "SUB"
    },
    "5445": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7294,
        7314
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5446": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7294,
        7314
      ],
      "op": "AND",
      "path": "32"
    },
    "5447": {
      "branch": 92,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7294,
        7314
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "5448": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7290,
        7669
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x15C9"
    },
    "5451": {
      "branch": 92,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7290,
        7669
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5458": {
      "op": "SHL"
    },
    "5459": {
      "op": "SUB"
    },
    "5460": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5461": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "AND",
      "path": "32"
    },
    "5462": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7381,
        7397
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5464": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5465": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5466": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5467": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7414
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xA"
    },
    "5469": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5471": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5472": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5474": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5475": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5476": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "5477": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "5482": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "AND",
      "path": "32"
    },
    "5483": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7400,
        7422
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5484": {
      "branch": 93,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7460,
        7473
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5485": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7460,
        7520
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1577"
    },
    "5488": {
      "branch": 93,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7460,
        7520
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5489": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7519,
        7520
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5491": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7460,
        7520
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x15A9"
    },
    "5494": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7460,
        7520
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5495": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7460,
        7520
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5502": {
      "op": "SHL"
    },
    "5503": {
      "op": "SUB"
    },
    "5504": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "DUP6",
      "path": "32"
    },
    "5505": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "AND",
      "path": "32"
    },
    "5506": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5508": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5509": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5510": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5511": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7487
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x9"
    },
    "5513": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5515": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5516": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5517": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5518": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5520": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5521": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5522": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7495
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5523": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7510
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5530": {
      "op": "NOT"
    },
    "5531": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7496,
        7509
      ],
      "op": "DUP8",
      "path": "32"
    },
    "5532": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7496,
        7509
      ],
      "op": "ADD",
      "path": "32"
    },
    "5533": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7510
      ],
      "op": "AND",
      "path": "32"
    },
    "5534": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7510
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5535": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7510
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5536": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7510
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5537": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7510
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5538": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7510
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5539": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7510
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5540": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7510
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5541": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7508,
        7509
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "5543": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7516
      ],
      "op": "ADD",
      "path": "32"
    },
    "5544": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        7516
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "5545": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7460,
        7520
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5546": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7440,
        7520
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5547": {
      "op": "POP"
    },
    "5548": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7538,
        7555
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5550": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7558,
        7579
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x15B7"
    },
    "5553": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7440,
        7520
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5554": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7572,
        7578
      ],
      "op": "DUP6",
      "path": "32"
    },
    "5555": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7558,
        7571
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x17EB"
    },
    "5558": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        7558,
        7579
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5559": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7558,
        7579
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5560": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7538,
        7579
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5561": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7538,
        7579
      ],
      "op": "POP",
      "path": "32"
    },
    "5562": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7597,
        7654
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 59,
      "value": "0x15C5"
    },
    "5565": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7614,
        7620
      ],
      "op": "DUP7",
      "path": "32"
    },
    "5566": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7622,
        7631
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5567": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7633,
        7642
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5568": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7644,
        7653
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5569": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7597,
        7613
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x182D"
    },
    "5572": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        7597,
        7654
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5573": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7597,
        7654
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5574": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7290,
        7669
      ],
      "op": "POP",
      "path": "32"
    },
    "5575": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7290,
        7669
      ],
      "op": "POP",
      "path": "32"
    },
    "5576": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7290,
        7669
      ],
      "op": "POP",
      "path": "32"
    },
    "5577": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7290,
        7669
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5584": {
      "op": "SHL"
    },
    "5585": {
      "op": "SUB"
    },
    "5586": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7687,
        7707
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5587": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7687,
        7707
      ],
      "op": "AND",
      "path": "32"
    },
    "5588": {
      "branch": 94,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7687,
        7707
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "5589": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7683,
        8062
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xC4E"
    },
    "5592": {
      "branch": 94,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7683,
        8062
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5599": {
      "op": "SHL"
    },
    "5600": {
      "op": "SUB"
    },
    "5601": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5602": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "AND",
      "path": "32"
    },
    "5603": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7774,
        7790
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5605": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5606": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5607": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5608": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7807
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xA"
    },
    "5610": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5612": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5613": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5615": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5616": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5617": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "5618": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "5623": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "AND",
      "path": "32"
    },
    "5624": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7793,
        7815
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5625": {
      "branch": 95,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7853,
        7866
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5626": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7853,
        7913
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1604"
    },
    "5629": {
      "branch": 95,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7853,
        7913
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5630": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7912,
        7913
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5632": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7853,
        7913
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1636"
    },
    "5635": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7853,
        7913
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5636": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7853,
        7913
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5643": {
      "op": "SHL"
    },
    "5644": {
      "op": "SUB"
    },
    "5645": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5646": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "AND",
      "path": "32"
    },
    "5647": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5649": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5650": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5651": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5652": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7880
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x9"
    },
    "5654": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5656": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5657": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5658": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5659": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5661": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5662": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5663": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7888
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5664": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7903
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "5669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5671": {
      "op": "NOT"
    },
    "5672": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7889,
        7902
      ],
      "op": "DUP8",
      "path": "32"
    },
    "5673": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7889,
        7902
      ],
      "op": "ADD",
      "path": "32"
    },
    "5674": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7903
      ],
      "op": "AND",
      "path": "32"
    },
    "5675": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7903
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5676": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7903
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5677": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7903
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5678": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7903
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5679": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7903
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5680": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7903
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5681": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7903
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5682": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7901,
        7902
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "5684": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7909
      ],
      "op": "ADD",
      "path": "32"
    },
    "5685": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7869,
        7909
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "5686": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7853,
        7913
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5687": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7833,
        7913
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5688": {
      "op": "POP"
    },
    "5689": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7931,
        7948
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5691": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7951,
        7972
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1644"
    },
    "5694": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7833,
        7913
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5695": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7965,
        7971
      ],
      "op": "DUP6",
      "path": "32"
    },
    "5696": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7951,
        7964
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x13C9"
    },
    "5699": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        7951,
        7972
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5700": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7951,
        7972
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5701": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7931,
        7972
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5702": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7931,
        7972
      ],
      "op": "POP",
      "path": "32"
    },
    "5703": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7990,
        8047
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 60,
      "value": "0x101F"
    },
    "5706": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8007,
        8013
      ],
      "op": "DUP6",
      "path": "32"
    },
    "5707": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8015,
        8024
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5708": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8026,
        8035
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5709": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8037,
        8046
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5710": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7990,
        8006
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x182D"
    },
    "5713": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        7990,
        8047
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5714": {
      "fn": "SushiToken._delegate",
      "offset": [
        6714,
        7143
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5721": {
      "op": "SHL"
    },
    "5722": {
      "op": "SUB"
    },
    "5723": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5724": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5725": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "AND",
      "path": "32"
    },
    "5726": {
      "fn": "SushiToken._delegate",
      "offset": [
        6802,
        6825
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5728": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5729": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5730": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5731": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6838
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x8"
    },
    "5733": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5735": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5736": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5738": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5739": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5740": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "5741": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5742": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5743": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "AND",
      "path": "32"
    },
    "5744": {
      "fn": "SushiToken._delegate",
      "offset": [
        6828,
        6849
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5745": {
      "fn": "SushiToken._delegate",
      "offset": [
        6886,
        6906
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1679"
    },
    "5748": {
      "fn": "SushiToken._delegate",
      "offset": [
        6839,
        6848
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5749": {
      "fn": "SushiToken._delegate",
      "offset": [
        6886,
        6895
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x98B"
    },
    "5752": {
      "fn": "SushiToken._delegate",
      "jump": "i",
      "offset": [
        6886,
        6906
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5753": {
      "fn": "SushiToken._delegate",
      "offset": [
        6886,
        6906
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5760": {
      "op": "SHL"
    },
    "5761": {
      "op": "SUB"
    },
    "5762": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "DUP6",
      "path": "32",
      "statement": 61
    },
    "5763": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5764": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "AND",
      "path": "32"
    },
    "5765": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5767": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5768": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5769": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5770": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6972
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x8"
    },
    "5772": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5774": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5775": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5777": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5778": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5779": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5780": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5781": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5788": {
      "op": "SHL"
    },
    "5789": {
      "op": "SUB"
    },
    "5790": {
      "op": "NOT"
    },
    "5791": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "AND",
      "path": "32"
    },
    "5792": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "DUP10",
      "path": "32"
    },
    "5793": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "DUP7",
      "path": "32"
    },
    "5794": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "AND",
      "path": "32"
    },
    "5795": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5796": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5797": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "OR",
      "path": "32"
    },
    "5798": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5799": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5800": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "5801": {
      "fn": "SushiToken._delegate",
      "offset": [
        7011,
        7065
      ],
      "op": "SWAP1",
      "path": "32",
      "statement": 62
    },
    "5802": {
      "fn": "SushiToken._delegate",
      "offset": [
        7011,
        7065
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5803": {
      "fn": "SushiToken._delegate",
      "offset": [
        6859,
        6906
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "5804": {
      "fn": "SushiToken._delegate",
      "offset": [
        6859,
        6906
      ],
      "op": "SWAP6",
      "path": "32"
    },
    "5805": {
      "op": "POP"
    },
    "5806": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6995
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "5807": {
      "fn": "SushiToken._delegate",
      "offset": [
        7011,
        7065
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "5808": {
      "fn": "SushiToken._delegate",
      "offset": [
        7011,
        7065
      ],
      "op": "DUP7",
      "path": "32"
    },
    "5809": {
      "fn": "SushiToken._delegate",
      "offset": [
        7011,
        7065
      ],
      "op": "AND",
      "path": "32"
    },
    "5810": {
      "fn": "SushiToken._delegate",
      "offset": [
        7011,
        7065
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "5811": {
      "fn": "SushiToken._delegate",
      "offset": [
        7011,
        7065
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
    },
    "5844": {
      "fn": "SushiToken._delegate",
      "offset": [
        7011,
        7065
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5845": {
      "fn": "SushiToken._delegate",
      "offset": [
        6962,
        6983
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5846": {
      "fn": "SushiToken._delegate",
      "offset": [
        7011,
        7065
      ],
      "op": "LOG4",
      "path": "32"
    },
    "5847": {
      "fn": "SushiToken._delegate",
      "offset": [
        7076,
        7136
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 63,
      "value": "0x16E1"
    },
    "5850": {
      "fn": "SushiToken._delegate",
      "offset": [
        7091,
        7106
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5851": {
      "fn": "SushiToken._delegate",
      "offset": [
        7108,
        7117
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5852": {
      "fn": "SushiToken._delegate",
      "offset": [
        7119,
        7135
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5853": {
      "fn": "SushiToken._delegate",
      "offset": [
        7076,
        7090
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1515"
    },
    "5856": {
      "fn": "SushiToken._delegate",
      "jump": "i",
      "offset": [
        7076,
        7136
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5857": {
      "fn": "SushiToken._delegate",
      "offset": [
        7076,
        7136
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5858": {
      "fn": "SushiToken._delegate",
      "offset": [
        6714,
        7143
      ],
      "op": "POP",
      "path": "32"
    },
    "5859": {
      "fn": "SushiToken._delegate",
      "offset": [
        6714,
        7143
      ],
      "op": "POP",
      "path": "32"
    },
    "5860": {
      "fn": "SushiToken._delegate",
      "offset": [
        6714,
        7143
      ],
      "op": "POP",
      "path": "32"
    },
    "5861": {
      "fn": "SushiToken._delegate",
      "offset": [
        6714,
        7143
      ],
      "op": "POP",
      "path": "32"
    },
    "5862": {
      "fn": "SushiToken._delegate",
      "jump": "o",
      "offset": [
        6714,
        7143
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5863": {
      "fn": "Owned._initOwned",
      "offset": [
        349,
        558
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "5864": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 64,
      "value": "0x0"
    },
    "5866": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5871": {
      "op": "SHL"
    },
    "5872": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5873": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "DIV",
      "path": "53"
    },
    "5874": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0xFF"
    },
    "5876": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "AND",
      "path": "53"
    },
    "5877": {
      "branch": 108,
      "fn": "Owned._initOwned",
      "offset": [
        412,
        424
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "5878": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x16FE"
    },
    "5881": {
      "branch": 108,
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "5882": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "5884": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5885": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "REVERT",
      "path": "53"
    },
    "5886": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "5887": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 65,
      "value": "0x0"
    },
    "5889": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5890": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5895": {
      "op": "SHL"
    },
    "5896": {
      "op": "NOT"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5903": {
      "op": "SHL"
    },
    "5904": {
      "op": "SUB"
    },
    "5905": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5906": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP6",
      "path": "53"
    },
    "5907": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "AND",
      "path": "53"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5914": {
      "op": "SHL"
    },
    "5915": {
      "op": "SUB"
    },
    "5916": {
      "op": "NOT"
    },
    "5917": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5918": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP4",
      "path": "53"
    },
    "5919": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "AND",
      "path": "53"
    },
    "5920": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP3",
      "path": "53"
    },
    "5921": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5922": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP3",
      "path": "53"
    },
    "5923": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "OR",
      "path": "53"
    },
    "5924": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "AND",
      "path": "53",
      "statement": 66
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5929": {
      "op": "SHL"
    },
    "5930": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "OR",
      "path": "53"
    },
    "5931": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5932": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "DUP4",
      "path": "53"
    },
    "5933": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "SSTORE",
      "path": "53"
    },
    "5934": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 67,
      "value": "0x40"
    },
    "5936": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5937": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "5938": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "AND",
      "path": "53"
    },
    "5939": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "5940": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5941": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "PUSH32",
      "path": "53",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5974": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5975": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5976": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5977": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "LOG3",
      "path": "53"
    },
    "5978": {
      "fn": "Owned._initOwned",
      "offset": [
        349,
        558
      ],
      "op": "POP",
      "path": "53"
    },
    "5979": {
      "fn": "Owned._initOwned",
      "jump": "o",
      "offset": [
        349,
        558
      ],
      "op": "JUMP",
      "path": "53"
    },
    "5980": {
      "fn": "ERC20._initERC20",
      "offset": [
        2125,
        2382
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "5981": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 68,
      "value": "0x7"
    },
    "5983": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "5984": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "5987": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "5988": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "DIV",
      "path": "27"
    },
    "5989": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "5991": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "AND",
      "path": "27"
    },
    "5992": {
      "branch": 104,
      "fn": "ERC20._initERC20",
      "offset": [
        2214,
        2227
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "5993": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x17A3"
    },
    "5996": {
      "branch": 104,
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "5997": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "5999": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6000": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6004": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6006": {
      "op": "SHL"
    },
    "6007": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6008": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6009": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "6011": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "ADD",
      "path": "27"
    },
    "6012": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6013": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6014": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6016": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "ADD",
      "path": "27"
    },
    "6017": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6018": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6019": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SUB",
      "path": "27"
    },
    "6020": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP3",
      "path": "27"
    },
    "6021": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6022": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2A"
    },
    "6024": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP2",
      "path": "27"
    },
    "6025": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "6026": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6028": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "ADD",
      "path": "27"
    },
    "6029": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6030": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B2D"
    },
    "6033": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2A"
    },
    "6035": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6036": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "CODECOPY",
      "path": "27"
    },
    "6037": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6039": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "ADD",
      "path": "27"
    },
    "6040": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6041": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "POP",
      "path": "27"
    },
    "6042": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "POP",
      "path": "27"
    },
    "6043": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "6045": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6046": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6047": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6048": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SUB",
      "path": "27"
    },
    "6049": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6050": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "REVERT",
      "path": "27"
    },
    "6051": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6052": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 69
    },
    "6053": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6054": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x17B6"
    },
    "6057": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6058": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2289
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x5"
    },
    "6060": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2289
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6061": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6063": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "DUP6",
      "path": "27"
    },
    "6064": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "ADD",
      "path": "27"
    },
    "6065": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6066": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A07"
    },
    "6069": {
      "fn": "ERC20._initERC20",
      "jump": "i",
      "offset": [
        2284,
        2296
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6070": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6071": {
      "op": "POP"
    },
    "6072": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 70
    },
    "6073": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "6074": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x17CA"
    },
    "6077": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6078": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2313
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x6"
    },
    "6080": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2313
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6081": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "6083": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "DUP5",
      "path": "27"
    },
    "6084": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "ADD",
      "path": "27"
    },
    "6085": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6086": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A07"
    },
    "6089": {
      "fn": "ERC20._initERC20",
      "jump": "i",
      "offset": [
        2306,
        2322
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6090": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "6091": {
      "op": "POP"
    },
    "6092": {
      "op": "POP"
    },
    "6093": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2341
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 71,
      "value": "0x7"
    },
    "6095": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "DUP1",
      "path": "27"
    },
    "6096": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "6097": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6100": {
      "op": "NOT"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6103": {
      "op": "NOT"
    },
    "6104": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6105": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "6106": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "AND",
      "path": "27"
    },
    "6107": {
      "fn": "ERC20._initERC20",
      "offset": [
        2344,
        2346
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x12"
    },
    "6109": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "OR",
      "path": "27"
    },
    "6110": {
      "fn": "ERC20._initERC20",
      "offset": [
        2356,
        2375
      ],
      "op": "AND",
      "path": "27",
      "statement": 72
    },
    "6111": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "6114": {
      "fn": "ERC20._initERC20",
      "offset": [
        2356,
        2375
      ],
      "op": "OR",
      "path": "27"
    },
    "6115": {
      "fn": "ERC20._initERC20",
      "offset": [
        2356,
        2375
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "6116": {
      "fn": "ERC20._initERC20",
      "offset": [
        2356,
        2375
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "6117": {
      "op": "POP"
    },
    "6118": {
      "fn": "ERC20._initERC20",
      "jump": "o",
      "offset": [
        2125,
        2382
      ],
      "op": "JUMP",
      "path": "27"
    },
    "6119": {
      "fn": "SushiToken.getChainId",
      "offset": [
        8941,
        9090
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6120": {
      "fn": "SushiToken.getChainId",
      "offset": [
        9049,
        9058
      ],
      "op": "CHAINID",
      "path": "32"
    },
    "6121": {
      "fn": "SushiToken.getChainId",
      "offset": [
        8941,
        9090
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6122": {
      "fn": "SushiToken.getChainId",
      "jump": "o",
      "offset": [
        8941,
        9090
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6123": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6124": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6126": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 73,
      "value": "0xDAD"
    },
    "6129": {
      "fn": "SafeMath.sub",
      "offset": [
        1409,
        1410
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6130": {
      "fn": "SafeMath.sub",
      "offset": [
        1412,
        1413
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6131": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6133": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6134": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6135": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6137": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "6138": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6140": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6141": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6142": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "6144": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6145": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6146": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6148": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "6149": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "6182": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6183": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6184": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "POP",
      "path": "3"
    },
    "6185": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1332"
    },
    "6188": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1405,
        1448
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6189": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8084,
        8771
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6190": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8255,
        8273
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "6192": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1851"
    },
    "6195": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8283,
        8295
      ],
      "op": "NUMBER",
      "path": "32"
    },
    "6196": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "6198": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6199": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6200": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "6202": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "ADD",
      "path": "32"
    },
    "6203": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "6205": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6206": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6207": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x35"
    },
    "6209": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6210": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6211": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6213": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "ADD",
      "path": "32"
    },
    "6214": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1B57"
    },
    "6217": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x35"
    },
    "6219": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6220": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "6221": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8282
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1992"
    },
    "6224": {
      "fn": "SushiToken._writeCheckpoint",
      "jump": "i",
      "offset": [
        8276,
        8353
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6225": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8276,
        8353
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6226": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8255,
        8353
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6227": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8255,
        8353
      ],
      "op": "POP",
      "path": "32"
    },
    "6228": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8384
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "6230": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8368,
        8380
      ],
      "op": "DUP5",
      "path": "32"
    },
    "6231": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8368,
        8384
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "6236": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8368,
        8384
      ],
      "op": "AND",
      "path": "32"
    },
    "6237": {
      "branch": 96,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8368,
        8384
      ],
      "op": "GT",
      "path": "32"
    },
    "6238": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8368,
        8453
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6239": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8368,
        8453
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "6240": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8368,
        8453
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x189A"
    },
    "6243": {
      "branch": 96,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8368,
        8453
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "6244": {
      "op": "POP"
    },
    "6245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6251": {
      "op": "SHL"
    },
    "6252": {
      "op": "SUB"
    },
    "6253": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "DUP6",
      "path": "32"
    },
    "6254": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "AND",
      "path": "32"
    },
    "6255": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "6257": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6258": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6259": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6260": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8399
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x9"
    },
    "6262": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6264": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6265": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6266": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6267": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "6269": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6270": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6271": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8410
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "6272": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8453
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6279": {
      "op": "NOT"
    },
    "6280": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8411,
        8427
      ],
      "op": "DUP10",
      "path": "32"
    },
    "6281": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8411,
        8427
      ],
      "op": "ADD",
      "path": "32"
    },
    "6282": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8428
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6283": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8428
      ],
      "op": "AND",
      "path": "32"
    },
    "6284": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8428
      ],
      "op": "DUP6",
      "path": "32"
    },
    "6285": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8428
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6286": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8428
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6287": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8428
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6288": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8428
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6289": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8428
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6290": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8428
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "6291": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8438
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "6292": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8453
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6293": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8453
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6294": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8453
      ],
      "op": "AND",
      "path": "32"
    },
    "6295": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8438
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6296": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8438
      ],
      "op": "AND",
      "path": "32"
    },
    "6297": {
      "branch": 97,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8388,
        8453
      ],
      "op": "EQ",
      "path": "32"
    },
    "6298": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8368,
        8453
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6299": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8364,
        8698
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "6300": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8364,
        8698
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x18D7"
    },
    "6303": {
      "branch": 97,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8364,
        8698
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "6304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6310": {
      "op": "SHL"
    },
    "6311": {
      "op": "SUB"
    },
    "6312": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "DUP6",
      "path": "32",
      "statement": 74
    },
    "6313": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "AND",
      "path": "32"
    },
    "6314": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "6316": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6317": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6318": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6319": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8480
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x9"
    },
    "6321": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6323": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6324": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6325": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6326": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "6328": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6329": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6330": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8491
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "6331": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8509
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "6336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6338": {
      "op": "NOT"
    },
    "6339": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8492,
        8508
      ],
      "op": "DUP10",
      "path": "32"
    },
    "6340": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8492,
        8508
      ],
      "op": "ADD",
      "path": "32"
    },
    "6341": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8509
      ],
      "op": "AND",
      "path": "32"
    },
    "6342": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8509
      ],
      "op": "DUP5",
      "path": "32"
    },
    "6343": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8509
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6344": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8509
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6345": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8509
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6346": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8509
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6347": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8509
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6348": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8509
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "6349": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8507,
        8508
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "6351": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8515
      ],
      "op": "ADD",
      "path": "32"
    },
    "6352": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8526
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6353": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8526
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6354": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8469,
        8526
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "6355": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8364,
        8698
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1948"
    },
    "6358": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8364,
        8698
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6359": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8364,
        8698
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6360": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 75,
      "value": "0x40"
    },
    "6362": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6363": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6364": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6365": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6366": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "ADD",
      "path": "32"
    },
    "6367": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6368": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6369": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xFFFFFFFF"
    },
    "6374": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6375": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "DUP5",
      "path": "32"
    },
    "6376": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "AND",
      "path": "32"
    },
    "6377": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6378": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6379": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6381": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6382": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6383": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "ADD",
      "path": "32"
    },
    "6384": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "DUP7",
      "path": "32"
    },
    "6385": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6386": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8596,
        8629
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6393": {
      "op": "SHL"
    },
    "6394": {
      "op": "SUB"
    },
    "6395": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8579
      ],
      "op": "DUP11",
      "path": "32"
    },
    "6396": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8579
      ],
      "op": "AND",
      "path": "32"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6399": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8579
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6400": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8579
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6401": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8579
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6402": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8568
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x9"
    },
    "6404": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8579
      ],
      "op": "DUP5",
      "path": "32"
    },
    "6405": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8579
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6406": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8579
      ],
      "op": "DUP7",
      "path": "32"
    },
    "6407": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8579
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6408": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8579
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "6409": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8593
      ],
      "op": "DUP12",
      "path": "32"
    },
    "6410": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8593
      ],
      "op": "DUP7",
      "path": "32"
    },
    "6411": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8593
      ],
      "op": "AND",
      "path": "32"
    },
    "6412": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8593
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6413": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8593
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6414": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8593
      ],
      "op": "DUP5",
      "path": "32"
    },
    "6415": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8593
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6416": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8593
      ],
      "op": "DUP7",
      "path": "32"
    },
    "6417": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8593
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6418": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8593
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "6419": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "SWAP6",
      "path": "32"
    },
    "6420": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6421": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "DUP7",
      "path": "32"
    },
    "6422": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "6423": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6424": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "DUP7",
      "path": "32"
    },
    "6425": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "AND",
      "path": "32"
    },
    "6426": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6431": {
      "op": "NOT"
    },
    "6432": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6433": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6434": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "AND",
      "path": "32"
    },
    "6435": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "OR",
      "path": "32"
    },
    "6436": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "DUP8",
      "path": "32"
    },
    "6437": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "6438": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6439": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6440": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "6442": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "SWAP7",
      "path": "32"
    },
    "6443": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "DUP8",
      "path": "32"
    },
    "6444": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "ADD",
      "path": "32"
    },
    "6445": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8629
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "6446": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8668
      ],
      "op": "SWAP1",
      "path": "32",
      "statement": 76
    },
    "6447": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8668
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6448": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8668
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6449": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8657
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xA"
    },
    "6451": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8668
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6452": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8668
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6453": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8668
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6454": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8668
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "6455": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8668
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6456": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8668
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "6457": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8687
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6458": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8687
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "6459": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8671,
        8687
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6460": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8671,
        8687
      ],
      "op": "DUP9",
      "path": "32"
    },
    "6461": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8671,
        8687
      ],
      "op": "ADD",
      "path": "32"
    },
    "6462": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8687
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6463": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8687
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6464": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8687
      ],
      "op": "AND",
      "path": "32"
    },
    "6465": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8687
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6466": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8687
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6467": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8687
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6468": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8687
      ],
      "op": "AND",
      "path": "32"
    },
    "6469": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8687
      ],
      "op": "OR",
      "path": "32"
    },
    "6470": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8687
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6471": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8643,
        8687
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "6472": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8364,
        8698
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6473": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 77,
      "value": "0x40"
    },
    "6475": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6476": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6477": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "DUP5",
      "path": "32"
    },
    "6478": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6479": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6480": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6482": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6483": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "ADD",
      "path": "32"
    },
    "6484": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "DUP5",
      "path": "32"
    },
    "6485": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6486": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6487": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6488": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6495": {
      "op": "SHL"
    },
    "6496": {
      "op": "SUB"
    },
    "6497": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "DUP9",
      "path": "32"
    },
    "6498": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "AND",
      "path": "32"
    },
    "6499": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6500": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
    },
    "6533": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6534": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6535": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6536": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "SUB",
      "path": "32"
    },
    "6537": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "ADD",
      "path": "32"
    },
    "6538": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6539": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8713,
        8764
      ],
      "op": "LOG2",
      "path": "32"
    },
    "6540": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8084,
        8771
      ],
      "op": "POP",
      "path": "32"
    },
    "6541": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8084,
        8771
      ],
      "op": "POP",
      "path": "32"
    },
    "6542": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8084,
        8771
      ],
      "op": "POP",
      "path": "32"
    },
    "6543": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8084,
        8771
      ],
      "op": "POP",
      "path": "32"
    },
    "6544": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8084,
        8771
      ],
      "op": "POP",
      "path": "32"
    },
    "6545": {
      "fn": "SushiToken._writeCheckpoint",
      "jump": "o",
      "offset": [
        8084,
        8771
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6546": {
      "fn": "SushiToken.safe32",
      "offset": [
        8777,
        8935
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6547": {
      "fn": "SushiToken.safe32",
      "offset": [
        8852,
        8858
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "6549": {
      "fn": "SushiToken.safe32",
      "offset": [
        8889,
        8901
      ],
      "op": "DUP2",
      "path": "32",
      "statement": 78
    },
    "6550": {
      "fn": "SushiToken.safe32",
      "offset": [
        8882,
        8887
      ],
      "op": "PUSH5",
      "path": "32",
      "value": "0x100000000"
    },
    "6556": {
      "fn": "SushiToken.safe32",
      "offset": [
        8878,
        8887
      ],
      "op": "DUP5",
      "path": "32"
    },
    "6557": {
      "branch": 98,
      "fn": "SushiToken.safe32",
      "offset": [
        8878,
        8887
      ],
      "op": "LT",
      "path": "32"
    },
    "6558": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x19E8"
    },
    "6561": {
      "branch": 98,
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "6562": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "6564": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6565": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6571": {
      "op": "SHL"
    },
    "6572": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6573": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6574": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6576": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "6578": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6579": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "ADD",
      "path": "32"
    },
    "6580": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6581": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6582": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6583": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6584": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6585": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x24"
    },
    "6587": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP5",
      "path": "32"
    },
    "6588": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "ADD",
      "path": "32"
    },
    "6589": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6590": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6591": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6592": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6593": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6594": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6595": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6596": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x44"
    },
    "6598": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6599": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6600": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "ADD",
      "path": "32"
    },
    "6601": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6602": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6603": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP6",
      "path": "32"
    },
    "6604": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "ADD",
      "path": "32"
    },
    "6605": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6606": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6607": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6608": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6609": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "6611": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6612": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "6613": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1386"
    },
    "6616": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "6617": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6618": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6619": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "ADD",
      "path": "32"
    },
    "6620": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6621": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6622": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6623": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "ADD",
      "path": "32"
    },
    "6624": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6625": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6627": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "ADD",
      "path": "32"
    },
    "6628": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x136E"
    },
    "6631": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6632": {
      "fn": "SushiToken.safe32",
      "offset": [
        8870,
        8902
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6633": {
      "op": "POP"
    },
    "6634": {
      "fn": "SushiToken.safe32",
      "offset": [
        8926,
        8927
      ],
      "op": "SWAP2",
      "path": "32",
      "statement": 79
    },
    "6635": {
      "fn": "SushiToken.safe32",
      "offset": [
        8926,
        8927
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6636": {
      "fn": "SushiToken.safe32",
      "offset": [
        8777,
        8935
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6637": {
      "op": "POP"
    },
    "6638": {
      "op": "POP"
    },
    "6639": {
      "fn": "SushiToken.safe32",
      "jump": "o",
      "offset": [
        8777,
        8935
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6640": {
      "op": "JUMPDEST"
    },
    "6641": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6643": {
      "op": "DUP1"
    },
    "6644": {
      "op": "MLOAD"
    },
    "6645": {
      "op": "DUP1"
    },
    "6646": {
      "op": "DUP3"
    },
    "6647": {
      "op": "ADD"
    },
    "6648": {
      "op": "SWAP1"
    },
    "6649": {
      "op": "SWAP2"
    },
    "6650": {
      "op": "MSTORE"
    },
    "6651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6653": {
      "op": "DUP1"
    },
    "6654": {
      "op": "DUP3"
    },
    "6655": {
      "op": "MSTORE"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6658": {
      "op": "DUP3"
    },
    "6659": {
      "op": "ADD"
    },
    "6660": {
      "op": "MSTORE"
    },
    "6661": {
      "op": "SWAP1"
    },
    "6662": {
      "jump": "o",
      "op": "JUMP"
    },
    "6663": {
      "op": "JUMPDEST"
    },
    "6664": {
      "op": "DUP3"
    },
    "6665": {
      "op": "DUP1"
    },
    "6666": {
      "op": "SLOAD"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6669": {
      "op": "DUP2"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6672": {
      "op": "AND"
    },
    "6673": {
      "op": "ISZERO"
    },
    "6674": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6677": {
      "op": "MUL"
    },
    "6678": {
      "op": "SUB"
    },
    "6679": {
      "op": "AND"
    },
    "6680": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6682": {
      "op": "SWAP1"
    },
    "6683": {
      "op": "DIV"
    },
    "6684": {
      "op": "SWAP1"
    },
    "6685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6687": {
      "op": "MSTORE"
    },
    "6688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6692": {
      "op": "KECCAK256"
    },
    "6693": {
      "op": "SWAP1"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6696": {
      "op": "ADD"
    },
    "6697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6699": {
      "op": "SWAP1"
    },
    "6700": {
      "op": "DIV"
    },
    "6701": {
      "op": "DUP2"
    },
    "6702": {
      "op": "ADD"
    },
    "6703": {
      "op": "SWAP3"
    },
    "6704": {
      "op": "DUP3"
    },
    "6705": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6707": {
      "op": "LT"
    },
    "6708": {
      "op": "PUSH2",
      "value": "0x1A48"
    },
    "6711": {
      "op": "JUMPI"
    },
    "6712": {
      "op": "DUP1"
    },
    "6713": {
      "op": "MLOAD"
    },
    "6714": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6716": {
      "op": "NOT"
    },
    "6717": {
      "op": "AND"
    },
    "6718": {
      "op": "DUP4"
    },
    "6719": {
      "op": "DUP1"
    },
    "6720": {
      "op": "ADD"
    },
    "6721": {
      "op": "OR"
    },
    "6722": {
      "op": "DUP6"
    },
    "6723": {
      "op": "SSTORE"
    },
    "6724": {
      "op": "PUSH2",
      "value": "0x1A75"
    },
    "6727": {
      "op": "JUMP"
    },
    "6728": {
      "op": "JUMPDEST"
    },
    "6729": {
      "op": "DUP3"
    },
    "6730": {
      "op": "DUP1"
    },
    "6731": {
      "op": "ADD"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6734": {
      "op": "ADD"
    },
    "6735": {
      "op": "DUP6"
    },
    "6736": {
      "op": "SSTORE"
    },
    "6737": {
      "op": "DUP3"
    },
    "6738": {
      "op": "ISZERO"
    },
    "6739": {
      "op": "PUSH2",
      "value": "0x1A75"
    },
    "6742": {
      "op": "JUMPI"
    },
    "6743": {
      "op": "SWAP2"
    },
    "6744": {
      "op": "DUP3"
    },
    "6745": {
      "op": "ADD"
    },
    "6746": {
      "op": "JUMPDEST"
    },
    "6747": {
      "op": "DUP3"
    },
    "6748": {
      "op": "DUP2"
    },
    "6749": {
      "op": "GT"
    },
    "6750": {
      "op": "ISZERO"
    },
    "6751": {
      "op": "PUSH2",
      "value": "0x1A75"
    },
    "6754": {
      "op": "JUMPI"
    },
    "6755": {
      "op": "DUP3"
    },
    "6756": {
      "op": "MLOAD"
    },
    "6757": {
      "op": "DUP3"
    },
    "6758": {
      "op": "SSTORE"
    },
    "6759": {
      "op": "SWAP2"
    },
    "6760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6762": {
      "op": "ADD"
    },
    "6763": {
      "op": "SWAP2"
    },
    "6764": {
      "op": "SWAP1"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6767": {
      "op": "ADD"
    },
    "6768": {
      "op": "SWAP1"
    },
    "6769": {
      "op": "PUSH2",
      "value": "0x1A5A"
    },
    "6772": {
      "op": "JUMP"
    },
    "6773": {
      "op": "JUMPDEST"
    },
    "6774": {
      "op": "POP"
    },
    "6775": {
      "op": "PUSH2",
      "value": "0x1A81"
    },
    "6778": {
      "op": "SWAP3"
    },
    "6779": {
      "op": "SWAP2"
    },
    "6780": {
      "op": "POP"
    },
    "6781": {
      "op": "PUSH2",
      "value": "0x1A85"
    },
    "6784": {
      "jump": "i",
      "op": "JUMP"
    },
    "6785": {
      "op": "JUMPDEST"
    },
    "6786": {
      "op": "POP"
    },
    "6787": {
      "op": "SWAP1"
    },
    "6788": {
      "jump": "o",
      "op": "JUMP"
    },
    "6789": {
      "op": "JUMPDEST"
    },
    "6790": {
      "op": "JUMPDEST"
    },
    "6791": {
      "op": "DUP1"
    },
    "6792": {
      "op": "DUP3"
    },
    "6793": {
      "op": "GT"
    },
    "6794": {
      "op": "ISZERO"
    },
    "6795": {
      "op": "PUSH2",
      "value": "0x1A81"
    },
    "6798": {
      "op": "JUMPI"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6801": {
      "op": "DUP2"
    },
    "6802": {
      "op": "SSTORE"
    },
    "6803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6805": {
      "op": "ADD"
    },
    "6806": {
      "op": "PUSH2",
      "value": "0x1A86"
    },
    "6809": {
      "op": "JUMP"
    }
  },
  "sha1": "54c66a30b47dea85c45971e2190d6c4a2454c117",
  "source": "pragma solidity 0.6.12;\n\n\nimport \"./ERC20.sol\";\nimport \"../Utils/Owned.sol\";\nimport \"../../interfaces/IMisoToken.sol\";\n\n\n// GP: Change this to access control, remove owner, and set the minter role for mint\n\n// SushiToken with Governance.\ncontract SushiToken is Owned, ERC20, IMisoToken {\n\n    function initToken(string memory _name, string memory _symbol, address owner) external override {\n        _initOwned(owner);\n        _initERC20(_name, _symbol);\n    }\n\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n        _moveDelegates(address(0), _delegates[_to], _amount);\n    }\n\n    // Copied and modified from YAM code:\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernanceStorage.sol\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernance.sol\n    // Which is copied and modified from COMPOUND:\n    // https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/Comp.sol\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) internal _delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint256 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public nonces;\n\n      /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegator The address to get delegatee for\n     */\n    function delegates(address delegator)\n        external\n        view\n        returns (address)\n    {\n        return _delegates[delegator];\n    }\n\n   /**\n    * @notice Delegate votes from `msg.sender` to `delegatee`\n    * @param delegatee The address to delegate votes to\n    */\n    function delegate(address delegatee) external {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(\n        address delegatee,\n        uint nonce,\n        uint expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    )\n        external\n    {\n        bytes32 domainSeparator = keccak256(\n            abi.encode(\n                DOMAIN_TYPEHASH,\n                keccak256(bytes(name())),\n                getChainId(),\n                address(this)\n            )\n        );\n\n        bytes32 structHash = keccak256(\n            abi.encode(\n                DELEGATION_TYPEHASH,\n                delegatee,\n                nonce,\n                expiry\n            )\n        );\n\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                domainSeparator,\n                structHash\n            )\n        );\n\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"SUSHI::delegateBySig: invalid signature\");\n        require(nonce == nonces[signatory]++, \"SUSHI::delegateBySig: invalid nonce\");\n        require(now <= expiry, \"SUSHI::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account)\n        external\n        view\n        returns (uint256)\n    {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint blockNumber)\n        external\n        view\n        returns (uint256)\n    {\n        require(blockNumber < block.number, \"SUSHI::getPriorVotes: not yet determined\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee)\n        internal\n    {\n        address currentDelegate = _delegates[delegator];\n        uint256 delegatorBalance = balanceOf(delegator); // balance of underlying SUSHIs (not scaled);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                // decrease old representative\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount);\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                // increase new representative\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount);\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        address delegatee,\n        uint32 nCheckpoints,\n        uint256 oldVotes,\n        uint256 newVotes\n    )\n        internal\n    {\n        uint32 blockNumber = safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\");\n\n        if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n        } else {\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n            numCheckpoints[delegatee] = nCheckpoints + 1;\n        }\n\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function getChainId() internal pure returns (uint) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}",
  "sourceMap": "238:8854:32:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Tokens/SushiToken.sol",
  "type": "contract"
}