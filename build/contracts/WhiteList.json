{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "AccountListed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accessControls",
      "outputs": [
        {
          "internalType": "contract MISOAccessControls",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accessControls",
          "type": "address"
        }
      ],
      "name": "initWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isInWhiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "contracts/Access/WhiteList.sol",
    "72": "interfaces/IWhiteList.sol"
  },
  "ast": {
    "absolutePath": "contracts/Access/WhiteList.sol",
    "exportedSymbols": {
      "WhiteList": [
        633
      ]
    },
    "id": 634,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 434,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "contracts/Access/MISOAccessControls.sol",
        "file": "./MISOAccessControls.sol",
        "id": 435,
        "nodeType": "ImportDirective",
        "scope": 634,
        "sourceUnit": 283,
        "src": "295:34:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IWhiteList.sol",
        "file": "../../interfaces/IWhiteList.sol",
        "id": 436,
        "nodeType": "ImportDirective",
        "scope": 634,
        "sourceUnit": 17476,
        "src": "330:41:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 437,
              "name": "IWhiteList",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17475,
              "src": "587:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWhiteList_$17475",
                "typeString": "contract IWhiteList"
              }
            },
            "id": 438,
            "nodeType": "InheritanceSpecifier",
            "src": "587:10:11"
          }
        ],
        "contractDependencies": [
          17475
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 633,
        "linearizedBaseContracts": [
          633,
          17475
        ],
        "name": "WhiteList",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "372c12b1",
            "id": 442,
            "mutability": "mutable",
            "name": "whiteList",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 633,
            "src": "605:41:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 441,
              "keyType": {
                "id": 439,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "613:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "605:24:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 440,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "624:4:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "748365ef",
            "id": 444,
            "mutability": "mutable",
            "name": "accessControls",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 633,
            "src": "652:40:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MISOAccessControls_$282",
              "typeString": "contract MISOAccessControls"
            },
            "typeName": {
              "contractScope": null,
              "id": 443,
              "name": "MISOAccessControls",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 282,
              "src": "652:18:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                "typeString": "contract MISOAccessControls"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 446,
            "mutability": "mutable",
            "name": "initialised",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 633,
            "src": "698:24:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 445,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "698:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 452,
            "name": "AccountListed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 452,
                  "src": "749:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 452,
                  "src": "774:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "748:38:11"
            },
            "src": "729:58:11"
          },
          {
            "body": {
              "id": 455,
              "nodeType": "Block",
              "src": "814:7:11",
              "statements": []
            },
            "documentation": null,
            "id": 456,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "804:2:11"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:11"
            },
            "scope": 633,
            "src": "793:28:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17474
            ],
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "890:151:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "908:12:11",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 463,
                          "name": "initialised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "909:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920696e697469616c69736564",
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "922:21:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_040ac15e9431de40e29f41190238b496a8b10fd05cc15c4fe362b05a4f20de18",
                          "typeString": "literal_string \"Already initialised\""
                        },
                        "value": "Already initialised"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_040ac15e9431de40e29f41190238b496a8b10fd05cc15c4fe362b05a4f20de18",
                          "typeString": "literal_string \"Already initialised\""
                        }
                      ],
                      "id": 462,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "900:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:44:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "900:44:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 468,
                      "name": "accessControls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 444,
                      "src": "954:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 470,
                          "name": "_accessControls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "990:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 469,
                        "name": "MISOAccessControls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "971:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MISOAccessControls_$282_$",
                          "typeString": "type(contract MISOAccessControls)"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "971:35:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "src": "954:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                      "typeString": "contract MISOAccessControls"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "954:52:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 474,
                      "name": "initialised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "1016:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1030:4:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1016:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:18:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ce83c50f",
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 460,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "882:8:11"
            },
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "_accessControls",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 479,
                  "src": "850:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "849:25:11"
            },
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "890:0:11"
            },
            "scope": 633,
            "src": "827:214:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17457
            ],
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "1123:42:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 487,
                      "name": "whiteList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "1140:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 489,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 488,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 481,
                      "src": "1150:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1140:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 486,
                  "id": 490,
                  "nodeType": "Return",
                  "src": "1133:25:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "96bfc229",
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 483,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1099:8:11"
            },
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 481,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 492,
                  "src": "1070:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1069:17:11"
            },
            "returnParameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 485,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 492,
                  "src": "1117:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1116:6:11"
            },
            "scope": 633,
            "src": "1047:118:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17463
            ],
            "body": {
              "id": 562,
              "nodeType": "Block",
              "src": "1236:464:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 502,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1300:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1300:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 500,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 444,
                            "src": "1269:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasOperatorRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 137,
                          "src": "1269:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1269:42:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57686974656c6973742e61646457686974654c6973743a2053656e646572206d757374206265206f70657261746f72",
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1325:49:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c496c82798c4984aece1b02017c5a530f5ccfa367827f9f01b513323b6da49f8",
                          "typeString": "literal_string \"Whitelist.addWhiteList: Sender must be operator\""
                        },
                        "value": "Whitelist.addWhiteList: Sender must be operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c496c82798c4984aece1b02017c5a530f5ccfa367827f9f01b513323b6da49f8",
                          "typeString": "literal_string \"Whitelist.addWhiteList: Sender must be operator\""
                        }
                      ],
                      "id": 499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1248:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1248:136:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "1248:136:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 509,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 495,
                            "src": "1402:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1402:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1421:1:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1402:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1394:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1394:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "1394:29:11"
                },
                {
                  "body": {
                    "id": 560,
                    "nodeType": "Block",
                    "src": "1476:218:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 527,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 495,
                                  "src": "1498:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 529,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 528,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 516,
                                  "src": "1507:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1498:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 532,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1521:1:11",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1513:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 530,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1513:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1513:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1498:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 526,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1490:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1490:34:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 536,
                        "nodeType": "ExpressionStatement",
                        "src": "1490:34:11"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1542:23:11",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 537,
                              "name": "whiteList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "1543:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 541,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 538,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 495,
                                "src": "1553:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 540,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 539,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 516,
                                "src": "1562:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1553:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1543:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 559,
                        "nodeType": "IfStatement",
                        "src": "1538:146:11",
                        "trueBody": {
                          "id": 558,
                          "nodeType": "Block",
                          "src": "1567:117:11",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 543,
                                    "name": "whiteList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 442,
                                    "src": "1585:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 547,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 544,
                                      "name": "accounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 495,
                                      "src": "1595:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 546,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 545,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 516,
                                      "src": "1604:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1595:11:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1585:22:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 548,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1610:4:11",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1585:29:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 550,
                              "nodeType": "ExpressionStatement",
                              "src": "1585:29:11"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 552,
                                      "name": "accounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 495,
                                      "src": "1651:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 554,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 553,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 516,
                                      "src": "1660:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1651:11:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "74727565",
                                    "id": 555,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1664:4:11",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 551,
                                  "name": "AccountListed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 452,
                                  "src": "1637:13:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool)"
                                  }
                                },
                                "id": 556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1637:32:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 557,
                              "nodeType": "EmitStatement",
                              "src": "1632:37:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 519,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "1450:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 520,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "1454:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1454:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1450:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 561,
                  "initializationExpression": {
                    "assignments": [
                      516
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 561,
                        "src": "1438:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1438:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 518,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1447:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1438:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1471:3:11",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 523,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "1471:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 525,
                    "nodeType": "ExpressionStatement",
                    "src": "1471:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "1433:261:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5e1045ec",
            "id": 563,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 497,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1227:8:11"
            },
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 563,
                  "src": "1193:25:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 493,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 494,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1193:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1192:27:11"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1236:0:11"
            },
            "scope": 633,
            "src": "1171:529:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17469
            ],
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "1773:464:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 573,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1835:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1835:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 571,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 444,
                            "src": "1804:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasOperatorRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 137,
                          "src": "1804:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1804:42:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57686974656c6973742e72656d6f766557686974654c6973743a2053656e646572206d757374206265206f70657261746f72",
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1860:52:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d53a28e75b86fa42627d7adbf65412497e50561ff4cdaaaea5736d16c3e58f11",
                          "typeString": "literal_string \"Whitelist.removeWhiteList: Sender must be operator\""
                        },
                        "value": "Whitelist.removeWhiteList: Sender must be operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d53a28e75b86fa42627d7adbf65412497e50561ff4cdaaaea5736d16c3e58f11",
                          "typeString": "literal_string \"Whitelist.removeWhiteList: Sender must be operator\""
                        }
                      ],
                      "id": 570,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1783:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1783:139:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "1783:139:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 580,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 566,
                            "src": "1939:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1939:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1958:1:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1939:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1931:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1931:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "1931:29:11"
                },
                {
                  "body": {
                    "id": 629,
                    "nodeType": "Block",
                    "src": "2013:218:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 598,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 566,
                                  "src": "2035:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 600,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 599,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 587,
                                  "src": "2044:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2035:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 603,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2058:1:11",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 602,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2050:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 601,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2050:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2050:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2035:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 597,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2027:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2027:34:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 607,
                        "nodeType": "ExpressionStatement",
                        "src": "2027:34:11"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 608,
                            "name": "whiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "2079:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 612,
                          "indexExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 609,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 566,
                              "src": "2089:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 611,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 610,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "2098:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2089:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2079:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 628,
                        "nodeType": "IfStatement",
                        "src": "2075:146:11",
                        "trueBody": {
                          "id": 627,
                          "nodeType": "Block",
                          "src": "2103:118:11",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "2121:29:11",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 613,
                                    "name": "whiteList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 442,
                                    "src": "2128:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 617,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 614,
                                      "name": "accounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 566,
                                      "src": "2138:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 616,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 615,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 587,
                                      "src": "2147:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2138:11:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2128:22:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 619,
                              "nodeType": "ExpressionStatement",
                              "src": "2121:29:11"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 621,
                                      "name": "accounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 566,
                                      "src": "2187:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 623,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 622,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 587,
                                      "src": "2196:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2187:11:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "66616c7365",
                                    "id": 624,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2200:5:11",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 620,
                                  "name": "AccountListed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 452,
                                  "src": "2173:13:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool)"
                                  }
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2173:33:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 626,
                              "nodeType": "EmitStatement",
                              "src": "2168:38:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 590,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "1987:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 591,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "1991:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1991:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1987:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 630,
                  "initializationExpression": {
                    "assignments": [
                      587
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 630,
                        "src": "1975:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1975:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 589,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1984:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1975:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2008:3:11",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 594,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "2008:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 596,
                    "nodeType": "ExpressionStatement",
                    "src": "2008:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "1970:261:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "39745791",
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 568,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1764:8:11"
            },
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 632,
                  "src": "1730:25:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 564,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1730:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 565,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1730:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1729:27:11"
            },
            "returnParameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1773:0:11"
            },
            "scope": 633,
            "src": "1705:532:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 634,
        "src": "565:1674:11"
      }
    ],
    "src": "0:2240:11"
  },
  "bytecode": "608060405234801561001057600080fd5b5061077f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063372c12b11461006757806339745791146100a15780635e1045ec14610146578063748365ef146101e957806396bfc2291461020d578063ce83c50f14610233575b600080fd5b61008d6004803603602081101561007d57600080fd5b50356001600160a01b0316610259565b604080519115158252519081900360200190f35b610144600480360360208110156100b757600080fd5b8101906020810181356401000000008111156100d257600080fd5b8201836020820111156100e457600080fd5b8035906020019184602083028401116401000000008311171561010657600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061026e945050505050565b005b6101446004803603602081101561015c57600080fd5b81019060208101813564010000000081111561017757600080fd5b82018360208201111561018957600080fd5b803590602001918460208302840111640100000000831117156101ab57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610450945050505050565b6101f1610636565b604080516001600160a01b039092168252519081900360200190f35b61008d6004803603602081101561022357600080fd5b50356001600160a01b0316610645565b6101446004803603602081101561024957600080fd5b50356001600160a01b0316610663565b60006020819052908152604090205460ff1681565b60015460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b1580156102b957600080fd5b505afa1580156102cd573d6000803e3d6000fd5b505050506040513d60208110156102e357600080fd5b50516103205760405162461bcd60e51b81526004018080602001828103825260328152602001806107186032913960400191505060405180910390fd5b805161032b57600080fd5b60005b815181101561044c5760006001600160a01b031682828151811061034e57fe5b60200260200101516001600160a01b0316141561036a57600080fd5b60008083838151811061037957fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615610444576000808383815181106103b457fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81549060ff02191690558181815181106103f857fe5b60200260200101516001600160a01b03167f0426e02a5e8dbdd68720eb6c318dd8e3128b8c5597fdf2f72335e52f217a1b5b600060405180821515815260200191505060405180910390a25b60010161032e565b5050565b60015460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d60208110156104c557600080fd5b50516105025760405162461bcd60e51b815260040180806020018281038252602f8152602001806106e9602f913960400191505060405180910390fd5b805161050d57600080fd5b60005b815181101561044c5760006001600160a01b031682828151811061053057fe5b60200260200101516001600160a01b0316141561054c57600080fd5b60008083838151811061055b57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1661062e57600160008084848151811061059757fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055508181815181106105e257fe5b60200260200101516001600160a01b03167f0426e02a5e8dbdd68720eb6c318dd8e3128b8c5597fdf2f72335e52f217a1b5b600160405180821515815260200191505060405180910390a25b600101610510565b6001546001600160a01b031681565b6001600160a01b031660009081526020819052604090205460ff1690565b600154600160a01b900460ff16156106b8576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5cd959606a1b604482015290519081900360640190fd5b6001805460ff60a01b196001600160a01b039093166001600160a01b03199091161791909116600160a01b17905556fe57686974656c6973742e61646457686974654c6973743a2053656e646572206d757374206265206f70657261746f7257686974656c6973742e72656d6f766557686974654c6973743a2053656e646572206d757374206265206f70657261746f72a2646970667358221220c0607c56406629a30c91babf78b2500b89a4c6d310cde075012ade5cea21909d64736f6c634300060c0033",
  "bytecodeSha1": "ab703e230c5370f06d78d0a17d2c5e3e39bc7829",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "WhiteList",
  "coverageMap": {
    "branches": {
      "11": {
        "WhiteList.addWhiteList": {
          "19": [
            1269,
            1311,
            true
          ],
          "20": [
            1498,
            1523,
            true
          ],
          "21": [
            1543,
            1565,
            false
          ]
        },
        "WhiteList.initWhiteList": {
          "22": [
            908,
            920,
            true
          ]
        },
        "WhiteList.removeWhiteList": {
          "16": [
            1804,
            1846,
            true
          ],
          "17": [
            2035,
            2060,
            true
          ],
          "18": [
            2079,
            2101,
            false
          ]
        }
      },
      "72": {}
    },
    "statements": {
      "11": {
        "WhiteList.addWhiteList": {
          "6": [
            1248,
            1384
          ],
          "7": [
            1394,
            1423
          ],
          "8": [
            1490,
            1524
          ],
          "9": [
            1585,
            1614
          ],
          "10": [
            1632,
            1669
          ],
          "11": [
            1471,
            1474
          ]
        },
        "WhiteList.initWhiteList": {
          "13": [
            900,
            944
          ],
          "14": [
            954,
            1006
          ],
          "15": [
            1016,
            1034
          ]
        },
        "WhiteList.isInWhiteList": {
          "12": [
            1133,
            1158
          ]
        },
        "WhiteList.removeWhiteList": {
          "0": [
            1783,
            1922
          ],
          "1": [
            1931,
            1960
          ],
          "2": [
            2027,
            2061
          ],
          "3": [
            2121,
            2150
          ],
          "4": [
            2168,
            2206
          ],
          "5": [
            2008,
            2011
          ]
        }
      },
      "72": {}
    }
  },
  "dependencies": [
    "IWhiteList"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063372c12b11461006757806339745791146100a15780635e1045ec14610146578063748365ef146101e957806396bfc2291461020d578063ce83c50f14610233575b600080fd5b61008d6004803603602081101561007d57600080fd5b50356001600160a01b0316610259565b604080519115158252519081900360200190f35b610144600480360360208110156100b757600080fd5b8101906020810181356401000000008111156100d257600080fd5b8201836020820111156100e457600080fd5b8035906020019184602083028401116401000000008311171561010657600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061026e945050505050565b005b6101446004803603602081101561015c57600080fd5b81019060208101813564010000000081111561017757600080fd5b82018360208201111561018957600080fd5b803590602001918460208302840111640100000000831117156101ab57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610450945050505050565b6101f1610636565b604080516001600160a01b039092168252519081900360200190f35b61008d6004803603602081101561022357600080fd5b50356001600160a01b0316610645565b6101446004803603602081101561024957600080fd5b50356001600160a01b0316610663565b60006020819052908152604090205460ff1681565b60015460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b1580156102b957600080fd5b505afa1580156102cd573d6000803e3d6000fd5b505050506040513d60208110156102e357600080fd5b50516103205760405162461bcd60e51b81526004018080602001828103825260328152602001806107186032913960400191505060405180910390fd5b805161032b57600080fd5b60005b815181101561044c5760006001600160a01b031682828151811061034e57fe5b60200260200101516001600160a01b0316141561036a57600080fd5b60008083838151811061037957fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615610444576000808383815181106103b457fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81549060ff02191690558181815181106103f857fe5b60200260200101516001600160a01b03167f0426e02a5e8dbdd68720eb6c318dd8e3128b8c5597fdf2f72335e52f217a1b5b600060405180821515815260200191505060405180910390a25b60010161032e565b5050565b60015460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d60208110156104c557600080fd5b50516105025760405162461bcd60e51b815260040180806020018281038252602f8152602001806106e9602f913960400191505060405180910390fd5b805161050d57600080fd5b60005b815181101561044c5760006001600160a01b031682828151811061053057fe5b60200260200101516001600160a01b0316141561054c57600080fd5b60008083838151811061055b57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1661062e57600160008084848151811061059757fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055508181815181106105e257fe5b60200260200101516001600160a01b03167f0426e02a5e8dbdd68720eb6c318dd8e3128b8c5597fdf2f72335e52f217a1b5b600160405180821515815260200191505060405180910390a25b600101610510565b6001546001600160a01b031681565b6001600160a01b031660009081526020819052604090205460ff1690565b600154600160a01b900460ff16156106b8576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5cd959606a1b604482015290519081900360640190fd5b6001805460ff60a01b196001600160a01b039093166001600160a01b03199091161791909116600160a01b17905556fe57686974656c6973742e61646457686974654c6973743a2053656e646572206d757374206265206f70657261746f7257686974656c6973742e72656d6f766557686974654c6973743a2053656e646572206d757374206265206f70657261746f72a2646970667358221220c0607c56406629a30c91babf78b2500b89a4c6d310cde075012ade5cea21909d64736f6c634300060c0033",
  "deployedSourceMap": "565:1674:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;605:41;;;;;;;;;;;;;;;;-1:-1:-1;605:41:11;-1:-1:-1;;;;;605:41:11;;:::i;:::-;;;;;;;;;;;;;;;;;;1705:532;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1705:532:11;;-1:-1:-1;1705:532:11;;-1:-1:-1;;;;;1705:532:11:i;:::-;;1171:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1171:529:11;;-1:-1:-1;1171:529:11;;-1:-1:-1;;;;;1171:529:11:i;652:40::-;;;:::i;:::-;;;;-1:-1:-1;;;;;652:40:11;;;;;;;;;;;;;;1047:118;;;;;;;;;;;;;;;;-1:-1:-1;1047:118:11;-1:-1:-1;;;;;1047:118:11;;:::i;827:214::-;;;;;;;;;;;;;;;;-1:-1:-1;827:214:11;-1:-1:-1;;;;;827:214:11;;:::i;605:41::-;;;;;;;;;;;;;;;;:::o;1705:532::-;1804:14;;:42;;;-1:-1:-1;;;1804:42:11;;1835:10;1804:42;;;;;;-1:-1:-1;;;;;1804:14:11;;;;:30;;:42;;;;;;;;;;;;;;;:14;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1804:42:11;1783:139;;;;-1:-1:-1;;;1783:139:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1939:15;;1931:29;;;;;;1975:6;1970:261;1991:8;:15;1987:1;:19;1970:261;;;2058:1;-1:-1:-1;;;;;2035:25:11;:8;2044:1;2035:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2035:25:11;;;2027:34;;;;;;2079:9;:22;2089:8;2098:1;2089:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2079:22:11;;;;;;;;;;;-1:-1:-1;2079:22:11;;;;2075:146;;;2128:9;:22;2138:8;2147:1;2138:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2128:22:11;-1:-1:-1;;;;;2128:22:11;;;;;;;;;;;;;2121:29;;;;;;;;;;;2187:8;2196:1;2187:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2173:33:11;;2200:5;2173:33;;;;;;;;;;;;;;;;;;;;2075:146;2008:3;;1970:261;;;;1705:532;:::o;1171:529::-;1269:14;;:42;;;-1:-1:-1;;;1269:42:11;;1300:10;1269:42;;;;;;-1:-1:-1;;;;;1269:14:11;;;;:30;;:42;;;;;;;;;;;;;;;:14;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1269:42:11;1248:136;;;;-1:-1:-1;;;1248:136:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1402:15;;1394:29;;;;;;1438:6;1433:261;1454:8;:15;1450:1;:19;1433:261;;;1521:1;-1:-1:-1;;;;;1498:25:11;:8;1507:1;1498:11;;;;;;;;;;;;;;-1:-1:-1;;;;;1498:25:11;;;1490:34;;;;;;1543:9;:22;1553:8;1562:1;1553:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1543:22:11;;;;;;;;;;;-1:-1:-1;1543:22:11;;;;1538:146;;1610:4;1585:9;:22;1595:8;1604:1;1595:11;;;;;;;;;;;;;;-1:-1:-1;;;;;1585:22:11;-1:-1:-1;;;;;1585:22:11;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1651:8;1660:1;1651:11;;;;;;;;;;;;;;-1:-1:-1;;;;;1637:32:11;;1664:4;1637:32;;;;;;;;;;;;;;;;;;;;1538:146;1471:3;;1433:261;;652:40;;;-1:-1:-1;;;;;652:40:11;;:::o;1047:118::-;-1:-1:-1;;;;;1140:18:11;1117:4;1140:18;;;;;;;;;;;;;;1047:118::o;827:214::-;909:11;;-1:-1:-1;;;909:11:11;;;;908:12;900:44;;;;;-1:-1:-1;;;900:44:11;;;;;;;;;;;;-1:-1:-1;;;900:44:11;;;;;;;;;;;;;;;954:14;:52;;-1:-1:-1;;;;;;;;;954:52:11;;;-1:-1:-1;;;;;;954:52:11;;;;1016:18;;;;-1:-1:-1;;;1016:18:11;;;827:214::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    565,
    2239
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x39745791 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x5E1045EC EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x748365EF EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x96BFC229 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xCE83C50F EQ PUSH2 0x233 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x26E SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x450 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x645 JUMP JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x663 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7E271F05 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xFC4E3E0A SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x718 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x34E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x379 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3B4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3F8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x426E02A5E8DBDD68720EB6C318DD8E3128B8C5597FDF2F72335E52F217A1B5B PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x1 ADD PUSH2 0x32E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7E271F05 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xFC4E3E0A SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x6E9 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x530 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x55B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x62E JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x597 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x426E02A5E8DBDD68720EB6C318DD8E3128B8C5597FDF2F72335E52F217A1B5B PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x1 ADD PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5CD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP INVALID JUMPI PUSH9 0x6974656C6973742E61 PUSH5 0x6457686974 PUSH6 0x4C6973743A20 MSTORE8 PUSH6 0x6E646572206D PUSH22 0x7374206265206F70657261746F7257686974656C6973 PUSH21 0x2E72656D6F766557686974654C6973743A2053656E PUSH5 0x6572206D75 PUSH20 0x74206265206F70657261746F72A2646970667358 0x22 SLT KECCAK256 0xC0 PUSH1 0x7C JUMP BLOCKHASH PUSH7 0x29A30C91BABF78 0xB2 POP SIGNEXTEND DUP10 LOG4 0xC6 0xD3 LT 0xCD 0xE0 PUSH22 0x12ADE5CEA21909D64736F6C634300060C0033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        565,
        2239
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x372C12B1"
    },
    "38": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "EQ",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x39745791"
    },
    "49": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "EQ",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA1"
    },
    "53": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x5E1045EC"
    },
    "60": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "EQ",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x146"
    },
    "64": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x748365EF"
    },
    "71": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E9"
    },
    "75": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "DUP1",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x96BFC229"
    },
    "82": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "EQ",
      "path": "11"
    },
    "83": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x20D"
    },
    "86": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "87": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "DUP1",
      "path": "11"
    },
    "88": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xCE83C50F"
    },
    "93": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "EQ",
      "path": "11"
    },
    "94": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x233"
    },
    "97": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "98": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "99": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "DUP1",
      "path": "11"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [
        565,
        2239
      ],
      "op": "REVERT",
      "path": "11"
    },
    "103": {
      "offset": [
        605,
        646
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "104": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8D"
    },
    "107": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "109": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "DUP1",
      "path": "11"
    },
    "110": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "111": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "SUB",
      "path": "11"
    },
    "112": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "114": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "DUP2",
      "path": "11"
    },
    "115": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "LT",
      "path": "11"
    },
    "116": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "117": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7D"
    },
    "120": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "121": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "123": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "DUP1",
      "path": "11"
    },
    "124": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "REVERT",
      "path": "11"
    },
    "125": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "126": {
      "op": "POP"
    },
    "127": {
      "offset": [
        605,
        646
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "134": {
      "op": "SHL"
    },
    "135": {
      "op": "SUB"
    },
    "136": {
      "offset": [
        605,
        646
      ],
      "op": "AND",
      "path": "11"
    },
    "137": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x259"
    },
    "140": {
      "fn": null,
      "jump": "i",
      "offset": [
        605,
        646
      ],
      "op": "JUMP",
      "path": "11"
    },
    "141": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "142": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "144": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "DUP1",
      "path": "11"
    },
    "145": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "146": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "147": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "148": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "149": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "DUP3",
      "path": "11"
    },
    "150": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "151": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "152": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "153": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "DUP2",
      "path": "11"
    },
    "154": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "155": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "SUB",
      "path": "11"
    },
    "156": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "158": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "ADD",
      "path": "11"
    },
    "159": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "160": {
      "fn": null,
      "offset": [
        605,
        646
      ],
      "op": "RETURN",
      "path": "11"
    },
    "161": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "162": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x144"
    },
    "165": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "167": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "168": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "169": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SUB",
      "path": "11"
    },
    "170": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "172": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP2",
      "path": "11"
    },
    "173": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "LT",
      "path": "11"
    },
    "174": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "175": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB7"
    },
    "178": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "179": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "181": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "182": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "REVERT",
      "path": "11"
    },
    "183": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "184": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP2",
      "path": "11"
    },
    "185": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ADD",
      "path": "11"
    },
    "186": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "187": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "189": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP2",
      "path": "11"
    },
    "190": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ADD",
      "path": "11"
    },
    "191": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP2",
      "path": "11"
    },
    "192": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "193": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH5",
      "path": "11",
      "value": "0x100000000"
    },
    "199": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP2",
      "path": "11"
    },
    "200": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "GT",
      "path": "11"
    },
    "201": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "202": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD2"
    },
    "205": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "206": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "208": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "209": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "REVERT",
      "path": "11"
    },
    "210": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "211": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP3",
      "path": "11"
    },
    "212": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ADD",
      "path": "11"
    },
    "213": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP4",
      "path": "11"
    },
    "214": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "216": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP3",
      "path": "11"
    },
    "217": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ADD",
      "path": "11"
    },
    "218": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "GT",
      "path": "11"
    },
    "219": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "220": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE4"
    },
    "223": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "224": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "226": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "227": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "REVERT",
      "path": "11"
    },
    "228": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "229": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "230": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "231": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "232": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "234": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ADD",
      "path": "11"
    },
    "235": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "236": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP5",
      "path": "11"
    },
    "237": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "239": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP4",
      "path": "11"
    },
    "240": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "MUL",
      "path": "11"
    },
    "241": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP5",
      "path": "11"
    },
    "242": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ADD",
      "path": "11"
    },
    "243": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "GT",
      "path": "11"
    },
    "244": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH5",
      "path": "11",
      "value": "0x100000000"
    },
    "250": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP4",
      "path": "11"
    },
    "251": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "GT",
      "path": "11"
    },
    "252": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "OR",
      "path": "11"
    },
    "253": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "254": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x106"
    },
    "257": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "258": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "260": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "261": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "REVERT",
      "path": "11"
    },
    "262": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "263": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "264": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "265": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "266": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "267": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "269": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "MUL",
      "path": "11"
    },
    "270": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "272": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ADD",
      "path": "11"
    },
    "273": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "275": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "276": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "277": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP2",
      "path": "11"
    },
    "278": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ADD",
      "path": "11"
    },
    "279": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "281": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "282": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "283": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "284": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "285": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "286": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "287": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP2",
      "path": "11"
    },
    "288": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP2",
      "path": "11"
    },
    "289": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "290": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "292": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ADD",
      "path": "11"
    },
    "293": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP4",
      "path": "11"
    },
    "294": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP4",
      "path": "11"
    },
    "295": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "297": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "MUL",
      "path": "11"
    },
    "298": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "299": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP3",
      "path": "11"
    },
    "300": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "DUP5",
      "path": "11"
    },
    "301": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "CALLDATACOPY",
      "path": "11"
    },
    "302": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "304": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "305": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "ADD",
      "path": "11"
    },
    "306": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "307": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "308": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "309": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "310": {
      "op": "POP"
    },
    "311": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "312": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "313": {
      "op": "POP"
    },
    "314": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x26E"
    },
    "317": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "318": {
      "op": "POP"
    },
    "319": {
      "op": "POP"
    },
    "320": {
      "op": "POP"
    },
    "321": {
      "op": "POP"
    },
    "322": {
      "op": "POP"
    },
    "323": {
      "fn": "WhiteList.removeWhiteList",
      "jump": "i",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMP",
      "path": "11"
    },
    "324": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "325": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "STOP",
      "path": "11"
    },
    "326": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "327": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x144"
    },
    "330": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "332": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP1",
      "path": "11"
    },
    "333": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "334": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SUB",
      "path": "11"
    },
    "335": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "337": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP2",
      "path": "11"
    },
    "338": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "LT",
      "path": "11"
    },
    "339": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "340": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15C"
    },
    "343": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "344": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "346": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP1",
      "path": "11"
    },
    "347": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "REVERT",
      "path": "11"
    },
    "348": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "349": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP2",
      "path": "11"
    },
    "350": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ADD",
      "path": "11"
    },
    "351": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "352": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "354": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP2",
      "path": "11"
    },
    "355": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ADD",
      "path": "11"
    },
    "356": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP2",
      "path": "11"
    },
    "357": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "358": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH5",
      "path": "11",
      "value": "0x100000000"
    },
    "364": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP2",
      "path": "11"
    },
    "365": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "GT",
      "path": "11"
    },
    "366": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "367": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x177"
    },
    "370": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "371": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "373": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP1",
      "path": "11"
    },
    "374": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "REVERT",
      "path": "11"
    },
    "375": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "376": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP3",
      "path": "11"
    },
    "377": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ADD",
      "path": "11"
    },
    "378": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP4",
      "path": "11"
    },
    "379": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "381": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP3",
      "path": "11"
    },
    "382": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ADD",
      "path": "11"
    },
    "383": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "GT",
      "path": "11"
    },
    "384": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "385": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x189"
    },
    "388": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "389": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "391": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP1",
      "path": "11"
    },
    "392": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "REVERT",
      "path": "11"
    },
    "393": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "394": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP1",
      "path": "11"
    },
    "395": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "396": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "397": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "399": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ADD",
      "path": "11"
    },
    "400": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "401": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP5",
      "path": "11"
    },
    "402": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "404": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP4",
      "path": "11"
    },
    "405": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "MUL",
      "path": "11"
    },
    "406": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP5",
      "path": "11"
    },
    "407": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ADD",
      "path": "11"
    },
    "408": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "GT",
      "path": "11"
    },
    "409": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH5",
      "path": "11",
      "value": "0x100000000"
    },
    "415": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP4",
      "path": "11"
    },
    "416": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "GT",
      "path": "11"
    },
    "417": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "OR",
      "path": "11"
    },
    "418": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "419": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AB"
    },
    "422": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "423": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "425": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP1",
      "path": "11"
    },
    "426": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "REVERT",
      "path": "11"
    },
    "427": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "428": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "429": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "430": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP1",
      "path": "11"
    },
    "431": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP1",
      "path": "11"
    },
    "432": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "434": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "MUL",
      "path": "11"
    },
    "435": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "437": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ADD",
      "path": "11"
    },
    "438": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "440": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "441": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "442": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP2",
      "path": "11"
    },
    "443": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ADD",
      "path": "11"
    },
    "444": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "446": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "447": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP1",
      "path": "11"
    },
    "448": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "449": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "450": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "451": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "452": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP2",
      "path": "11"
    },
    "453": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP2",
      "path": "11"
    },
    "454": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "455": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "457": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ADD",
      "path": "11"
    },
    "458": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP4",
      "path": "11"
    },
    "459": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP4",
      "path": "11"
    },
    "460": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "462": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "MUL",
      "path": "11"
    },
    "463": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP1",
      "path": "11"
    },
    "464": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP3",
      "path": "11"
    },
    "465": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "DUP5",
      "path": "11"
    },
    "466": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "CALLDATACOPY",
      "path": "11"
    },
    "467": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "469": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "470": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "ADD",
      "path": "11"
    },
    "471": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "472": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "473": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "474": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "475": {
      "op": "POP"
    },
    "476": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "477": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "478": {
      "op": "POP"
    },
    "479": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x450"
    },
    "482": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "483": {
      "op": "POP"
    },
    "484": {
      "op": "POP"
    },
    "485": {
      "op": "POP"
    },
    "486": {
      "op": "POP"
    },
    "487": {
      "op": "POP"
    },
    "488": {
      "fn": "WhiteList.addWhiteList",
      "jump": "i",
      "offset": [
        1171,
        1700
      ],
      "op": "JUMP",
      "path": "11"
    },
    "489": {
      "offset": [
        652,
        692
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "490": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F1"
    },
    "493": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x636"
    },
    "496": {
      "fn": "WhiteList.addWhiteList",
      "jump": "i",
      "offset": [
        652,
        692
      ],
      "op": "JUMP",
      "path": "11"
    },
    "497": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "498": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "500": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "DUP1",
      "path": "11"
    },
    "501": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "508": {
      "op": "SHL"
    },
    "509": {
      "op": "SUB"
    },
    "510": {
      "offset": [
        652,
        692
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "511": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "512": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "AND",
      "path": "11"
    },
    "513": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "DUP3",
      "path": "11"
    },
    "514": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "515": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "516": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "517": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "DUP2",
      "path": "11"
    },
    "518": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "519": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "SUB",
      "path": "11"
    },
    "520": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "522": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "ADD",
      "path": "11"
    },
    "523": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "524": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "RETURN",
      "path": "11"
    },
    "525": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "526": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8D"
    },
    "529": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "531": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "DUP1",
      "path": "11"
    },
    "532": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "533": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "SUB",
      "path": "11"
    },
    "534": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "536": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "DUP2",
      "path": "11"
    },
    "537": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "LT",
      "path": "11"
    },
    "538": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "539": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x223"
    },
    "542": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "543": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "545": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "DUP1",
      "path": "11"
    },
    "546": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "REVERT",
      "path": "11"
    },
    "547": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "548": {
      "op": "POP"
    },
    "549": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "op": "SUB"
    },
    "558": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "AND",
      "path": "11"
    },
    "559": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x645"
    },
    "562": {
      "fn": "WhiteList.isInWhiteList",
      "jump": "i",
      "offset": [
        1047,
        1165
      ],
      "op": "JUMP",
      "path": "11"
    },
    "563": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "564": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x144"
    },
    "567": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "569": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "DUP1",
      "path": "11"
    },
    "570": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "571": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "SUB",
      "path": "11"
    },
    "572": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "574": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "DUP2",
      "path": "11"
    },
    "575": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "LT",
      "path": "11"
    },
    "576": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "577": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x249"
    },
    "580": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "581": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "583": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "DUP1",
      "path": "11"
    },
    "584": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "REVERT",
      "path": "11"
    },
    "585": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "586": {
      "op": "POP"
    },
    "587": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "op": "SUB"
    },
    "596": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "AND",
      "path": "11"
    },
    "597": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x663"
    },
    "600": {
      "fn": "WhiteList.initWhiteList",
      "jump": "i",
      "offset": [
        827,
        1041
      ],
      "op": "JUMP",
      "path": "11"
    },
    "601": {
      "offset": [
        605,
        646
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "602": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "604": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "606": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "DUP2",
      "path": "11"
    },
    "607": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "608": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "609": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "610": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "DUP2",
      "path": "11"
    },
    "611": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "612": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "614": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "615": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "616": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "617": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "619": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "AND",
      "path": "11"
    },
    "620": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        605,
        646
      ],
      "op": "DUP2",
      "path": "11"
    },
    "621": {
      "fn": "WhiteList.initWhiteList",
      "jump": "o",
      "offset": [
        605,
        646
      ],
      "op": "JUMP",
      "path": "11"
    },
    "622": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "623": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1818
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 0,
      "value": "0x1"
    },
    "625": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1818
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "626": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "628": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP1",
      "path": "11"
    },
    "629": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "630": {
      "op": "PUSH4",
      "value": "0x7E271F05"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "637": {
      "op": "SHL"
    },
    "638": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP2",
      "path": "11"
    },
    "639": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "640": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1835,
        1845
      ],
      "op": "CALLER",
      "path": "11"
    },
    "641": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "643": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP3",
      "path": "11"
    },
    "644": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "ADD",
      "path": "11"
    },
    "645": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "646": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "647": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "654": {
      "op": "SHL"
    },
    "655": {
      "op": "SUB"
    },
    "656": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1818
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "657": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1818
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "658": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1818
      ],
      "op": "AND",
      "path": "11"
    },
    "659": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1818
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "660": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1834
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFC4E3E0A"
    },
    "665": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1834
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "666": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "668": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP1",
      "path": "11"
    },
    "669": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP3",
      "path": "11"
    },
    "670": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "ADD",
      "path": "11"
    },
    "671": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "672": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "674": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "675": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "676": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "677": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "678": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP3",
      "path": "11"
    },
    "679": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "680": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "SUB",
      "path": "11"
    },
    "681": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "ADD",
      "path": "11"
    },
    "682": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP2",
      "path": "11"
    },
    "683": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1818
      ],
      "op": "DUP7",
      "path": "11"
    },
    "684": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP1",
      "path": "11"
    },
    "685": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "686": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "687": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP1",
      "path": "11"
    },
    "688": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "689": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B9"
    },
    "692": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "693": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "695": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP1",
      "path": "11"
    },
    "696": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "REVERT",
      "path": "11"
    },
    "697": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "698": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "POP",
      "path": "11"
    },
    "699": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "GAS",
      "path": "11"
    },
    "700": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "701": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "702": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP1",
      "path": "11"
    },
    "703": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "704": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2CD"
    },
    "707": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "708": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "709": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "711": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP1",
      "path": "11"
    },
    "712": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "713": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "714": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "716": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "REVERT",
      "path": "11"
    },
    "717": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "718": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "POP",
      "path": "11"
    },
    "719": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "POP",
      "path": "11"
    },
    "720": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "POP",
      "path": "11"
    },
    "721": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "POP",
      "path": "11"
    },
    "722": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "724": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "725": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "726": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "728": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP2",
      "path": "11"
    },
    "729": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "LT",
      "path": "11"
    },
    "730": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "731": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E3"
    },
    "734": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "735": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "737": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "DUP1",
      "path": "11"
    },
    "738": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "REVERT",
      "path": "11"
    },
    "739": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "740": {
      "op": "POP"
    },
    "741": {
      "branch": 16,
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1804,
        1846
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "742": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x320"
    },
    "745": {
      "branch": 16,
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "746": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "748": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "DUP2",
      "path": "11"
    },
    "757": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "758": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "760": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "ADD",
      "path": "11"
    },
    "761": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "DUP1",
      "path": "11"
    },
    "762": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "DUP1",
      "path": "11"
    },
    "763": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "765": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "ADD",
      "path": "11"
    },
    "766": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "DUP3",
      "path": "11"
    },
    "767": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "DUP2",
      "path": "11"
    },
    "768": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "SUB",
      "path": "11"
    },
    "769": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "DUP3",
      "path": "11"
    },
    "770": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "771": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x32"
    },
    "773": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "DUP2",
      "path": "11"
    },
    "774": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "775": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "777": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "ADD",
      "path": "11"
    },
    "778": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "DUP1",
      "path": "11"
    },
    "779": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x718"
    },
    "782": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x32"
    },
    "784": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "785": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "CODECOPY",
      "path": "11"
    },
    "786": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "788": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "ADD",
      "path": "11"
    },
    "789": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "790": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "POP",
      "path": "11"
    },
    "791": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "POP",
      "path": "11"
    },
    "792": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "794": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "795": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "DUP1",
      "path": "11"
    },
    "796": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "797": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "SUB",
      "path": "11"
    },
    "798": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "799": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "REVERT",
      "path": "11"
    },
    "800": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1783,
        1922
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "801": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1939,
        1954
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 1
    },
    "802": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1939,
        1954
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "803": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1931,
        1960
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "806": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1931,
        1960
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "807": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1931,
        1960
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "809": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1931,
        1960
      ],
      "op": "DUP1",
      "path": "11"
    },
    "810": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1931,
        1960
      ],
      "op": "REVERT",
      "path": "11"
    },
    "811": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1931,
        1960
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "812": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1975,
        1981
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "814": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1970,
        2231
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "815": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1991,
        1999
      ],
      "op": "DUP2",
      "path": "11"
    },
    "816": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1991,
        2006
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "817": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1987,
        1988
      ],
      "op": "DUP2",
      "path": "11"
    },
    "818": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1987,
        2006
      ],
      "op": "LT",
      "path": "11"
    },
    "819": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1970,
        2231
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "820": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1970,
        2231
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x44C"
    },
    "823": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1970,
        2231
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "824": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2058,
        2059
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 2,
      "value": "0x0"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "832": {
      "op": "SHL"
    },
    "833": {
      "op": "SUB"
    },
    "834": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2060
      ],
      "op": "AND",
      "path": "11"
    },
    "835": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2043
      ],
      "op": "DUP3",
      "path": "11"
    },
    "836": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2044,
        2045
      ],
      "op": "DUP3",
      "path": "11"
    },
    "837": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "DUP2",
      "path": "11"
    },
    "838": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "839": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "DUP2",
      "path": "11"
    },
    "840": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "LT",
      "path": "11"
    },
    "841": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x34E"
    },
    "844": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "845": {
      "dev": "Index out of range",
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "INVALID",
      "path": "11"
    },
    "846": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "847": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "849": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "MUL",
      "path": "11"
    },
    "850": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "852": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "ADD",
      "path": "11"
    },
    "853": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "ADD",
      "path": "11"
    },
    "854": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2046
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "861": {
      "op": "SHL"
    },
    "862": {
      "op": "SUB"
    },
    "863": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2060
      ],
      "op": "AND",
      "path": "11"
    },
    "864": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2060
      ],
      "op": "EQ",
      "path": "11"
    },
    "865": {
      "branch": 17,
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2035,
        2060
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "866": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2027,
        2061
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x36A"
    },
    "869": {
      "branch": 17,
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2027,
        2061
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "870": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2027,
        2061
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "872": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2027,
        2061
      ],
      "op": "DUP1",
      "path": "11"
    },
    "873": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2027,
        2061
      ],
      "op": "REVERT",
      "path": "11"
    },
    "874": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2027,
        2061
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "875": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2088
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "877": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "DUP1",
      "path": "11"
    },
    "878": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2097
      ],
      "op": "DUP4",
      "path": "11"
    },
    "879": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2098,
        2099
      ],
      "op": "DUP4",
      "path": "11"
    },
    "880": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "DUP2",
      "path": "11"
    },
    "881": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "882": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "DUP2",
      "path": "11"
    },
    "883": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "LT",
      "path": "11"
    },
    "884": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x379"
    },
    "887": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "888": {
      "dev": "Index out of range",
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "INVALID",
      "path": "11"
    },
    "889": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "890": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "892": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "893": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "DUP2",
      "path": "11"
    },
    "894": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "MUL",
      "path": "11"
    },
    "895": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "896": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "897": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "898": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "ADD",
      "path": "11"
    },
    "899": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "DUP2",
      "path": "11"
    },
    "900": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "ADD",
      "path": "11"
    },
    "901": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2089,
        2100
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "op": "SUB"
    },
    "910": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "AND",
      "path": "11"
    },
    "911": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "DUP3",
      "path": "11"
    },
    "912": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "913": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "DUP2",
      "path": "11"
    },
    "914": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "ADD",
      "path": "11"
    },
    "915": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "916": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "917": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "918": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "919": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "921": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "ADD",
      "path": "11"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "924": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "925": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "926": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "928": {
      "branch": 18,
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2079,
        2101
      ],
      "op": "AND",
      "path": "11"
    },
    "929": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2075,
        2221
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "930": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2075,
        2221
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x444"
    },
    "933": {
      "branch": 18,
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2075,
        2221
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "934": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2137
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 3,
      "value": "0x0"
    },
    "936": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "DUP1",
      "path": "11"
    },
    "937": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2146
      ],
      "op": "DUP4",
      "path": "11"
    },
    "938": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2147,
        2148
      ],
      "op": "DUP4",
      "path": "11"
    },
    "939": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "DUP2",
      "path": "11"
    },
    "940": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "941": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "DUP2",
      "path": "11"
    },
    "942": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "LT",
      "path": "11"
    },
    "943": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3B4"
    },
    "946": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "947": {
      "dev": "Index out of range",
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "INVALID",
      "path": "11"
    },
    "948": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "949": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "951": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "MUL",
      "path": "11"
    },
    "952": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "954": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "ADD",
      "path": "11"
    },
    "955": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "ADD",
      "path": "11"
    },
    "956": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2138,
        2149
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "963": {
      "op": "SHL"
    },
    "964": {
      "op": "SUB"
    },
    "965": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "AND",
      "path": "11"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "972": {
      "op": "SHL"
    },
    "973": {
      "op": "SUB"
    },
    "974": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "AND",
      "path": "11"
    },
    "975": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "DUP2",
      "path": "11"
    },
    "976": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "977": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "979": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "ADD",
      "path": "11"
    },
    "980": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "981": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "DUP2",
      "path": "11"
    },
    "982": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "983": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "985": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "ADD",
      "path": "11"
    },
    "986": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "988": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "989": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2128,
        2150
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "991": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2121,
        2150
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "994": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2121,
        2150
      ],
      "op": "EXP",
      "path": "11"
    },
    "995": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP2",
      "path": "11"
    },
    "996": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2121,
        2150
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "997": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2121,
        2150
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "998": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2121,
        2150
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "1000": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2121,
        2150
      ],
      "op": "MUL",
      "path": "11"
    },
    "1001": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2121,
        2150
      ],
      "op": "NOT",
      "path": "11"
    },
    "1002": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2121,
        2150
      ],
      "op": "AND",
      "path": "11"
    },
    "1003": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2121,
        2150
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1004": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2121,
        2150
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1005": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2195
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 4
    },
    "1006": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2196,
        2197
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1007": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1008": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1009": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1010": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "LT",
      "path": "11"
    },
    "1011": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3F8"
    },
    "1014": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1015": {
      "dev": "Index out of range",
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "INVALID",
      "path": "11"
    },
    "1016": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1017": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1019": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "MUL",
      "path": "11"
    },
    "1020": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1022": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "ADD",
      "path": "11"
    },
    "1023": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "ADD",
      "path": "11"
    },
    "1024": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2187,
        2198
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "op": "SUB"
    },
    "1033": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "AND",
      "path": "11"
    },
    "1034": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x426E02A5E8DBDD68720EB6C318DD8E3128B8C5597FDF2F72335E52F217A1B5B"
    },
    "1067": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2200,
        2205
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1069": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1071": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1072": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1073": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1074": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1075": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1076": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1077": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1078": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1080": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "ADD",
      "path": "11"
    },
    "1081": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1082": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "POP",
      "path": "11"
    },
    "1083": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "POP",
      "path": "11"
    },
    "1084": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1086": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1087": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1088": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1089": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "SUB",
      "path": "11"
    },
    "1090": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1091": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2173,
        2206
      ],
      "op": "LOG2",
      "path": "11"
    },
    "1092": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2075,
        2221
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1093": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2008,
        2011
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 5,
      "value": "0x1"
    },
    "1095": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2008,
        2011
      ],
      "op": "ADD",
      "path": "11"
    },
    "1096": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1970,
        2231
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32E"
    },
    "1099": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1970,
        2231
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1100": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1970,
        2231
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1101": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1970,
        2231
      ],
      "op": "POP",
      "path": "11"
    },
    "1102": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1705,
        2237
      ],
      "op": "POP",
      "path": "11"
    },
    "1103": {
      "fn": "WhiteList.removeWhiteList",
      "jump": "o",
      "offset": [
        1705,
        2237
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1104": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1171,
        1700
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1105": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1283
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 6,
      "value": "0x1"
    },
    "1107": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1283
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1108": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1110": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1111": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1112": {
      "op": "PUSH4",
      "value": "0x7E271F05"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1119": {
      "op": "SHL"
    },
    "1120": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1121": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1122": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1300,
        1310
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1123": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1125": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1126": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "ADD",
      "path": "11"
    },
    "1127": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1128": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1129": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1136": {
      "op": "SHL"
    },
    "1137": {
      "op": "SUB"
    },
    "1138": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1283
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1139": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1283
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1140": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1283
      ],
      "op": "AND",
      "path": "11"
    },
    "1141": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1283
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1142": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1299
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFC4E3E0A"
    },
    "1147": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1299
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1148": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "1150": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1151": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1152": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "ADD",
      "path": "11"
    },
    "1153": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1154": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1156": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1157": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1158": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1159": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1160": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1161": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1162": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "SUB",
      "path": "11"
    },
    "1163": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "ADD",
      "path": "11"
    },
    "1164": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1165": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1283
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1166": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1167": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "1168": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1169": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1170": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1171": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x49B"
    },
    "1174": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1175": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1177": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1178": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1179": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1180": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "POP",
      "path": "11"
    },
    "1181": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "GAS",
      "path": "11"
    },
    "1182": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "1183": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1184": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1185": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1186": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4AF"
    },
    "1189": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1190": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1191": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1193": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1194": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1195": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1196": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1198": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1199": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1200": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "POP",
      "path": "11"
    },
    "1201": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "POP",
      "path": "11"
    },
    "1202": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "POP",
      "path": "11"
    },
    "1203": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "POP",
      "path": "11"
    },
    "1204": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1206": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1207": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1208": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1210": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1211": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "LT",
      "path": "11"
    },
    "1212": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1213": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "1216": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1217": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1219": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1220": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1221": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1222": {
      "op": "POP"
    },
    "1223": {
      "branch": 19,
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1269,
        1311
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1224": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x502"
    },
    "1227": {
      "branch": 19,
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1228": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1230": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1239": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1240": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1242": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "ADD",
      "path": "11"
    },
    "1243": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1244": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1245": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1247": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "ADD",
      "path": "11"
    },
    "1248": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1249": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1250": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "SUB",
      "path": "11"
    },
    "1251": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1252": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1253": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2F"
    },
    "1255": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1256": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1257": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1259": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "ADD",
      "path": "11"
    },
    "1260": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1261": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6E9"
    },
    "1264": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2F"
    },
    "1266": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1267": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "CODECOPY",
      "path": "11"
    },
    "1268": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1270": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "ADD",
      "path": "11"
    },
    "1271": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1272": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "POP",
      "path": "11"
    },
    "1273": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "POP",
      "path": "11"
    },
    "1274": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1276": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1277": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1278": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1279": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "SUB",
      "path": "11"
    },
    "1280": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1281": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1282": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1248,
        1384
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1283": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1402,
        1417
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 7
    },
    "1284": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1402,
        1417
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1285": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1394,
        1423
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x50D"
    },
    "1288": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1394,
        1423
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1289": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1394,
        1423
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1291": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1394,
        1423
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1292": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1394,
        1423
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1293": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1394,
        1423
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1294": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1438,
        1444
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1296": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1433,
        1694
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1297": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1454,
        1462
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1298": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1454,
        1469
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1299": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1450,
        1451
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1300": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1450,
        1469
      ],
      "op": "LT",
      "path": "11"
    },
    "1301": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1433,
        1694
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1302": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1433,
        1694
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x44C"
    },
    "1305": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1433,
        1694
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1306": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1521,
        1522
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 8,
      "value": "0x0"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1314": {
      "op": "SHL"
    },
    "1315": {
      "op": "SUB"
    },
    "1316": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1523
      ],
      "op": "AND",
      "path": "11"
    },
    "1317": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1506
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1318": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1507,
        1508
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1319": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1320": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1321": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1322": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "LT",
      "path": "11"
    },
    "1323": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x530"
    },
    "1326": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1327": {
      "dev": "Index out of range",
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "INVALID",
      "path": "11"
    },
    "1328": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1329": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1331": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "MUL",
      "path": "11"
    },
    "1332": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1334": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "ADD",
      "path": "11"
    },
    "1335": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "ADD",
      "path": "11"
    },
    "1336": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1509
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1343": {
      "op": "SHL"
    },
    "1344": {
      "op": "SUB"
    },
    "1345": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1523
      ],
      "op": "AND",
      "path": "11"
    },
    "1346": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1523
      ],
      "op": "EQ",
      "path": "11"
    },
    "1347": {
      "branch": 20,
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1498,
        1523
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1348": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1490,
        1524
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x54C"
    },
    "1351": {
      "branch": 20,
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1490,
        1524
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1352": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1490,
        1524
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1354": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1490,
        1524
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1355": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1490,
        1524
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1356": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1490,
        1524
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1357": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1552
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1359": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1360": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1561
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1361": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1562,
        1563
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1362": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1363": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1364": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1365": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "LT",
      "path": "11"
    },
    "1366": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x55B"
    },
    "1369": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1370": {
      "dev": "Index out of range",
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "INVALID",
      "path": "11"
    },
    "1371": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1372": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1374": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1375": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1376": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "MUL",
      "path": "11"
    },
    "1377": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1378": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1379": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1380": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "ADD",
      "path": "11"
    },
    "1381": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1382": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "ADD",
      "path": "11"
    },
    "1383": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1553,
        1564
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1390": {
      "op": "SHL"
    },
    "1391": {
      "op": "SUB"
    },
    "1392": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "AND",
      "path": "11"
    },
    "1393": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1394": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1395": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1396": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "ADD",
      "path": "11"
    },
    "1397": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1398": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1399": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1400": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1401": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1403": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "ADD",
      "path": "11"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1406": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1407": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1408": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "1410": {
      "branch": 21,
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1543,
        1565
      ],
      "op": "AND",
      "path": "11"
    },
    "1411": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1538,
        1684
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x62E"
    },
    "1414": {
      "branch": 21,
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1538,
        1684
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1415": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1610,
        1614
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 9,
      "value": "0x1"
    },
    "1417": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1594
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1419": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1420": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1603
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1421": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1604,
        1605
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1422": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1423": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1424": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1425": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "LT",
      "path": "11"
    },
    "1426": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x597"
    },
    "1429": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1430": {
      "dev": "Index out of range",
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "INVALID",
      "path": "11"
    },
    "1431": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1432": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1434": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "MUL",
      "path": "11"
    },
    "1435": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1437": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "ADD",
      "path": "11"
    },
    "1438": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "ADD",
      "path": "11"
    },
    "1439": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1595,
        1606
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "op": "SUB"
    },
    "1448": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "AND",
      "path": "11"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "op": "SUB"
    },
    "1457": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "AND",
      "path": "11"
    },
    "1458": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1459": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1460": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1462": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "ADD",
      "path": "11"
    },
    "1463": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1464": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1465": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1466": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1468": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "ADD",
      "path": "11"
    },
    "1469": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1471": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1472": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1607
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1474": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "1477": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "EXP",
      "path": "11"
    },
    "1478": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1479": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1480": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1481": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "1483": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "MUL",
      "path": "11"
    },
    "1484": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "NOT",
      "path": "11"
    },
    "1485": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "AND",
      "path": "11"
    },
    "1486": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1487": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1488": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1489": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1490": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "MUL",
      "path": "11"
    },
    "1491": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "OR",
      "path": "11"
    },
    "1492": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1493": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1494": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1585,
        1614
      ],
      "op": "POP",
      "path": "11"
    },
    "1495": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1659
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 10
    },
    "1496": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1660,
        1661
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1497": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1498": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1499": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1500": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "LT",
      "path": "11"
    },
    "1501": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5E2"
    },
    "1504": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1505": {
      "dev": "Index out of range",
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "INVALID",
      "path": "11"
    },
    "1506": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1507": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1509": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "MUL",
      "path": "11"
    },
    "1510": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1512": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "ADD",
      "path": "11"
    },
    "1513": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "ADD",
      "path": "11"
    },
    "1514": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1651,
        1662
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1521": {
      "op": "SHL"
    },
    "1522": {
      "op": "SUB"
    },
    "1523": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "AND",
      "path": "11"
    },
    "1524": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x426E02A5E8DBDD68720EB6C318DD8E3128B8C5597FDF2F72335E52F217A1B5B"
    },
    "1557": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1664,
        1668
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1559": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1561": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1562": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1563": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1564": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1565": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1566": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1567": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1568": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1570": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "ADD",
      "path": "11"
    },
    "1571": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1572": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "POP",
      "path": "11"
    },
    "1573": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "POP",
      "path": "11"
    },
    "1574": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1576": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1577": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1578": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1579": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "SUB",
      "path": "11"
    },
    "1580": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1581": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1637,
        1669
      ],
      "op": "LOG2",
      "path": "11"
    },
    "1582": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1538,
        1684
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1583": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1471,
        1474
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 11,
      "value": "0x1"
    },
    "1585": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1471,
        1474
      ],
      "op": "ADD",
      "path": "11"
    },
    "1586": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1433,
        1694
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x510"
    },
    "1589": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1433,
        1694
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1590": {
      "offset": [
        652,
        692
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1591": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1593": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1600": {
      "op": "SHL"
    },
    "1601": {
      "op": "SUB"
    },
    "1602": {
      "offset": [
        652,
        692
      ],
      "op": "AND",
      "path": "11"
    },
    "1603": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        652,
        692
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1604": {
      "fn": "WhiteList.addWhiteList",
      "jump": "o",
      "offset": [
        652,
        692
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1605": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1047,
        1165
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1612": {
      "op": "SHL"
    },
    "1613": {
      "op": "SUB"
    },
    "1614": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "AND",
      "path": "11",
      "statement": 12
    },
    "1615": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1117,
        1121
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1617": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1618": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1619": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1620": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1622": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1623": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1624": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1625": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1627": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1628": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1629": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1630": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "1632": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "AND",
      "path": "11"
    },
    "1633": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1140,
        1158
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1634": {
      "fn": "WhiteList.isInWhiteList",
      "jump": "o",
      "offset": [
        1047,
        1165
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1635": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        827,
        1041
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1636": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        909,
        920
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 13,
      "value": "0x1"
    },
    "1638": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        909,
        920
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1643": {
      "op": "SHL"
    },
    "1644": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        909,
        920
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1645": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        909,
        920
      ],
      "op": "DIV",
      "path": "11"
    },
    "1646": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        909,
        920
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "1648": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        909,
        920
      ],
      "op": "AND",
      "path": "11"
    },
    "1649": {
      "branch": 22,
      "fn": "WhiteList.initWhiteList",
      "offset": [
        908,
        920
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1650": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6B8"
    },
    "1653": {
      "branch": 22,
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1654": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1656": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1657": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1664": {
      "op": "SHL"
    },
    "1665": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1666": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1667": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1669": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1671": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1672": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "ADD",
      "path": "11"
    },
    "1673": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1674": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x13"
    },
    "1676": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "1678": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1679": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "ADD",
      "path": "11"
    },
    "1680": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1681": {
      "op": "PUSH19",
      "value": "0x105B1C9958591E481A5B9A5D1A585B1A5CD959"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "1703": {
      "op": "SHL"
    },
    "1704": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x44"
    },
    "1706": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1707": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "ADD",
      "path": "11"
    },
    "1708": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1709": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1710": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1711": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1712": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1713": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1714": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "SUB",
      "path": "11"
    },
    "1715": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x64"
    },
    "1717": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "ADD",
      "path": "11"
    },
    "1718": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1719": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1720": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        900,
        944
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1721": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        954,
        968
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 14,
      "value": "0x1"
    },
    "1723": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        954,
        1006
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1724": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        954,
        1006
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1729": {
      "op": "SHL"
    },
    "1730": {
      "op": "NOT"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1737": {
      "op": "SHL"
    },
    "1738": {
      "op": "SUB"
    },
    "1739": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        954,
        1006
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1740": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        954,
        1006
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1741": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        954,
        1006
      ],
      "op": "AND",
      "path": "11"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "op": "SUB"
    },
    "1750": {
      "op": "NOT"
    },
    "1751": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        954,
        1006
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1752": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        954,
        1006
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1753": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        954,
        1006
      ],
      "op": "AND",
      "path": "11"
    },
    "1754": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        954,
        1006
      ],
      "op": "OR",
      "path": "11"
    },
    "1755": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1016,
        1034
      ],
      "op": "SWAP2",
      "path": "11",
      "statement": 15
    },
    "1756": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1016,
        1034
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1757": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1016,
        1034
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1758": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1016,
        1034
      ],
      "op": "AND",
      "path": "11"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1763": {
      "op": "SHL"
    },
    "1764": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1016,
        1034
      ],
      "op": "OR",
      "path": "11"
    },
    "1765": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1016,
        1034
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1766": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1016,
        1034
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1767": {
      "fn": "WhiteList.initWhiteList",
      "jump": "o",
      "offset": [
        827,
        1041
      ],
      "op": "JUMP",
      "path": "11"
    }
  },
  "sha1": "d836e768f88cdecb6911ebe857e89a3135fc8eb2",
  "source": "pragma solidity ^0.6.9;\n\n// ----------------------------------------------------------------------------\n// BokkyPooBah's White List\n//\n//\n// Enjoy.\n//\n// (c) BokkyPooBah / Bok Consulting Pty Ltd. The MIT Licence.\n// ----------------------------------------------------------------------------\n\nimport \"./MISOAccessControls.sol\";\nimport \"../../interfaces/IWhiteList.sol\";\n\n\n// ----------------------------------------------------------------------------\n// White List - on list or not\n// ----------------------------------------------------------------------------\ncontract WhiteList is IWhiteList  {\n    mapping(address => bool) public whiteList;\n    MISOAccessControls public accessControls;\n    bool private initialised;\n\n    event AccountListed(address indexed account, bool status);\n\n    constructor() public {\n    }\n\n    function initWhiteList(address _accessControls) public override{\n        require(!initialised, \"Already initialised\");\n        accessControls = MISOAccessControls(_accessControls);\n        initialised = true;\n    }\n\n    function isInWhiteList(address account) public view override returns (bool) {\n        return whiteList[account];\n    }\n\n    function addWhiteList(address[] memory accounts) public override {  \n        require(\n            accessControls.hasOperatorRole(msg.sender),\n            \"Whitelist.addWhiteList: Sender must be operator\"\n        );\n        require(accounts.length != 0);\n        for (uint i = 0; i < accounts.length; i++) {\n            require(accounts[i] != address(0));\n            if (!whiteList[accounts[i]]) {\n                whiteList[accounts[i]] = true;\n                emit AccountListed(accounts[i], true);\n            }\n        }\n    }\n    function removeWhiteList(address[] memory accounts) public override {\n        require(\n            accessControls.hasOperatorRole(msg.sender),\n            \"Whitelist.removeWhiteList: Sender must be operator\"\n        );        require(accounts.length != 0);\n        for (uint i = 0; i < accounts.length; i++) {\n            require(accounts[i] != address(0));\n            if (whiteList[accounts[i]]) {\n                delete whiteList[accounts[i]];\n                emit AccountListed(accounts[i], false);\n            }\n        }\n    }\n}\n",
  "sourceMap": "565:1674:11:-:0;;;793:28;;;;;;;;;;565:1674;;;;;;",
  "sourcePath": "contracts/Access/WhiteList.sol",
  "type": "contract"
}