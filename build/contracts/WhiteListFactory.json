{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "FactoryDeprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "MinimumFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "whiteList",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "WhiteListDeployed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "children",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_listOwner",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_whiteListed",
          "type": "address[]"
        }
      ],
      "name": "deployWhiteList",
      "outputs": [
        {
          "internalType": "address",
          "name": "whiteList",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "deprecateFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListTemplate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minimumFee",
          "type": "uint256"
        }
      ],
      "name": "initWhiteListFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isChild",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfChildren",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumFee",
          "type": "uint256"
        }
      ],
      "name": "setMinimumFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transferAnyERC20Token",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whiteListTemplate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/Access/WhiteListFactory.sol",
    "3": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
    "52": "contracts/Utils/CloneFactory.sol",
    "53": "contracts/Utils/Owned.sol"
  },
  "ast": {
    "absolutePath": "contracts/Access/WhiteListFactory.sol",
    "exportedSymbols": {
      "WhiteListFactory": [
        885
      ]
    },
    "id": 886,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 635,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "contracts/Utils/Owned.sol",
        "file": "../Utils/Owned.sol",
        "id": 636,
        "nodeType": "ImportDirective",
        "scope": 886,
        "sourceUnit": 15280,
        "src": "26:28:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 637,
        "nodeType": "ImportDirective",
        "scope": 886,
        "sourceUnit": 17449,
        "src": "55:51:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Utils/CloneFactory.sol",
        "file": "../Utils/CloneFactory.sol",
        "id": 638,
        "nodeType": "ImportDirective",
        "scope": 886,
        "sourceUnit": 15156,
        "src": "107:35:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../../interfaces/IERC20.sol",
        "id": 639,
        "nodeType": "ImportDirective",
        "scope": 886,
        "sourceUnit": 17560,
        "src": "143:37:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IOwned.sol",
        "file": "../../interfaces/IOwned.sol",
        "id": 640,
        "nodeType": "ImportDirective",
        "scope": 886,
        "sourceUnit": 17578,
        "src": "181:37:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IWhiteList.sol",
        "file": "../../interfaces/IWhiteList.sol",
        "id": 641,
        "nodeType": "ImportDirective",
        "scope": 886,
        "sourceUnit": 17476,
        "src": "219:41:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 642,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15279,
              "src": "556:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$15279",
                "typeString": "contract Owned"
              }
            },
            "id": 643,
            "nodeType": "InheritanceSpecifier",
            "src": "556:5:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 644,
              "name": "CloneFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15155,
              "src": "563:12:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CloneFactory_$15155",
                "typeString": "contract CloneFactory"
              }
            },
            "id": 645,
            "nodeType": "InheritanceSpecifier",
            "src": "563:12:12"
          }
        ],
        "contractDependencies": [
          15155,
          15279
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 885,
        "linearizedBaseContracts": [
          885,
          15155,
          15279
        ],
        "name": "WhiteListFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 648,
            "libraryName": {
              "contractScope": null,
              "id": 646,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17448,
              "src": "588:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$17448",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "582:24:12",
            "typeName": {
              "id": 647,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "601:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "4d8d5b99",
            "id": 650,
            "mutability": "mutable",
            "name": "whiteListTemplate",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 885,
            "src": "612:32:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 649,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "612:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ccdb3f45",
            "id": 652,
            "mutability": "mutable",
            "name": "newAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 885,
            "src": "651:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 651,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "651:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1a7626e7",
            "id": 655,
            "mutability": "mutable",
            "name": "minimumFee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 885,
            "src": "682:37:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 653,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "682:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e31",
              "id": 654,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "710:9:12",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc91a897",
            "id": 659,
            "mutability": "mutable",
            "name": "isChild",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 885,
            "src": "725:39:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 658,
              "keyType": {
                "id": 656,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "733:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "725:24:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 657,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "744:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7002ce42",
            "id": 662,
            "mutability": "mutable",
            "name": "children",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 885,
            "src": "770:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 660,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "770:7:12",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 661,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "770:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 672,
            "name": "WhiteListDeployed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "827:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 666,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "853:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 668,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "whiteList",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "875:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 670,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "894:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "826:82:12"
            },
            "src": "803:106:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 676,
            "name": "FactoryDeprecated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 676,
                  "src": "938:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "937:21:12"
            },
            "src": "914:45:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 682,
            "name": "MinimumFeeUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 678,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 682,
                  "src": "988:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 680,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 682,
                  "src": "1001:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "987:26:12"
            },
            "src": "964:50:12"
          },
          {
            "body": {
              "id": 702,
              "nodeType": "Block",
              "src": "1112:121:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 690,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1133:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1133:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 689,
                      "name": "_initOwned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15211,
                      "src": "1122:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1122:22:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 693,
                  "nodeType": "ExpressionStatement",
                  "src": "1122:22:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 694,
                      "name": "whiteListTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "1154:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 695,
                      "name": "_whiteListTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 684,
                      "src": "1174:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1154:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 697,
                  "nodeType": "ExpressionStatement",
                  "src": "1154:38:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 698,
                      "name": "minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "1202:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 699,
                      "name": "_minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "1215:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1202:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:24:12"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0df6e4ea",
            "id": 703,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initWhiteListFactory",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "_whiteListTemplate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 703,
                  "src": "1055:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "_minimumFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 703,
                  "src": "1083:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1053:50:12"
            },
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1112:0:12"
            },
            "scope": 885,
            "src": "1024:209:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 711,
              "nodeType": "Block",
              "src": "1294:39:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 708,
                      "name": "children",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 662,
                      "src": "1311:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1311:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 707,
                  "id": 710,
                  "nodeType": "Return",
                  "src": "1304:22:12"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "534349f5",
            "id": 712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfChildren",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1264:2:12"
            },
            "returnParameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 706,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 712,
                  "src": "1288:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 705,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1287:6:12"
            },
            "scope": 885,
            "src": "1239:94:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 739,
              "nodeType": "Block",
              "src": "1392:157:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 718,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15230,
                          "src": "1410:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1410:9:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 717,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1402:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1402:18:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "1402:18:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 723,
                          "name": "newAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 652,
                          "src": "1438:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1460:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1452:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 724,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1452:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1452:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1438:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 722,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1430:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1430:33:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "1430:33:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 732,
                        "name": "_newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 714,
                        "src": "1496:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 731,
                      "name": "FactoryDeprecated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "1478:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1478:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "EmitStatement",
                  "src": "1473:35:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 735,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "1518:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 736,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 714,
                      "src": "1531:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1518:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:24:12"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "de0946af",
            "id": 740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deprecateFactory",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 740,
                  "src": "1364:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1363:21:12"
            },
            "returnParameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1392:0:12"
            },
            "scope": 885,
            "src": "1338:211:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "1605:126:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 746,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15230,
                          "src": "1623:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1623:9:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 745,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1615:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1615:18:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "1615:18:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "minimumFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "1666:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 752,
                        "name": "_minimumFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "1678:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 750,
                      "name": "MinimumFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "1648:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1648:42:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "EmitStatement",
                  "src": "1643:47:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 755,
                      "name": "minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "1700:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 756,
                      "name": "_minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "1713:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1700:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "1700:24:12"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "182a7506",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMinimumFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "_minimumFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 760,
                  "src": "1577:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1576:21:12"
            },
            "returnParameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:0:12"
            },
            "scope": 885,
            "src": "1554:177:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "1890:547:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 771,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1908:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1908:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 773,
                          "name": "minimumFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 655,
                          "src": "1921:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1908:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 770,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1900:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:32:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 777,
                      "name": "whiteList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "1942:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 779,
                          "name": "whiteListTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "1966:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 778,
                        "name": "createClone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15136,
                        "src": "1954:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) returns (address)"
                        }
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1954:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1942:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "1942:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 789,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2038:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WhiteListFactory_$885",
                              "typeString": "contract WhiteListFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WhiteListFactory_$885",
                              "typeString": "contract WhiteListFactory"
                            }
                          ],
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2030:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 787,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2030:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2030:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 784,
                            "name": "whiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "2005:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 783,
                          "name": "IWhiteList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17475,
                          "src": "1994:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWhiteList_$17475_$",
                            "typeString": "type(contract IWhiteList)"
                          }
                        },
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1994:21:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWhiteList_$17475",
                          "typeString": "contract IWhiteList"
                        }
                      },
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initWhiteList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17474,
                      "src": "1994:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1994:50:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "1994:50:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 797,
                        "name": "_whiteListed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "2089:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 794,
                            "name": "whiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "2065:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 793,
                          "name": "IWhiteList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17475,
                          "src": "2054:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWhiteList_$17475_$",
                            "typeString": "type(contract IWhiteList)"
                          }
                        },
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2054:21:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWhiteList_$17475",
                          "typeString": "contract IWhiteList"
                        }
                      },
                      "id": 796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addWhiteList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17463,
                      "src": "2054:34:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory) external"
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:48:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:48:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 804,
                        "name": "_listOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 762,
                        "src": "2148:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 801,
                            "name": "whiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "2119:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 800,
                          "name": "IOwned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17577,
                          "src": "2112:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IOwned_$17577_$",
                            "typeString": "type(contract IOwned)"
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2112:17:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOwned_$17577",
                          "typeString": "contract IOwned"
                        }
                      },
                      "id": 803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17576,
                      "src": "2112:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:47:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:47:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 807,
                        "name": "isChild",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "2169:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 812,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 810,
                            "name": "whiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "2185:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2177:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 808,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2177:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2177:18:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2169:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2199:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2169:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "2169:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 821,
                            "name": "whiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "2235:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2227:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 819,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2227:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2227:18:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 816,
                        "name": "children",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "2213:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2213:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2213:33:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "2213:33:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 826,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2279:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2279:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 830,
                            "name": "whiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "2299:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2291:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 828,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2291:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2291:18:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 832,
                        "name": "whiteListTemplate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "2311:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 833,
                        "name": "_listOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 762,
                        "src": "2330:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 825,
                      "name": "WhiteListDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "2261:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2261:80:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 835,
                  "nodeType": "EmitStatement",
                  "src": "2256:85:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 836,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2355:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2355:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2367:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2355:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 851,
                  "nodeType": "IfStatement",
                  "src": "2351:80:12",
                  "trueBody": {
                    "id": 850,
                    "nodeType": "Block",
                    "src": "2370:61:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 846,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2410:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2410:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 842,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15219,
                                    "src": "2392:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 843,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2392:7:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2384:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 840,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2384:8:12",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2384:16:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2384:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2384:36:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 849,
                        "nodeType": "ExpressionStatement",
                        "src": "2384:36:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "cb6b2fce",
            "id": 853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "_listOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 853,
                  "src": "1771:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1771:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "_whiteListed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 853,
                  "src": "1799:29:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 763,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1799:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 764,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1799:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1761:73:12"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "whiteList",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 853,
                  "src": "1867:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1867:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1866:19:12"
            },
            "scope": 885,
            "src": "1737:700:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 876,
              "nodeType": "Block",
              "src": "2566:98:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 863,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15230,
                          "src": "2584:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2584:9:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2576:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2576:18:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 866,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:18:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 871,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15219,
                          "src": "2641:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2641:7:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 873,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 857,
                        "src": "2650:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 868,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 855,
                            "src": "2618:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 867,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17559,
                          "src": "2611:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$17559_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2611:20:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$17559",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17513,
                      "src": "2611:29:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2611:46:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 861,
                  "id": 875,
                  "nodeType": "Return",
                  "src": "2604:53:12"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dc39d06d",
            "id": 877,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferAnyERC20Token",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 877,
                  "src": "2498:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2498:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 857,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 877,
                  "src": "2520:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2520:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2497:38:12"
            },
            "returnParameters": {
              "id": 861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 860,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 877,
                  "src": "2552:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2551:14:12"
            },
            "scope": 885,
            "src": "2467:197:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 883,
              "nodeType": "Block",
              "src": "2697:25:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 880,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2707:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2707:8:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 882,
                  "nodeType": "ExpressionStatement",
                  "src": "2707:8:12"
                }
              ]
            },
            "documentation": null,
            "id": 884,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2677:2:12"
            },
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2697:0:12"
            },
            "scope": 885,
            "src": "2669:53:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 886,
        "src": "526:2198:12"
      }
    ],
    "src": "0:2724:12"
  },
  "bytecode": "608060405267016345785d8a000060045534801561001c57600080fd5b50610a798061002c6000396000f3fe6080604052600436106100f75760003560e01c80638f32d59b1161008a578063dc39d06d11610059578063dc39d06d14610332578063de0946af1461036b578063f2fde38b1461039e578063fc91a897146103d157610101565b80638f32d59b1461022c578063cb6b2fce14610255578063ccdb3f4514610308578063d4ee1d901461031d57610101565b8063534349f5116100c6578063534349f5146101c35780637002ce42146101d857806379ba5097146102025780638da5cb5b1461021757610101565b80630df6e4ea14610106578063182a7506146101415780631a7626e71461016b5780634d8d5b991461019257610101565b3661010157600080fd5b600080fd5b34801561011257600080fd5b5061013f6004803603604081101561012957600080fd5b506001600160a01b038135169060200135610404565b005b34801561014d57600080fd5b5061013f6004803603602081101561016457600080fd5b5035610433565b34801561017757600080fd5b50610180610486565b60408051918252519081900360200190f35b34801561019e57600080fd5b506101a761048c565b604080516001600160a01b039092168252519081900360200190f35b3480156101cf57600080fd5b5061018061049b565b3480156101e457600080fd5b506101a7600480360360208110156101fb57600080fd5b50356104a1565b34801561020e57600080fd5b5061013f6104c8565b34801561022357600080fd5b506101a7610543565b34801561023857600080fd5b50610241610552565b604080519115158252519081900360200190f35b6101a76004803603604081101561026b57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561029657600080fd5b8201836020820111156102a857600080fd5b803590602001918460208302840111640100000000831117156102ca57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610563945050505050565b34801561031457600080fd5b506101a76107ed565b34801561032957600080fd5b506101a76107fc565b34801561033e57600080fd5b506102416004803603604081101561035557600080fd5b506001600160a01b03813516906020013561080b565b34801561037757600080fd5b5061013f6004803603602081101561038e57600080fd5b50356001600160a01b03166108af565b3480156103aa57600080fd5b5061013f600480360360208110156103c157600080fd5b50356001600160a01b0316610934565b3480156103dd57600080fd5b50610241600480360360208110156103f457600080fd5b50356001600160a01b0316610967565b61040d3361097c565b600280546001600160a01b0319166001600160a01b039390931692909217909155600455565b61043b610552565b61044457600080fd5b600454604080519182526020820183905280517fcc2f49c6214278ae5862935eff953448e8e69118d10abfafaf63ea6aa35255cb9281900390910190a1600455565b60045481565b6002546001600160a01b031681565b60065490565b600681815481106104ae57fe5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146104df57600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600060045434101561057457600080fd5b600254610589906001600160a01b03166109f1565b9050806001600160a01b031663ce83c50f306040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156105da57600080fd5b505af11580156105ee573d6000803e3d6000fd5b5050604051631784117b60e21b81526020600482018181528651602484015286516001600160a01b0387169550635e1045ec945087939192839260440191818601910280838360005b8381101561064f578181015183820152602001610637565b5050505090500192505050600060405180830381600087803b15801561067457600080fd5b505af1158015610688573d6000803e3d6000fd5b50505050806001600160a01b031663f2fde38b846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156106db57600080fd5b505af11580156106ef573d6000803e3d6000fd5b5050506001600160a01b038083166000818152600560209081526040808320805460ff191660019081179091556006805491820181559093527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90920180546001600160a01b031916841790556002548251908516815293881690840152805191935033927fa815c2b4b24122552f1ec573c612e4cda24efdd4be21933b7ab2e0842186238d929081900390910190a334156107e7576107ad610543565b6001600160a01b03166108fc349081150290604051600060405180830381858888f193505050501580156107e5573d6000803e3d6000fd5b505b92915050565b6003546001600160a01b031681565b6001546001600160a01b031681565b6000610815610552565b61081e57600080fd5b826001600160a01b031663a9059cbb610835610543565b846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561087c57600080fd5b505af1158015610890573d6000803e3d6000fd5b505050506040513d60208110156108a657600080fd5b50519392505050565b6108b7610552565b6108c057600080fd5b6003546001600160a01b0316156108d657600080fd5b604080516001600160a01b038316815290517f0ac885cfcac9d1450e80f787dbf9546001fb50414106435b10b1d27b448b86689181900360200190a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b61093c610552565b61094557600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60056020526000908152604090205460ff1681565b600054600160a01b900460ff161561099357600080fd5b6000805460ff60a01b196001600160a01b038085166001600160a01b03199093169290921716600160a01b17808355604051911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f094935050505056fea264697066735822122059d869f052028477599cdc562671613e2dc233d50fc3303cb76c991dac89128564736f6c634300060c0033",
  "bytecodeSha1": "a580f6ae8f612fad58bff8686dabbc79a6499029",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "WhiteListFactory",
  "coverageMap": {
    "branches": {
      "12": {
        "WhiteListFactory.deployWhiteList": {
          "36": [
            1908,
            1931,
            true
          ],
          "37": [
            2355,
            2368,
            false
          ]
        },
        "WhiteListFactory.deprecateFactory": {
          "39": [
            1410,
            1419,
            true
          ],
          "40": [
            1438,
            1462,
            true
          ]
        },
        "WhiteListFactory.setMinimumFee": {
          "35": [
            1623,
            1632,
            true
          ]
        },
        "WhiteListFactory.transferAnyERC20Token": {
          "38": [
            2584,
            2593,
            true
          ]
        }
      },
      "3": {},
      "52": {},
      "53": {
        "Owned._initOwned": {
          "43": [
            412,
            424,
            true
          ]
        },
        "Owned.acceptOwnership": {
          "41": [
            918,
            940,
            true
          ]
        },
        "Owned.transferOwnership": {
          "42": [
            813,
            822,
            true
          ]
        }
      }
    },
    "statements": {
      "12": {
        "WhiteListFactory.<receive>": {
          "0": [
            2707,
            2715
          ]
        },
        "WhiteListFactory.deployWhiteList": {
          "14": [
            1900,
            1932
          ],
          "15": [
            1942,
            1984
          ],
          "16": [
            1994,
            2044
          ],
          "17": [
            2054,
            2102
          ],
          "18": [
            2112,
            2159
          ],
          "19": [
            2169,
            2203
          ],
          "20": [
            2213,
            2246
          ],
          "21": [
            2256,
            2341
          ],
          "22": [
            2384,
            2420
          ]
        },
        "WhiteListFactory.deprecateFactory": {
          "25": [
            1402,
            1420
          ],
          "26": [
            1430,
            1463
          ],
          "27": [
            1473,
            1508
          ],
          "28": [
            1518,
            1542
          ]
        },
        "WhiteListFactory.initWhiteListFactory": {
          "1": [
            1122,
            1144
          ],
          "2": [
            1154,
            1192
          ],
          "3": [
            1202,
            1226
          ]
        },
        "WhiteListFactory.numberOfChildren": {
          "7": [
            1304,
            1326
          ]
        },
        "WhiteListFactory.setMinimumFee": {
          "4": [
            1615,
            1633
          ],
          "5": [
            1643,
            1690
          ],
          "6": [
            1700,
            1724
          ]
        },
        "WhiteListFactory.transferAnyERC20Token": {
          "23": [
            2576,
            2594
          ],
          "24": [
            2604,
            2657
          ]
        }
      },
      "3": {},
      "52": {},
      "53": {
        "Owned._initOwned": {
          "31": [
            404,
            425
          ],
          "32": [
            435,
            468
          ],
          "33": [
            478,
            496
          ],
          "34": [
            506,
            551
          ]
        },
        "Owned.acceptOwnership": {
          "8": [
            910,
            941
          ],
          "9": [
            951,
            994
          ],
          "10": [
            1004,
            1039
          ],
          "11": [
            1049,
            1070
          ]
        },
        "Owned.isOwner": {
          "13": [
            702,
            729
          ]
        },
        "Owned.owner": {
          "12": [
            621,
            634
          ]
        },
        "Owned.transferOwnership": {
          "29": [
            805,
            823
          ],
          "30": [
            833,
            853
          ]
        }
      }
    }
  },
  "dependencies": [
    "CloneFactory",
    "Owned",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/SafeMath"
  ],
  "deployedBytecode": "6080604052600436106100f75760003560e01c80638f32d59b1161008a578063dc39d06d11610059578063dc39d06d14610332578063de0946af1461036b578063f2fde38b1461039e578063fc91a897146103d157610101565b80638f32d59b1461022c578063cb6b2fce14610255578063ccdb3f4514610308578063d4ee1d901461031d57610101565b8063534349f5116100c6578063534349f5146101c35780637002ce42146101d857806379ba5097146102025780638da5cb5b1461021757610101565b80630df6e4ea14610106578063182a7506146101415780631a7626e71461016b5780634d8d5b991461019257610101565b3661010157600080fd5b600080fd5b34801561011257600080fd5b5061013f6004803603604081101561012957600080fd5b506001600160a01b038135169060200135610404565b005b34801561014d57600080fd5b5061013f6004803603602081101561016457600080fd5b5035610433565b34801561017757600080fd5b50610180610486565b60408051918252519081900360200190f35b34801561019e57600080fd5b506101a761048c565b604080516001600160a01b039092168252519081900360200190f35b3480156101cf57600080fd5b5061018061049b565b3480156101e457600080fd5b506101a7600480360360208110156101fb57600080fd5b50356104a1565b34801561020e57600080fd5b5061013f6104c8565b34801561022357600080fd5b506101a7610543565b34801561023857600080fd5b50610241610552565b604080519115158252519081900360200190f35b6101a76004803603604081101561026b57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561029657600080fd5b8201836020820111156102a857600080fd5b803590602001918460208302840111640100000000831117156102ca57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610563945050505050565b34801561031457600080fd5b506101a76107ed565b34801561032957600080fd5b506101a76107fc565b34801561033e57600080fd5b506102416004803603604081101561035557600080fd5b506001600160a01b03813516906020013561080b565b34801561037757600080fd5b5061013f6004803603602081101561038e57600080fd5b50356001600160a01b03166108af565b3480156103aa57600080fd5b5061013f600480360360208110156103c157600080fd5b50356001600160a01b0316610934565b3480156103dd57600080fd5b50610241600480360360208110156103f457600080fd5b50356001600160a01b0316610967565b61040d3361097c565b600280546001600160a01b0319166001600160a01b039390931692909217909155600455565b61043b610552565b61044457600080fd5b600454604080519182526020820183905280517fcc2f49c6214278ae5862935eff953448e8e69118d10abfafaf63ea6aa35255cb9281900390910190a1600455565b60045481565b6002546001600160a01b031681565b60065490565b600681815481106104ae57fe5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146104df57600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600060045434101561057457600080fd5b600254610589906001600160a01b03166109f1565b9050806001600160a01b031663ce83c50f306040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156105da57600080fd5b505af11580156105ee573d6000803e3d6000fd5b5050604051631784117b60e21b81526020600482018181528651602484015286516001600160a01b0387169550635e1045ec945087939192839260440191818601910280838360005b8381101561064f578181015183820152602001610637565b5050505090500192505050600060405180830381600087803b15801561067457600080fd5b505af1158015610688573d6000803e3d6000fd5b50505050806001600160a01b031663f2fde38b846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156106db57600080fd5b505af11580156106ef573d6000803e3d6000fd5b5050506001600160a01b038083166000818152600560209081526040808320805460ff191660019081179091556006805491820181559093527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90920180546001600160a01b031916841790556002548251908516815293881690840152805191935033927fa815c2b4b24122552f1ec573c612e4cda24efdd4be21933b7ab2e0842186238d929081900390910190a334156107e7576107ad610543565b6001600160a01b03166108fc349081150290604051600060405180830381858888f193505050501580156107e5573d6000803e3d6000fd5b505b92915050565b6003546001600160a01b031681565b6001546001600160a01b031681565b6000610815610552565b61081e57600080fd5b826001600160a01b031663a9059cbb610835610543565b846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561087c57600080fd5b505af1158015610890573d6000803e3d6000fd5b505050506040513d60208110156108a657600080fd5b50519392505050565b6108b7610552565b6108c057600080fd5b6003546001600160a01b0316156108d657600080fd5b604080516001600160a01b038316815290517f0ac885cfcac9d1450e80f787dbf9546001fb50414106435b10b1d27b448b86689181900360200190a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b61093c610552565b61094557600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60056020526000908152604090205460ff1681565b600054600160a01b900460ff161561099357600080fd5b6000805460ff60a01b196001600160a01b038085166001600160a01b03199093169290921716600160a01b17808355604051911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f094935050505056fea264697066735822122059d869f052028477599cdc562671613e2dc233d50fc3303cb76c991dac89128564736f6c634300060c0033",
  "deployedSourceMap": "526:2198:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2707:8;;;526:2198;;;;1024:209;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1024:209:12;;;;;;;;:::i;:::-;;1554:177;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1554:177:12;;:::i;682:37::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;612:32;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;612:32:12;;;;;;;;;;;;;;1239:94;;;;;;;;;;;;;:::i;770:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;770:25:12;;:::i;866:211:53:-;;;;;;;;;;;;;:::i;564:77::-;;;;;;;;;;;;;:::i;646:90::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1737:700:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1737:700:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1737:700:12;;-1:-1:-1;1737:700:12;;-1:-1:-1;;;;;1737:700:12:i;651:25::-;;;;;;;;;;;;;:::i;156:23:53:-;;;;;;;;;;;;;:::i;2467:197:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2467:197:12;;;;;;;;:::i;1338:211::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1338:211:12;-1:-1:-1;;;;;1338:211:12;;:::i;742:118:53:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:118:53;-1:-1:-1;;;;;742:118:53;;:::i;725:39:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;725:39:12;-1:-1:-1;;;;;725:39:12;;:::i;1024:209::-;1122:22;1133:10;1122;:22::i;:::-;1154:17;:38;;-1:-1:-1;;;;;;1154:38:12;-1:-1:-1;;;;;1154:38:12;;;;;;;;;;;1202:10;:24;1024:209::o;1554:177::-;1623:9;:7;:9::i;:::-;1615:18;;;;;;1666:10;;1648:42;;;;;;;;;;;;;;;;;;;;;;;;1700:10;:24;1554:177::o;682:37::-;;;;:::o;612:32::-;;;-1:-1:-1;;;;;612:32:12;;:::o;1239:94::-;1311:8;:15;1239:94;:::o;770:25::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;770:25:12;;-1:-1:-1;770:25:12;:::o;866:211:53:-;932:8;;-1:-1:-1;;;;;932:8:53;918:10;:22;910:31;;;;;;985:8;;;977:6;;956:38;;-1:-1:-1;;;;;985:8:53;;;;977:6;;;;956:38;;;1029:8;;;;1004:35;;-1:-1:-1;;;;;;1004:35:53;;;-1:-1:-1;;;;;1029:8:53;;1004:35;;;;1049:21;;;866:211::o;564:77::-;602:7;628:6;-1:-1:-1;;;;;628:6:53;564:77;:::o;646:90::-;686:4;723:6;-1:-1:-1;;;;;723:6:53;709:10;:20;;646:90::o;1737:700:12:-;1867:17;1921:10;;1908:9;:23;;1900:32;;;;;;1966:17;;1954:30;;-1:-1:-1;;;;;1966:17:12;1954:11;:30::i;:::-;1942:42;;2005:9;-1:-1:-1;;;;;1994:35:12;;2038:4;1994:50;;;;;;;;;;;;;-1:-1:-1;;;;;1994:50:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2054:48:12;;-1:-1:-1;;;2054:48:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2054:34:12;;;-1:-1:-1;2054:34:12;;-1:-1:-1;2089:12:12;;2054:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:9;-1:-1:-1;;;;;2112:35:12;;2148:10;2112:47;;;;;;;;;;;;;-1:-1:-1;;;;;2112:47:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;2169:27:12;;;;;;;:7;:27;;;;;;;;:34;;-1:-1:-1;;2169:34:12;2199:4;2169:34;;;;;;2213:8;:33;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2213:33:12;;;;;2311:17;;2261:80;;2311:17;;;2261:80;;;;;;;;;;;2169:27;;-1:-1:-1;2279:10:12;;2261:80;;;;;;;;;;;2355:9;:13;2351:80;;2392:7;:5;:7::i;:::-;-1:-1:-1;;;;;2384:25:12;:36;2410:9;2384:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2351:80;1737:700;;;;:::o;651:25::-;;;-1:-1:-1;;;;;651:25:12;;:::o;156:23:53:-;;;-1:-1:-1;;;;;156:23:53;;:::o;2467:197:12:-;2552:12;2584:9;:7;:9::i;:::-;2576:18;;;;;;2618:12;-1:-1:-1;;;;;2611:29:12;;2641:7;:5;:7::i;:::-;2650:6;2611:46;;;;;;;;;;;;;-1:-1:-1;;;;;2611:46:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2611:46:12;;2467:197;-1:-1:-1;;;2467:197:12:o;1338:211::-;1410:9;:7;:9::i;:::-;1402:18;;;;;;1438:10;;-1:-1:-1;;;;;1438:10:12;:24;1430:33;;;;;;1478:30;;;-1:-1:-1;;;;;1478:30:12;;;;;;;;;;;;;;;1518:10;:24;;-1:-1:-1;;;;;;1518:24:12;-1:-1:-1;;;;;1518:24:12;;;;;;;;;;1338:211::o;742:118:53:-;813:9;:7;:9::i;:::-;805:18;;;;;;833:8;:20;;-1:-1:-1;;;;;;833:20:53;-1:-1:-1;;;;;833:20:53;;;;;;;;;;742:118::o;725:39:12:-;;;;;;;;;;;;;;;:::o;349:209:53:-;413:11;;-1:-1:-1;;;413:11:53;;;;412:12;404:21;;;;;;435:6;:33;;-1:-1:-1;;;;;;;;;435:33:53;;;-1:-1:-1;;;;;;435:33:53;;;;;;;478:18;-1:-1:-1;;;478:18:53;;;;511:40;;544:6;;;435;511:40;;435:6;;511:40;349:209;:::o;1524:441:52:-;1579:14;1601:19;1631:6;1623:15;;1601:37;;1680:4;1674:11;-1:-1:-1;;;1699:5:52;1692:81;1805:11;1798:4;1791:5;1787:16;1780:37;-1:-1:-1;;;1842:4:52;1835:5;1831:16;1824:92;1950:4;1943:5;1940:1;1933:22;1923:32;1653:308;-1:-1:-1;;;;1653:308:52:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    526,
    2724
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDC39D06D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDC39D06D EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xDE0946AF EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xFC91A897 EQ PUSH2 0x3D1 JUMPI PUSH2 0x101 JUMP JUMPDEST DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xCB6B2FCE EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xCCDB3F45 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x31D JUMPI PUSH2 0x101 JUMP JUMPDEST DUP1 PUSH4 0x534349F5 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x534349F5 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x7002CE42 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x217 JUMPI PUSH2 0x101 JUMP JUMPDEST DUP1 PUSH4 0xDF6E4EA EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x182A7506 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x1A7626E7 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x4D8D5B99 EQ PUSH2 0x192 JUMPI PUSH2 0x101 JUMP JUMPDEST CALLDATASIZE PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x404 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x433 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x49B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x4C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x543 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x552 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x563 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x7ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x7FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x80B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x934 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x967 JUMP JUMPDEST PUSH2 0x40D CALLER PUSH2 0x97C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH2 0x43B PUSH2 0x552 JUMP JUMPDEST PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD PUSH32 0xCC2F49C6214278AE5862935EFF953448E8E69118D10ABFAFAF63EA6AA35255CB SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4AE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD CALLVALUE LT ISZERO PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x589 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9F1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCE83C50F ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x1784117B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP6 POP PUSH4 0x5E1045EC SWAP5 POP DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 DUP2 DUP7 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x64F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x637 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x688 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2FDE38B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP4 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE PUSH1 0x2 SLOAD DUP3 MLOAD SWAP1 DUP6 AND DUP2 MSTORE SWAP4 DUP9 AND SWAP1 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 SWAP4 POP CALLER SWAP3 PUSH32 0xA815C2B4B24122552F1EC573C612E4CDA24EFDD4BE21933B7AB2E0842186238D SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 CALLVALUE ISZERO PUSH2 0x7E7 JUMPI PUSH2 0x7AD PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x815 PUSH2 0x552 JUMP JUMPDEST PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x835 PUSH2 0x543 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x87C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x890 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x8B7 PUSH2 0x552 JUMP JUMPDEST PUSH2 0x8C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0xAC885CFCAC9D1450E80F787DBF9546001FB50414106435B10B1D27B448B8668 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x93C PUSH2 0x552 JUMP JUMPDEST PUSH2 0x945 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x993 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP1 DUP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xD8 PUSH10 0xF052028477599CDC5626 PUSH18 0x613E2DC233D50FC3303CB76C991DAC891285 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        526,
        2724
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "LT",
      "path": "12"
    },
    "9": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF7"
    },
    "12": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "SHR",
      "path": "12"
    },
    "19": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8F32D59B"
    },
    "25": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "GT",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8A"
    },
    "29": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "30": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "31": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xDC39D06D"
    },
    "36": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "GT",
      "path": "12"
    },
    "37": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "41": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "42": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xDC39D06D"
    },
    "47": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "48": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x332"
    },
    "51": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "52": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "53": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xDE0946AF"
    },
    "58": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "59": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36B"
    },
    "62": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "63": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "64": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "70": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39E"
    },
    "73": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "74": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "75": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFC91A897"
    },
    "80": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "81": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D1"
    },
    "84": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "85": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x101"
    },
    "88": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMP",
      "path": "12"
    },
    "89": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "90": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "91": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8F32D59B"
    },
    "96": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "97": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x22C"
    },
    "100": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "101": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "102": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCB6B2FCE"
    },
    "107": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "108": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x255"
    },
    "111": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "112": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "113": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCCDB3F45"
    },
    "118": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "119": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x308"
    },
    "122": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "123": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "124": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD4EE1D90"
    },
    "129": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "130": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x31D"
    },
    "133": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "134": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x101"
    },
    "137": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMP",
      "path": "12"
    },
    "138": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "139": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "140": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x534349F5"
    },
    "145": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "GT",
      "path": "12"
    },
    "146": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC6"
    },
    "149": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "150": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "151": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x534349F5"
    },
    "156": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "157": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C3"
    },
    "160": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "161": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "162": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x7002CE42"
    },
    "167": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "168": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D8"
    },
    "171": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "172": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "173": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x79BA5097"
    },
    "178": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "179": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x202"
    },
    "182": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "183": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "184": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8DA5CB5B"
    },
    "189": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "190": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x217"
    },
    "193": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "194": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x101"
    },
    "197": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMP",
      "path": "12"
    },
    "198": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "199": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "200": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xDF6E4EA"
    },
    "205": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "206": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x106"
    },
    "209": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "210": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "211": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x182A7506"
    },
    "216": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "217": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x141"
    },
    "220": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "221": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "222": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1A7626E7"
    },
    "227": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "228": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16B"
    },
    "231": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "232": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "233": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4D8D5B99"
    },
    "238": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "EQ",
      "path": "12"
    },
    "239": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x192"
    },
    "242": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "243": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x101"
    },
    "246": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMP",
      "path": "12"
    },
    "247": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "248": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "249": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x101"
    },
    "252": {
      "fn": null,
      "offset": [
        526,
        2724
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "253": {
      "fn": "WhiteListFactory.<receive>",
      "offset": [
        2707,
        2715
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 0,
      "value": "0x0"
    },
    "255": {
      "fn": "WhiteListFactory.<receive>",
      "offset": [
        2707,
        2715
      ],
      "op": "DUP1",
      "path": "12"
    },
    "256": {
      "fn": "WhiteListFactory.<receive>",
      "offset": [
        2707,
        2715
      ],
      "op": "REVERT",
      "path": "12"
    },
    "257": {
      "offset": [
        526,
        2724
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "258": {
      "fn": "WhiteListFactory.<receive>",
      "offset": [
        526,
        2724
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "260": {
      "fn": "WhiteListFactory.<receive>",
      "offset": [
        526,
        2724
      ],
      "op": "DUP1",
      "path": "12"
    },
    "261": {
      "first_revert": true,
      "fn": "WhiteListFactory.<receive>",
      "offset": [
        526,
        2724
      ],
      "op": "REVERT",
      "path": "12"
    },
    "262": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "263": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "264": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "DUP1",
      "path": "12"
    },
    "265": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "266": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x112"
    },
    "269": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "270": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "272": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "DUP1",
      "path": "12"
    },
    "273": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "REVERT",
      "path": "12"
    },
    "274": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "275": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "POP",
      "path": "12"
    },
    "276": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13F"
    },
    "279": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "281": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "DUP1",
      "path": "12"
    },
    "282": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "283": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "SUB",
      "path": "12"
    },
    "284": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "286": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "DUP2",
      "path": "12"
    },
    "287": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "LT",
      "path": "12"
    },
    "288": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "289": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x129"
    },
    "292": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "293": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "295": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "DUP1",
      "path": "12"
    },
    "296": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "REVERT",
      "path": "12"
    },
    "297": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "298": {
      "op": "POP"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "305": {
      "op": "SHL"
    },
    "306": {
      "op": "SUB"
    },
    "307": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "DUP2",
      "path": "12"
    },
    "308": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "309": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "AND",
      "path": "12"
    },
    "310": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "311": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "313": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "ADD",
      "path": "12"
    },
    "314": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "315": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x404"
    },
    "318": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "jump": "i",
      "offset": [
        1024,
        1233
      ],
      "op": "JUMP",
      "path": "12"
    },
    "319": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "320": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "STOP",
      "path": "12"
    },
    "321": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "322": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "323": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "DUP1",
      "path": "12"
    },
    "324": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "325": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14D"
    },
    "328": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "329": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "331": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "DUP1",
      "path": "12"
    },
    "332": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "REVERT",
      "path": "12"
    },
    "333": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "334": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "POP",
      "path": "12"
    },
    "335": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13F"
    },
    "338": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "340": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "DUP1",
      "path": "12"
    },
    "341": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "342": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "SUB",
      "path": "12"
    },
    "343": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "345": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "DUP2",
      "path": "12"
    },
    "346": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "LT",
      "path": "12"
    },
    "347": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "348": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x164"
    },
    "351": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "352": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "354": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "DUP1",
      "path": "12"
    },
    "355": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "REVERT",
      "path": "12"
    },
    "356": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "357": {
      "op": "POP"
    },
    "358": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "359": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x433"
    },
    "362": {
      "fn": "WhiteListFactory.setMinimumFee",
      "jump": "i",
      "offset": [
        1554,
        1731
      ],
      "op": "JUMP",
      "path": "12"
    },
    "363": {
      "offset": [
        682,
        719
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "364": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "365": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "DUP1",
      "path": "12"
    },
    "366": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "367": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x177"
    },
    "370": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "371": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "373": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "DUP1",
      "path": "12"
    },
    "374": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "REVERT",
      "path": "12"
    },
    "375": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "376": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "POP",
      "path": "12"
    },
    "377": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x180"
    },
    "380": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x486"
    },
    "383": {
      "fn": "WhiteListFactory.setMinimumFee",
      "jump": "i",
      "offset": [
        682,
        719
      ],
      "op": "JUMP",
      "path": "12"
    },
    "384": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "385": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "387": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "DUP1",
      "path": "12"
    },
    "388": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "389": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "390": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "DUP3",
      "path": "12"
    },
    "391": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "392": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "393": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "394": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "DUP2",
      "path": "12"
    },
    "395": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "396": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "SUB",
      "path": "12"
    },
    "397": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "399": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "ADD",
      "path": "12"
    },
    "400": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "401": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "RETURN",
      "path": "12"
    },
    "402": {
      "offset": [
        612,
        644
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "403": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "404": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "DUP1",
      "path": "12"
    },
    "405": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "406": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x19E"
    },
    "409": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "410": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "412": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "DUP1",
      "path": "12"
    },
    "413": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "REVERT",
      "path": "12"
    },
    "414": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "415": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "POP",
      "path": "12"
    },
    "416": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A7"
    },
    "419": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x48C"
    },
    "422": {
      "fn": "WhiteListFactory.setMinimumFee",
      "jump": "i",
      "offset": [
        612,
        644
      ],
      "op": "JUMP",
      "path": "12"
    },
    "423": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "424": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "426": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "DUP1",
      "path": "12"
    },
    "427": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "434": {
      "op": "SHL"
    },
    "435": {
      "op": "SUB"
    },
    "436": {
      "offset": [
        612,
        644
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "437": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "438": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "AND",
      "path": "12"
    },
    "439": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "DUP3",
      "path": "12"
    },
    "440": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "441": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "442": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "443": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "DUP2",
      "path": "12"
    },
    "444": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "445": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "SUB",
      "path": "12"
    },
    "446": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "448": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "ADD",
      "path": "12"
    },
    "449": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "450": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "RETURN",
      "path": "12"
    },
    "451": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "452": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "453": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "DUP1",
      "path": "12"
    },
    "454": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "455": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CF"
    },
    "458": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "459": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "461": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "DUP1",
      "path": "12"
    },
    "462": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "REVERT",
      "path": "12"
    },
    "463": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "464": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "POP",
      "path": "12"
    },
    "465": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x180"
    },
    "468": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x49B"
    },
    "471": {
      "fn": "WhiteListFactory.numberOfChildren",
      "jump": "i",
      "offset": [
        1239,
        1333
      ],
      "op": "JUMP",
      "path": "12"
    },
    "472": {
      "offset": [
        770,
        795
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "473": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "474": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "DUP1",
      "path": "12"
    },
    "475": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "476": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1E4"
    },
    "479": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "480": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "482": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "DUP1",
      "path": "12"
    },
    "483": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "REVERT",
      "path": "12"
    },
    "484": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "485": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "POP",
      "path": "12"
    },
    "486": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A7"
    },
    "489": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "491": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "DUP1",
      "path": "12"
    },
    "492": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "493": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "SUB",
      "path": "12"
    },
    "494": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "496": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "DUP2",
      "path": "12"
    },
    "497": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "LT",
      "path": "12"
    },
    "498": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "499": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FB"
    },
    "502": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "503": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "505": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "DUP1",
      "path": "12"
    },
    "506": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "REVERT",
      "path": "12"
    },
    "507": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "508": {
      "op": "POP"
    },
    "509": {
      "offset": [
        770,
        795
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "510": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4A1"
    },
    "513": {
      "fn": "WhiteListFactory.numberOfChildren",
      "jump": "i",
      "offset": [
        770,
        795
      ],
      "op": "JUMP",
      "path": "12"
    },
    "514": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "515": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "CALLVALUE",
      "path": "53"
    },
    "516": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "DUP1",
      "path": "53"
    },
    "517": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "518": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x20E"
    },
    "521": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "522": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "524": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "DUP1",
      "path": "53"
    },
    "525": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "REVERT",
      "path": "53"
    },
    "526": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "527": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "POP",
      "path": "53"
    },
    "528": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x13F"
    },
    "531": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x4C8"
    },
    "534": {
      "fn": "Owned.acceptOwnership",
      "jump": "i",
      "offset": [
        866,
        1077
      ],
      "op": "JUMP",
      "path": "53"
    },
    "535": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "536": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "CALLVALUE",
      "path": "53"
    },
    "537": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "DUP1",
      "path": "53"
    },
    "538": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "539": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x223"
    },
    "542": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "543": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "545": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "DUP1",
      "path": "53"
    },
    "546": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "REVERT",
      "path": "53"
    },
    "547": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "548": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "POP",
      "path": "53"
    },
    "549": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x1A7"
    },
    "552": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x543"
    },
    "555": {
      "fn": "Owned.owner",
      "jump": "i",
      "offset": [
        564,
        641
      ],
      "op": "JUMP",
      "path": "53"
    },
    "556": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "557": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "CALLVALUE",
      "path": "53"
    },
    "558": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "DUP1",
      "path": "53"
    },
    "559": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "560": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x238"
    },
    "563": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "564": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "566": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "DUP1",
      "path": "53"
    },
    "567": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "REVERT",
      "path": "53"
    },
    "568": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "569": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "POP",
      "path": "53"
    },
    "570": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x241"
    },
    "573": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x552"
    },
    "576": {
      "fn": "Owned.isOwner",
      "jump": "i",
      "offset": [
        646,
        736
      ],
      "op": "JUMP",
      "path": "53"
    },
    "577": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "578": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x40"
    },
    "580": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "DUP1",
      "path": "53"
    },
    "581": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "582": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "583": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "584": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "585": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "DUP3",
      "path": "53"
    },
    "586": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "587": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "588": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "589": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "DUP2",
      "path": "53"
    },
    "590": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "591": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "SUB",
      "path": "53"
    },
    "592": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x20"
    },
    "594": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "ADD",
      "path": "53"
    },
    "595": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "596": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "RETURN",
      "path": "53"
    },
    "597": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "598": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A7"
    },
    "601": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "603": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP1",
      "path": "12"
    },
    "604": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "605": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SUB",
      "path": "12"
    },
    "606": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "608": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "609": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "LT",
      "path": "12"
    },
    "610": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "611": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26B"
    },
    "614": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "615": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "617": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP1",
      "path": "12"
    },
    "618": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "REVERT",
      "path": "12"
    },
    "619": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "626": {
      "op": "SHL"
    },
    "627": {
      "op": "SUB"
    },
    "628": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP3",
      "path": "12"
    },
    "629": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "630": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "AND",
      "path": "12"
    },
    "631": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "632": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "633": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "634": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ADD",
      "path": "12"
    },
    "635": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "636": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "638": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "639": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ADD",
      "path": "12"
    },
    "640": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "642": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP3",
      "path": "12"
    },
    "643": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ADD",
      "path": "12"
    },
    "644": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "645": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH5",
      "path": "12",
      "value": "0x100000000"
    },
    "651": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "652": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "GT",
      "path": "12"
    },
    "653": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "654": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x296"
    },
    "657": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "658": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "660": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP1",
      "path": "12"
    },
    "661": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "REVERT",
      "path": "12"
    },
    "662": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "663": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP3",
      "path": "12"
    },
    "664": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ADD",
      "path": "12"
    },
    "665": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP4",
      "path": "12"
    },
    "666": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "668": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP3",
      "path": "12"
    },
    "669": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ADD",
      "path": "12"
    },
    "670": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "GT",
      "path": "12"
    },
    "671": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "672": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A8"
    },
    "675": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "676": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "678": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP1",
      "path": "12"
    },
    "679": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "REVERT",
      "path": "12"
    },
    "680": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "681": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP1",
      "path": "12"
    },
    "682": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "683": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "684": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "686": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ADD",
      "path": "12"
    },
    "687": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "688": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP5",
      "path": "12"
    },
    "689": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "691": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP4",
      "path": "12"
    },
    "692": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "MUL",
      "path": "12"
    },
    "693": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP5",
      "path": "12"
    },
    "694": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ADD",
      "path": "12"
    },
    "695": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "GT",
      "path": "12"
    },
    "696": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH5",
      "path": "12",
      "value": "0x100000000"
    },
    "702": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP4",
      "path": "12"
    },
    "703": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "GT",
      "path": "12"
    },
    "704": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "OR",
      "path": "12"
    },
    "705": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "706": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2CA"
    },
    "709": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "710": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "712": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP1",
      "path": "12"
    },
    "713": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "REVERT",
      "path": "12"
    },
    "714": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "715": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "716": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "717": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP1",
      "path": "12"
    },
    "718": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP1",
      "path": "12"
    },
    "719": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "721": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "MUL",
      "path": "12"
    },
    "722": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "724": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ADD",
      "path": "12"
    },
    "725": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "727": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "728": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "729": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "730": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ADD",
      "path": "12"
    },
    "731": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "733": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "734": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP1",
      "path": "12"
    },
    "735": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "736": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "737": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "738": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "739": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "740": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "741": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "742": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "744": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ADD",
      "path": "12"
    },
    "745": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP4",
      "path": "12"
    },
    "746": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP4",
      "path": "12"
    },
    "747": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "749": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "MUL",
      "path": "12"
    },
    "750": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP1",
      "path": "12"
    },
    "751": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP3",
      "path": "12"
    },
    "752": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "DUP5",
      "path": "12"
    },
    "753": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "754": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "756": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "757": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "ADD",
      "path": "12"
    },
    "758": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "759": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "760": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "761": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "762": {
      "op": "POP"
    },
    "763": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "764": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "765": {
      "op": "POP"
    },
    "766": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x563"
    },
    "769": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "770": {
      "op": "POP"
    },
    "771": {
      "op": "POP"
    },
    "772": {
      "op": "POP"
    },
    "773": {
      "op": "POP"
    },
    "774": {
      "op": "POP"
    },
    "775": {
      "fn": "WhiteListFactory.deployWhiteList",
      "jump": "i",
      "offset": [
        1737,
        2437
      ],
      "op": "JUMP",
      "path": "12"
    },
    "776": {
      "offset": [
        651,
        676
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "777": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "778": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "DUP1",
      "path": "12"
    },
    "779": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "780": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x314"
    },
    "783": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "784": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "786": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "DUP1",
      "path": "12"
    },
    "787": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "REVERT",
      "path": "12"
    },
    "788": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "789": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "POP",
      "path": "12"
    },
    "790": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A7"
    },
    "793": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7ED"
    },
    "796": {
      "fn": "WhiteListFactory.deployWhiteList",
      "jump": "i",
      "offset": [
        651,
        676
      ],
      "op": "JUMP",
      "path": "12"
    },
    "797": {
      "offset": [
        156,
        179
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "798": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "CALLVALUE",
      "path": "53"
    },
    "799": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "DUP1",
      "path": "53"
    },
    "800": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "801": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x329"
    },
    "804": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "805": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "807": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "DUP1",
      "path": "53"
    },
    "808": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "REVERT",
      "path": "53"
    },
    "809": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "810": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "POP",
      "path": "53"
    },
    "811": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x1A7"
    },
    "814": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x7FC"
    },
    "817": {
      "fn": "WhiteListFactory.deployWhiteList",
      "jump": "i",
      "offset": [
        156,
        179
      ],
      "op": "JUMP",
      "path": "53"
    },
    "818": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "819": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "820": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "DUP1",
      "path": "12"
    },
    "821": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "822": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x33E"
    },
    "825": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "826": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "828": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "DUP1",
      "path": "12"
    },
    "829": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "REVERT",
      "path": "12"
    },
    "830": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "831": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "POP",
      "path": "12"
    },
    "832": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x241"
    },
    "835": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "837": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "DUP1",
      "path": "12"
    },
    "838": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "839": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "SUB",
      "path": "12"
    },
    "840": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "842": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "DUP2",
      "path": "12"
    },
    "843": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "LT",
      "path": "12"
    },
    "844": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "845": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x355"
    },
    "848": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "849": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "851": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "DUP1",
      "path": "12"
    },
    "852": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "REVERT",
      "path": "12"
    },
    "853": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "861": {
      "op": "SHL"
    },
    "862": {
      "op": "SUB"
    },
    "863": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "DUP2",
      "path": "12"
    },
    "864": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "865": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "AND",
      "path": "12"
    },
    "866": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "867": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "869": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "ADD",
      "path": "12"
    },
    "870": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "871": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x80B"
    },
    "874": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "jump": "i",
      "offset": [
        2467,
        2664
      ],
      "op": "JUMP",
      "path": "12"
    },
    "875": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "876": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "877": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "DUP1",
      "path": "12"
    },
    "878": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "879": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x377"
    },
    "882": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "883": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "885": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "DUP1",
      "path": "12"
    },
    "886": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "REVERT",
      "path": "12"
    },
    "887": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "888": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "POP",
      "path": "12"
    },
    "889": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13F"
    },
    "892": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "894": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "DUP1",
      "path": "12"
    },
    "895": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "896": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "SUB",
      "path": "12"
    },
    "897": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "899": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "DUP2",
      "path": "12"
    },
    "900": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "LT",
      "path": "12"
    },
    "901": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "902": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x38E"
    },
    "905": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "906": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "908": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "DUP1",
      "path": "12"
    },
    "909": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "REVERT",
      "path": "12"
    },
    "910": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "911": {
      "op": "POP"
    },
    "912": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "919": {
      "op": "SHL"
    },
    "920": {
      "op": "SUB"
    },
    "921": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "AND",
      "path": "12"
    },
    "922": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AF"
    },
    "925": {
      "fn": "WhiteListFactory.deprecateFactory",
      "jump": "i",
      "offset": [
        1338,
        1549
      ],
      "op": "JUMP",
      "path": "12"
    },
    "926": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "927": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "CALLVALUE",
      "path": "53"
    },
    "928": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP1",
      "path": "53"
    },
    "929": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "930": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x3AA"
    },
    "933": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "934": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "936": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP1",
      "path": "53"
    },
    "937": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "REVERT",
      "path": "53"
    },
    "938": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "939": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "POP",
      "path": "53"
    },
    "940": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x13F"
    },
    "943": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x4"
    },
    "945": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP1",
      "path": "53"
    },
    "946": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "CALLDATASIZE",
      "path": "53"
    },
    "947": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "SUB",
      "path": "53"
    },
    "948": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x20"
    },
    "950": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP2",
      "path": "53"
    },
    "951": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "LT",
      "path": "53"
    },
    "952": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "953": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x3C1"
    },
    "956": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "957": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "959": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP1",
      "path": "53"
    },
    "960": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "REVERT",
      "path": "53"
    },
    "961": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "CALLDATALOAD",
      "path": "53"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "970": {
      "op": "SHL"
    },
    "971": {
      "op": "SUB"
    },
    "972": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "AND",
      "path": "53"
    },
    "973": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x934"
    },
    "976": {
      "fn": "Owned.transferOwnership",
      "jump": "i",
      "offset": [
        742,
        860
      ],
      "op": "JUMP",
      "path": "53"
    },
    "977": {
      "offset": [
        725,
        764
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "978": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "979": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "DUP1",
      "path": "12"
    },
    "980": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "981": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3DD"
    },
    "984": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "985": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "987": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "DUP1",
      "path": "12"
    },
    "988": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "REVERT",
      "path": "12"
    },
    "989": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "990": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "POP",
      "path": "12"
    },
    "991": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x241"
    },
    "994": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "996": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "DUP1",
      "path": "12"
    },
    "997": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "998": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "SUB",
      "path": "12"
    },
    "999": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1001": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1002": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "LT",
      "path": "12"
    },
    "1003": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1004": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F4"
    },
    "1007": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1008": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1010": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1011": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1012": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "offset": [
        725,
        764
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1021": {
      "op": "SHL"
    },
    "1022": {
      "op": "SUB"
    },
    "1023": {
      "offset": [
        725,
        764
      ],
      "op": "AND",
      "path": "12"
    },
    "1024": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x967"
    },
    "1027": {
      "fn": "Owned.transferOwnership",
      "jump": "i",
      "offset": [
        725,
        764
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1028": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1024,
        1233
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1029": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1122,
        1144
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 1,
      "value": "0x40D"
    },
    "1032": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1133,
        1143
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1033": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1122,
        1132
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x97C"
    },
    "1036": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "jump": "i",
      "offset": [
        1122,
        1144
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1037": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1122,
        1144
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1038": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1171
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 2,
      "value": "0x2"
    },
    "1040": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1041": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1048": {
      "op": "SHL"
    },
    "1049": {
      "op": "SUB"
    },
    "1050": {
      "op": "NOT"
    },
    "1051": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "AND",
      "path": "12"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1058": {
      "op": "SHL"
    },
    "1059": {
      "op": "SUB"
    },
    "1060": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1061": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1062": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1063": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "AND",
      "path": "12"
    },
    "1064": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1065": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1066": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1067": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "OR",
      "path": "12"
    },
    "1068": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1069": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1070": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1154,
        1192
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1071": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1202,
        1212
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 3,
      "value": "0x4"
    },
    "1073": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "offset": [
        1202,
        1226
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1074": {
      "fn": "WhiteListFactory.initWhiteListFactory",
      "jump": "o",
      "offset": [
        1024,
        1233
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1075": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1554,
        1731
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1076": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1623,
        1632
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 4,
      "value": "0x43B"
    },
    "1079": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1623,
        1630
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x552"
    },
    "1082": {
      "fn": "WhiteListFactory.setMinimumFee",
      "jump": "i",
      "offset": [
        1623,
        1632
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1083": {
      "branch": 35,
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1623,
        1632
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1084": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1615,
        1633
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x444"
    },
    "1087": {
      "branch": 35,
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1615,
        1633
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1088": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1615,
        1633
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1090": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1615,
        1633
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1091": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1615,
        1633
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1092": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1615,
        1633
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1093": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1666,
        1676
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 5,
      "value": "0x4"
    },
    "1095": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1666,
        1676
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1096": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1098": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1099": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1100": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1101": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1102": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1103": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1105": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1106": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "ADD",
      "path": "12"
    },
    "1107": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1108": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1109": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1110": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1111": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1112": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xCC2F49C6214278AE5862935EFF953448E8E69118D10ABFAFAF63EA6AA35255CB"
    },
    "1145": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1146": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1147": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1148": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "SUB",
      "path": "12"
    },
    "1149": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1150": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1151": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "ADD",
      "path": "12"
    },
    "1152": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1153": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1648,
        1690
      ],
      "op": "LOG1",
      "path": "12"
    },
    "1154": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1700,
        1710
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 6,
      "value": "0x4"
    },
    "1156": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        1700,
        1724
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1157": {
      "fn": "WhiteListFactory.setMinimumFee",
      "jump": "o",
      "offset": [
        1554,
        1731
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1158": {
      "offset": [
        682,
        719
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1159": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1161": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1162": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        682,
        719
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1163": {
      "fn": "WhiteListFactory.setMinimumFee",
      "jump": "o",
      "offset": [
        682,
        719
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1164": {
      "offset": [
        612,
        644
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1165": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "1167": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1174": {
      "op": "SHL"
    },
    "1175": {
      "op": "SUB"
    },
    "1176": {
      "offset": [
        612,
        644
      ],
      "op": "AND",
      "path": "12"
    },
    "1177": {
      "fn": "WhiteListFactory.setMinimumFee",
      "offset": [
        612,
        644
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1178": {
      "fn": "WhiteListFactory.setMinimumFee",
      "jump": "o",
      "offset": [
        612,
        644
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1179": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1180": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1311,
        1319
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 7,
      "value": "0x6"
    },
    "1182": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1311,
        1326
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1183": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        1239,
        1333
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1184": {
      "fn": "WhiteListFactory.numberOfChildren",
      "jump": "o",
      "offset": [
        1239,
        1333
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1185": {
      "offset": [
        770,
        795
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1186": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "1188": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1189": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1190": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1191": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1192": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "LT",
      "path": "12"
    },
    "1193": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4AE"
    },
    "1196": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1197": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "INVALID",
      "path": "12"
    },
    "1198": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1199": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1201": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1202": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1203": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1204": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1206": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1207": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1208": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1209": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "ADD",
      "path": "12"
    },
    "1210": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1217": {
      "op": "SHL"
    },
    "1218": {
      "op": "SUB"
    },
    "1219": {
      "offset": [
        770,
        795
      ],
      "op": "AND",
      "path": "12"
    },
    "1220": {
      "fn": "WhiteListFactory.numberOfChildren",
      "offset": [
        770,
        795
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1221": {
      "op": "POP"
    },
    "1222": {
      "offset": [
        770,
        795
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1223": {
      "fn": "WhiteListFactory.numberOfChildren",
      "jump": "o",
      "offset": [
        770,
        795
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1224": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "1225": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 8,
      "value": "0x1"
    },
    "1227": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "op": "SUB"
    },
    "1236": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "AND",
      "path": "53"
    },
    "1237": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        918,
        928
      ],
      "op": "CALLER",
      "path": "53"
    },
    "1238": {
      "branch": 41,
      "fn": "Owned.acceptOwnership",
      "offset": [
        918,
        940
      ],
      "op": "EQ",
      "path": "53"
    },
    "1239": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x4DF"
    },
    "1242": {
      "branch": 41,
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "1243": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "1245": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "DUP1",
      "path": "53"
    },
    "1246": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "REVERT",
      "path": "53"
    },
    "1247": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "1248": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 9,
      "value": "0x1"
    },
    "1250": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "1251": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "1253": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "DUP1",
      "path": "53"
    },
    "1254": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "1255": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x40"
    },
    "1257": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "SUB"
    },
    "1266": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SWAP4",
      "path": "53"
    },
    "1267": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "DUP5",
      "path": "53"
    },
    "1268": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "AND",
      "path": "53"
    },
    "1269": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SWAP4",
      "path": "53"
    },
    "1270": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "1271": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "1272": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "AND",
      "path": "53"
    },
    "1273": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "1274": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "PUSH32",
      "path": "53",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1307": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "1308": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "LOG3",
      "path": "53"
    },
    "1309": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 10,
      "value": "0x1"
    },
    "1311": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "DUP1",
      "path": "53"
    },
    "1312": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "1313": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "1315": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "DUP1",
      "path": "53"
    },
    "1316": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1323": {
      "op": "SHL"
    },
    "1324": {
      "op": "SUB"
    },
    "1325": {
      "op": "NOT"
    },
    "1326": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "1327": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "DUP2",
      "path": "53"
    },
    "1328": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "AND",
      "path": "53"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1335": {
      "op": "SHL"
    },
    "1336": {
      "op": "SUB"
    },
    "1337": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "DUP5",
      "path": "53"
    },
    "1338": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "AND",
      "path": "53"
    },
    "1339": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "OR",
      "path": "53"
    },
    "1340": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "1341": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "1342": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SSTORE",
      "path": "53"
    },
    "1343": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "AND",
      "path": "53",
      "statement": 11
    },
    "1344": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "1345": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "SSTORE",
      "path": "53"
    },
    "1346": {
      "fn": "Owned.acceptOwnership",
      "jump": "o",
      "offset": [
        866,
        1077
      ],
      "op": "JUMP",
      "path": "53"
    },
    "1347": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "1348": {
      "fn": "Owned.owner",
      "offset": [
        602,
        609
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "1350": {
      "fn": "Owned.owner",
      "offset": [
        628,
        634
      ],
      "op": "SLOAD",
      "path": "53",
      "statement": 12
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1357": {
      "op": "SHL"
    },
    "1358": {
      "op": "SUB"
    },
    "1359": {
      "fn": "Owned.owner",
      "offset": [
        628,
        634
      ],
      "op": "AND",
      "path": "53"
    },
    "1360": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "1361": {
      "fn": "Owned.owner",
      "jump": "o",
      "offset": [
        564,
        641
      ],
      "op": "JUMP",
      "path": "53"
    },
    "1362": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "1363": {
      "fn": "Owned.isOwner",
      "offset": [
        686,
        690
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "1365": {
      "fn": "Owned.isOwner",
      "offset": [
        723,
        729
      ],
      "op": "SLOAD",
      "path": "53",
      "statement": 13
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "op": "SUB"
    },
    "1374": {
      "fn": "Owned.isOwner",
      "offset": [
        723,
        729
      ],
      "op": "AND",
      "path": "53"
    },
    "1375": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "53"
    },
    "1376": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        729
      ],
      "op": "EQ",
      "path": "53"
    },
    "1377": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        729
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "1378": {
      "fn": "Owned.isOwner",
      "jump": "o",
      "offset": [
        646,
        736
      ],
      "op": "JUMP",
      "path": "53"
    },
    "1379": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1380": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1867,
        1884
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1382": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1921,
        1931
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 14,
      "value": "0x4"
    },
    "1384": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1921,
        1931
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1385": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1908,
        1917
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1386": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1908,
        1931
      ],
      "op": "LT",
      "path": "12"
    },
    "1387": {
      "branch": 36,
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1908,
        1931
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1388": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1900,
        1932
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x574"
    },
    "1391": {
      "branch": 36,
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1900,
        1932
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1392": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1900,
        1932
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1394": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1900,
        1932
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1395": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1900,
        1932
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1396": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1900,
        1932
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1397": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1966,
        1983
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 15,
      "value": "0x2"
    },
    "1399": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1966,
        1983
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1400": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1954,
        1984
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x589"
    },
    "1403": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1954,
        1984
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1410": {
      "op": "SHL"
    },
    "1411": {
      "op": "SUB"
    },
    "1412": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1966,
        1983
      ],
      "op": "AND",
      "path": "12"
    },
    "1413": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1954,
        1965
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9F1"
    },
    "1416": {
      "fn": "WhiteListFactory.deployWhiteList",
      "jump": "i",
      "offset": [
        1954,
        1984
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1417": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1954,
        1984
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1418": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1942,
        1984
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1419": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1942,
        1984
      ],
      "op": "POP",
      "path": "12"
    },
    "1420": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2005,
        2014
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 16
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1427": {
      "op": "SHL"
    },
    "1428": {
      "op": "SUB"
    },
    "1429": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2029
      ],
      "op": "AND",
      "path": "12"
    },
    "1430": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2029
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xCE83C50F"
    },
    "1435": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2038,
        2042
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "1436": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1438": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1439": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1440": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "1445": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "AND",
      "path": "12"
    },
    "1446": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "1448": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "SHL",
      "path": "12"
    },
    "1449": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1450": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1451": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1453": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "ADD",
      "path": "12"
    },
    "1454": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1455": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1462": {
      "op": "SHL"
    },
    "1463": {
      "op": "SUB"
    },
    "1464": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "AND",
      "path": "12"
    },
    "1465": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1466": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1467": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1469": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "ADD",
      "path": "12"
    },
    "1470": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1471": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "POP",
      "path": "12"
    },
    "1472": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "POP",
      "path": "12"
    },
    "1473": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1475": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1477": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1478": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1479": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1480": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "SUB",
      "path": "12"
    },
    "1481": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1482": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1484": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1485": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1486": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "1487": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1488": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1489": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1490": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5DA"
    },
    "1493": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1494": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1496": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1497": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1498": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1499": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "POP",
      "path": "12"
    },
    "1500": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "GAS",
      "path": "12"
    },
    "1501": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "CALL",
      "path": "12"
    },
    "1502": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1503": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1504": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1505": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5EE"
    },
    "1508": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1509": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1510": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1512": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1513": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "1514": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1515": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1517": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1518": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1994,
        2044
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "op": "POP"
    },
    "1521": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 17,
      "value": "0x40"
    },
    "1523": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1524": {
      "op": "PUSH4",
      "value": "0x1784117B"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1531": {
      "op": "SHL"
    },
    "1532": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1533": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1534": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1536": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1538": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1539": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ADD",
      "path": "12"
    },
    "1540": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1541": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1542": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1543": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1544": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1545": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "1547": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1548": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ADD",
      "path": "12"
    },
    "1549": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1550": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1551": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1558": {
      "op": "SHL"
    },
    "1559": {
      "op": "SUB"
    },
    "1560": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2088
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1561": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2088
      ],
      "op": "AND",
      "path": "12"
    },
    "1562": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2088
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1563": {
      "op": "POP"
    },
    "1564": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2088
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x5E1045EC"
    },
    "1569": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2088
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1570": {
      "op": "POP"
    },
    "1571": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2089,
        2101
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1572": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2089,
        2101
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1573": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1574": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1575": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1576": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1577": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "1579": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ADD",
      "path": "12"
    },
    "1580": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1581": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1582": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1583": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ADD",
      "path": "12"
    },
    "1584": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1585": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "MUL",
      "path": "12"
    },
    "1586": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1587": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1588": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1589": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1591": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1592": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1593": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1594": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "LT",
      "path": "12"
    },
    "1595": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1596": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x64F"
    },
    "1599": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1600": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1601": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1602": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ADD",
      "path": "12"
    },
    "1603": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1604": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1605": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1606": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ADD",
      "path": "12"
    },
    "1607": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1608": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1610": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ADD",
      "path": "12"
    },
    "1611": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x637"
    },
    "1614": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1615": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1616": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1617": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1618": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1619": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1620": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1621": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1622": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ADD",
      "path": "12"
    },
    "1623": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1624": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1625": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1626": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1627": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1629": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1631": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1632": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1633": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1634": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "SUB",
      "path": "12"
    },
    "1635": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1636": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1638": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1639": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1640": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "1641": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1642": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1643": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1644": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x674"
    },
    "1647": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1648": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1650": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1651": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1652": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1653": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1654": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "GAS",
      "path": "12"
    },
    "1655": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "CALL",
      "path": "12"
    },
    "1656": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1657": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1658": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1659": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x688"
    },
    "1662": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1663": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1664": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1666": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1667": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "1668": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1669": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1671": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1672": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1673": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1674": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1675": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1676": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2054,
        2102
      ],
      "op": "POP",
      "path": "12"
    },
    "1677": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2119,
        2128
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 18
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1684": {
      "op": "SHL"
    },
    "1685": {
      "op": "SUB"
    },
    "1686": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2147
      ],
      "op": "AND",
      "path": "12"
    },
    "1687": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2147
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF2FDE38B"
    },
    "1692": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2148,
        2158
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1693": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1695": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1696": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1697": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "1702": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "AND",
      "path": "12"
    },
    "1703": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "1705": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "SHL",
      "path": "12"
    },
    "1706": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1707": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1708": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1710": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "ADD",
      "path": "12"
    },
    "1711": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1712": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1719": {
      "op": "SHL"
    },
    "1720": {
      "op": "SUB"
    },
    "1721": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "AND",
      "path": "12"
    },
    "1722": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1723": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1724": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1726": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "ADD",
      "path": "12"
    },
    "1727": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1728": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "POP",
      "path": "12"
    },
    "1729": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "POP",
      "path": "12"
    },
    "1730": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1732": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1734": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1735": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1736": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1737": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "SUB",
      "path": "12"
    },
    "1738": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1739": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1741": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1742": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1743": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "1744": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1745": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1746": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1747": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6DB"
    },
    "1750": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1751": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1753": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1754": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1755": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1756": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "POP",
      "path": "12"
    },
    "1757": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "GAS",
      "path": "12"
    },
    "1758": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "CALL",
      "path": "12"
    },
    "1759": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1760": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1761": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1762": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6EF"
    },
    "1765": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1766": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1767": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1769": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1770": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "1771": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1772": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1774": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1775": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2112,
        2159
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1776": {
      "op": "POP"
    },
    "1777": {
      "op": "POP"
    },
    "1778": {
      "op": "POP"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1785": {
      "op": "SHL"
    },
    "1786": {
      "op": "SUB"
    },
    "1787": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 19
    },
    "1788": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1789": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "AND",
      "path": "12"
    },
    "1790": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1792": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1793": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1794": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1795": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2176
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "1797": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1799": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1800": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1801": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1802": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1804": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1805": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1806": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1807": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2203
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1808": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2203
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1811": {
      "op": "NOT"
    },
    "1812": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2203
      ],
      "op": "AND",
      "path": "12"
    },
    "1813": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2199,
        2203
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1815": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2203
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1816": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2203
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1817": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2203
      ],
      "op": "OR",
      "path": "12"
    },
    "1818": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2203
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1819": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2203
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1820": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2203
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1821": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2221
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 20,
      "value": "0x6"
    },
    "1823": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1824": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1825": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1826": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1827": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "ADD",
      "path": "12"
    },
    "1828": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1829": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1830": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1831": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1832": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1833": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1866": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1867": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1868": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "ADD",
      "path": "12"
    },
    "1869": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1870": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1877": {
      "op": "SHL"
    },
    "1878": {
      "op": "SUB"
    },
    "1879": {
      "op": "NOT"
    },
    "1880": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "AND",
      "path": "12"
    },
    "1881": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1882": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "OR",
      "path": "12"
    },
    "1883": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1884": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2213,
        2246
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1885": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2311,
        2328
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 21,
      "value": "0x2"
    },
    "1887": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2311,
        2328
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1888": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1889": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1890": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2311,
        2328
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1891": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2311,
        2328
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1892": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2311,
        2328
      ],
      "op": "AND",
      "path": "12"
    },
    "1893": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1894": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1895": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1896": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "DUP9",
      "path": "12"
    },
    "1897": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "AND",
      "path": "12"
    },
    "1898": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1899": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1900": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "ADD",
      "path": "12"
    },
    "1901": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1902": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1903": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1904": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1905": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2169,
        2196
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1906": {
      "op": "POP"
    },
    "1907": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2279,
        2289
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1908": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2279,
        2289
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1909": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xA815C2B4B24122552F1EC573C612E4CDA24EFDD4BE21933B7AB2E0842186238D"
    },
    "1942": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1943": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1944": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1945": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1946": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "SUB",
      "path": "12"
    },
    "1947": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1948": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1949": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "ADD",
      "path": "12"
    },
    "1950": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1951": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2261,
        2341
      ],
      "op": "LOG3",
      "path": "12"
    },
    "1952": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2355,
        2364
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1953": {
      "branch": 37,
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2355,
        2368
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1954": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2351,
        2431
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7E7"
    },
    "1957": {
      "branch": 37,
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2351,
        2431
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1958": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2392,
        2399
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 22,
      "value": "0x7AD"
    },
    "1961": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2392,
        2397
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x543"
    },
    "1964": {
      "fn": "WhiteListFactory.deployWhiteList",
      "jump": "i",
      "offset": [
        2392,
        2399
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1965": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2392,
        2399
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1972": {
      "op": "SHL"
    },
    "1973": {
      "op": "SUB"
    },
    "1974": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2409
      ],
      "op": "AND",
      "path": "12"
    },
    "1975": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8FC"
    },
    "1978": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2410,
        2419
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1979": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1980": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1981": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1982": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "MUL",
      "path": "12"
    },
    "1983": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1984": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1986": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1987": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1989": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1991": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1992": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1993": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1994": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "SUB",
      "path": "12"
    },
    "1995": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1996": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1997": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "DUP9",
      "path": "12"
    },
    "1998": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "DUP9",
      "path": "12"
    },
    "1999": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "CALL",
      "path": "12"
    },
    "2000": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2001": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "POP",
      "path": "12"
    },
    "2002": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "POP",
      "path": "12"
    },
    "2003": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "POP",
      "path": "12"
    },
    "2004": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "POP",
      "path": "12"
    },
    "2005": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2006": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2007": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2008": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7E5"
    },
    "2011": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2012": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2013": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2015": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2016": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2017": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2018": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2020": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2021": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2022": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2384,
        2420
      ],
      "op": "POP",
      "path": "12"
    },
    "2023": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        2351,
        2431
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2024": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2025": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2026": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "POP",
      "path": "12"
    },
    "2027": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        1737,
        2437
      ],
      "op": "POP",
      "path": "12"
    },
    "2028": {
      "fn": "WhiteListFactory.deployWhiteList",
      "jump": "o",
      "offset": [
        1737,
        2437
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2029": {
      "offset": [
        651,
        676
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2030": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "2032": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2039": {
      "op": "SHL"
    },
    "2040": {
      "op": "SUB"
    },
    "2041": {
      "offset": [
        651,
        676
      ],
      "op": "AND",
      "path": "12"
    },
    "2042": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        651,
        676
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2043": {
      "fn": "WhiteListFactory.deployWhiteList",
      "jump": "o",
      "offset": [
        651,
        676
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2044": {
      "offset": [
        156,
        179
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "2045": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x1"
    },
    "2047": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2054": {
      "op": "SHL"
    },
    "2055": {
      "op": "SUB"
    },
    "2056": {
      "offset": [
        156,
        179
      ],
      "op": "AND",
      "path": "53"
    },
    "2057": {
      "fn": "WhiteListFactory.deployWhiteList",
      "offset": [
        156,
        179
      ],
      "op": "DUP2",
      "path": "53"
    },
    "2058": {
      "fn": "WhiteListFactory.deployWhiteList",
      "jump": "o",
      "offset": [
        156,
        179
      ],
      "op": "JUMP",
      "path": "53"
    },
    "2059": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2060": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2062": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2584,
        2593
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 23,
      "value": "0x815"
    },
    "2065": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2584,
        2591
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x552"
    },
    "2068": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "jump": "i",
      "offset": [
        2584,
        2593
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2069": {
      "branch": 38,
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2584,
        2593
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2070": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2576,
        2594
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x81E"
    },
    "2073": {
      "branch": 38,
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2576,
        2594
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2074": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2576,
        2594
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2076": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2576,
        2594
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2077": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2576,
        2594
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2078": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2576,
        2594
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2079": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2618,
        2630
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 24
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2086": {
      "op": "SHL"
    },
    "2087": {
      "op": "SUB"
    },
    "2088": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2640
      ],
      "op": "AND",
      "path": "12"
    },
    "2089": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2640
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA9059CBB"
    },
    "2094": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2641,
        2648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x835"
    },
    "2097": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2641,
        2646
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x543"
    },
    "2100": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "jump": "i",
      "offset": [
        2641,
        2648
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2101": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2641,
        2648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2102": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2650,
        2656
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2103": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2105": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2106": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2107": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2112": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "AND",
      "path": "12"
    },
    "2113": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "2115": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "SHL",
      "path": "12"
    },
    "2116": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2117": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2118": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2120": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "ADD",
      "path": "12"
    },
    "2121": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2122": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2129": {
      "op": "SHL"
    },
    "2130": {
      "op": "SUB"
    },
    "2131": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "AND",
      "path": "12"
    },
    "2132": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2133": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2134": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2136": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "ADD",
      "path": "12"
    },
    "2137": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2138": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2139": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2140": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2142": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "ADD",
      "path": "12"
    },
    "2143": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2144": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "POP",
      "path": "12"
    },
    "2145": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "POP",
      "path": "12"
    },
    "2146": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "POP",
      "path": "12"
    },
    "2147": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2149": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2151": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2152": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2153": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2154": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "SUB",
      "path": "12"
    },
    "2155": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2156": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2158": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2159": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2160": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2161": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2162": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2163": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2164": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x87C"
    },
    "2167": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2168": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2170": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2171": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2172": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2173": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "POP",
      "path": "12"
    },
    "2174": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "GAS",
      "path": "12"
    },
    "2175": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "CALL",
      "path": "12"
    },
    "2176": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2177": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2178": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2179": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x890"
    },
    "2182": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2183": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2184": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2186": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2187": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "2188": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2189": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2191": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2192": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2193": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "POP",
      "path": "12"
    },
    "2194": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "POP",
      "path": "12"
    },
    "2195": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "POP",
      "path": "12"
    },
    "2196": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "POP",
      "path": "12"
    },
    "2197": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2199": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2200": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2201": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2203": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2204": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "LT",
      "path": "12"
    },
    "2205": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2206": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8A6"
    },
    "2209": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2210": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2212": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2213": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2214": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2215": {
      "op": "POP"
    },
    "2216": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2217": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2611,
        2657
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "2218": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "offset": [
        2467,
        2664
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2219": {
      "op": "POP"
    },
    "2220": {
      "op": "POP"
    },
    "2221": {
      "op": "POP"
    },
    "2222": {
      "fn": "WhiteListFactory.transferAnyERC20Token",
      "jump": "o",
      "offset": [
        2467,
        2664
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2223": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1338,
        1549
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2224": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1410,
        1419
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 25,
      "value": "0x8B7"
    },
    "2227": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1410,
        1417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x552"
    },
    "2230": {
      "fn": "WhiteListFactory.deprecateFactory",
      "jump": "i",
      "offset": [
        1410,
        1419
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2231": {
      "branch": 39,
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1410,
        1419
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2232": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1402,
        1420
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8C0"
    },
    "2235": {
      "branch": 39,
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1402,
        1420
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2236": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1402,
        1420
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2238": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1402,
        1420
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2239": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1402,
        1420
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2240": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1402,
        1420
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2241": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1438,
        1448
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 26,
      "value": "0x3"
    },
    "2243": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1438,
        1448
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2250": {
      "op": "SHL"
    },
    "2251": {
      "op": "SUB"
    },
    "2252": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1438,
        1448
      ],
      "op": "AND",
      "path": "12"
    },
    "2253": {
      "branch": 40,
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1438,
        1462
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2254": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1430,
        1463
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8D6"
    },
    "2257": {
      "branch": 40,
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1430,
        1463
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2258": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1430,
        1463
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2260": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1430,
        1463
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2261": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1430,
        1463
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2262": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1430,
        1463
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2263": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 27,
      "value": "0x40"
    },
    "2265": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2266": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2273": {
      "op": "SHL"
    },
    "2274": {
      "op": "SUB"
    },
    "2275": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2276": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "AND",
      "path": "12"
    },
    "2277": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2278": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2279": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2280": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2281": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xAC885CFCAC9D1450E80F787DBF9546001FB50414106435B10B1D27B448B8668"
    },
    "2314": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2315": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2316": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2317": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "SUB",
      "path": "12"
    },
    "2318": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2320": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "ADD",
      "path": "12"
    },
    "2321": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2322": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1478,
        1508
      ],
      "op": "LOG1",
      "path": "12"
    },
    "2323": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1528
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 28,
      "value": "0x3"
    },
    "2325": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2326": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2333": {
      "op": "SHL"
    },
    "2334": {
      "op": "SUB"
    },
    "2335": {
      "op": "NOT"
    },
    "2336": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "AND",
      "path": "12"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2343": {
      "op": "SHL"
    },
    "2344": {
      "op": "SUB"
    },
    "2345": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2346": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2347": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2348": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "AND",
      "path": "12"
    },
    "2349": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2350": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2351": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2352": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "OR",
      "path": "12"
    },
    "2353": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2354": {
      "fn": "WhiteListFactory.deprecateFactory",
      "offset": [
        1518,
        1542
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2355": {
      "fn": "WhiteListFactory.deprecateFactory",
      "jump": "o",
      "offset": [
        1338,
        1549
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2356": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "2357": {
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        822
      ],
      "op": "PUSH2",
      "path": "53",
      "statement": 29,
      "value": "0x93C"
    },
    "2360": {
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        820
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x552"
    },
    "2363": {
      "fn": "Owned.transferOwnership",
      "jump": "i",
      "offset": [
        813,
        822
      ],
      "op": "JUMP",
      "path": "53"
    },
    "2364": {
      "branch": 42,
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        822
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "2365": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x945"
    },
    "2368": {
      "branch": 42,
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "2369": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "2371": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "DUP1",
      "path": "53"
    },
    "2372": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "REVERT",
      "path": "53"
    },
    "2373": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "2374": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        841
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 30,
      "value": "0x1"
    },
    "2376": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "DUP1",
      "path": "53"
    },
    "2377": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2384": {
      "op": "SHL"
    },
    "2385": {
      "op": "SUB"
    },
    "2386": {
      "op": "NOT"
    },
    "2387": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "AND",
      "path": "53"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2394": {
      "op": "SHL"
    },
    "2395": {
      "op": "SUB"
    },
    "2396": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP3",
      "path": "53"
    },
    "2397": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "2398": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP3",
      "path": "53"
    },
    "2399": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "AND",
      "path": "53"
    },
    "2400": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "2401": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "2402": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "2403": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "OR",
      "path": "53"
    },
    "2404": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "2405": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SSTORE",
      "path": "53"
    },
    "2406": {
      "fn": "Owned.transferOwnership",
      "jump": "o",
      "offset": [
        742,
        860
      ],
      "op": "JUMP",
      "path": "53"
    },
    "2407": {
      "offset": [
        725,
        764
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2408": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "2410": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2412": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2413": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2415": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2416": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2417": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2418": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2420": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2421": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "2422": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2423": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "2425": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "AND",
      "path": "12"
    },
    "2426": {
      "fn": "Owned.transferOwnership",
      "offset": [
        725,
        764
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2427": {
      "fn": "Owned.transferOwnership",
      "jump": "o",
      "offset": [
        725,
        764
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2428": {
      "fn": "Owned._initOwned",
      "offset": [
        349,
        558
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "2429": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 31,
      "value": "0x0"
    },
    "2431": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2436": {
      "op": "SHL"
    },
    "2437": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "2438": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "DIV",
      "path": "53"
    },
    "2439": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0xFF"
    },
    "2441": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "AND",
      "path": "53"
    },
    "2442": {
      "branch": 43,
      "fn": "Owned._initOwned",
      "offset": [
        412,
        424
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "2443": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x993"
    },
    "2446": {
      "branch": 43,
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "2447": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "2449": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "DUP1",
      "path": "53"
    },
    "2450": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "REVERT",
      "path": "53"
    },
    "2451": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "2452": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 32,
      "value": "0x0"
    },
    "2454": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP1",
      "path": "53"
    },
    "2455": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SLOAD",
      "path": "53"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2460": {
      "op": "SHL"
    },
    "2461": {
      "op": "NOT"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2468": {
      "op": "SHL"
    },
    "2469": {
      "op": "SUB"
    },
    "2470": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP1",
      "path": "53"
    },
    "2471": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP6",
      "path": "53"
    },
    "2472": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "AND",
      "path": "53"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2479": {
      "op": "SHL"
    },
    "2480": {
      "op": "SUB"
    },
    "2481": {
      "op": "NOT"
    },
    "2482": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "2483": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP4",
      "path": "53"
    },
    "2484": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "AND",
      "path": "53"
    },
    "2485": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP3",
      "path": "53"
    },
    "2486": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "2487": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP3",
      "path": "53"
    },
    "2488": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "OR",
      "path": "53"
    },
    "2489": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "AND",
      "path": "53",
      "statement": 33
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2494": {
      "op": "SHL"
    },
    "2495": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "OR",
      "path": "53"
    },
    "2496": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "DUP1",
      "path": "53"
    },
    "2497": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "DUP4",
      "path": "53"
    },
    "2498": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "SSTORE",
      "path": "53"
    },
    "2499": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 34,
      "value": "0x40"
    },
    "2501": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "2502": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "2503": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "AND",
      "path": "53"
    },
    "2504": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "2505": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "2506": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "PUSH32",
      "path": "53",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2539": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "2540": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "DUP3",
      "path": "53"
    },
    "2541": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "2542": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "LOG3",
      "path": "53"
    },
    "2543": {
      "fn": "Owned._initOwned",
      "offset": [
        349,
        558
      ],
      "op": "POP",
      "path": "53"
    },
    "2544": {
      "fn": "Owned._initOwned",
      "jump": "o",
      "offset": [
        349,
        558
      ],
      "op": "JUMP",
      "path": "53"
    },
    "2545": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1524,
        1965
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "2546": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1579,
        1593
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "2548": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1601,
        1620
      ],
      "op": "DUP1",
      "path": "52"
    },
    "2549": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1631,
        1637
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2550": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1623,
        1638
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x60"
    },
    "2552": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1623,
        1638
      ],
      "op": "SHL",
      "path": "52"
    },
    "2553": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1601,
        1638
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "2554": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1601,
        1638
      ],
      "op": "POP",
      "path": "52"
    },
    "2555": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1680,
        1684
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x40"
    },
    "2557": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1674,
        1685
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "2558": {
      "op": "PUSH20",
      "value": "0x3D602D80600A3D3981F3363D3D373D3D3D363D73"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2581": {
      "op": "SHL"
    },
    "2582": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1699,
        1704
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2583": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1692,
        1773
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2584": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1805,
        1816
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2585": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1798,
        1802
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x14"
    },
    "2587": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1791,
        1796
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2588": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1787,
        1803
      ],
      "op": "ADD",
      "path": "52"
    },
    "2589": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1780,
        1817
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2590": {
      "op": "PUSH15",
      "value": "0x5AF43D82803E903D91602B57FD5BF3"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2608": {
      "op": "SHL"
    },
    "2609": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1842,
        1846
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x28"
    },
    "2611": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1835,
        1840
      ],
      "op": "DUP3",
      "path": "52"
    },
    "2612": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1831,
        1847
      ],
      "op": "ADD",
      "path": "52"
    },
    "2613": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1824,
        1916
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "2614": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1950,
        1954
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x37"
    },
    "2616": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1943,
        1948
      ],
      "op": "DUP2",
      "path": "52"
    },
    "2617": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1940,
        1941
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "2619": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1933,
        1955
      ],
      "op": "CREATE",
      "path": "52"
    },
    "2620": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1923,
        1955
      ],
      "op": "SWAP5",
      "path": "52"
    },
    "2621": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1653,
        1961
      ],
      "op": "SWAP4",
      "path": "52"
    },
    "2622": {
      "op": "POP"
    },
    "2623": {
      "op": "POP"
    },
    "2624": {
      "op": "POP"
    },
    "2625": {
      "op": "POP"
    },
    "2626": {
      "fn": "CloneFactory.createClone",
      "jump": "o",
      "offset": [
        1653,
        1961
      ],
      "op": "JUMP",
      "path": "52"
    }
  },
  "sha1": "e70cb96791cce0bd8e3dc2ee6375a3d74064a0e6",
  "source": "pragma solidity ^0.6.9;\n\n\nimport \"../Utils/Owned.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../Utils/CloneFactory.sol\";\nimport \"../../interfaces/IERC20.sol\";\nimport \"../../interfaces/IOwned.sol\";\nimport \"../../interfaces/IWhiteList.sol\";\n\n\n// ----------------------------------------------------------------------------\n// MISO WhiteList Factory\n//\n//\n// Appropriated from BokkyPooBah's Fixed Supply Token \ud83d\udc4a Factory\n//\n// ----------------------------------------------------------------------------\n\ncontract WhiteListFactory is  Owned, CloneFactory {\n    using SafeMath for uint;\n\n    address public whiteListTemplate;\n\n    address public newAddress;\n    uint256 public minimumFee = 0.1 ether;\n    mapping(address => bool) public isChild;\n    address[] public children;\n\n\n    event WhiteListDeployed(address indexed operator, address indexed addr, address whiteList, address owner);\n    event FactoryDeprecated(address _newAddress);\n    event MinimumFeeUpdated(uint oldFee, uint newFee);\n    \n    function initWhiteListFactory( address _whiteListTemplate, uint256 _minimumFee) public  {\n        _initOwned(msg.sender);\n        whiteListTemplate = _whiteListTemplate;\n        minimumFee = _minimumFee;\n    }\n\n    function numberOfChildren() public view returns (uint) {\n        return children.length;\n    }\n    function deprecateFactory(address _newAddress) public {\n        require(isOwner());\n        require(newAddress == address(0));\n        emit FactoryDeprecated(_newAddress);\n        newAddress = _newAddress;\n    }\n    function setMinimumFee(uint256 _minimumFee) public {\n        require(isOwner());\n        emit MinimumFeeUpdated(minimumFee, _minimumFee);\n        minimumFee = _minimumFee;\n    }\n\n    function deployWhiteList(\n        address _listOwner,\n        address[] memory _whiteListed\n    )\n        public payable returns (address whiteList)\n    {\n        require(msg.value >= minimumFee);\n        whiteList = createClone(whiteListTemplate);\n        IWhiteList(whiteList).initWhiteList(address(this));\n        IWhiteList(whiteList).addWhiteList(_whiteListed);\n        IOwned(whiteList).transferOwnership(_listOwner);\n        isChild[address(whiteList)] = true;\n        children.push(address(whiteList));\n        emit WhiteListDeployed(msg.sender, address(whiteList), whiteListTemplate, _listOwner);\n        if (msg.value > 0) {\n            payable(owner()).transfer(msg.value);\n        }\n    }\n\n    // footer functions\n    function transferAnyERC20Token(address tokenAddress, uint256 tokens) public returns (bool success) {\n        require(isOwner());\n        return IERC20(tokenAddress).transfer(owner(), tokens);\n    }\n    receive () external payable {\n        revert();\n    }\n}",
  "sourceMap": "526:2198:12:-:0;;;710:9;682:37;;526:2198;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Access/WhiteListFactory.sol",
  "type": "contract"
}