{
  "abi": [
    {
      "inputs": [],
      "name": "accessControls",
      "outputs": [
        {
          "internalType": "contract MISOAccessControls",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accessControls",
          "type": "address"
        },
        {
          "internalType": "contract IUnicrypt",
          "name": "_unicrypt",
          "type": "address"
        }
      ],
      "name": "initUnicryptVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unicrypt",
      "outputs": [
        {
          "internalType": "contract IUnicrypt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "59": "contracts/Vault/UnicryptVault.sol"
  },
  "ast": {
    "absolutePath": "contracts/Vault/UnicryptVault.sol",
    "exportedSymbols": {
      "UnicryptVault": [
        16969
      ]
    },
    "id": 16970,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16936,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:59"
      },
      {
        "absolutePath": "contracts/Utils/Owned.sol",
        "file": "../Utils/Owned.sol",
        "id": 16937,
        "nodeType": "ImportDirective",
        "scope": 16970,
        "sourceUnit": 15280,
        "src": "25:28:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUnicrypt.sol",
        "file": "../../interfaces/IUnicrypt.sol",
        "id": 16938,
        "nodeType": "ImportDirective",
        "scope": 16970,
        "sourceUnit": 19069,
        "src": "55:40:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Access/MISOAccessControls.sol",
        "file": "../Access/MISOAccessControls.sol",
        "id": 16939,
        "nodeType": "ImportDirective",
        "scope": 16970,
        "sourceUnit": 283,
        "src": "96:42:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 16969,
        "linearizedBaseContracts": [
          16969
        ],
        "name": "UnicryptVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "31c813e5",
            "id": 16941,
            "mutability": "mutable",
            "name": "unicrypt",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 16969,
            "src": "168:25:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUnicrypt_$19068",
              "typeString": "contract IUnicrypt"
            },
            "typeName": {
              "contractScope": null,
              "id": 16940,
              "name": "IUnicrypt",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19068,
              "src": "168:9:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUnicrypt_$19068",
                "typeString": "contract IUnicrypt"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "748365ef",
            "id": 16943,
            "mutability": "mutable",
            "name": "accessControls",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 16969,
            "src": "204:40:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MISOAccessControls_$282",
              "typeString": "contract MISOAccessControls"
            },
            "typeName": {
              "contractScope": null,
              "id": 16942,
              "name": "MISOAccessControls",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 282,
              "src": "204:18:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                "typeString": "contract MISOAccessControls"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16945,
            "mutability": "mutable",
            "name": "initialised",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 16969,
            "src": "250:24:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 16944,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "250:4:59",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 16967,
              "nodeType": "Block",
              "src": "360:186:59",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "378:12:59",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 16953,
                          "name": "initialised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16945,
                          "src": "379:11:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "370:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 16955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "370:21:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16956,
                  "nodeType": "ExpressionStatement",
                  "src": "370:21:59"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 16957,
                      "name": "accessControls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16943,
                      "src": "401:14:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 16959,
                          "name": "_accessControls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16947,
                          "src": "437:15:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 16958,
                        "name": "MISOAccessControls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "418:18:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MISOAccessControls_$282_$",
                          "typeString": "type(contract MISOAccessControls)"
                        }
                      },
                      "id": 16960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "418:35:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "src": "401:52:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MISOAccessControls_$282",
                      "typeString": "contract MISOAccessControls"
                    }
                  },
                  "id": 16962,
                  "nodeType": "ExpressionStatement",
                  "src": "401:52:59"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 16963,
                      "name": "unicrypt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16941,
                      "src": "519:8:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUnicrypt_$19068",
                        "typeString": "contract IUnicrypt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 16964,
                      "name": "_unicrypt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16949,
                      "src": "530:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUnicrypt_$19068",
                        "typeString": "contract IUnicrypt"
                      }
                    },
                    "src": "519:20:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUnicrypt_$19068",
                      "typeString": "contract IUnicrypt"
                    }
                  },
                  "id": 16966,
                  "nodeType": "ExpressionStatement",
                  "src": "519:20:59"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "48f98e3f",
            "id": 16968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initUnicryptVault",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16947,
                  "mutability": "mutable",
                  "name": "_accessControls",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16968,
                  "src": "308:23:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "308:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16949,
                  "mutability": "mutable",
                  "name": "_unicrypt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16968,
                  "src": "333:19:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUnicrypt_$19068",
                    "typeString": "contract IUnicrypt"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16948,
                    "name": "IUnicrypt",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19068,
                    "src": "333:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUnicrypt_$19068",
                      "typeString": "contract IUnicrypt"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "307:46:59"
            },
            "returnParameters": {
              "id": 16951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "360:0:59"
            },
            "scope": 16969,
            "src": "281:265:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 16970,
        "src": "140:866:59"
      }
    ],
    "src": "0:1006:59"
  },
  "bytecode": "608060405234801561001057600080fd5b5061012e806100206000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806331c813e514604157806348f98e3f146063578063748365ef146090575b600080fd5b60476096565b604080516001600160a01b039092168252519081900360200190f35b608e60048036036040811015607757600080fd5b506001600160a01b038135811691602001351660a5565b005b604760e9565b6000546001600160a01b031681565b600154600160a01b900460ff161560bb57600080fd5b600180546001600160a01b039384166001600160a01b03199182161790915560008054929093169116179055565b6001546001600160a01b03168156fea2646970667358221220f7b632c2ae3733710329e8c199cae804c042ffc16fc762c55c7dd88ea0ce59cf64736f6c634300060c0033",
  "bytecodeSha1": "79dbdccf04f3e7f3e7a4a9c4ea200f8b94b59ddf",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "UnicryptVault",
  "coverageMap": {
    "branches": {
      "59": {
        "UnicryptVault.initUnicryptVault": {
          "3": [
            378,
            390,
            true
          ]
        }
      }
    },
    "statements": {
      "59": {
        "UnicryptVault.initUnicryptVault": {
          "0": [
            370,
            391
          ],
          "1": [
            401,
            453
          ],
          "2": [
            519,
            539
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052348015600f57600080fd5b5060043610603c5760003560e01c806331c813e514604157806348f98e3f146063578063748365ef146090575b600080fd5b60476096565b604080516001600160a01b039092168252519081900360200190f35b608e60048036036040811015607757600080fd5b506001600160a01b038135811691602001351660a5565b005b604760e9565b6000546001600160a01b031681565b600154600160a01b900460ff161560bb57600080fd5b600180546001600160a01b039384166001600160a01b03199182161790915560008054929093169116179055565b6001546001600160a01b03168156fea2646970667358221220f7b632c2ae3733710329e8c199cae804c042ffc16fc762c55c7dd88ea0ce59cf64736f6c634300060c0033",
  "deployedSourceMap": "140:866:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;168:25;;;:::i;:::-;;;;-1:-1:-1;;;;;168:25:59;;;;;;;;;;;;;;281:265;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;281:265:59;;;;;;;;;;:::i;:::-;;204:40;;;:::i;168:25::-;;;-1:-1:-1;;;;;168:25:59;;:::o;281:265::-;379:11;;-1:-1:-1;;;379:11:59;;;;378:12;370:21;;;;;;401:14;:52;;-1:-1:-1;;;;;401:52:59;;;-1:-1:-1;;;;;;401:52:59;;;;;;;:14;519:20;;;;;;;;;;;281:265::o;204:40::-;;;-1:-1:-1;;;;;204:40:59;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    140,
    1006
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x31C813E5 EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x48F98E3F EQ PUSH1 0x63 JUMPI DUP1 PUSH4 0x748365EF EQ PUSH1 0x90 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x47 PUSH1 0x96 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x8E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH1 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH1 0xA5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x47 PUSH1 0xE9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0xBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xB6 ORIGIN 0xC2 0xAE CALLDATACOPY CALLER PUSH18 0x329E8C199CAE804C042FFC16FC762C55C7D 0xD8 DUP15 LOG0 0xCE MSIZE 0xCF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        140,
        1006
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "MSTORE",
      "path": "59"
    },
    "5": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "CALLVALUE",
      "path": "59"
    },
    "6": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "DUP1",
      "path": "59"
    },
    "7": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "8": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "11": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "DUP1",
      "path": "59"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "REVERT",
      "path": "59"
    },
    "15": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "16": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "POP",
      "path": "59"
    },
    "17": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "CALLDATASIZE",
      "path": "59"
    },
    "20": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "LT",
      "path": "59"
    },
    "21": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x3C"
    },
    "23": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "24": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "CALLDATALOAD",
      "path": "59"
    },
    "27": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "SHR",
      "path": "59"
    },
    "30": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "DUP1",
      "path": "59"
    },
    "31": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH4",
      "path": "59",
      "value": "0x31C813E5"
    },
    "36": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "EQ",
      "path": "59"
    },
    "37": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x41"
    },
    "39": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "40": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "DUP1",
      "path": "59"
    },
    "41": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH4",
      "path": "59",
      "value": "0x48F98E3F"
    },
    "46": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "EQ",
      "path": "59"
    },
    "47": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x63"
    },
    "49": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "50": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "DUP1",
      "path": "59"
    },
    "51": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH4",
      "path": "59",
      "value": "0x748365EF"
    },
    "56": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "EQ",
      "path": "59"
    },
    "57": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x90"
    },
    "59": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "60": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "61": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "63": {
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "DUP1",
      "path": "59"
    },
    "64": {
      "first_revert": true,
      "fn": null,
      "offset": [
        140,
        1006
      ],
      "op": "REVERT",
      "path": "59"
    },
    "65": {
      "offset": [
        168,
        193
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "66": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x47"
    },
    "68": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x96"
    },
    "70": {
      "fn": null,
      "jump": "i",
      "offset": [
        168,
        193
      ],
      "op": "JUMP",
      "path": "59"
    },
    "71": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "72": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "74": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "DUP1",
      "path": "59"
    },
    "75": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "76": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "78": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "80": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "82": {
      "op": "SHL"
    },
    "83": {
      "op": "SUB"
    },
    "84": {
      "offset": [
        168,
        193
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "85": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "SWAP3",
      "path": "59"
    },
    "86": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "AND",
      "path": "59"
    },
    "87": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "DUP3",
      "path": "59"
    },
    "88": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "MSTORE",
      "path": "59"
    },
    "89": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "90": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "91": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "DUP2",
      "path": "59"
    },
    "92": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "93": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "SUB",
      "path": "59"
    },
    "94": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x20"
    },
    "96": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "ADD",
      "path": "59"
    },
    "97": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "98": {
      "fn": null,
      "offset": [
        168,
        193
      ],
      "op": "RETURN",
      "path": "59"
    },
    "99": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "100": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x8E"
    },
    "102": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x4"
    },
    "104": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "DUP1",
      "path": "59"
    },
    "105": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "CALLDATASIZE",
      "path": "59"
    },
    "106": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "SUB",
      "path": "59"
    },
    "107": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "109": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "DUP2",
      "path": "59"
    },
    "110": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "LT",
      "path": "59"
    },
    "111": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "112": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x77"
    },
    "114": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "115": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "117": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "DUP1",
      "path": "59"
    },
    "118": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "REVERT",
      "path": "59"
    },
    "119": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "120": {
      "op": "POP"
    },
    "121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "127": {
      "op": "SHL"
    },
    "128": {
      "op": "SUB"
    },
    "129": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "DUP2",
      "path": "59"
    },
    "130": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "CALLDATALOAD",
      "path": "59"
    },
    "131": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "DUP2",
      "path": "59"
    },
    "132": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "AND",
      "path": "59"
    },
    "133": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "SWAP2",
      "path": "59"
    },
    "134": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x20"
    },
    "136": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "ADD",
      "path": "59"
    },
    "137": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "CALLDATALOAD",
      "path": "59"
    },
    "138": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "AND",
      "path": "59"
    },
    "139": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0xA5"
    },
    "141": {
      "fn": "UnicryptVault.initUnicryptVault",
      "jump": "i",
      "offset": [
        281,
        546
      ],
      "op": "JUMP",
      "path": "59"
    },
    "142": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "143": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "STOP",
      "path": "59"
    },
    "144": {
      "offset": [
        204,
        244
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "145": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        204,
        244
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x47"
    },
    "147": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        204,
        244
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0xE9"
    },
    "149": {
      "fn": "UnicryptVault.initUnicryptVault",
      "jump": "i",
      "offset": [
        204,
        244
      ],
      "op": "JUMP",
      "path": "59"
    },
    "150": {
      "offset": [
        168,
        193
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "151": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        168,
        193
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "153": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        168,
        193
      ],
      "op": "SLOAD",
      "path": "59"
    },
    "154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "160": {
      "op": "SHL"
    },
    "161": {
      "op": "SUB"
    },
    "162": {
      "offset": [
        168,
        193
      ],
      "op": "AND",
      "path": "59"
    },
    "163": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        168,
        193
      ],
      "op": "DUP2",
      "path": "59"
    },
    "164": {
      "fn": "UnicryptVault.initUnicryptVault",
      "jump": "o",
      "offset": [
        168,
        193
      ],
      "op": "JUMP",
      "path": "59"
    },
    "165": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        281,
        546
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "166": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        379,
        390
      ],
      "op": "PUSH1",
      "path": "59",
      "statement": 0,
      "value": "0x1"
    },
    "168": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        379,
        390
      ],
      "op": "SLOAD",
      "path": "59"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "173": {
      "op": "SHL"
    },
    "174": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        379,
        390
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "175": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        379,
        390
      ],
      "op": "DIV",
      "path": "59"
    },
    "176": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        379,
        390
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0xFF"
    },
    "178": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        379,
        390
      ],
      "op": "AND",
      "path": "59"
    },
    "179": {
      "branch": 3,
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        378,
        390
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "180": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        370,
        391
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0xBB"
    },
    "182": {
      "branch": 3,
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        370,
        391
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "183": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        370,
        391
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "185": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        370,
        391
      ],
      "op": "DUP1",
      "path": "59"
    },
    "186": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        370,
        391
      ],
      "op": "REVERT",
      "path": "59"
    },
    "187": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        370,
        391
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "188": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        415
      ],
      "op": "PUSH1",
      "path": "59",
      "statement": 1,
      "value": "0x1"
    },
    "190": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        453
      ],
      "op": "DUP1",
      "path": "59"
    },
    "191": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        453
      ],
      "op": "SLOAD",
      "path": "59"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "198": {
      "op": "SHL"
    },
    "199": {
      "op": "SUB"
    },
    "200": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        453
      ],
      "op": "SWAP4",
      "path": "59"
    },
    "201": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        453
      ],
      "op": "DUP5",
      "path": "59"
    },
    "202": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        453
      ],
      "op": "AND",
      "path": "59"
    },
    "203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "209": {
      "op": "SHL"
    },
    "210": {
      "op": "SUB"
    },
    "211": {
      "op": "NOT"
    },
    "212": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        453
      ],
      "op": "SWAP2",
      "path": "59"
    },
    "213": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        453
      ],
      "op": "DUP3",
      "path": "59"
    },
    "214": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        453
      ],
      "op": "AND",
      "path": "59"
    },
    "215": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        453
      ],
      "op": "OR",
      "path": "59"
    },
    "216": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        453
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "217": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        453
      ],
      "op": "SWAP2",
      "path": "59"
    },
    "218": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        453
      ],
      "op": "SSTORE",
      "path": "59"
    },
    "219": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        401,
        415
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "221": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        519,
        539
      ],
      "op": "DUP1",
      "path": "59",
      "statement": 2
    },
    "222": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        519,
        539
      ],
      "op": "SLOAD",
      "path": "59"
    },
    "223": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        519,
        539
      ],
      "op": "SWAP3",
      "path": "59"
    },
    "224": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        519,
        539
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "225": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        519,
        539
      ],
      "op": "SWAP4",
      "path": "59"
    },
    "226": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        519,
        539
      ],
      "op": "AND",
      "path": "59"
    },
    "227": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        519,
        539
      ],
      "op": "SWAP2",
      "path": "59"
    },
    "228": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        519,
        539
      ],
      "op": "AND",
      "path": "59"
    },
    "229": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        519,
        539
      ],
      "op": "OR",
      "path": "59"
    },
    "230": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        519,
        539
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "231": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        519,
        539
      ],
      "op": "SSTORE",
      "path": "59"
    },
    "232": {
      "fn": "UnicryptVault.initUnicryptVault",
      "jump": "o",
      "offset": [
        281,
        546
      ],
      "op": "JUMP",
      "path": "59"
    },
    "233": {
      "offset": [
        204,
        244
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "234": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        204,
        244
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x1"
    },
    "236": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        204,
        244
      ],
      "op": "SLOAD",
      "path": "59"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "243": {
      "op": "SHL"
    },
    "244": {
      "op": "SUB"
    },
    "245": {
      "offset": [
        204,
        244
      ],
      "op": "AND",
      "path": "59"
    },
    "246": {
      "fn": "UnicryptVault.initUnicryptVault",
      "offset": [
        204,
        244
      ],
      "op": "DUP2",
      "path": "59"
    },
    "247": {
      "fn": "UnicryptVault.initUnicryptVault",
      "jump": "o",
      "offset": [
        204,
        244
      ],
      "op": "JUMP",
      "path": "59"
    }
  },
  "sha1": "c6de961770704f05fc8d22aa563779aefd98c1ba",
  "source": "pragma solidity ^0.6.9;\n\nimport \"../Utils/Owned.sol\";\n\nimport \"../../interfaces/IUnicrypt.sol\";\nimport \"../Access/MISOAccessControls.sol\";\n\ncontract UnicryptVault{\n    IUnicrypt public unicrypt;\n    \n    MISOAccessControls public accessControls;\n    bool private initialised;\n\n    function initUnicryptVault(address _accessControls, IUnicrypt _unicrypt) public{\n        require(!initialised);\n        accessControls = MISOAccessControls(_accessControls);\n        //Can directly use the required mainnet address\n        unicrypt = _unicrypt;\n    }\n    //Dont think this is required\n    /* function depositToken(address token, uint256 amount, uint256 unlock_date) public{\n        require(unlock_date < 10000000000, 'Enter an unix timestamp in seconds, not miliseconds');\n        require(amount > 0, 'Your attempting to trasfer 0 tokens');\n        // add call to LP tokens???\n        \n        require(token != address(0));\n        \n        \n        unicrypt.depositToken(token,amount,unlock_date);\n    } */\n\n}",
  "sourceMap": "140:866:59:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Vault/UnicryptVault.sol",
  "type": "contract"
}