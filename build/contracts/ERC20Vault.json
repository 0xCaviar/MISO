{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_withdrawable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initERC20Vault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "withdrawable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "setContractAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withdrawable",
          "type": "bool"
        }
      ],
      "name": "setPoolWithdrawable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "updatePoolEndDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "50": "contracts/Utils/Owned.sol",
    "51": "contracts/Utils/SafeMathPlus.sol",
    "54": "contracts/Vault/ERC20Vault.sol"
  },
  "ast": {
    "absolutePath": "contracts/Vault/ERC20Vault.sol",
    "exportedSymbols": {
      "ERC20Vault": [
        15756
      ]
    },
    "id": 15757,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15353,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:54"
      },
      {
        "absolutePath": "contracts/Tokens/BokkyPooBahsFixedSupplyTokenFactory.sol",
        "file": "../Tokens/BokkyPooBahsFixedSupplyTokenFactory.sol",
        "id": 15354,
        "nodeType": "ImportDirective",
        "scope": 15757,
        "sourceUnit": 5251,
        "src": "25:59:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Utils/Owned.sol",
        "file": "../Utils/Owned.sol",
        "id": 15355,
        "nodeType": "ImportDirective",
        "scope": 15757,
        "sourceUnit": 14342,
        "src": "85:28:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../../interfaces/IERC20.sol",
        "id": 15356,
        "nodeType": "ImportDirective",
        "scope": 15757,
        "sourceUnit": 16623,
        "src": "114:37:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Utils/SafeMathPlus.sol",
        "file": "../Utils/SafeMathPlus.sol",
        "id": 15357,
        "nodeType": "ImportDirective",
        "scope": 15757,
        "sourceUnit": 14622,
        "src": "152:35:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15358,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14341,
              "src": "211:5:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$14341",
                "typeString": "contract Owned"
              }
            },
            "id": 15359,
            "nodeType": "InheritanceSpecifier",
            "src": "211:5:54"
          }
        ],
        "contractDependencies": [
          14341
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 15756,
        "linearizedBaseContracts": [
          15756,
          14341
        ],
        "name": "ERC20Vault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15362,
            "libraryName": {
              "contractScope": null,
              "id": 15360,
              "name": "SafeMathPlus",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14621,
              "src": "228:12:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathPlus_$14621",
                "typeString": "library SafeMathPlus"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "222:31:54",
            "typeName": {
              "id": 15361,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "245:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "69ac5721",
            "id": 15364,
            "mutability": "mutable",
            "name": "unlockDate",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 15756,
            "src": "259:25:54",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15363,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "259:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 15372,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15366,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15372,
                  "src": "541:20:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15368,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15372,
                  "src": "563:19:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15370,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15372,
                  "src": "584:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "540:59:54"
            },
            "src": "527:73:54"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 15380,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15374,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15380,
                  "src": "620:20:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "620:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15376,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15380,
                  "src": "642:19:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15378,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15380,
                  "src": "663:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "619:59:54"
            },
            "src": "605:74:54"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 15388,
            "name": "EmergencyWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15382,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15388,
                  "src": "708:20:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15384,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15388,
                  "src": "729:19:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15386,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15388,
                  "src": "749:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "707:57:54"
            },
            "src": "684:81:54"
          },
          {
            "canonicalName": "ERC20Vault.UserInfo",
            "id": 15391,
            "members": [
              {
                "constant": false,
                "id": 15390,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15391,
                "src": "796:14:54",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15389,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "796:7:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nodeType": "StructDefinition",
            "scope": 15756,
            "src": "771:88:54",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20Vault.PoolInfo",
            "id": 15398,
            "members": [
              {
                "constant": false,
                "id": 15393,
                "mutability": "mutable",
                "name": "token",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15398,
                "src": "890:12:54",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$16622",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 15392,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 16622,
                  "src": "890:6:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$16622",
                    "typeString": "contract IERC20"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15395,
                "mutability": "mutable",
                "name": "withdrawable",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15398,
                "src": "912:17:54",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 15394,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "912:4:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15397,
                "mutability": "mutable",
                "name": "endDate",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15398,
                "src": "939:15:54",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15396,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "939:7:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nodeType": "StructDefinition",
            "scope": 15756,
            "src": "865:96:54",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93f1a40b",
            "id": 15404,
            "mutability": "mutable",
            "name": "userInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 15756,
            "src": "1050:64:54",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$15391_storage_$_$",
              "typeString": "mapping(uint256 => mapping(address => struct ERC20Vault.UserInfo))"
            },
            "typeName": {
              "id": 15403,
              "keyType": {
                "id": 15399,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1058:7:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1050:48:54",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$15391_storage_$_$",
                "typeString": "mapping(uint256 => mapping(address => struct ERC20Vault.UserInfo))"
              },
              "valueType": {
                "id": 15402,
                "keyType": {
                  "id": 15400,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1077:7:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1069:28:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$15391_storage_$",
                  "typeString": "mapping(address => struct ERC20Vault.UserInfo)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 15401,
                  "name": "UserInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 15391,
                  "src": "1088:8:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                    "typeString": "struct ERC20Vault.UserInfo"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1526fe27",
            "id": 15407,
            "mutability": "mutable",
            "name": "poolInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 15756,
            "src": "1147:26:54",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$15398_storage_$dyn_storage",
              "typeString": "struct ERC20Vault.PoolInfo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 15405,
                "name": "PoolInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 15398,
                "src": "1147:8:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                  "typeString": "struct ERC20Vault.PoolInfo"
                }
              },
              "id": 15406,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1147:10:54",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$15398_storage_$dyn_storage_ptr",
                "typeString": "struct ERC20Vault.PoolInfo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15416,
              "nodeType": "Block",
              "src": "1212:81:54",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15411,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1234:3:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1234:10:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "id": 15413,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1233:12:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 15410,
                      "name": "_initOwned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14273,
                      "src": "1222:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1222:24:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15415,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:24:54"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4c462771",
            "id": 15417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initERC20Vault",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1203:2:54"
            },
            "returnParameters": {
              "id": 15409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1212:0:54"
            },
            "scope": 15756,
            "src": "1180:113:54",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15476,
              "nodeType": "Block",
              "src": "1664:430:54",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15427,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14292,
                          "src": "1682:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 15428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1682:9:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1674:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1674:18:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15430,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:18:54"
                },
                {
                  "assignments": [
                    15432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15432,
                      "mutability": "mutable",
                      "name": "endDate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15476,
                      "src": "1702:15:54",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15431,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1702:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15438,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15436,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15423,
                        "src": "1740:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15433,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1720:5:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 15434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1720:15:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 15435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14369,
                      "src": "1720:19:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 15437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1720:30:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1702:48:54"
                },
                {
                  "assignments": [
                    15440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15440,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15476,
                      "src": "1761:14:54",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15439,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1761:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15443,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 15441,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15407,
                      "src": "1778:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$15398_storage_$dyn_storage",
                        "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 15442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1778:15:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1761:32:54"
                },
                {
                  "body": {
                    "id": 15464,
                    "nodeType": "Block",
                    "src": "1846:90:54",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_contract$_IERC20_$16622",
                                "typeString": "contract IERC20"
                              },
                              "id": 15460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 15455,
                                    "name": "poolInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15407,
                                    "src": "1868:8:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_PoolInfo_$15398_storage_$dyn_storage",
                                      "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                                    }
                                  },
                                  "id": 15457,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 15456,
                                    "name": "pid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15445,
                                    "src": "1877:3:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1868:13:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$15398_storage",
                                    "typeString": "struct ERC20Vault.PoolInfo storage ref"
                                  }
                                },
                                "id": 15458,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15393,
                                "src": "1868:19:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$16622",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 15459,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15419,
                                "src": "1891:6:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$16622",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "src": "1868:29:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4572726f7220706f6f6c20616c7265616479206164646564",
                              "id": 15461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1898:26:54",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ab68890b9b8cd9bac11f0fc5dc69bc32019a829da537a99163691782df1b17fb",
                                "typeString": "literal_string \"Error pool already added\""
                              },
                              "value": "Error pool already added"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ab68890b9b8cd9bac11f0fc5dc69bc32019a829da537a99163691782df1b17fb",
                                "typeString": "literal_string \"Error pool already added\""
                              }
                            ],
                            "id": 15454,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1860:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 15462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1860:65:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15463,
                        "nodeType": "ExpressionStatement",
                        "src": "1860:65:54"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 15448,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15445,
                      "src": "1825:3:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 15449,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15440,
                      "src": "1831:6:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1825:12:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15465,
                  "initializationExpression": {
                    "assignments": [
                      15445
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 15445,
                        "mutability": "mutable",
                        "name": "pid",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 15465,
                        "src": "1808:11:54",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 15444,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1808:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 15447,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 15446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1822:1:54",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1808:15:54"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 15452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1839:5:54",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 15451,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15445,
                        "src": "1841:3:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15453,
                    "nodeType": "ExpressionStatement",
                    "src": "1839:5:54"
                  },
                  "nodeType": "ForStatement",
                  "src": "1803:133:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15470,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15419,
                            "src": "1998:6:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$16622",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 15471,
                            "name": "_withdrawable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15421,
                            "src": "2032:13:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 15472,
                            "name": "endDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15432,
                            "src": "2068:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$16622",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 15469,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15398,
                          "src": "1969:8:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$15398_storage_ptr_$",
                            "typeString": "type(struct ERC20Vault.PoolInfo storage pointer)"
                          }
                        },
                        "id": 15473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "token",
                          "withdrawable",
                          "endDate"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1969:117:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$15398_memory_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$15398_memory_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15466,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15407,
                        "src": "1955:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$15398_storage_$dyn_storage",
                          "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 15468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1955:13:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$15398_storage_$returns$__$",
                        "typeString": "function (struct ERC20Vault.PoolInfo storage ref)"
                      }
                    },
                    "id": 15474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:132:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15475,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:132:54"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a87980e7",
            "id": 15477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15419,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15477,
                  "src": "1604:13:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$16622",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15418,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16622,
                    "src": "1604:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$16622",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15421,
                  "mutability": "mutable",
                  "name": "_withdrawable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15477,
                  "src": "1619:18:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15420,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1619:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15423,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15477,
                  "src": "1639:17:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1603:54:54"
            },
            "returnParameters": {
              "id": 15425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1664:0:54"
            },
            "scope": 15756,
            "src": "1591:503:54",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15496,
              "nodeType": "Block",
              "src": "2239:88:54",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15485,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14292,
                          "src": "2257:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 15486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2257:9:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2249:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2249:18:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15488,
                  "nodeType": "ExpressionStatement",
                  "src": "2249:18:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 15489,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15407,
                          "src": "2277:8:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$15398_storage_$dyn_storage",
                            "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 15491,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 15490,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15479,
                          "src": "2286:4:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2277:14:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$15398_storage",
                          "typeString": "struct ERC20Vault.PoolInfo storage ref"
                        }
                      },
                      "id": 15492,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15395,
                      "src": "2277:27:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 15493,
                      "name": "_withdrawable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15481,
                      "src": "2307:13:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2277:43:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15495,
                  "nodeType": "ExpressionStatement",
                  "src": "2277:43:54"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5207cc0d",
            "id": 15497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPoolWithdrawable",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15479,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15497,
                  "src": "2192:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2192:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15481,
                  "mutability": "mutable",
                  "name": "_withdrawable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15497,
                  "src": "2206:18:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15480,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2191:39:54"
            },
            "returnParameters": {
              "id": 15483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:0:54"
            },
            "scope": 15756,
            "src": "2163:164:54",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15525,
              "nodeType": "Block",
              "src": "2432:138:54",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15505,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14292,
                          "src": "2450:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 15506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2450:9:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15504,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2442:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2442:18:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15508,
                  "nodeType": "ExpressionStatement",
                  "src": "2442:18:54"
                },
                {
                  "assignments": [
                    15510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15510,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15525,
                      "src": "2470:21:54",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                        "typeString": "struct ERC20Vault.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 15509,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15398,
                        "src": "2470:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15514,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 15511,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15407,
                      "src": "2494:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$15398_storage_$dyn_storage",
                        "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 15513,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 15512,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15499,
                      "src": "2503:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2494:14:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$15398_storage",
                      "typeString": "struct ERC20Vault.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2470:38:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15515,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15510,
                        "src": "2518:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                        }
                      },
                      "id": 15517,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15397,
                      "src": "2518:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 15521,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15501,
                          "src": "2553:9:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15518,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2533:5:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 15519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2533:15:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14369,
                        "src": "2533:19:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2533:30:54",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2518:45:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15524,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:45:54"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "57283e22",
            "id": 15526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePoolEndDate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15499,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15526,
                  "src": "2393:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2393:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15501,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15526,
                  "src": "2407:17:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2407:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2392:33:54"
            },
            "returnParameters": {
              "id": 15503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2432:0:54"
            },
            "scope": 15756,
            "src": "2366:204:54",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15582,
              "nodeType": "Block",
              "src": "2662:291:54",
              "statements": [
                {
                  "assignments": [
                    15534
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15534,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15582,
                      "src": "2672:21:54",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                        "typeString": "struct ERC20Vault.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 15533,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15398,
                        "src": "2672:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15538,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 15535,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15407,
                      "src": "2696:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$15398_storage_$dyn_storage",
                        "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 15537,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 15536,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15528,
                      "src": "2705:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2696:14:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$15398_storage",
                      "typeString": "struct ERC20Vault.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2672:38:54"
                },
                {
                  "assignments": [
                    15540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15540,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15582,
                      "src": "2720:21:54",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                        "typeString": "struct ERC20Vault.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 15539,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15391,
                        "src": "2720:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                          "typeString": "struct ERC20Vault.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15547,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15541,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15404,
                        "src": "2744:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$15391_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct ERC20Vault.UserInfo storage ref))"
                        }
                      },
                      "id": 15543,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 15542,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15528,
                        "src": "2753:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2744:14:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$15391_storage_$",
                        "typeString": "mapping(address => struct ERC20Vault.UserInfo storage ref)"
                      }
                    },
                    "id": 15546,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15544,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2759:3:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2759:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2744:26:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$15391_storage",
                      "typeString": "struct ERC20Vault.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2720:50:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15555,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2813:3:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2813:10:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 15554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2805:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15553,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2805:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 15557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2805:19:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15560,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2834:4:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Vault_$15756",
                              "typeString": "contract ERC20Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Vault_$15756",
                              "typeString": "contract ERC20Vault"
                            }
                          ],
                          "id": 15559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2826:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15558,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2826:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 15561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2826:13:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15562,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15530,
                        "src": "2841:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15548,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15534,
                          "src": "2781:4:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                            "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                          }
                        },
                        "id": 15551,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15393,
                        "src": "2781:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16622",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 15552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16587,
                      "src": "2781:23:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 15563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2781:68:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15564,
                  "nodeType": "ExpressionStatement",
                  "src": "2781:68:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15565,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15540,
                        "src": "2859:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                          "typeString": "struct ERC20Vault.UserInfo storage pointer"
                        }
                      },
                      "id": 15567,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15390,
                      "src": "2859:11:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 15571,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15530,
                          "src": "2889:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15568,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15540,
                            "src": "2873:4:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                              "typeString": "struct ERC20Vault.UserInfo storage pointer"
                            }
                          },
                          "id": 15569,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15390,
                          "src": "2873:11:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14369,
                        "src": "2873:15:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2873:24:54",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2859:38:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15574,
                  "nodeType": "ExpressionStatement",
                  "src": "2859:38:54"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15576,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2920:3:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2920:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15578,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15528,
                        "src": "2932:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15579,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15530,
                        "src": "2938:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15575,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15372,
                      "src": "2912:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 15580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2912:34:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15581,
                  "nodeType": "EmitStatement",
                  "src": "2907:39:54"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e2bbb158",
            "id": 15583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15528,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15583,
                  "src": "2625:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2625:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15530,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15583,
                  "src": "2639:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2639:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2624:31:54"
            },
            "returnParameters": {
              "id": 15532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2662:0:54"
            },
            "scope": 15756,
            "src": "2608:345:54",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15657,
              "nodeType": "Block",
              "src": "3014:508:54",
              "statements": [
                {
                  "assignments": [
                    15591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15591,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15657,
                      "src": "3024:21:54",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                        "typeString": "struct ERC20Vault.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 15590,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15398,
                        "src": "3024:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15595,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 15592,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15407,
                      "src": "3048:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$15398_storage_$dyn_storage",
                        "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 15594,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 15593,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15585,
                      "src": "3057:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3048:14:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$15398_storage",
                      "typeString": "struct ERC20Vault.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3024:38:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15597,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15591,
                          "src": "3080:4:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                            "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                          }
                        },
                        "id": 15598,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15395,
                        "src": "3080:17:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5769746864726177696e672066726f6d20706f6f6c2069732064697361626c6564",
                        "id": 15599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3099:35:54",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1528e78312e783d2bcc8347828d61b871b780103f4cdde7ef5a664a29a5ad17",
                          "typeString": "literal_string \"Withdrawing from pool is disabled\""
                        },
                        "value": "Withdrawing from pool is disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1528e78312e783d2bcc8347828d61b871b780103f4cdde7ef5a664a29a5ad17",
                          "typeString": "literal_string \"Withdrawing from pool is disabled\""
                        }
                      ],
                      "id": 15596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3072:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3072:63:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15601,
                  "nodeType": "ExpressionStatement",
                  "src": "3072:63:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15603,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "3153:3:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15604,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15591,
                            "src": "3160:4:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                              "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                            }
                          },
                          "id": 15605,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15397,
                          "src": "3160:12:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3153:19:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54696d656c6f636b3a2046756e64732063616e6e6f742062652077697468647261776e20796574",
                        "id": 15607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3174:41:54",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7212fb11a2184a0ca446b2dc9ca7c85e03ff926b934553e3f180e74bb204561",
                          "typeString": "literal_string \"Timelock: Funds cannot be withdrawn yet\""
                        },
                        "value": "Timelock: Funds cannot be withdrawn yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7212fb11a2184a0ca446b2dc9ca7c85e03ff926b934553e3f180e74bb204561",
                          "typeString": "literal_string \"Timelock: Funds cannot be withdrawn yet\""
                        }
                      ],
                      "id": 15602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3145:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3145:71:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15609,
                  "nodeType": "ExpressionStatement",
                  "src": "3145:71:54"
                },
                {
                  "assignments": [
                    15611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15611,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15657,
                      "src": "3226:21:54",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                        "typeString": "struct ERC20Vault.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 15610,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15391,
                        "src": "3226:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                          "typeString": "struct ERC20Vault.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15618,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15612,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15404,
                        "src": "3250:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$15391_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct ERC20Vault.UserInfo storage ref))"
                        }
                      },
                      "id": 15614,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 15613,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15585,
                        "src": "3259:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3250:14:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$15391_storage_$",
                        "typeString": "mapping(address => struct ERC20Vault.UserInfo storage ref)"
                      }
                    },
                    "id": 15617,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15615,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3265:3:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3265:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3250:26:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$15391_storage",
                      "typeString": "struct ERC20Vault.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3226:50:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15620,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15611,
                            "src": "3294:4:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                              "typeString": "struct ERC20Vault.UserInfo storage pointer"
                            }
                          },
                          "id": 15621,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15390,
                          "src": "3294:11:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 15622,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15587,
                          "src": "3308:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3294:21:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77697468647261773a20756e73756666696369656e742066756e647320696e2074686520706f6f6c",
                        "id": 15624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3316:42:54",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_897eade12d5db99253a435e52b24fb47221853517d0352d6fff660b021ec382d",
                          "typeString": "literal_string \"withdraw: unsufficient funds in the pool\""
                        },
                        "value": "withdraw: unsufficient funds in the pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_897eade12d5db99253a435e52b24fb47221853517d0352d6fff660b021ec382d",
                          "typeString": "literal_string \"withdraw: unsufficient funds in the pool\""
                        }
                      ],
                      "id": 15619,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3286:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3286:73:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15626,
                  "nodeType": "ExpressionStatement",
                  "src": "3286:73:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15627,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15611,
                        "src": "3369:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                          "typeString": "struct ERC20Vault.UserInfo storage pointer"
                        }
                      },
                      "id": 15629,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15390,
                      "src": "3369:11:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 15633,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15587,
                          "src": "3399:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15630,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15611,
                            "src": "3383:4:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                              "typeString": "struct ERC20Vault.UserInfo storage pointer"
                            }
                          },
                          "id": 15631,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15390,
                          "src": "3383:11:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14385,
                        "src": "3383:15:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3383:24:54",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3369:38:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15636,
                  "nodeType": "ExpressionStatement",
                  "src": "3369:38:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15644,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3445:3:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3445:10:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 15643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3437:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15642,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3437:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 15646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3437:19:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15647,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15587,
                        "src": "3457:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15637,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15591,
                          "src": "3417:4:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                            "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                          }
                        },
                        "id": 15640,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15393,
                        "src": "3417:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16622",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 15641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16576,
                      "src": "3417:19:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 15648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3417:48:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15649,
                  "nodeType": "ExpressionStatement",
                  "src": "3417:48:54"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15651,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3489:3:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3489:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15653,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15585,
                        "src": "3501:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15654,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15587,
                        "src": "3507:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15650,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15380,
                      "src": "3480:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 15655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3480:35:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15656,
                  "nodeType": "EmitStatement",
                  "src": "3475:40:54"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "441a3e70",
            "id": 15658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15585,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15658,
                  "src": "2977:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2977:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15587,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15658,
                  "src": "2991:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2991:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2976:31:54"
            },
            "returnParameters": {
              "id": 15589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3014:0:54"
            },
            "scope": 15756,
            "src": "2959:563:54",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15709,
              "nodeType": "Block",
              "src": "3606:325:54",
              "statements": [
                {
                  "assignments": [
                    15664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15664,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15709,
                      "src": "3616:21:54",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                        "typeString": "struct ERC20Vault.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 15663,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15398,
                        "src": "3616:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15668,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 15665,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15407,
                      "src": "3640:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$15398_storage_$dyn_storage",
                        "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 15667,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 15666,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15660,
                      "src": "3649:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3640:14:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$15398_storage",
                      "typeString": "struct ERC20Vault.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3616:38:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15670,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15664,
                          "src": "3672:4:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                            "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                          }
                        },
                        "id": 15671,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15395,
                        "src": "3672:17:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5769746864726177696e672066726f6d20706f6f6c2064697361626c6564",
                        "id": 15672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3690:32:54",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b882ae3a50b9668ae6ac4958890c610e41432a002d525546f83cff7ab919fc97",
                          "typeString": "literal_string \"Withdrawing from pool disabled\""
                        },
                        "value": "Withdrawing from pool disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b882ae3a50b9668ae6ac4958890c610e41432a002d525546f83cff7ab919fc97",
                          "typeString": "literal_string \"Withdrawing from pool disabled\""
                        }
                      ],
                      "id": 15669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3664:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3664:59:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15674,
                  "nodeType": "ExpressionStatement",
                  "src": "3664:59:54"
                },
                {
                  "assignments": [
                    15676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15676,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15709,
                      "src": "3733:21:54",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                        "typeString": "struct ERC20Vault.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 15675,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15391,
                        "src": "3733:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                          "typeString": "struct ERC20Vault.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15683,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 15677,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15404,
                        "src": "3757:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$15391_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct ERC20Vault.UserInfo storage ref))"
                        }
                      },
                      "id": 15679,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 15678,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15660,
                        "src": "3766:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3757:14:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$15391_storage_$",
                        "typeString": "mapping(address => struct ERC20Vault.UserInfo storage ref)"
                      }
                    },
                    "id": 15682,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15680,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3772:3:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3772:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3757:26:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$15391_storage",
                      "typeString": "struct ERC20Vault.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3733:50:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15684,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15676,
                        "src": "3793:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                          "typeString": "struct ERC20Vault.UserInfo storage pointer"
                        }
                      },
                      "id": 15686,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15390,
                      "src": "3793:11:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 15687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3807:1:54",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3793:15:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15689,
                  "nodeType": "ExpressionStatement",
                  "src": "3793:15:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15695,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3838:3:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3838:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15697,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15676,
                          "src": "3849:4:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                            "typeString": "struct ERC20Vault.UserInfo storage pointer"
                          }
                        },
                        "id": 15698,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15390,
                        "src": "3849:11:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15690,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15664,
                          "src": "3818:4:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$15398_storage_ptr",
                            "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                          }
                        },
                        "id": 15693,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15393,
                        "src": "3818:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16622",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 15694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16576,
                      "src": "3818:19:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 15699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3818:43:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15700,
                  "nodeType": "ExpressionStatement",
                  "src": "3818:43:54"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15702,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3894:3:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3894:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15704,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15660,
                        "src": "3906:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15705,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15676,
                          "src": "3912:4:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$15391_storage_ptr",
                            "typeString": "struct ERC20Vault.UserInfo storage pointer"
                          }
                        },
                        "id": 15706,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15390,
                        "src": "3912:11:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15701,
                      "name": "EmergencyWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15388,
                      "src": "3876:17:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 15707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3876:48:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15708,
                  "nodeType": "EmitStatement",
                  "src": "3871:53:54"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5312ea8e",
            "id": 15710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15660,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15710,
                  "src": "3585:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3585:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3584:14:54"
            },
            "returnParameters": {
              "id": 15662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3606:0:54"
            },
            "scope": 15756,
            "src": "3558:373:54",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15738,
              "nodeType": "Block",
              "src": "4159:183:54",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15720,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14292,
                          "src": "4215:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 15721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4215:9:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15719,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4207:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4207:18:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15723,
                  "nodeType": "ExpressionStatement",
                  "src": "4207:18:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15726,
                            "name": "contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15716,
                            "src": "4254:15:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15725,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15755,
                          "src": "4243:10:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 15727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4243:27:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4235:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4235:36:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15729,
                  "nodeType": "ExpressionStatement",
                  "src": "4235:36:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15734,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15716,
                        "src": "4310:15:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15735,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15714,
                        "src": "4327:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15731,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15712,
                            "src": "4288:12:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15730,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16622,
                          "src": "4281:6:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16622_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 15732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4281:20:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16622",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 15733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16596,
                      "src": "4281:28:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 15736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4281:54:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15737,
                  "nodeType": "ExpressionStatement",
                  "src": "4281:54:54"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "bb9289a6",
            "id": 15739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15712,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15739,
                  "src": "4090:20:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4090:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15714,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15739,
                  "src": "4112:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4112:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15716,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15739,
                  "src": "4128:23:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4128:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4089:63:54"
            },
            "returnParameters": {
              "id": 15718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4159:0:54"
            },
            "scope": 15756,
            "src": "4060:282:54",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15754,
              "nodeType": "Block",
              "src": "4403:97:54",
              "statements": [
                {
                  "assignments": [
                    15747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15747,
                      "mutability": "mutable",
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15754,
                      "src": "4413:9:54",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15746,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4413:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15748,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4413:9:54"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4441:28:54",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4443:24:54",
                        "value": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "4462:4:54"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "4450:11:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4450:17:54"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "4443:4:54"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 15741,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4462:4:54",
                      "valueSize": 1
                    },
                    {
                      "declaration": 15747,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4443:4:54",
                      "valueSize": 1
                    }
                  ],
                  "id": 15749,
                  "nodeType": "InlineAssembly",
                  "src": "4432:37:54"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 15750,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15747,
                      "src": "4485:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 15751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4492:1:54",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4485:8:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15745,
                  "id": 15753,
                  "nodeType": "Return",
                  "src": "4478:15:54"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "16279055",
            "id": 15755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15741,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15755,
                  "src": "4368:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4368:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4367:14:54"
            },
            "returnParameters": {
              "id": 15745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15744,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15755,
                  "src": "4398:4:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15743,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4398:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4397:6:54"
            },
            "scope": 15756,
            "src": "4348:152:54",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 15757,
        "src": "188:4315:54"
      }
    ],
    "src": "0:4504:54"
  },
  "bytecode": "608060405234801561001057600080fd5b50610de6806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806379ba5097116100a2578063a87980e711610071578063a87980e71461029b578063bb9289a6146102cf578063d4ee1d9014610305578063e2bbb1581461030d578063f2fde38b146103305761010b565b806379ba50971461023b5780638da5cb5b146102435780638f32d59b1461026757806393f1a40b1461026f5761010b565b80635207cc0d116100de5780635207cc0d146101bc5780635312ea8e146101e157806357283e22146101fe57806369ac5721146102215761010b565b80631526fe27146101105780631627905514610155578063441a3e701461018f5780634c462771146101b4575b600080fd5b61012d6004803603602081101561012657600080fd5b5035610356565b604080516001600160a01b039094168452911515602084015282820152519081900360600190f35b61017b6004803603602081101561016b57600080fd5b50356001600160a01b0316610396565b604080519115158252519081900360200190f35b6101b2600480360360408110156101a557600080fd5b508035906020013561039c565b005b6101b261056b565b6101b2600480360360408110156101d257600080fd5b50803590602001351515610576565b6101b2600480360360208110156101f757600080fd5b50356105c3565b6101b26004803603604081101561021457600080fd5b508035906020013561071b565b610229610768565b60408051918252519081900360200190f35b6101b261076e565b61024b6107e9565b604080516001600160a01b039092168252519081900360200190f35b61017b6107f8565b6102296004803603604081101561028557600080fd5b50803590602001356001600160a01b0316610809565b6101b2600480360360608110156102b157600080fd5b506001600160a01b0381351690602081013515159060400135610826565b6101b2600480360360608110156102e557600080fd5b506001600160a01b0381358116916020810135916040909101351661099a565b61024b610a45565b6101b26004803603604081101561032357600080fd5b5080359060200135610a54565b6101b26004803603602081101561034657600080fd5b50356001600160a01b0316610b5e565b6004818154811061036357fe5b6000918252602090912060029091020180546001909101546001600160a01b0382169250600160a01b90910460ff169083565b3b151590565b6000600483815481106103ab57fe5b600091825260209091206002909102018054909150600160a01b900460ff166104055760405162461bcd60e51b8152600401808060200182810382526021815260200180610d696021913960400191505060405180910390fd5b80600101544210156104485760405162461bcd60e51b8152600401808060200182810382526027815260200180610d8a6027913960400191505060405180910390fd5b6000838152600360209081526040808320338452909152902080548311156104a15760405162461bcd60e51b8152600401808060200182810382526028815260200180610d416028913960400191505060405180910390fd5b80546104ad9084610b91565b815581546040805163a9059cbb60e01b81523360048201526024810186905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b15801561050257600080fd5b505af1158015610516573d6000803e3d6000fd5b505050506040513d602081101561052c57600080fd5b5050604080518481529051859133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a350505050565b61057433610bda565b565b61057e6107f8565b61058757600080fd5b806004838154811061059557fe5b600091825260209091206002909102018054911515600160a01b0260ff60a01b199092169190911790555050565b6000600482815481106105d257fe5b600091825260209091206002909102018054909150600160a01b900460ff16610642576040805162461bcd60e51b815260206004820152601e60248201527f5769746864726177696e672066726f6d20706f6f6c2064697361626c65640000604482015290519081900360640190fd5b6000828152600360209081526040808320338085529083528184208481558554835163a9059cbb60e01b8152600481019390935260248301869052925190946001600160a01b039093169363a9059cbb936044808501949293928390030190829087803b1580156106b257600080fd5b505af11580156106c6573d6000803e3d6000fd5b505050506040513d60208110156106dc57600080fd5b505080546040805191825251849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a3505050565b6107236107f8565b61072c57600080fd5b60006004838154811061073b57fe5b9060005260206000209060020201905061075e8242610c4f90919063ffffffff16565b6001909101555050565b60025481565b6001546001600160a01b0316331461078557600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600360209081526000928352604080842090915290825290205481565b61082e6107f8565b61083757600080fd5b60006108434283610c4f565b60045490915060005b818110156108e057856001600160a01b03166004828154811061086b57fe5b60009182526020909120600290910201546001600160a01b031614156108d8576040805162461bcd60e51b815260206004820152601860248201527f4572726f7220706f6f6c20616c72656164792061646465640000000000000000604482015290519081900360640190fd5b60010161084c565b5050604080516060810182526001600160a01b039586168152931515602085019081529084019182526004805460018101825560009190915293517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6002909502948501805492516001600160a01b0319909316919096161760ff60a01b1916600160a01b91151591909102179093555090517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155565b6109a26107f8565b6109ab57600080fd5b6109b481610396565b6109bd57600080fd5b826001600160a01b031663095ea7b382846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610a1457600080fd5b505af1158015610a28573d6000803e3d6000fd5b505050506040513d6020811015610a3e57600080fd5b5050505050565b6001546001600160a01b031681565b600060048381548110610a6357fe5b60009182526020808320868452600382526040808520338087529084528186206002909502909201805482516323b872dd60e01b8152600481019490945230602485015260448401899052915190965093946001600160a01b0391909116936323b872dd936064808501949193918390030190829087803b158015610ae757600080fd5b505af1158015610afb573d6000803e3d6000fd5b505050506040513d6020811015610b1157600080fd5b50508054610b1f9084610c4f565b8155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b610b666107f8565b610b6f57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000610bd383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ca9565b9392505050565b600054600160a01b900460ff1615610bf157600080fd5b6000805460ff60a01b196001600160a01b038085166001600160a01b03199093169290921716600160a01b17808355604051911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350565b600082820183811015610bd3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115610d385760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610cfd578181015183820152602001610ce5565b50505050905090810190601f168015610d2a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe77697468647261773a20756e73756666696369656e742066756e647320696e2074686520706f6f6c5769746864726177696e672066726f6d20706f6f6c2069732064697361626c656454696d656c6f636b3a2046756e64732063616e6e6f742062652077697468647261776e20796574a264697066735822122014696771af4eae09a0b9019dac996308c881f3dbba8618ef41b50e145273faca64736f6c634300060c0033",
  "bytecodeSha1": "9435441eeb018e3aa656b77be07e56df30834bde",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "ERC20Vault",
  "coverageMap": {
    "branches": {
      "50": {
        "Owned._initOwned": {
          "53": [
            412,
            424,
            true
          ]
        },
        "Owned.acceptOwnership": {
          "51": [
            918,
            940,
            true
          ]
        },
        "Owned.transferOwnership": {
          "52": [
            813,
            822,
            true
          ]
        }
      },
      "51": {
        "SafeMathPlus.add": {
          "54": [
            444,
            450,
            true
          ]
        },
        "SafeMathPlus.sub": {
          "55": [
            764,
            770,
            true
          ]
        }
      },
      "54": {
        "ERC20Vault.add": {
          "47": [
            1682,
            1691,
            true
          ],
          "48": [
            1868,
            1897,
            true
          ]
        },
        "ERC20Vault.emergencyWithdraw": {
          "45": [
            3672,
            3689,
            true
          ]
        },
        "ERC20Vault.setContractAllowance": {
          "49": [
            4215,
            4224,
            true
          ],
          "50": [
            4243,
            4270,
            true
          ]
        },
        "ERC20Vault.setPoolWithdrawable": {
          "44": [
            2257,
            2266,
            true
          ]
        },
        "ERC20Vault.updatePoolEndDate": {
          "46": [
            2450,
            2459,
            true
          ]
        },
        "ERC20Vault.withdraw": {
          "41": [
            3080,
            3097,
            true
          ],
          "42": [
            3153,
            3172,
            true
          ],
          "43": [
            3294,
            3315,
            true
          ]
        }
      }
    },
    "statements": {
      "50": {
        "Owned._initOwned": {
          "35": [
            404,
            425
          ],
          "36": [
            435,
            468
          ],
          "37": [
            478,
            496
          ],
          "38": [
            506,
            551
          ]
        },
        "Owned.acceptOwnership": {
          "16": [
            910,
            941
          ],
          "17": [
            951,
            994
          ],
          "18": [
            1004,
            1039
          ],
          "19": [
            1049,
            1070
          ]
        },
        "Owned.isOwner": {
          "21": [
            702,
            729
          ]
        },
        "Owned.owner": {
          "20": [
            621,
            634
          ]
        },
        "Owned.transferOwnership": {
          "32": [
            805,
            823
          ],
          "33": [
            833,
            853
          ]
        }
      },
      "51": {
        "SafeMathPlus.add": {
          "39": [
            436,
            482
          ]
        },
        "SafeMathPlus.sub": {
          "34": [
            589,
            639
          ],
          "40": [
            756,
            785
          ]
        }
      },
      "54": {
        "ERC20Vault.add": {
          "22": [
            1674,
            1692
          ],
          "23": [
            1860,
            1925
          ],
          "24": [
            1839,
            1844
          ],
          "25": [
            1955,
            2087
          ]
        },
        "ERC20Vault.deposit": {
          "29": [
            2781,
            2849
          ],
          "30": [
            2859,
            2897
          ],
          "31": [
            2907,
            2946
          ]
        },
        "ERC20Vault.emergencyWithdraw": {
          "10": [
            3664,
            3723
          ],
          "11": [
            3793,
            3808
          ],
          "12": [
            3818,
            3861
          ],
          "13": [
            3871,
            3924
          ]
        },
        "ERC20Vault.initERC20Vault": {
          "7": [
            1222,
            1246
          ]
        },
        "ERC20Vault.isContract": {
          "0": [
            4478,
            4493
          ]
        },
        "ERC20Vault.setContractAllowance": {
          "26": [
            4207,
            4225
          ],
          "27": [
            4235,
            4271
          ],
          "28": [
            4281,
            4335
          ]
        },
        "ERC20Vault.setPoolWithdrawable": {
          "8": [
            2249,
            2267
          ],
          "9": [
            2277,
            2320
          ]
        },
        "ERC20Vault.updatePoolEndDate": {
          "14": [
            2442,
            2460
          ],
          "15": [
            2518,
            2563
          ]
        },
        "ERC20Vault.withdraw": {
          "1": [
            3072,
            3135
          ],
          "2": [
            3145,
            3216
          ],
          "3": [
            3286,
            3359
          ],
          "4": [
            3369,
            3407
          ],
          "5": [
            3417,
            3465
          ],
          "6": [
            3475,
            3515
          ]
        }
      }
    }
  },
  "dependencies": [
    "Owned",
    "SafeMathPlus"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061010b5760003560e01c806379ba5097116100a2578063a87980e711610071578063a87980e71461029b578063bb9289a6146102cf578063d4ee1d9014610305578063e2bbb1581461030d578063f2fde38b146103305761010b565b806379ba50971461023b5780638da5cb5b146102435780638f32d59b1461026757806393f1a40b1461026f5761010b565b80635207cc0d116100de5780635207cc0d146101bc5780635312ea8e146101e157806357283e22146101fe57806369ac5721146102215761010b565b80631526fe27146101105780631627905514610155578063441a3e701461018f5780634c462771146101b4575b600080fd5b61012d6004803603602081101561012657600080fd5b5035610356565b604080516001600160a01b039094168452911515602084015282820152519081900360600190f35b61017b6004803603602081101561016b57600080fd5b50356001600160a01b0316610396565b604080519115158252519081900360200190f35b6101b2600480360360408110156101a557600080fd5b508035906020013561039c565b005b6101b261056b565b6101b2600480360360408110156101d257600080fd5b50803590602001351515610576565b6101b2600480360360208110156101f757600080fd5b50356105c3565b6101b26004803603604081101561021457600080fd5b508035906020013561071b565b610229610768565b60408051918252519081900360200190f35b6101b261076e565b61024b6107e9565b604080516001600160a01b039092168252519081900360200190f35b61017b6107f8565b6102296004803603604081101561028557600080fd5b50803590602001356001600160a01b0316610809565b6101b2600480360360608110156102b157600080fd5b506001600160a01b0381351690602081013515159060400135610826565b6101b2600480360360608110156102e557600080fd5b506001600160a01b0381358116916020810135916040909101351661099a565b61024b610a45565b6101b26004803603604081101561032357600080fd5b5080359060200135610a54565b6101b26004803603602081101561034657600080fd5b50356001600160a01b0316610b5e565b6004818154811061036357fe5b6000918252602090912060029091020180546001909101546001600160a01b0382169250600160a01b90910460ff169083565b3b151590565b6000600483815481106103ab57fe5b600091825260209091206002909102018054909150600160a01b900460ff166104055760405162461bcd60e51b8152600401808060200182810382526021815260200180610d696021913960400191505060405180910390fd5b80600101544210156104485760405162461bcd60e51b8152600401808060200182810382526027815260200180610d8a6027913960400191505060405180910390fd5b6000838152600360209081526040808320338452909152902080548311156104a15760405162461bcd60e51b8152600401808060200182810382526028815260200180610d416028913960400191505060405180910390fd5b80546104ad9084610b91565b815581546040805163a9059cbb60e01b81523360048201526024810186905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b15801561050257600080fd5b505af1158015610516573d6000803e3d6000fd5b505050506040513d602081101561052c57600080fd5b5050604080518481529051859133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a350505050565b61057433610bda565b565b61057e6107f8565b61058757600080fd5b806004838154811061059557fe5b600091825260209091206002909102018054911515600160a01b0260ff60a01b199092169190911790555050565b6000600482815481106105d257fe5b600091825260209091206002909102018054909150600160a01b900460ff16610642576040805162461bcd60e51b815260206004820152601e60248201527f5769746864726177696e672066726f6d20706f6f6c2064697361626c65640000604482015290519081900360640190fd5b6000828152600360209081526040808320338085529083528184208481558554835163a9059cbb60e01b8152600481019390935260248301869052925190946001600160a01b039093169363a9059cbb936044808501949293928390030190829087803b1580156106b257600080fd5b505af11580156106c6573d6000803e3d6000fd5b505050506040513d60208110156106dc57600080fd5b505080546040805191825251849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a3505050565b6107236107f8565b61072c57600080fd5b60006004838154811061073b57fe5b9060005260206000209060020201905061075e8242610c4f90919063ffffffff16565b6001909101555050565b60025481565b6001546001600160a01b0316331461078557600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600360209081526000928352604080842090915290825290205481565b61082e6107f8565b61083757600080fd5b60006108434283610c4f565b60045490915060005b818110156108e057856001600160a01b03166004828154811061086b57fe5b60009182526020909120600290910201546001600160a01b031614156108d8576040805162461bcd60e51b815260206004820152601860248201527f4572726f7220706f6f6c20616c72656164792061646465640000000000000000604482015290519081900360640190fd5b60010161084c565b5050604080516060810182526001600160a01b039586168152931515602085019081529084019182526004805460018101825560009190915293517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6002909502948501805492516001600160a01b0319909316919096161760ff60a01b1916600160a01b91151591909102179093555090517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155565b6109a26107f8565b6109ab57600080fd5b6109b481610396565b6109bd57600080fd5b826001600160a01b031663095ea7b382846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610a1457600080fd5b505af1158015610a28573d6000803e3d6000fd5b505050506040513d6020811015610a3e57600080fd5b5050505050565b6001546001600160a01b031681565b600060048381548110610a6357fe5b60009182526020808320868452600382526040808520338087529084528186206002909502909201805482516323b872dd60e01b8152600481019490945230602485015260448401899052915190965093946001600160a01b0391909116936323b872dd936064808501949193918390030190829087803b158015610ae757600080fd5b505af1158015610afb573d6000803e3d6000fd5b505050506040513d6020811015610b1157600080fd5b50508054610b1f9084610c4f565b8155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b610b666107f8565b610b6f57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000610bd383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ca9565b9392505050565b600054600160a01b900460ff1615610bf157600080fd5b6000805460ff60a01b196001600160a01b038085166001600160a01b03199093169290921716600160a01b17808355604051911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350565b600082820183811015610bd3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115610d385760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610cfd578181015183820152602001610ce5565b50505050905090810190601f168015610d2a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe77697468647261773a20756e73756666696369656e742066756e647320696e2074686520706f6f6c5769746864726177696e672066726f6d20706f6f6c2069732064697361626c656454696d656c6f636b3a2046756e64732063616e6e6f742062652077697468647261776e20796574a264697066735822122014696771af4eae09a0b9019dac996308c881f3dbba8618ef41b50e145273faca64736f6c634300060c0033",
  "deployedSourceMap": "188:4315:54:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1147:26;;;;;;;;;;;;;;;;-1:-1:-1;1147:26:54;;:::i;:::-;;;;-1:-1:-1;;;;;1147:26:54;;;;;;;;;;;;;;;;;;;;;;;;;4348:152;;;;;;;;;;;;;;;;-1:-1:-1;4348:152:54;-1:-1:-1;;;;;4348:152:54;;:::i;:::-;;;;;;;;;;;;;;;;;;2959:563;;;;;;;;;;;;;;;;-1:-1:-1;2959:563:54;;;;;;;:::i;:::-;;1180:113;;;:::i;2163:164::-;;;;;;;;;;;;;;;;-1:-1:-1;2163:164:54;;;;;;;;;:::i;3558:373::-;;;;;;;;;;;;;;;;-1:-1:-1;3558:373:54;;:::i;2366:204::-;;;;;;;;;;;;;;;;-1:-1:-1;2366:204:54;;;;;;;:::i;259:25::-;;;:::i;:::-;;;;;;;;;;;;;;;;866:211:50;;;:::i;564:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;564:77:50;;;;;;;;;;;;;;646:90;;;:::i;1050:64:54:-;;;;;;;;;;;;;;;;-1:-1:-1;1050:64:54;;;;;;-1:-1:-1;;;;;1050:64:54;;:::i;1591:503::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1591:503:54;;;;;;;;;;;;;;;:::i;4060:282::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4060:282:54;;;;;;;;;;;;;;;;;:::i;156:23:50:-;;;:::i;2608:345:54:-;;;;;;;;;;;;;;;;-1:-1:-1;2608:345:54;;;;;;;:::i;742:118:50:-;;;;;;;;;;;;;;;;-1:-1:-1;742:118:50;-1:-1:-1;;;;;742:118:50;;:::i;1147:26:54:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1147:26:54;;;-1:-1:-1;;;;1147:26:54;;;;;;;:::o;4348:152::-;4450:17;4485:8;;;4348:152::o;2959:563::-;3024:21;3048:8;3057:4;3048:14;;;;;;;;;;;;;;;;;;;;;3080:17;;3048:14;;-1:-1:-1;;;;3080:17:54;;;;3072:63;;;;-1:-1:-1;;;3072:63:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3160:4;:12;;;3153:3;:19;;3145:71;;;;-1:-1:-1;;;3145:71:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3226:21;3250:14;;;:8;:14;;;;;;;;3265:10;3250:26;;;;;;;3294:11;;:21;-1:-1:-1;3294:21:54;3286:73;;;;-1:-1:-1;;;3286:73:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3383:11;;:24;;3399:7;3383:15;:24::i;:::-;3369:38;;3417:10;;:48;;;-1:-1:-1;;;3417:48:54;;3445:10;3417:48;;;;;;;;;;;;-1:-1:-1;;;;;3417:10:54;;;;:19;;:48;;;;;;;;;;;;;;;3369:11;3417:10;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3480:35:54;;;;;;;;3501:4;;3489:10;;3480:35;;;;;3417:48;3480:35;;;2959:563;;;;:::o;1180:113::-;1222:24;1234:10;1222;:24::i;:::-;1180:113::o;2163:164::-;2257:9;:7;:9::i;:::-;2249:18;;;;;;2307:13;2277:8;2286:4;2277:14;;;;;;;;;;;;;;;;;;;;;:43;;;;;-1:-1:-1;;;2277:43:54;-1:-1:-1;;;;2277:43:54;;;;;;;;;-1:-1:-1;;2163:164:54:o;3558:373::-;3616:21;3640:8;3649:4;3640:14;;;;;;;;;;;;;;;;;;;;;3672:17;;3640:14;;-1:-1:-1;;;;3672:17:54;;;;3664:59;;;;;-1:-1:-1;;;3664:59:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;3733:21;3757:14;;;:8;:14;;;;;;;;3772:10;3757:26;;;;;;;;;3793:15;;;3818:10;;:43;;-1:-1:-1;;;3818:43:54;;;;;;;;;;;;;;;;;3757:26;;-1:-1:-1;;;;;3818:10:54;;;;:19;;:43;;;;;3757:14;;3818:43;;;;;;;;:10;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3912:11:54;;3876:48;;;;;;;3906:4;;3894:10;;3876:48;;;;;3818:43;3876:48;;;3558:373;;;:::o;2366:204::-;2450:9;:7;:9::i;:::-;2442:18;;;;;;2470:21;2494:8;2503:4;2494:14;;;;;;;;;;;;;;;;;;2470:38;;2533:30;2553:9;2533:15;:19;;:30;;;;:::i;:::-;2518:12;;;;:45;-1:-1:-1;;2366:204:54:o;259:25::-;;;;:::o;866:211:50:-;932:8;;-1:-1:-1;;;;;932:8:50;918:10;:22;910:31;;;;;;985:8;;;977:6;;956:38;;-1:-1:-1;;;;;985:8:50;;;;977:6;;;;956:38;;;1029:8;;;;1004:35;;-1:-1:-1;;;;;;1004:35:50;;;-1:-1:-1;;;;;1029:8:50;;1004:35;;;;1049:21;;;866:211::o;564:77::-;602:7;628:6;-1:-1:-1;;;;;628:6:50;564:77;:::o;646:90::-;686:4;723:6;-1:-1:-1;;;;;723:6:50;709:10;:20;;646:90::o;1050:64:54:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1591:503::-;1682:9;:7;:9::i;:::-;1674:18;;;;;;1702:15;1720:30;:15;1740:9;1720:19;:30::i;:::-;1778:8;:15;1702:48;;-1:-1:-1;1761:14:54;1803:133;1831:6;1825:3;:12;1803:133;;;1891:6;-1:-1:-1;;;;;1868:29:54;:8;1877:3;1868:13;;;;;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;1868:19:54;:29;;1860:65;;;;;-1:-1:-1;;;1860:65:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;1839:5;;1803:133;;;-1:-1:-1;;1969:117:54;;;;;;;;-1:-1:-1;;;;;1969:117:54;;;;;;;;;;;;;;;;;;;;1955:8;:132;;;;;;;-1:-1:-1;1955:132:54;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1955:132:54;;;;;;;;-1:-1:-1;;;;1955:132:54;-1:-1:-1;;;1955:132:54;;;;;;;;;;;-1:-1:-1;1955:132:54;;;;;;;1591:503::o;4060:282::-;4215:9;:7;:9::i;:::-;4207:18;;;;;;4243:27;4254:15;4243:10;:27::i;:::-;4235:36;;;;;;4288:12;-1:-1:-1;;;;;4281:28:54;;4310:15;4327:7;4281:54;;;;;;;;;;;;;-1:-1:-1;;;;;4281:54:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4060:282:54:o;156:23:50:-;;;-1:-1:-1;;;;;156:23:50;;:::o;2608:345:54:-;2672:21;2696:8;2705:4;2696:14;;;;;;;;;;;;;;;;2744;;;:8;:14;;;;;;2759:10;2744:26;;;;;;;;;2696:14;;;;;;;2781:10;;:68;;-1:-1:-1;;;2781:68:54;;;;;;;;;2834:4;2781:68;;;;;;;;;;;;2696:14;;-1:-1:-1;2744:26:54;;-1:-1:-1;;;;;2781:10:54;;;;;:23;;:68;;;;;2696:14;;2781:68;;;;;;;;:10;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2873:11:54;;:24;;2889:7;2873:15;:24::i;:::-;2859:38;;2912:34;;;;;;;;2932:4;;2920:10;;2912:34;;;;;;;;;2608:345;;;;:::o;742:118:50:-;813:9;:7;:9::i;:::-;805:18;;;;;;833:8;:20;;-1:-1:-1;;;;;;833:20:50;-1:-1:-1;;;;;833:20:50;;;;;;;;;;742:118::o;512:134:51:-;570:7;596:43;600:1;603;596:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;589:50;512:134;-1:-1:-1;;;512:134:51:o;349:209:50:-;413:11;;-1:-1:-1;;;413:11:50;;;;412:12;404:21;;;;;;435:6;:33;;-1:-1:-1;;;;;;;;;435:33:50;;;-1:-1:-1;;;;;;435:33:50;;;;;;;478:18;-1:-1:-1;;;478:18:50;;;;511:40;;544:6;;;435;511:40;;435:6;;511:40;349:209;:::o;332:175:51:-;390:7;421:5;;;444:6;;;;436:46;;;;;-1:-1:-1;;;436:46:51;;;;;;;;;;;;;;;;;;;;;;;;;;;651:186;737:7;772:12;764:6;;;;756:29;;;;-1:-1:-1;;;756:29:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;807:5:51;;;651:186::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    188,
    4503
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA87980E7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA87980E7 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xBB9289A6 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x330 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x26F JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x5207CC0D GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x5207CC0D EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x57283E22 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x69AC5721 EQ PUSH2 0x221 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x16279055 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x4C462771 EQ PUSH2 0x1B4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x356 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x396 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x39C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0x56B JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x576 JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x71B JUMP JUMPDEST PUSH2 0x229 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x24B PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x809 JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x826 JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x99A JUMP JUMPDEST PUSH2 0x24B PUSH2 0xA45 JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x363 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP3 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP4 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3AB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD69 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD8A PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP4 GT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD41 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x4AD SWAP1 DUP5 PUSH2 0xB91 JUMP JUMPDEST DUP2 SSTORE DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x574 CALLER PUSH2 0xBDA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x57E PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x595 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5D2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x642 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177696E672066726F6D20706F6F6C2064697361626C65640000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP5 DUP2 SSTORE DUP6 SLOAD DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP6 ADD SWAP5 SWAP3 SWAP4 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP5 SWAP2 CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x723 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x73B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH2 0x75E DUP3 TIMESTAMP PUSH2 0xC4F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x82E PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x843 TIMESTAMP DUP4 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8E0 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x86B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F7220706F6F6C20616C72656164792061646465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x84C JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x20 DUP6 ADD SWAP1 DUP2 MSTORE SWAP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE SWAP4 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x2 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD DUP1 SLOAD SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP7 AND OR PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SWAP4 SSTORE POP SWAP1 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH2 0x9A2 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x9AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B4 DUP2 PUSH2 0x396 JUMP JUMPDEST PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA63 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP1 DUP5 MSTORE DUP2 DUP7 KECCAK256 PUSH1 0x2 SWAP1 SWAP6 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP3 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD DUP10 SWAP1 MSTORE SWAP2 MLOAD SWAP1 SWAP7 POP SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP4 PUSH4 0x23B872DD SWAP4 PUSH1 0x64 DUP1 DUP6 ADD SWAP5 SWAP2 SWAP4 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 SLOAD PUSH2 0xB1F SWAP1 DUP5 PUSH2 0xC4F JUMP JUMPDEST DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xB66 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xCA9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP1 DUP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCFD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCE5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD2A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP INVALID PUSH24 0x697468647261773A20756E73756666696369656E74206675 PUSH15 0x647320696E2074686520706F6F6C57 PUSH10 0x746864726177696E6720 PUSH7 0x726F6D20706F6F PUSH13 0x2069732064697361626C656454 PUSH10 0x6D656C6F636B3A204675 PUSH15 0x64732063616E6E6F74206265207769 PUSH21 0x68647261776E20796574A264697066735822122014 PUSH10 0x6771AF4EAE09A0B9019D 0xAC SWAP10 PUSH4 0x8C881F3 0xDB 0xBA DUP7 XOR 0xEF COINBASE 0xB5 0xE EQ MSTORE PUSH20 0xFACA64736F6C634300060C003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        188,
        4503
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "5": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "CALLVALUE",
      "path": "54"
    },
    "6": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "7": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "8": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "12": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "REVERT",
      "path": "54"
    },
    "16": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "17": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "POP",
      "path": "54"
    },
    "18": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "CALLDATASIZE",
      "path": "54"
    },
    "21": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "LT",
      "path": "54"
    },
    "22": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x10B"
    },
    "25": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "26": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "29": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "SHR",
      "path": "54"
    },
    "32": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "33": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x79BA5097"
    },
    "38": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "GT",
      "path": "54"
    },
    "39": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "43": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "44": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0xA87980E7"
    },
    "49": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "GT",
      "path": "54"
    },
    "50": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "54": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "55": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0xA87980E7"
    },
    "60": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "61": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x29B"
    },
    "64": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "65": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "66": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0xBB9289A6"
    },
    "71": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "72": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x2CF"
    },
    "75": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "76": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "77": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0xD4EE1D90"
    },
    "82": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "83": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x305"
    },
    "86": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "87": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "88": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0xE2BBB158"
    },
    "93": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "94": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x30D"
    },
    "97": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "98": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "99": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "105": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x330"
    },
    "108": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "109": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x10B"
    },
    "112": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMP",
      "path": "54"
    },
    "113": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "114": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "115": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x79BA5097"
    },
    "120": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "121": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x23B"
    },
    "124": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "125": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "126": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "132": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x243"
    },
    "135": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "136": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "137": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x8F32D59B"
    },
    "142": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "143": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x267"
    },
    "146": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "147": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "148": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x93F1A40B"
    },
    "153": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "154": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x26F"
    },
    "157": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "158": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x10B"
    },
    "161": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMP",
      "path": "54"
    },
    "162": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "163": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "164": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x5207CC0D"
    },
    "169": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "GT",
      "path": "54"
    },
    "170": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "174": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "175": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x5207CC0D"
    },
    "180": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "181": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1BC"
    },
    "184": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "185": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "186": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x5312EA8E"
    },
    "191": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "192": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1E1"
    },
    "195": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "196": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "197": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x57283E22"
    },
    "202": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "203": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1FE"
    },
    "206": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "207": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "208": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x69AC5721"
    },
    "213": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "214": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x221"
    },
    "217": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "218": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x10B"
    },
    "221": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMP",
      "path": "54"
    },
    "222": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "223": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "224": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x1526FE27"
    },
    "229": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "230": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x110"
    },
    "233": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "234": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "235": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x16279055"
    },
    "240": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "241": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x155"
    },
    "244": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "245": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "246": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x441A3E70"
    },
    "251": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "252": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x18F"
    },
    "255": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "256": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "257": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x4C462771"
    },
    "262": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "EQ",
      "path": "54"
    },
    "263": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1B4"
    },
    "266": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "267": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "268": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "270": {
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "DUP1",
      "path": "54"
    },
    "271": {
      "first_revert": true,
      "fn": null,
      "offset": [
        188,
        4503
      ],
      "op": "REVERT",
      "path": "54"
    },
    "272": {
      "offset": [
        1147,
        1173
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "273": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x12D"
    },
    "276": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "278": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "DUP1",
      "path": "54"
    },
    "279": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "CALLDATASIZE",
      "path": "54"
    },
    "280": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "SUB",
      "path": "54"
    },
    "281": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "283": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "DUP2",
      "path": "54"
    },
    "284": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "LT",
      "path": "54"
    },
    "285": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "286": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x126"
    },
    "289": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "290": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "292": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "DUP1",
      "path": "54"
    },
    "293": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "REVERT",
      "path": "54"
    },
    "294": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "295": {
      "op": "POP"
    },
    "296": {
      "offset": [
        1147,
        1173
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "297": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x356"
    },
    "300": {
      "fn": null,
      "jump": "i",
      "offset": [
        1147,
        1173
      ],
      "op": "JUMP",
      "path": "54"
    },
    "301": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "302": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "304": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "DUP1",
      "path": "54"
    },
    "305": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "312": {
      "op": "SHL"
    },
    "313": {
      "op": "SUB"
    },
    "314": {
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "315": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP5",
      "path": "54"
    },
    "316": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "AND",
      "path": "54"
    },
    "317": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "DUP5",
      "path": "54"
    },
    "318": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "319": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "320": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "321": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "322": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "324": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "DUP5",
      "path": "54"
    },
    "325": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "ADD",
      "path": "54"
    },
    "326": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "327": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "DUP3",
      "path": "54"
    },
    "328": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "DUP3",
      "path": "54"
    },
    "329": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "ADD",
      "path": "54"
    },
    "330": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "331": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "332": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "333": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "DUP2",
      "path": "54"
    },
    "334": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "335": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "SUB",
      "path": "54"
    },
    "336": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x60"
    },
    "338": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "ADD",
      "path": "54"
    },
    "339": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "340": {
      "fn": null,
      "offset": [
        1147,
        1173
      ],
      "op": "RETURN",
      "path": "54"
    },
    "341": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "342": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x17B"
    },
    "345": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "DUP1",
      "path": "54"
    },
    "348": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "CALLDATASIZE",
      "path": "54"
    },
    "349": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "SUB",
      "path": "54"
    },
    "350": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "352": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "DUP2",
      "path": "54"
    },
    "353": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "LT",
      "path": "54"
    },
    "354": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "355": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x16B"
    },
    "358": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "359": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "361": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "DUP1",
      "path": "54"
    },
    "362": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "REVERT",
      "path": "54"
    },
    "363": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "364": {
      "op": "POP"
    },
    "365": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "372": {
      "op": "SHL"
    },
    "373": {
      "op": "SUB"
    },
    "374": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "AND",
      "path": "54"
    },
    "375": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x396"
    },
    "378": {
      "fn": "ERC20Vault.isContract",
      "jump": "i",
      "offset": [
        4348,
        4500
      ],
      "op": "JUMP",
      "path": "54"
    },
    "379": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "380": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "382": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "DUP1",
      "path": "54"
    },
    "383": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "384": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "385": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "386": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "387": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "DUP3",
      "path": "54"
    },
    "388": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "389": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "390": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "391": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "DUP2",
      "path": "54"
    },
    "392": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "393": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "SUB",
      "path": "54"
    },
    "394": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "396": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "ADD",
      "path": "54"
    },
    "397": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "398": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "RETURN",
      "path": "54"
    },
    "399": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "400": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1B2"
    },
    "403": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "405": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "DUP1",
      "path": "54"
    },
    "406": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "CALLDATASIZE",
      "path": "54"
    },
    "407": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "SUB",
      "path": "54"
    },
    "408": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "410": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "DUP2",
      "path": "54"
    },
    "411": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "LT",
      "path": "54"
    },
    "412": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "413": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1A5"
    },
    "416": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "417": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "419": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "DUP1",
      "path": "54"
    },
    "420": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "REVERT",
      "path": "54"
    },
    "421": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "422": {
      "op": "POP"
    },
    "423": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "DUP1",
      "path": "54"
    },
    "424": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "425": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "426": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "428": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "ADD",
      "path": "54"
    },
    "429": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "430": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x39C"
    },
    "433": {
      "fn": "ERC20Vault.withdraw",
      "jump": "i",
      "offset": [
        2959,
        3522
      ],
      "op": "JUMP",
      "path": "54"
    },
    "434": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "435": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "STOP",
      "path": "54"
    },
    "436": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1180,
        1293
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "437": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1180,
        1293
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1B2"
    },
    "440": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1180,
        1293
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x56B"
    },
    "443": {
      "fn": "ERC20Vault.initERC20Vault",
      "jump": "i",
      "offset": [
        1180,
        1293
      ],
      "op": "JUMP",
      "path": "54"
    },
    "444": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "445": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1B2"
    },
    "448": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "450": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "DUP1",
      "path": "54"
    },
    "451": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "CALLDATASIZE",
      "path": "54"
    },
    "452": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "SUB",
      "path": "54"
    },
    "453": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "455": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "DUP2",
      "path": "54"
    },
    "456": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "LT",
      "path": "54"
    },
    "457": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "458": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1D2"
    },
    "461": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "462": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "464": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "DUP1",
      "path": "54"
    },
    "465": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "REVERT",
      "path": "54"
    },
    "466": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "467": {
      "op": "POP"
    },
    "468": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "DUP1",
      "path": "54"
    },
    "469": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "470": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "471": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "473": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "ADD",
      "path": "54"
    },
    "474": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "475": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "476": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "477": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x576"
    },
    "480": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "jump": "i",
      "offset": [
        2163,
        2327
      ],
      "op": "JUMP",
      "path": "54"
    },
    "481": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "482": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1B2"
    },
    "485": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "487": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "DUP1",
      "path": "54"
    },
    "488": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "CALLDATASIZE",
      "path": "54"
    },
    "489": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "SUB",
      "path": "54"
    },
    "490": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "492": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "DUP2",
      "path": "54"
    },
    "493": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "LT",
      "path": "54"
    },
    "494": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "495": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1F7"
    },
    "498": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "499": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "501": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "DUP1",
      "path": "54"
    },
    "502": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "REVERT",
      "path": "54"
    },
    "503": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "504": {
      "op": "POP"
    },
    "505": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "506": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x5C3"
    },
    "509": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "jump": "i",
      "offset": [
        3558,
        3931
      ],
      "op": "JUMP",
      "path": "54"
    },
    "510": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "511": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1B2"
    },
    "514": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "516": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "DUP1",
      "path": "54"
    },
    "517": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "CALLDATASIZE",
      "path": "54"
    },
    "518": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "SUB",
      "path": "54"
    },
    "519": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "521": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "DUP2",
      "path": "54"
    },
    "522": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "LT",
      "path": "54"
    },
    "523": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "524": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x214"
    },
    "527": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "528": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "530": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "DUP1",
      "path": "54"
    },
    "531": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "REVERT",
      "path": "54"
    },
    "532": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "533": {
      "op": "POP"
    },
    "534": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "DUP1",
      "path": "54"
    },
    "535": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "536": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "537": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "539": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "ADD",
      "path": "54"
    },
    "540": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "541": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x71B"
    },
    "544": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "jump": "i",
      "offset": [
        2366,
        2570
      ],
      "op": "JUMP",
      "path": "54"
    },
    "545": {
      "offset": [
        259,
        284
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "546": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x229"
    },
    "549": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x768"
    },
    "552": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "jump": "i",
      "offset": [
        259,
        284
      ],
      "op": "JUMP",
      "path": "54"
    },
    "553": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "554": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "556": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "DUP1",
      "path": "54"
    },
    "557": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "558": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "559": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "DUP3",
      "path": "54"
    },
    "560": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "561": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "562": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "563": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "DUP2",
      "path": "54"
    },
    "564": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "565": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "SUB",
      "path": "54"
    },
    "566": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "568": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "ADD",
      "path": "54"
    },
    "569": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "570": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "RETURN",
      "path": "54"
    },
    "571": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "572": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1B2"
    },
    "575": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x76E"
    },
    "578": {
      "fn": "Owned.acceptOwnership",
      "jump": "i",
      "offset": [
        866,
        1077
      ],
      "op": "JUMP",
      "path": "50"
    },
    "579": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "580": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x24B"
    },
    "583": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7E9"
    },
    "586": {
      "fn": "Owned.owner",
      "jump": "i",
      "offset": [
        564,
        641
      ],
      "op": "JUMP",
      "path": "50"
    },
    "587": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "588": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "590": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "DUP1",
      "path": "50"
    },
    "591": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "598": {
      "op": "SHL"
    },
    "599": {
      "op": "SUB"
    },
    "600": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "601": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "602": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "AND",
      "path": "50"
    },
    "603": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "DUP3",
      "path": "50"
    },
    "604": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "605": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "606": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "607": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "DUP2",
      "path": "50"
    },
    "608": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "609": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SUB",
      "path": "50"
    },
    "610": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "612": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "ADD",
      "path": "50"
    },
    "613": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "614": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "RETURN",
      "path": "50"
    },
    "615": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "616": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17B"
    },
    "619": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7F8"
    },
    "622": {
      "fn": "Owned.isOwner",
      "jump": "i",
      "offset": [
        646,
        736
      ],
      "op": "JUMP",
      "path": "50"
    },
    "623": {
      "offset": [
        1050,
        1114
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "624": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x229"
    },
    "627": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "629": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "DUP1",
      "path": "54"
    },
    "630": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "CALLDATASIZE",
      "path": "54"
    },
    "631": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "SUB",
      "path": "54"
    },
    "632": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "634": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "DUP2",
      "path": "54"
    },
    "635": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "LT",
      "path": "54"
    },
    "636": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "637": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x285"
    },
    "640": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "641": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "643": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "DUP1",
      "path": "54"
    },
    "644": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "REVERT",
      "path": "54"
    },
    "645": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "646": {
      "op": "POP"
    },
    "647": {
      "offset": [
        1050,
        1114
      ],
      "op": "DUP1",
      "path": "54"
    },
    "648": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "649": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "650": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "652": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "ADD",
      "path": "54"
    },
    "653": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "660": {
      "op": "SHL"
    },
    "661": {
      "op": "SUB"
    },
    "662": {
      "offset": [
        1050,
        1114
      ],
      "op": "AND",
      "path": "54"
    },
    "663": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x809"
    },
    "666": {
      "fn": "Owned.isOwner",
      "jump": "i",
      "offset": [
        1050,
        1114
      ],
      "op": "JUMP",
      "path": "54"
    },
    "667": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "668": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1B2"
    },
    "671": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "673": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "DUP1",
      "path": "54"
    },
    "674": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "CALLDATASIZE",
      "path": "54"
    },
    "675": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "SUB",
      "path": "54"
    },
    "676": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x60"
    },
    "678": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "DUP2",
      "path": "54"
    },
    "679": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "LT",
      "path": "54"
    },
    "680": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "681": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x2B1"
    },
    "684": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "685": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "687": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "DUP1",
      "path": "54"
    },
    "688": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "REVERT",
      "path": "54"
    },
    "689": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "690": {
      "op": "POP"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "op": "SUB"
    },
    "699": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "DUP2",
      "path": "54"
    },
    "700": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "701": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "AND",
      "path": "54"
    },
    "702": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "703": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "705": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "DUP2",
      "path": "54"
    },
    "706": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "ADD",
      "path": "54"
    },
    "707": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "708": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "709": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "710": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "711": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "713": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "ADD",
      "path": "54"
    },
    "714": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "715": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x826"
    },
    "718": {
      "fn": "ERC20Vault.add",
      "jump": "i",
      "offset": [
        1591,
        2094
      ],
      "op": "JUMP",
      "path": "54"
    },
    "719": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "720": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1B2"
    },
    "723": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "725": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "DUP1",
      "path": "54"
    },
    "726": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "CALLDATASIZE",
      "path": "54"
    },
    "727": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "SUB",
      "path": "54"
    },
    "728": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x60"
    },
    "730": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "DUP2",
      "path": "54"
    },
    "731": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "LT",
      "path": "54"
    },
    "732": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "733": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x2E5"
    },
    "736": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "737": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "DUP1",
      "path": "54"
    },
    "740": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "REVERT",
      "path": "54"
    },
    "741": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "742": {
      "op": "POP"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "749": {
      "op": "SHL"
    },
    "750": {
      "op": "SUB"
    },
    "751": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "DUP2",
      "path": "54"
    },
    "752": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "753": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "DUP2",
      "path": "54"
    },
    "754": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "AND",
      "path": "54"
    },
    "755": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "756": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "758": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "DUP2",
      "path": "54"
    },
    "759": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "ADD",
      "path": "54"
    },
    "760": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "761": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "762": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "764": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "765": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "766": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "ADD",
      "path": "54"
    },
    "767": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "768": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "AND",
      "path": "54"
    },
    "769": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x99A"
    },
    "772": {
      "fn": "ERC20Vault.setContractAllowance",
      "jump": "i",
      "offset": [
        4060,
        4342
      ],
      "op": "JUMP",
      "path": "54"
    },
    "773": {
      "offset": [
        156,
        179
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "774": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        156,
        179
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x24B"
    },
    "777": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        156,
        179
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xA45"
    },
    "780": {
      "fn": "ERC20Vault.setContractAllowance",
      "jump": "i",
      "offset": [
        156,
        179
      ],
      "op": "JUMP",
      "path": "50"
    },
    "781": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "782": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x1B2"
    },
    "785": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "787": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "DUP1",
      "path": "54"
    },
    "788": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "CALLDATASIZE",
      "path": "54"
    },
    "789": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "SUB",
      "path": "54"
    },
    "790": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "792": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "DUP2",
      "path": "54"
    },
    "793": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "LT",
      "path": "54"
    },
    "794": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "795": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x323"
    },
    "798": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "799": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "801": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "DUP1",
      "path": "54"
    },
    "802": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "REVERT",
      "path": "54"
    },
    "803": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "DUP1",
      "path": "54"
    },
    "806": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "807": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "808": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "810": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "ADD",
      "path": "54"
    },
    "811": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "CALLDATALOAD",
      "path": "54"
    },
    "812": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xA54"
    },
    "815": {
      "fn": "ERC20Vault.deposit",
      "jump": "i",
      "offset": [
        2608,
        2953
      ],
      "op": "JUMP",
      "path": "54"
    },
    "816": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "817": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1B2"
    },
    "820": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "822": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP1",
      "path": "50"
    },
    "823": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "824": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "SUB",
      "path": "50"
    },
    "825": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "827": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP2",
      "path": "50"
    },
    "828": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "LT",
      "path": "50"
    },
    "829": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "830": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x346"
    },
    "833": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "834": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "836": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP1",
      "path": "50"
    },
    "837": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "REVERT",
      "path": "50"
    },
    "838": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "839": {
      "op": "POP"
    },
    "840": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "CALLDATALOAD",
      "path": "50"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "847": {
      "op": "SHL"
    },
    "848": {
      "op": "SUB"
    },
    "849": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "AND",
      "path": "50"
    },
    "850": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xB5E"
    },
    "853": {
      "fn": "Owned.transferOwnership",
      "jump": "i",
      "offset": [
        742,
        860
      ],
      "op": "JUMP",
      "path": "50"
    },
    "854": {
      "offset": [
        1147,
        1173
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "855": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "857": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "DUP2",
      "path": "54"
    },
    "858": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "DUP2",
      "path": "54"
    },
    "859": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "860": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "DUP2",
      "path": "54"
    },
    "861": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "LT",
      "path": "54"
    },
    "862": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x363"
    },
    "865": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "866": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "INVALID",
      "path": "54"
    },
    "867": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "868": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "870": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "871": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "DUP3",
      "path": "54"
    },
    "872": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "873": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "875": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "876": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "877": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "878": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x2"
    },
    "880": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "881": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "882": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "MUL",
      "path": "54"
    },
    "883": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "ADD",
      "path": "54"
    },
    "884": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "DUP1",
      "path": "54"
    },
    "885": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "886": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x1"
    },
    "888": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "889": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "890": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "ADD",
      "path": "54"
    },
    "891": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "898": {
      "op": "SHL"
    },
    "899": {
      "op": "SUB"
    },
    "900": {
      "offset": [
        1147,
        1173
      ],
      "op": "DUP3",
      "path": "54"
    },
    "901": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "AND",
      "path": "54"
    },
    "902": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP3",
      "path": "54"
    },
    "903": {
      "op": "POP"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "910": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "911": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "DIV",
      "path": "54"
    },
    "912": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0xFF"
    },
    "914": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "AND",
      "path": "54"
    },
    "915": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "916": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1147,
        1173
      ],
      "op": "DUP4",
      "path": "54"
    },
    "917": {
      "fn": "Owned.transferOwnership",
      "jump": "o",
      "offset": [
        1147,
        1173
      ],
      "op": "JUMP",
      "path": "54"
    },
    "918": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4348,
        4500
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "919": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4450,
        4467
      ],
      "op": "EXTCODESIZE",
      "path": "54"
    },
    "920": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4485,
        4493
      ],
      "op": "ISZERO",
      "path": "54",
      "statement": 0
    },
    "921": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4485,
        4493
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "922": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4485,
        4493
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "923": {
      "fn": "ERC20Vault.isContract",
      "jump": "o",
      "offset": [
        4348,
        4500
      ],
      "op": "JUMP",
      "path": "54"
    },
    "924": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "925": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3024,
        3045
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "927": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3056
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "929": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3057,
        3061
      ],
      "op": "DUP4",
      "path": "54"
    },
    "930": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "DUP2",
      "path": "54"
    },
    "931": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "932": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "DUP2",
      "path": "54"
    },
    "933": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "LT",
      "path": "54"
    },
    "934": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x3AB"
    },
    "937": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "938": {
      "dev": "Index out of range",
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "INVALID",
      "path": "54"
    },
    "939": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "940": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "942": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "943": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "DUP3",
      "path": "54"
    },
    "944": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "945": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "947": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "948": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "949": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "950": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x2"
    },
    "952": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "953": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "954": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "MUL",
      "path": "54"
    },
    "955": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "ADD",
      "path": "54"
    },
    "956": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3080,
        3097
      ],
      "op": "DUP1",
      "path": "54",
      "statement": 1
    },
    "957": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3080,
        3097
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "958": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "959": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3048,
        3062
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3080,
        3097
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "967": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3080,
        3097
      ],
      "op": "DIV",
      "path": "54"
    },
    "968": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3080,
        3097
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0xFF"
    },
    "970": {
      "branch": 41,
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3080,
        3097
      ],
      "op": "AND",
      "path": "54"
    },
    "971": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x405"
    },
    "974": {
      "branch": 41,
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "975": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "977": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "978": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "DUP2",
      "path": "54"
    },
    "986": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "987": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "989": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "ADD",
      "path": "54"
    },
    "990": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "DUP1",
      "path": "54"
    },
    "991": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "DUP1",
      "path": "54"
    },
    "992": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "994": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "ADD",
      "path": "54"
    },
    "995": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "DUP3",
      "path": "54"
    },
    "996": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "DUP2",
      "path": "54"
    },
    "997": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "SUB",
      "path": "54"
    },
    "998": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "DUP3",
      "path": "54"
    },
    "999": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1000": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x21"
    },
    "1002": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1003": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1004": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1006": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "ADD",
      "path": "54"
    },
    "1007": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1008": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xD69"
    },
    "1011": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x21"
    },
    "1013": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1014": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "CODECOPY",
      "path": "54"
    },
    "1015": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1017": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "ADD",
      "path": "54"
    },
    "1018": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1019": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "POP",
      "path": "54"
    },
    "1020": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "POP",
      "path": "54"
    },
    "1021": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1023": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1024": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1025": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1026": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "SUB",
      "path": "54"
    },
    "1027": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1028": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "REVERT",
      "path": "54"
    },
    "1029": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3072,
        3135
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1030": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3160,
        3164
      ],
      "op": "DUP1",
      "path": "54",
      "statement": 2
    },
    "1031": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3160,
        3172
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x1"
    },
    "1033": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3160,
        3172
      ],
      "op": "ADD",
      "path": "54"
    },
    "1034": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3160,
        3172
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "1035": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3153,
        3156
      ],
      "op": "TIMESTAMP",
      "path": "54"
    },
    "1036": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3153,
        3172
      ],
      "op": "LT",
      "path": "54"
    },
    "1037": {
      "branch": 42,
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3153,
        3172
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1038": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x448"
    },
    "1041": {
      "branch": 42,
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1042": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1044": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1053": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1054": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "1056": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "ADD",
      "path": "54"
    },
    "1057": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1058": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1059": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1061": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "ADD",
      "path": "54"
    },
    "1062": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1063": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1064": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "SUB",
      "path": "54"
    },
    "1065": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1066": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1067": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x27"
    },
    "1069": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1070": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1071": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1073": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "ADD",
      "path": "54"
    },
    "1074": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1075": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xD8A"
    },
    "1078": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x27"
    },
    "1080": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1081": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "CODECOPY",
      "path": "54"
    },
    "1082": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1084": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "ADD",
      "path": "54"
    },
    "1085": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1086": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "POP",
      "path": "54"
    },
    "1087": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "POP",
      "path": "54"
    },
    "1088": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1090": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1091": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1092": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1093": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "SUB",
      "path": "54"
    },
    "1094": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1095": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "REVERT",
      "path": "54"
    },
    "1096": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3145,
        3216
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1097": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3247
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1099": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3264
      ],
      "op": "DUP4",
      "path": "54"
    },
    "1100": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3264
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1101": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3264
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1102": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3258
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x3"
    },
    "1104": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3264
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1106": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3264
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1107": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3264
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1108": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3264
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1109": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3264
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1111": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3264
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1112": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3264
      ],
      "op": "DUP4",
      "path": "54"
    },
    "1113": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3264
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "1114": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3265,
        3275
      ],
      "op": "CALLER",
      "path": "54"
    },
    "1115": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3276
      ],
      "op": "DUP5",
      "path": "54"
    },
    "1116": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3276
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1117": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3276
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1118": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3276
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1119": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3276
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1120": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3276
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1121": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3250,
        3276
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "1122": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3294,
        3305
      ],
      "op": "DUP1",
      "path": "54",
      "statement": 3
    },
    "1123": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3294,
        3305
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "1124": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3294,
        3315
      ],
      "op": "DUP4",
      "path": "54"
    },
    "1125": {
      "op": "GT"
    },
    "1126": {
      "branch": 43,
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3294,
        3315
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1127": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x4A1"
    },
    "1130": {
      "branch": 43,
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1131": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1133": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1140": {
      "op": "SHL"
    },
    "1141": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1142": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1143": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "1145": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "ADD",
      "path": "54"
    },
    "1146": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1147": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1148": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1150": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "ADD",
      "path": "54"
    },
    "1151": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1152": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1153": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "SUB",
      "path": "54"
    },
    "1154": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1155": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1156": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x28"
    },
    "1158": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1159": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1160": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1162": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "ADD",
      "path": "54"
    },
    "1163": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1164": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xD41"
    },
    "1167": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x28"
    },
    "1169": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1170": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "CODECOPY",
      "path": "54"
    },
    "1171": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1173": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "ADD",
      "path": "54"
    },
    "1174": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1175": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "POP",
      "path": "54"
    },
    "1176": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "POP",
      "path": "54"
    },
    "1177": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1179": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1180": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1181": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1182": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "SUB",
      "path": "54"
    },
    "1183": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1184": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "REVERT",
      "path": "54"
    },
    "1185": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3286,
        3359
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1186": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3383,
        3394
      ],
      "op": "DUP1",
      "path": "54",
      "statement": 4
    },
    "1187": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3383,
        3394
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "1188": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3383,
        3407
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x4AD"
    },
    "1191": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3383,
        3407
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1192": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3399,
        3406
      ],
      "op": "DUP5",
      "path": "54"
    },
    "1193": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3383,
        3398
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xB91"
    },
    "1196": {
      "fn": "ERC20Vault.withdraw",
      "jump": "i",
      "offset": [
        3383,
        3407
      ],
      "op": "JUMP",
      "path": "54"
    },
    "1197": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3383,
        3407
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1198": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3369,
        3407
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1199": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3369,
        3407
      ],
      "op": "SSTORE",
      "path": "54"
    },
    "1200": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3427
      ],
      "op": "DUP2",
      "path": "54",
      "statement": 5
    },
    "1201": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3427
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "1202": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1204": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1205": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1206": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1213": {
      "op": "SHL"
    },
    "1214": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1215": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1216": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3445,
        3455
      ],
      "op": "CALLER",
      "path": "54"
    },
    "1217": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "1219": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1220": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "ADD",
      "path": "54"
    },
    "1221": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1222": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x24"
    },
    "1224": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1225": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "ADD",
      "path": "54"
    },
    "1226": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP7",
      "path": "54"
    },
    "1227": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1228": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1229": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1230": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "op": "SUB"
    },
    "1239": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3427
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1240": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3427
      ],
      "op": "SWAP3",
      "path": "54"
    },
    "1241": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3427
      ],
      "op": "AND",
      "path": "54"
    },
    "1242": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3427
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1243": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3436
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0xA9059CBB"
    },
    "1248": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3436
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1249": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x44"
    },
    "1251": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1252": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1253": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "ADD",
      "path": "54"
    },
    "1254": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "SWAP3",
      "path": "54"
    },
    "1255": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1257": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "SWAP3",
      "path": "54"
    },
    "1258": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1259": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1260": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1261": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1262": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1263": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "SUB",
      "path": "54"
    },
    "1264": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "ADD",
      "path": "54"
    },
    "1265": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1266": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3369,
        3380
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1268": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3427
      ],
      "op": "DUP8",
      "path": "54"
    },
    "1269": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1270": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "EXTCODESIZE",
      "path": "54"
    },
    "1271": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1272": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1273": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1274": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x502"
    },
    "1277": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1278": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1280": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1281": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "REVERT",
      "path": "54"
    },
    "1282": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1283": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "POP",
      "path": "54"
    },
    "1284": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "GAS",
      "path": "54"
    },
    "1285": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "CALL",
      "path": "54"
    },
    "1286": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1287": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1288": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1289": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x516"
    },
    "1292": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1293": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "RETURNDATASIZE",
      "path": "54"
    },
    "1294": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1296": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1297": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "RETURNDATACOPY",
      "path": "54"
    },
    "1298": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "RETURNDATASIZE",
      "path": "54"
    },
    "1299": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1301": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "REVERT",
      "path": "54"
    },
    "1302": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1303": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "POP",
      "path": "54"
    },
    "1304": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "POP",
      "path": "54"
    },
    "1305": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "POP",
      "path": "54"
    },
    "1306": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "POP",
      "path": "54"
    },
    "1307": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1309": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1310": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "RETURNDATASIZE",
      "path": "54"
    },
    "1311": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1313": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1314": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "LT",
      "path": "54"
    },
    "1315": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1316": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x52C"
    },
    "1319": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1320": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1322": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1323": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "REVERT",
      "path": "54"
    },
    "1324": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "op": "POP"
    },
    "1327": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "PUSH1",
      "path": "54",
      "statement": 6,
      "value": "0x40"
    },
    "1329": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1330": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1331": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "DUP5",
      "path": "54"
    },
    "1332": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1333": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1334": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1335": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1336": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3501,
        3505
      ],
      "op": "DUP6",
      "path": "54"
    },
    "1337": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3501,
        3505
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1338": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3489,
        3499
      ],
      "op": "CALLER",
      "path": "54"
    },
    "1339": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3489,
        3499
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1340": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "PUSH32",
      "path": "54",
      "value": "0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
    },
    "1373": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1374": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1375": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1376": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "SUB",
      "path": "54"
    },
    "1377": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3417,
        3465
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1379": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "ADD",
      "path": "54"
    },
    "1380": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1381": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3480,
        3515
      ],
      "op": "LOG3",
      "path": "54"
    },
    "1382": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "POP",
      "path": "54"
    },
    "1383": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "POP",
      "path": "54"
    },
    "1384": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "POP",
      "path": "54"
    },
    "1385": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2959,
        3522
      ],
      "op": "POP",
      "path": "54"
    },
    "1386": {
      "fn": "ERC20Vault.withdraw",
      "jump": "o",
      "offset": [
        2959,
        3522
      ],
      "op": "JUMP",
      "path": "54"
    },
    "1387": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1180,
        1293
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1388": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1222,
        1246
      ],
      "op": "PUSH2",
      "path": "54",
      "statement": 7,
      "value": "0x574"
    },
    "1391": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1234,
        1244
      ],
      "op": "CALLER",
      "path": "54"
    },
    "1392": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1222,
        1232
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xBDA"
    },
    "1395": {
      "fn": "ERC20Vault.initERC20Vault",
      "jump": "i",
      "offset": [
        1222,
        1246
      ],
      "op": "JUMP",
      "path": "54"
    },
    "1396": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1222,
        1246
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1397": {
      "fn": "ERC20Vault.initERC20Vault",
      "jump": "o",
      "offset": [
        1180,
        1293
      ],
      "op": "JUMP",
      "path": "54"
    },
    "1398": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2163,
        2327
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1399": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2257,
        2266
      ],
      "op": "PUSH2",
      "path": "54",
      "statement": 8,
      "value": "0x57E"
    },
    "1402": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2257,
        2264
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x7F8"
    },
    "1405": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "jump": "i",
      "offset": [
        2257,
        2266
      ],
      "op": "JUMP",
      "path": "54"
    },
    "1406": {
      "branch": 44,
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2257,
        2266
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1407": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2249,
        2267
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x587"
    },
    "1410": {
      "branch": 44,
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2249,
        2267
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1411": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2249,
        2267
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1413": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2249,
        2267
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1414": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2249,
        2267
      ],
      "op": "REVERT",
      "path": "54"
    },
    "1415": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2249,
        2267
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1416": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2307,
        2320
      ],
      "op": "DUP1",
      "path": "54",
      "statement": 9
    },
    "1417": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2285
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "1419": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2286,
        2290
      ],
      "op": "DUP4",
      "path": "54"
    },
    "1420": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1421": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "1422": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1423": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "LT",
      "path": "54"
    },
    "1424": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x595"
    },
    "1427": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1428": {
      "dev": "Index out of range",
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "INVALID",
      "path": "54"
    },
    "1429": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1430": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1432": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1433": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1434": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1435": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1437": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1438": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1439": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "1440": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x2"
    },
    "1442": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1443": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1444": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "MUL",
      "path": "54"
    },
    "1445": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2291
      ],
      "op": "ADD",
      "path": "54"
    },
    "1446": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1447": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "1448": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1449": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1450": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "MUL",
      "path": "54"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "op": "NOT"
    },
    "1463": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1464": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "SWAP3",
      "path": "54"
    },
    "1465": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "AND",
      "path": "54"
    },
    "1466": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1467": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1468": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1469": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "OR",
      "path": "54"
    },
    "1470": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1471": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2277,
        2320
      ],
      "op": "SSTORE",
      "path": "54"
    },
    "1472": {
      "op": "POP"
    },
    "1473": {
      "op": "POP"
    },
    "1474": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "jump": "o",
      "offset": [
        2163,
        2327
      ],
      "op": "JUMP",
      "path": "54"
    },
    "1475": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1476": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3616,
        3637
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1478": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3648
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "1480": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3649,
        3653
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1481": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1482": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "1483": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1484": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "LT",
      "path": "54"
    },
    "1485": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x5D2"
    },
    "1488": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1489": {
      "dev": "Index out of range",
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "INVALID",
      "path": "54"
    },
    "1490": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1491": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1493": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1494": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1495": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1496": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1498": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1499": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1500": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "1501": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x2"
    },
    "1503": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1504": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1505": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "MUL",
      "path": "54"
    },
    "1506": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "ADD",
      "path": "54"
    },
    "1507": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3672,
        3689
      ],
      "op": "DUP1",
      "path": "54",
      "statement": 10
    },
    "1508": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3672,
        3689
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "1509": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1510": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3640,
        3654
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1511": {
      "op": "POP"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3672,
        3689
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1518": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3672,
        3689
      ],
      "op": "DIV",
      "path": "54"
    },
    "1519": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3672,
        3689
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0xFF"
    },
    "1521": {
      "branch": 45,
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3672,
        3689
      ],
      "op": "AND",
      "path": "54"
    },
    "1522": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x642"
    },
    "1525": {
      "branch": 45,
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1526": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1528": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1529": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1536": {
      "op": "SHL"
    },
    "1537": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1538": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1539": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1541": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "1543": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1544": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "ADD",
      "path": "54"
    },
    "1545": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1546": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x1E"
    },
    "1548": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x24"
    },
    "1550": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1551": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "ADD",
      "path": "54"
    },
    "1552": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1553": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "PUSH32",
      "path": "54",
      "value": "0x5769746864726177696E672066726F6D20706F6F6C2064697361626C65640000"
    },
    "1586": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x44"
    },
    "1588": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1589": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "ADD",
      "path": "54"
    },
    "1590": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1591": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1592": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1593": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1594": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1595": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1596": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "SUB",
      "path": "54"
    },
    "1597": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x64"
    },
    "1599": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "ADD",
      "path": "54"
    },
    "1600": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1601": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "REVERT",
      "path": "54"
    },
    "1602": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3664,
        3723
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1603": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3733,
        3754
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1605": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1606": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1607": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1608": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3765
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x3"
    },
    "1610": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1612": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1613": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1614": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1615": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1617": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1618": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "DUP4",
      "path": "54"
    },
    "1619": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "1620": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3772,
        3782
      ],
      "op": "CALLER",
      "path": "54"
    },
    "1621": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3783
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1622": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3783
      ],
      "op": "DUP6",
      "path": "54"
    },
    "1623": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3783
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1624": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3783
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1625": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3783
      ],
      "op": "DUP4",
      "path": "54"
    },
    "1626": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3783
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1627": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3783
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1628": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3783
      ],
      "op": "DUP5",
      "path": "54"
    },
    "1629": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3783
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "1630": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3793,
        3808
      ],
      "op": "DUP5",
      "path": "54",
      "statement": 11
    },
    "1631": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3793,
        3808
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1632": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3793,
        3808
      ],
      "op": "SSTORE",
      "path": "54"
    },
    "1633": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3828
      ],
      "op": "DUP6",
      "path": "54",
      "statement": 12
    },
    "1634": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3828
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "1635": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP4",
      "path": "54"
    },
    "1636": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1637": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1644": {
      "op": "SHL"
    },
    "1645": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1646": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1647": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "1649": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1650": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "ADD",
      "path": "54"
    },
    "1651": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "1652": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1653": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "1654": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1655": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x24"
    },
    "1657": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP4",
      "path": "54"
    },
    "1658": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "ADD",
      "path": "54"
    },
    "1659": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP7",
      "path": "54"
    },
    "1660": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1661": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1662": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "SWAP3",
      "path": "54"
    },
    "1663": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1664": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3783
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1665": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3783
      ],
      "op": "SWAP5",
      "path": "54"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1672": {
      "op": "SHL"
    },
    "1673": {
      "op": "SUB"
    },
    "1674": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3828
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1675": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3828
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "1676": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3828
      ],
      "op": "AND",
      "path": "54"
    },
    "1677": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3828
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "1678": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3837
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0xA9059CBB"
    },
    "1683": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3837
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "1684": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x44"
    },
    "1686": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1687": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP6",
      "path": "54"
    },
    "1688": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "ADD",
      "path": "54"
    },
    "1689": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "SWAP5",
      "path": "54"
    },
    "1690": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "SWAP3",
      "path": "54"
    },
    "1691": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3757,
        3771
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "1692": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "SWAP3",
      "path": "54"
    },
    "1693": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP4",
      "path": "54"
    },
    "1694": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1695": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "SUB",
      "path": "54"
    },
    "1696": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "ADD",
      "path": "54"
    },
    "1697": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1698": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1699": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1700": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3828
      ],
      "op": "DUP8",
      "path": "54"
    },
    "1701": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1702": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "EXTCODESIZE",
      "path": "54"
    },
    "1703": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1704": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1705": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1706": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x6B2"
    },
    "1709": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1710": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1712": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1713": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "REVERT",
      "path": "54"
    },
    "1714": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1715": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "POP",
      "path": "54"
    },
    "1716": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "GAS",
      "path": "54"
    },
    "1717": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "CALL",
      "path": "54"
    },
    "1718": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1719": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1720": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1721": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x6C6"
    },
    "1724": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1725": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "RETURNDATASIZE",
      "path": "54"
    },
    "1726": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1728": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1729": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "RETURNDATACOPY",
      "path": "54"
    },
    "1730": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "RETURNDATASIZE",
      "path": "54"
    },
    "1731": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1733": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "REVERT",
      "path": "54"
    },
    "1734": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1735": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "POP",
      "path": "54"
    },
    "1736": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "POP",
      "path": "54"
    },
    "1737": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "POP",
      "path": "54"
    },
    "1738": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "POP",
      "path": "54"
    },
    "1739": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1741": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1742": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "RETURNDATASIZE",
      "path": "54"
    },
    "1743": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1745": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1746": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "LT",
      "path": "54"
    },
    "1747": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "1748": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x6DC"
    },
    "1751": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1752": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1754": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1755": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "REVERT",
      "path": "54"
    },
    "1756": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1757": {
      "op": "POP"
    },
    "1758": {
      "op": "POP"
    },
    "1759": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3912,
        3923
      ],
      "op": "DUP1",
      "path": "54",
      "statement": 13
    },
    "1760": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3912,
        3923
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "1761": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "1763": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1764": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1765": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1766": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1767": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1768": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "1769": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3906,
        3910
      ],
      "op": "DUP5",
      "path": "54"
    },
    "1770": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3906,
        3910
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1771": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3894,
        3904
      ],
      "op": "CALLER",
      "path": "54"
    },
    "1772": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3894,
        3904
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1773": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "PUSH32",
      "path": "54",
      "value": "0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
    },
    "1806": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1807": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1808": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1809": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "SUB",
      "path": "54"
    },
    "1810": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3818,
        3861
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1812": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "ADD",
      "path": "54"
    },
    "1813": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1814": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3876,
        3924
      ],
      "op": "LOG3",
      "path": "54"
    },
    "1815": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "POP",
      "path": "54"
    },
    "1816": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "POP",
      "path": "54"
    },
    "1817": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3558,
        3931
      ],
      "op": "POP",
      "path": "54"
    },
    "1818": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "jump": "o",
      "offset": [
        3558,
        3931
      ],
      "op": "JUMP",
      "path": "54"
    },
    "1819": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2366,
        2570
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1820": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2450,
        2459
      ],
      "op": "PUSH2",
      "path": "54",
      "statement": 14,
      "value": "0x723"
    },
    "1823": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2450,
        2457
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x7F8"
    },
    "1826": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "jump": "i",
      "offset": [
        2450,
        2459
      ],
      "op": "JUMP",
      "path": "54"
    },
    "1827": {
      "branch": 46,
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2450,
        2459
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1828": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2442,
        2460
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x72C"
    },
    "1831": {
      "branch": 46,
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2442,
        2460
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1832": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2442,
        2460
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1834": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2442,
        2460
      ],
      "op": "DUP1",
      "path": "54"
    },
    "1835": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2442,
        2460
      ],
      "op": "REVERT",
      "path": "54"
    },
    "1836": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2442,
        2460
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1837": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2470,
        2491
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1839": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2502
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "1841": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2503,
        2507
      ],
      "op": "DUP4",
      "path": "54"
    },
    "1842": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1843": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "1844": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1845": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "LT",
      "path": "54"
    },
    "1846": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x73B"
    },
    "1849": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "1850": {
      "dev": "Index out of range",
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "INVALID",
      "path": "54"
    },
    "1851": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1852": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1853": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1855": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "1856": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "1858": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "1860": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "1861": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1862": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x2"
    },
    "1864": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "MUL",
      "path": "54"
    },
    "1865": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2494,
        2508
      ],
      "op": "ADD",
      "path": "54"
    },
    "1866": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2470,
        2508
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1867": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2470,
        2508
      ],
      "op": "POP",
      "path": "54"
    },
    "1868": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2533,
        2563
      ],
      "op": "PUSH2",
      "path": "54",
      "statement": 15,
      "value": "0x75E"
    },
    "1871": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2553,
        2562
      ],
      "op": "DUP3",
      "path": "54"
    },
    "1872": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2533,
        2548
      ],
      "op": "TIMESTAMP",
      "path": "54"
    },
    "1873": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2533,
        2552
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xC4F"
    },
    "1876": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2533,
        2552
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1877": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2533,
        2563
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1878": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2533,
        2563
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1879": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2533,
        2563
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0xFFFFFFFF"
    },
    "1884": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2533,
        2563
      ],
      "op": "AND",
      "path": "54"
    },
    "1885": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "jump": "i",
      "offset": [
        2533,
        2563
      ],
      "op": "JUMP",
      "path": "54"
    },
    "1886": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2533,
        2563
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1887": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x1"
    },
    "1889": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "1890": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "1891": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "54"
    },
    "1892": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2518,
        2563
      ],
      "op": "SSTORE",
      "path": "54"
    },
    "1893": {
      "op": "POP"
    },
    "1894": {
      "op": "POP"
    },
    "1895": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "jump": "o",
      "offset": [
        2366,
        2570
      ],
      "op": "JUMP",
      "path": "54"
    },
    "1896": {
      "offset": [
        259,
        284
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "1897": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x2"
    },
    "1899": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "1900": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        259,
        284
      ],
      "op": "DUP2",
      "path": "54"
    },
    "1901": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "jump": "o",
      "offset": [
        259,
        284
      ],
      "op": "JUMP",
      "path": "54"
    },
    "1902": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1903": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 16,
      "value": "0x1"
    },
    "1905": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1912": {
      "op": "SHL"
    },
    "1913": {
      "op": "SUB"
    },
    "1914": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "AND",
      "path": "50"
    },
    "1915": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        918,
        928
      ],
      "op": "CALLER",
      "path": "50"
    },
    "1916": {
      "branch": 51,
      "fn": "Owned.acceptOwnership",
      "offset": [
        918,
        940
      ],
      "op": "EQ",
      "path": "50"
    },
    "1917": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x785"
    },
    "1920": {
      "branch": 51,
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1921": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1923": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1924": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "REVERT",
      "path": "50"
    },
    "1925": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1926": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 17,
      "value": "0x1"
    },
    "1928": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1929": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1931": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1932": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1933": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1935": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1942": {
      "op": "SHL"
    },
    "1943": {
      "op": "SUB"
    },
    "1944": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1945": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1946": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "AND",
      "path": "50"
    },
    "1947": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1948": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1949": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1950": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "AND",
      "path": "50"
    },
    "1951": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1952": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1985": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1986": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "LOG3",
      "path": "50"
    },
    "1987": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 18,
      "value": "0x1"
    },
    "1989": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1990": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1991": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1993": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1994": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2001": {
      "op": "SHL"
    },
    "2002": {
      "op": "SUB"
    },
    "2003": {
      "op": "NOT"
    },
    "2004": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2005": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2006": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "AND",
      "path": "50"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2013": {
      "op": "SHL"
    },
    "2014": {
      "op": "SUB"
    },
    "2015": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2016": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "AND",
      "path": "50"
    },
    "2017": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "OR",
      "path": "50"
    },
    "2018": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2019": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2020": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "2021": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "AND",
      "path": "50",
      "statement": 19
    },
    "2022": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2023": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "2024": {
      "fn": "Owned.acceptOwnership",
      "jump": "o",
      "offset": [
        866,
        1077
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2025": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2026": {
      "fn": "Owned.owner",
      "offset": [
        602,
        609
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2028": {
      "fn": "Owned.owner",
      "offset": [
        628,
        634
      ],
      "op": "SLOAD",
      "path": "50",
      "statement": 20
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2035": {
      "op": "SHL"
    },
    "2036": {
      "op": "SUB"
    },
    "2037": {
      "fn": "Owned.owner",
      "offset": [
        628,
        634
      ],
      "op": "AND",
      "path": "50"
    },
    "2038": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2039": {
      "fn": "Owned.owner",
      "jump": "o",
      "offset": [
        564,
        641
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2040": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2041": {
      "fn": "Owned.isOwner",
      "offset": [
        686,
        690
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2043": {
      "fn": "Owned.isOwner",
      "offset": [
        723,
        729
      ],
      "op": "SLOAD",
      "path": "50",
      "statement": 21
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "op": "SUB"
    },
    "2052": {
      "fn": "Owned.isOwner",
      "offset": [
        723,
        729
      ],
      "op": "AND",
      "path": "50"
    },
    "2053": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "50"
    },
    "2054": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        729
      ],
      "op": "EQ",
      "path": "50"
    },
    "2055": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        729
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2056": {
      "fn": "Owned.isOwner",
      "jump": "o",
      "offset": [
        646,
        736
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2057": {
      "offset": [
        1050,
        1114
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2058": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x3"
    },
    "2060": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "2062": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2063": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2064": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2065": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2067": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "SWAP3",
      "path": "54"
    },
    "2068": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "DUP4",
      "path": "54"
    },
    "2069": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2070": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "2072": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2073": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "DUP5",
      "path": "54"
    },
    "2074": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "2075": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2076": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2077": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2078": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2079": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2080": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2081": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2082": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "2083": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "2084": {
      "fn": "Owned.isOwner",
      "offset": [
        1050,
        1114
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2085": {
      "fn": "Owned.isOwner",
      "jump": "o",
      "offset": [
        1050,
        1114
      ],
      "op": "JUMP",
      "path": "54"
    },
    "2086": {
      "fn": "ERC20Vault.add",
      "offset": [
        1591,
        2094
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2087": {
      "fn": "ERC20Vault.add",
      "offset": [
        1682,
        1691
      ],
      "op": "PUSH2",
      "path": "54",
      "statement": 22,
      "value": "0x82E"
    },
    "2090": {
      "fn": "ERC20Vault.add",
      "offset": [
        1682,
        1689
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x7F8"
    },
    "2093": {
      "fn": "ERC20Vault.add",
      "jump": "i",
      "offset": [
        1682,
        1691
      ],
      "op": "JUMP",
      "path": "54"
    },
    "2094": {
      "branch": 47,
      "fn": "ERC20Vault.add",
      "offset": [
        1682,
        1691
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2095": {
      "fn": "ERC20Vault.add",
      "offset": [
        1674,
        1692
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x837"
    },
    "2098": {
      "branch": 47,
      "fn": "ERC20Vault.add",
      "offset": [
        1674,
        1692
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2099": {
      "fn": "ERC20Vault.add",
      "offset": [
        1674,
        1692
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2101": {
      "fn": "ERC20Vault.add",
      "offset": [
        1674,
        1692
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2102": {
      "fn": "ERC20Vault.add",
      "offset": [
        1674,
        1692
      ],
      "op": "REVERT",
      "path": "54"
    },
    "2103": {
      "fn": "ERC20Vault.add",
      "offset": [
        1674,
        1692
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2104": {
      "fn": "ERC20Vault.add",
      "offset": [
        1702,
        1717
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2106": {
      "fn": "ERC20Vault.add",
      "offset": [
        1720,
        1750
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x843"
    },
    "2109": {
      "fn": "ERC20Vault.add",
      "offset": [
        1720,
        1735
      ],
      "op": "TIMESTAMP",
      "path": "54"
    },
    "2110": {
      "fn": "ERC20Vault.add",
      "offset": [
        1740,
        1749
      ],
      "op": "DUP4",
      "path": "54"
    },
    "2111": {
      "fn": "ERC20Vault.add",
      "offset": [
        1720,
        1739
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xC4F"
    },
    "2114": {
      "fn": "ERC20Vault.add",
      "jump": "i",
      "offset": [
        1720,
        1750
      ],
      "op": "JUMP",
      "path": "54"
    },
    "2115": {
      "fn": "ERC20Vault.add",
      "offset": [
        1720,
        1750
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2116": {
      "fn": "ERC20Vault.add",
      "offset": [
        1778,
        1786
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "2118": {
      "fn": "ERC20Vault.add",
      "offset": [
        1778,
        1793
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "2119": {
      "fn": "ERC20Vault.add",
      "offset": [
        1702,
        1750
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2120": {
      "fn": "ERC20Vault.add",
      "offset": [
        1702,
        1750
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2121": {
      "op": "POP"
    },
    "2122": {
      "fn": "ERC20Vault.add",
      "offset": [
        1761,
        1775
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2124": {
      "fn": "ERC20Vault.add",
      "offset": [
        1803,
        1936
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2125": {
      "fn": "ERC20Vault.add",
      "offset": [
        1831,
        1837
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2126": {
      "fn": "ERC20Vault.add",
      "offset": [
        1825,
        1828
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2127": {
      "fn": "ERC20Vault.add",
      "offset": [
        1825,
        1837
      ],
      "op": "LT",
      "path": "54"
    },
    "2128": {
      "fn": "ERC20Vault.add",
      "offset": [
        1803,
        1936
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2129": {
      "fn": "ERC20Vault.add",
      "offset": [
        1803,
        1936
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x8E0"
    },
    "2132": {
      "fn": "ERC20Vault.add",
      "offset": [
        1803,
        1936
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2133": {
      "fn": "ERC20Vault.add",
      "offset": [
        1891,
        1897
      ],
      "op": "DUP6",
      "path": "54",
      "statement": 23
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2140": {
      "op": "SHL"
    },
    "2141": {
      "op": "SUB"
    },
    "2142": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1897
      ],
      "op": "AND",
      "path": "54"
    },
    "2143": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1876
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "2145": {
      "fn": "ERC20Vault.add",
      "offset": [
        1877,
        1880
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2146": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2147": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "2148": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2149": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "LT",
      "path": "54"
    },
    "2150": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x86B"
    },
    "2153": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2154": {
      "dev": "Index out of range",
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "INVALID",
      "path": "54"
    },
    "2155": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2156": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2158": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2159": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2160": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2161": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "2163": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2164": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2165": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "2166": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x2"
    },
    "2168": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2169": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2170": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "MUL",
      "path": "54"
    },
    "2171": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1881
      ],
      "op": "ADD",
      "path": "54"
    },
    "2172": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1887
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2179": {
      "op": "SHL"
    },
    "2180": {
      "op": "SUB"
    },
    "2181": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1887
      ],
      "op": "AND",
      "path": "54"
    },
    "2182": {
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1897
      ],
      "op": "EQ",
      "path": "54"
    },
    "2183": {
      "branch": 48,
      "fn": "ERC20Vault.add",
      "offset": [
        1868,
        1897
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2184": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x8D8"
    },
    "2187": {
      "branch": 48,
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2188": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "2190": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2191": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2198": {
      "op": "SHL"
    },
    "2199": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2200": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2201": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "2203": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "2205": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2206": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "ADD",
      "path": "54"
    },
    "2207": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2208": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x18"
    },
    "2210": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x24"
    },
    "2212": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2213": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "ADD",
      "path": "54"
    },
    "2214": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2215": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "PUSH32",
      "path": "54",
      "value": "0x4572726F7220706F6F6C20616C72656164792061646465640000000000000000"
    },
    "2248": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x44"
    },
    "2250": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2251": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "ADD",
      "path": "54"
    },
    "2252": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2253": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2254": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2255": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2256": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2257": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2258": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "SUB",
      "path": "54"
    },
    "2259": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x64"
    },
    "2261": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "ADD",
      "path": "54"
    },
    "2262": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2263": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "REVERT",
      "path": "54"
    },
    "2264": {
      "fn": "ERC20Vault.add",
      "offset": [
        1860,
        1925
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2265": {
      "fn": "ERC20Vault.add",
      "offset": [
        1839,
        1844
      ],
      "op": "PUSH1",
      "path": "54",
      "statement": 24,
      "value": "0x1"
    },
    "2267": {
      "fn": "ERC20Vault.add",
      "offset": [
        1839,
        1844
      ],
      "op": "ADD",
      "path": "54"
    },
    "2268": {
      "fn": "ERC20Vault.add",
      "offset": [
        1803,
        1936
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x84C"
    },
    "2271": {
      "fn": "ERC20Vault.add",
      "offset": [
        1803,
        1936
      ],
      "op": "JUMP",
      "path": "54"
    },
    "2272": {
      "fn": "ERC20Vault.add",
      "offset": [
        1803,
        1936
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2273": {
      "op": "POP"
    },
    "2274": {
      "op": "POP"
    },
    "2275": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "PUSH1",
      "path": "54",
      "statement": 25,
      "value": "0x40"
    },
    "2277": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2278": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2279": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x60"
    },
    "2281": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2282": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "ADD",
      "path": "54"
    },
    "2283": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2284": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2291": {
      "op": "SHL"
    },
    "2292": {
      "op": "SUB"
    },
    "2293": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "SWAP6",
      "path": "54"
    },
    "2294": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "DUP7",
      "path": "54"
    },
    "2295": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "AND",
      "path": "54"
    },
    "2296": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2297": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2298": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "2299": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2300": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2301": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "2303": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "DUP6",
      "path": "54"
    },
    "2304": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "ADD",
      "path": "54"
    },
    "2305": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2306": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2307": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2308": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2309": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "DUP5",
      "path": "54"
    },
    "2310": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "ADD",
      "path": "54"
    },
    "2311": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2312": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2313": {
      "fn": "ERC20Vault.add",
      "offset": [
        1969,
        2086
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2314": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        1963
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "2316": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2317": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "2318": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x1"
    },
    "2320": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2321": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "ADD",
      "path": "54"
    },
    "2322": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2323": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SSTORE",
      "path": "54"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2326": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2327": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2328": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2329": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2330": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "2331": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2332": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "PUSH32",
      "path": "54",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "2365": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x2"
    },
    "2367": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2368": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP6",
      "path": "54"
    },
    "2369": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "MUL",
      "path": "54"
    },
    "2370": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP5",
      "path": "54"
    },
    "2371": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "DUP6",
      "path": "54"
    },
    "2372": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "ADD",
      "path": "54"
    },
    "2373": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2374": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "2375": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP3",
      "path": "54"
    },
    "2376": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2383": {
      "op": "SHL"
    },
    "2384": {
      "op": "SUB"
    },
    "2385": {
      "op": "NOT"
    },
    "2386": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2387": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "2388": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "AND",
      "path": "54"
    },
    "2389": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2390": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2391": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP7",
      "path": "54"
    },
    "2392": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "AND",
      "path": "54"
    },
    "2393": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "OR",
      "path": "54"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2398": {
      "op": "SHL"
    },
    "2399": {
      "op": "NOT"
    },
    "2400": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "AND",
      "path": "54"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2405": {
      "op": "SHL"
    },
    "2406": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2407": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2408": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2409": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2410": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2411": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2412": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "MUL",
      "path": "54"
    },
    "2413": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "OR",
      "path": "54"
    },
    "2414": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2415": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "2416": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SSTORE",
      "path": "54"
    },
    "2417": {
      "op": "POP"
    },
    "2418": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2419": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2420": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "PUSH32",
      "path": "54",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C"
    },
    "2453": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2454": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2455": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "ADD",
      "path": "54"
    },
    "2456": {
      "fn": "ERC20Vault.add",
      "offset": [
        1955,
        2087
      ],
      "op": "SSTORE",
      "path": "54"
    },
    "2457": {
      "fn": "ERC20Vault.add",
      "jump": "o",
      "offset": [
        1591,
        2094
      ],
      "op": "JUMP",
      "path": "54"
    },
    "2458": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4060,
        4342
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2459": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4215,
        4224
      ],
      "op": "PUSH2",
      "path": "54",
      "statement": 26,
      "value": "0x9A2"
    },
    "2462": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4215,
        4222
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x7F8"
    },
    "2465": {
      "fn": "ERC20Vault.setContractAllowance",
      "jump": "i",
      "offset": [
        4215,
        4224
      ],
      "op": "JUMP",
      "path": "54"
    },
    "2466": {
      "branch": 49,
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4215,
        4224
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2467": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4207,
        4225
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x9AB"
    },
    "2470": {
      "branch": 49,
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4207,
        4225
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2471": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4207,
        4225
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2473": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4207,
        4225
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2474": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4207,
        4225
      ],
      "op": "REVERT",
      "path": "54"
    },
    "2475": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4207,
        4225
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2476": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4243,
        4270
      ],
      "op": "PUSH2",
      "path": "54",
      "statement": 27,
      "value": "0x9B4"
    },
    "2479": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4254,
        4269
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2480": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4243,
        4253
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x396"
    },
    "2483": {
      "fn": "ERC20Vault.setContractAllowance",
      "jump": "i",
      "offset": [
        4243,
        4270
      ],
      "op": "JUMP",
      "path": "54"
    },
    "2484": {
      "branch": 50,
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4243,
        4270
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2485": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4235,
        4271
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0x9BD"
    },
    "2488": {
      "branch": 50,
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4235,
        4271
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2489": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4235,
        4271
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2491": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4235,
        4271
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2492": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4235,
        4271
      ],
      "op": "REVERT",
      "path": "54"
    },
    "2493": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4235,
        4271
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2494": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4288,
        4300
      ],
      "op": "DUP3",
      "path": "54",
      "statement": 28
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2501": {
      "op": "SHL"
    },
    "2502": {
      "op": "SUB"
    },
    "2503": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4309
      ],
      "op": "AND",
      "path": "54"
    },
    "2504": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4309
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x95EA7B3"
    },
    "2509": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4310,
        4325
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2510": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4327,
        4334
      ],
      "op": "DUP5",
      "path": "54"
    },
    "2511": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "2513": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2514": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP4",
      "path": "54"
    },
    "2515": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0xFFFFFFFF"
    },
    "2520": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "AND",
      "path": "54"
    },
    "2521": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0xE0"
    },
    "2523": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "SHL",
      "path": "54"
    },
    "2524": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2525": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2526": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "2528": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "ADD",
      "path": "54"
    },
    "2529": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2530": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP4",
      "path": "54"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2537": {
      "op": "SHL"
    },
    "2538": {
      "op": "SUB"
    },
    "2539": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "AND",
      "path": "54"
    },
    "2540": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2541": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2542": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "2544": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "ADD",
      "path": "54"
    },
    "2545": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2546": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2547": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2548": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "2550": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "ADD",
      "path": "54"
    },
    "2551": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "SWAP3",
      "path": "54"
    },
    "2552": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "POP",
      "path": "54"
    },
    "2553": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "POP",
      "path": "54"
    },
    "2554": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "POP",
      "path": "54"
    },
    "2555": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "2557": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "2559": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2560": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2561": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP4",
      "path": "54"
    },
    "2562": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "SUB",
      "path": "54"
    },
    "2563": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2564": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2566": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP8",
      "path": "54"
    },
    "2567": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2568": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "EXTCODESIZE",
      "path": "54"
    },
    "2569": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2570": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2571": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2572": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xA14"
    },
    "2575": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2576": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2578": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2579": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "REVERT",
      "path": "54"
    },
    "2580": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2581": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "POP",
      "path": "54"
    },
    "2582": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "GAS",
      "path": "54"
    },
    "2583": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "CALL",
      "path": "54"
    },
    "2584": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2585": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2586": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2587": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xA28"
    },
    "2590": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2591": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "RETURNDATASIZE",
      "path": "54"
    },
    "2592": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2594": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2595": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "RETURNDATACOPY",
      "path": "54"
    },
    "2596": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "RETURNDATASIZE",
      "path": "54"
    },
    "2597": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2599": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "REVERT",
      "path": "54"
    },
    "2600": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2601": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "POP",
      "path": "54"
    },
    "2602": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "POP",
      "path": "54"
    },
    "2603": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "POP",
      "path": "54"
    },
    "2604": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "POP",
      "path": "54"
    },
    "2605": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "2607": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2608": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "RETURNDATASIZE",
      "path": "54"
    },
    "2609": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "2611": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2612": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "LT",
      "path": "54"
    },
    "2613": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2614": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xA3E"
    },
    "2617": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2618": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2620": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2621": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "REVERT",
      "path": "54"
    },
    "2622": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4281,
        4335
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2623": {
      "op": "POP"
    },
    "2624": {
      "op": "POP"
    },
    "2625": {
      "op": "POP"
    },
    "2626": {
      "op": "POP"
    },
    "2627": {
      "op": "POP"
    },
    "2628": {
      "fn": "ERC20Vault.setContractAllowance",
      "jump": "o",
      "offset": [
        4060,
        4342
      ],
      "op": "JUMP",
      "path": "54"
    },
    "2629": {
      "offset": [
        156,
        179
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2630": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        156,
        179
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "2632": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        156,
        179
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2639": {
      "op": "SHL"
    },
    "2640": {
      "op": "SUB"
    },
    "2641": {
      "offset": [
        156,
        179
      ],
      "op": "AND",
      "path": "50"
    },
    "2642": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        156,
        179
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2643": {
      "fn": "ERC20Vault.setContractAllowance",
      "jump": "o",
      "offset": [
        156,
        179
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2644": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2645": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2672,
        2693
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2647": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2704
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "2649": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2705,
        2709
      ],
      "op": "DUP4",
      "path": "54"
    },
    "2650": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2651": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "2652": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2653": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "LT",
      "path": "54"
    },
    "2654": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xA63"
    },
    "2657": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2658": {
      "dev": "Index out of range",
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "INVALID",
      "path": "54"
    },
    "2659": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2660": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2662": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2663": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2664": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2665": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "2667": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2668": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "DUP4",
      "path": "54"
    },
    "2669": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "2670": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2758
      ],
      "op": "DUP7",
      "path": "54"
    },
    "2671": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2758
      ],
      "op": "DUP5",
      "path": "54"
    },
    "2672": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2758
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2673": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2752
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x3"
    },
    "2675": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2758
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2676": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2758
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2677": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2758
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "2679": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2758
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2680": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2758
      ],
      "op": "DUP6",
      "path": "54"
    },
    "2681": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2758
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "2682": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2759,
        2769
      ],
      "op": "CALLER",
      "path": "54"
    },
    "2683": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2770
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2684": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2770
      ],
      "op": "DUP8",
      "path": "54"
    },
    "2685": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2770
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2686": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2770
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2687": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2770
      ],
      "op": "DUP5",
      "path": "54"
    },
    "2688": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2770
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2689": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2770
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2690": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2770
      ],
      "op": "DUP7",
      "path": "54"
    },
    "2691": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2770
      ],
      "op": "KECCAK256",
      "path": "54"
    },
    "2692": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x2"
    },
    "2694": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2695": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "SWAP6",
      "path": "54"
    },
    "2696": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "MUL",
      "path": "54"
    },
    "2697": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2698": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "SWAP3",
      "path": "54"
    },
    "2699": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "ADD",
      "path": "54"
    },
    "2700": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2791
      ],
      "op": "DUP1",
      "path": "54",
      "statement": 29
    },
    "2701": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2791
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "2702": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2703": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2704": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2711": {
      "op": "SHL"
    },
    "2712": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2713": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2714": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x4"
    },
    "2716": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2717": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "ADD",
      "path": "54"
    },
    "2718": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "SWAP5",
      "path": "54"
    },
    "2719": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2720": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "SWAP5",
      "path": "54"
    },
    "2721": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2722": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2834,
        2838
      ],
      "op": "ADDRESS",
      "path": "54"
    },
    "2723": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x24"
    },
    "2725": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP6",
      "path": "54"
    },
    "2726": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "ADD",
      "path": "54"
    },
    "2727": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2728": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x44"
    },
    "2730": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP5",
      "path": "54"
    },
    "2731": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "ADD",
      "path": "54"
    },
    "2732": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP10",
      "path": "54"
    },
    "2733": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2734": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2735": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2736": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2737": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2738": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "SWAP7",
      "path": "54"
    },
    "2739": {
      "op": "POP"
    },
    "2740": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2770
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "2741": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2744,
        2770
      ],
      "op": "SWAP5",
      "path": "54"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2748": {
      "op": "SHL"
    },
    "2749": {
      "op": "SUB"
    },
    "2750": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2791
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2751": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2791
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2752": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2791
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2753": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2791
      ],
      "op": "AND",
      "path": "54"
    },
    "2754": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2791
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "2755": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2804
      ],
      "op": "PUSH4",
      "path": "54",
      "value": "0x23B872DD"
    },
    "2760": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2804
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "2761": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x64"
    },
    "2763": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2764": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP6",
      "path": "54"
    },
    "2765": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "ADD",
      "path": "54"
    },
    "2766": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "SWAP5",
      "path": "54"
    },
    "2767": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2768": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2696,
        2710
      ],
      "op": "SWAP4",
      "path": "54"
    },
    "2769": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2770": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP4",
      "path": "54"
    },
    "2771": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2772": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "SUB",
      "path": "54"
    },
    "2773": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "ADD",
      "path": "54"
    },
    "2774": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2775": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP3",
      "path": "54"
    },
    "2776": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2777": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2791
      ],
      "op": "DUP8",
      "path": "54"
    },
    "2778": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2779": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "EXTCODESIZE",
      "path": "54"
    },
    "2780": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2781": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2782": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2783": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xAE7"
    },
    "2786": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2787": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2789": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2790": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "REVERT",
      "path": "54"
    },
    "2791": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2792": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "POP",
      "path": "54"
    },
    "2793": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "GAS",
      "path": "54"
    },
    "2794": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "CALL",
      "path": "54"
    },
    "2795": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2796": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2797": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2798": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xAFB"
    },
    "2801": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2802": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "RETURNDATASIZE",
      "path": "54"
    },
    "2803": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2805": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2806": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "RETURNDATACOPY",
      "path": "54"
    },
    "2807": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "RETURNDATASIZE",
      "path": "54"
    },
    "2808": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2810": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "REVERT",
      "path": "54"
    },
    "2811": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2812": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "POP",
      "path": "54"
    },
    "2813": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "POP",
      "path": "54"
    },
    "2814": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "POP",
      "path": "54"
    },
    "2815": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "POP",
      "path": "54"
    },
    "2816": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x40"
    },
    "2818": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2819": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "RETURNDATASIZE",
      "path": "54"
    },
    "2820": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "2822": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2823": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "LT",
      "path": "54"
    },
    "2824": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "ISZERO",
      "path": "54"
    },
    "2825": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xB11"
    },
    "2828": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "JUMPI",
      "path": "54"
    },
    "2829": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x0"
    },
    "2831": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2832": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "REVERT",
      "path": "54"
    },
    "2833": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2781,
        2849
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2834": {
      "op": "POP"
    },
    "2835": {
      "op": "POP"
    },
    "2836": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2873,
        2884
      ],
      "op": "DUP1",
      "path": "54",
      "statement": 30
    },
    "2837": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2873,
        2884
      ],
      "op": "SLOAD",
      "path": "54"
    },
    "2838": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2873,
        2897
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xB1F"
    },
    "2841": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2873,
        2897
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2842": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2889,
        2896
      ],
      "op": "DUP5",
      "path": "54"
    },
    "2843": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2873,
        2888
      ],
      "op": "PUSH2",
      "path": "54",
      "value": "0xC4F"
    },
    "2846": {
      "fn": "ERC20Vault.deposit",
      "jump": "i",
      "offset": [
        2873,
        2897
      ],
      "op": "JUMP",
      "path": "54"
    },
    "2847": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2873,
        2897
      ],
      "op": "JUMPDEST",
      "path": "54"
    },
    "2848": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2859,
        2897
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2849": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2859,
        2897
      ],
      "op": "SSTORE",
      "path": "54"
    },
    "2850": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "PUSH1",
      "path": "54",
      "statement": 31,
      "value": "0x40"
    },
    "2852": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "DUP1",
      "path": "54"
    },
    "2853": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2854": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "DUP5",
      "path": "54"
    },
    "2855": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2856": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "MSTORE",
      "path": "54"
    },
    "2857": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2858": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "MLOAD",
      "path": "54"
    },
    "2859": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2932,
        2936
      ],
      "op": "DUP6",
      "path": "54"
    },
    "2860": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2932,
        2936
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2861": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2920,
        2930
      ],
      "op": "CALLER",
      "path": "54"
    },
    "2862": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2920,
        2930
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2863": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "PUSH32",
      "path": "54",
      "value": "0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
    },
    "2896": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "SWAP2",
      "path": "54"
    },
    "2897": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "DUP2",
      "path": "54"
    },
    "2898": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2899": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "SUB",
      "path": "54"
    },
    "2900": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "PUSH1",
      "path": "54",
      "value": "0x20"
    },
    "2902": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "ADD",
      "path": "54"
    },
    "2903": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "SWAP1",
      "path": "54"
    },
    "2904": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2912,
        2946
      ],
      "op": "LOG3",
      "path": "54"
    },
    "2905": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "POP",
      "path": "54"
    },
    "2906": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "POP",
      "path": "54"
    },
    "2907": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "POP",
      "path": "54"
    },
    "2908": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2608,
        2953
      ],
      "op": "POP",
      "path": "54"
    },
    "2909": {
      "fn": "ERC20Vault.deposit",
      "jump": "o",
      "offset": [
        2608,
        2953
      ],
      "op": "JUMP",
      "path": "54"
    },
    "2910": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2911": {
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        822
      ],
      "op": "PUSH2",
      "path": "50",
      "statement": 32,
      "value": "0xB66"
    },
    "2914": {
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        820
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7F8"
    },
    "2917": {
      "fn": "Owned.transferOwnership",
      "jump": "i",
      "offset": [
        813,
        822
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2918": {
      "branch": 52,
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        822
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2919": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xB6F"
    },
    "2922": {
      "branch": 52,
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2923": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2925": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2926": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2927": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2928": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        841
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 33,
      "value": "0x1"
    },
    "2930": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2931": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2938": {
      "op": "SHL"
    },
    "2939": {
      "op": "SUB"
    },
    "2940": {
      "op": "NOT"
    },
    "2941": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "AND",
      "path": "50"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2948": {
      "op": "SHL"
    },
    "2949": {
      "op": "SUB"
    },
    "2950": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2951": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2952": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2953": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "AND",
      "path": "50"
    },
    "2954": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2955": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2956": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2957": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "OR",
      "path": "50"
    },
    "2958": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2959": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "2960": {
      "fn": "Owned.transferOwnership",
      "jump": "o",
      "offset": [
        742,
        860
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2961": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        512,
        646
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "2962": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        570,
        577
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "2964": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH2",
      "path": "51",
      "statement": 34,
      "value": "0xBD3"
    },
    "2967": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        600,
        601
      ],
      "op": "DUP4",
      "path": "51"
    },
    "2968": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        603,
        604
      ],
      "op": "DUP4",
      "path": "51"
    },
    "2969": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "2971": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "2972": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "DUP1",
      "path": "51"
    },
    "2973": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "2975": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "ADD",
      "path": "51"
    },
    "2976": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "2978": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "2979": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "DUP1",
      "path": "51"
    },
    "2980": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1E"
    },
    "2982": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "DUP2",
      "path": "51"
    },
    "2983": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "2984": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "2986": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "ADD",
      "path": "51"
    },
    "2987": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH32",
      "path": "51",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "3020": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3021": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "3022": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "POP",
      "path": "51"
    },
    "3023": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        599
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xCA9"
    },
    "3026": {
      "fn": "SafeMathPlus.sub",
      "jump": "i",
      "offset": [
        596,
        639
      ],
      "op": "JUMP",
      "path": "51"
    },
    "3027": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "3028": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        589,
        639
      ],
      "op": "SWAP4",
      "path": "51"
    },
    "3029": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        512,
        646
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "3030": {
      "op": "POP"
    },
    "3031": {
      "op": "POP"
    },
    "3032": {
      "op": "POP"
    },
    "3033": {
      "fn": "SafeMathPlus.sub",
      "jump": "o",
      "offset": [
        512,
        646
      ],
      "op": "JUMP",
      "path": "51"
    },
    "3034": {
      "fn": "Owned._initOwned",
      "offset": [
        349,
        558
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3035": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 35,
      "value": "0x0"
    },
    "3037": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3042": {
      "op": "SHL"
    },
    "3043": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3044": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "DIV",
      "path": "50"
    },
    "3045": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "3047": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "AND",
      "path": "50"
    },
    "3048": {
      "branch": 53,
      "fn": "Owned._initOwned",
      "offset": [
        412,
        424
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3049": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xBF1"
    },
    "3052": {
      "branch": 53,
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3053": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3055": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3056": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3057": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3058": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 36,
      "value": "0x0"
    },
    "3060": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3061": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3066": {
      "op": "SHL"
    },
    "3067": {
      "op": "NOT"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3074": {
      "op": "SHL"
    },
    "3075": {
      "op": "SUB"
    },
    "3076": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3077": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP6",
      "path": "50"
    },
    "3078": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "AND",
      "path": "50"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3085": {
      "op": "SHL"
    },
    "3086": {
      "op": "SUB"
    },
    "3087": {
      "op": "NOT"
    },
    "3088": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3089": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3090": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "AND",
      "path": "50"
    },
    "3091": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3092": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3093": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3094": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "OR",
      "path": "50"
    },
    "3095": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "AND",
      "path": "50",
      "statement": 37
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3100": {
      "op": "SHL"
    },
    "3101": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "OR",
      "path": "50"
    },
    "3102": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3103": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3104": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "3105": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 38,
      "value": "0x40"
    },
    "3107": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3108": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3109": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "AND",
      "path": "50"
    },
    "3110": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3111": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3112": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3145": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3146": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3147": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3148": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "LOG3",
      "path": "50"
    },
    "3149": {
      "fn": "Owned._initOwned",
      "offset": [
        349,
        558
      ],
      "op": "POP",
      "path": "50"
    },
    "3150": {
      "fn": "Owned._initOwned",
      "jump": "o",
      "offset": [
        349,
        558
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3151": {
      "fn": "SafeMathPlus.add",
      "offset": [
        332,
        507
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "3152": {
      "fn": "SafeMathPlus.add",
      "offset": [
        390,
        397
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "3154": {
      "fn": "SafeMathPlus.add",
      "offset": [
        421,
        426
      ],
      "op": "DUP3",
      "path": "51"
    },
    "3155": {
      "fn": "SafeMathPlus.add",
      "offset": [
        421,
        426
      ],
      "op": "DUP3",
      "path": "51"
    },
    "3156": {
      "fn": "SafeMathPlus.add",
      "offset": [
        421,
        426
      ],
      "op": "ADD",
      "path": "51"
    },
    "3157": {
      "fn": "SafeMathPlus.add",
      "offset": [
        444,
        450
      ],
      "op": "DUP4",
      "path": "51",
      "statement": 39
    },
    "3158": {
      "fn": "SafeMathPlus.add",
      "offset": [
        444,
        450
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3159": {
      "fn": "SafeMathPlus.add",
      "offset": [
        444,
        450
      ],
      "op": "LT",
      "path": "51"
    },
    "3160": {
      "branch": 54,
      "fn": "SafeMathPlus.add",
      "offset": [
        444,
        450
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "3161": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xBD3"
    },
    "3164": {
      "branch": 54,
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "3165": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "3167": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3168": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "3169": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3175": {
      "op": "SHL"
    },
    "3176": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3177": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "3178": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "3180": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "3182": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "DUP3",
      "path": "51"
    },
    "3183": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "ADD",
      "path": "51"
    },
    "3184": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "3185": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1B"
    },
    "3187": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x24"
    },
    "3189": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "DUP3",
      "path": "51"
    },
    "3190": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "ADD",
      "path": "51"
    },
    "3191": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "3192": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH32",
      "path": "51",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "3225": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x44"
    },
    "3227": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "DUP3",
      "path": "51"
    },
    "3228": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "ADD",
      "path": "51"
    },
    "3229": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "3230": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3231": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "3232": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3233": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3234": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3235": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "SUB",
      "path": "51"
    },
    "3236": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x64"
    },
    "3238": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "ADD",
      "path": "51"
    },
    "3239": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3240": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "REVERT",
      "path": "51"
    },
    "3241": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        651,
        837
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "3242": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        737,
        744
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "3244": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        772,
        784
      ],
      "op": "DUP2",
      "path": "51",
      "statement": 40
    },
    "3245": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        764,
        770
      ],
      "op": "DUP5",
      "path": "51"
    },
    "3246": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        764,
        770
      ],
      "op": "DUP5",
      "path": "51"
    },
    "3247": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        764,
        770
      ],
      "op": "GT",
      "path": "51"
    },
    "3248": {
      "branch": 55,
      "fn": "SafeMathPlus.sub",
      "offset": [
        764,
        770
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "3249": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xD38"
    },
    "3252": {
      "branch": 55,
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "3253": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "3255": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "3256": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3262": {
      "op": "SHL"
    },
    "3263": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3264": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "3265": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "3267": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "51"
    },
    "3268": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3269": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3270": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "3272": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "51"
    },
    "3273": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP3",
      "path": "51"
    },
    "3274": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3275": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SUB",
      "path": "51"
    },
    "3276": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP3",
      "path": "51"
    },
    "3277": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "3278": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP4",
      "path": "51"
    },
    "3279": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3280": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3281": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "3282": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3283": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "3284": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "3286": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "51"
    },
    "3287": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "3288": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "51"
    },
    "3289": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3290": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "3291": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3292": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "3294": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "51"
    },
    "3295": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3296": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3297": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP4",
      "path": "51"
    },
    "3298": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP4",
      "path": "51"
    },
    "3299": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "3301": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "3302": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP4",
      "path": "51"
    },
    "3303": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3304": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "LT",
      "path": "51"
    },
    "3305": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "3306": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xCFD"
    },
    "3309": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "3310": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3311": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3312": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "51"
    },
    "3313": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "3314": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP4",
      "path": "51"
    },
    "3315": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP3",
      "path": "51"
    },
    "3316": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "51"
    },
    "3317": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "3318": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "3320": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "51"
    },
    "3321": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xCE5"
    },
    "3324": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMP",
      "path": "51"
    },
    "3325": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "3326": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "51"
    },
    "3327": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "51"
    },
    "3328": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "51"
    },
    "3329": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "51"
    },
    "3330": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3331": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "51"
    },
    "3332": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3333": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3334": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "51"
    },
    "3335": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3336": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1F"
    },
    "3338": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "AND",
      "path": "51"
    },
    "3339": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3340": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "3341": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xD2A"
    },
    "3344": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "3345": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3346": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP3",
      "path": "51"
    },
    "3347": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SUB",
      "path": "51"
    },
    "3348": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3349": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "3350": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1"
    },
    "3352": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP4",
      "path": "51"
    },
    "3353": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "3355": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SUB",
      "path": "51"
    },
    "3356": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x100"
    },
    "3359": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "EXP",
      "path": "51"
    },
    "3360": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SUB",
      "path": "51"
    },
    "3361": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "NOT",
      "path": "51"
    },
    "3362": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "AND",
      "path": "51"
    },
    "3363": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3364": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "3365": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "3367": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "51"
    },
    "3368": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "3369": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "51"
    },
    "3370": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "3371": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "51"
    },
    "3372": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP3",
      "path": "51"
    },
    "3373": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "51"
    },
    "3374": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "51"
    },
    "3375": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "51"
    },
    "3376": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "3378": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "3379": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3380": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "3381": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SUB",
      "path": "51"
    },
    "3382": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3383": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "REVERT",
      "path": "51"
    },
    "3384": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "3385": {
      "op": "POP"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "op": "POP"
    },
    "3388": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        807,
        812
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3389": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        807,
        812
      ],
      "op": "SUB",
      "path": "51"
    },
    "3390": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        807,
        812
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3391": {
      "fn": "SafeMathPlus.sub",
      "jump": "o",
      "offset": [
        651,
        837
      ],
      "op": "JUMP",
      "path": "51"
    }
  },
  "sha1": "94b9dbf2dbd47eac44f4cbc81abee1e4411a4234",
  "source": "pragma solidity ^0.6.9;\n\nimport \"../Tokens/BokkyPooBahsFixedSupplyTokenFactory.sol\";\nimport \"../Utils/Owned.sol\";\nimport \"../../interfaces/IERC20.sol\";\nimport \"../Utils/SafeMathPlus.sol\";\ncontract ERC20Vault is Owned{\n    using SafeMathPlus for uint256;\n\n    uint256 public unlockDate;\n   \n    //add super admin that can have authority to approve the token to transfer to any contractAddress?\n    //Refer to CORE vault for more superadmin stuff\n   \n    //address private _superAdmin;\n   \n    // Does it need to be indexed?\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(address indexed user,uint256 indexed pid,uint256 amount);\n\n    struct UserInfo{\n        uint256 amount; // How many  tokens the user has provided\n    }\n\n    struct PoolInfo{\n        IERC20 token;\n        bool withdrawable;\n        uint256 endDate;\n    }\n    // Info of each user that stakes  tokens. (poolId => (userAddress => userInfo))\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\n\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n\n    function initERC20Vault() public{\n        _initOwned((msg.sender));\n        /* unlockDate = _unlockDate; */\n    }\n\n  /*   function updateUnlockDate(uint256 _newDate) public {\n        require(isOwner());\n        require(_newDate > unlockDate, \"Date specified is less than current unlock date\");\n        unlockDate = _newDate;\n    } */\n    \n    \n    // Add a new token pool. Can only be called by the owner. \n    function add(IERC20 _token, bool _withdrawable, uint256 _duration) public{\n        require(isOwner());\n        uint256 endDate = block.timestamp.add(_duration);\n\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            require(poolInfo[pid].token != _token,\"Error pool already added\");\n        }\n        \n\n        poolInfo.push(PoolInfo({\n            token:_token,\n            withdrawable: _withdrawable,\n            endDate: endDate\n        }));\n    }\n    \n\n    // Update the given pool's ability to withdraw tokens\n    function setPoolWithdrawable(uint256 _pid, bool _withdrawable\n    ) public  {\n        require(isOwner());\n        poolInfo[_pid].withdrawable = _withdrawable;\n    }\n    \n    //Have to do more checks\n    function updatePoolEndDate(uint256 _pid, uint256 _duration) public{\n        require(isOwner());\n        PoolInfo storage pool = poolInfo[_pid];\n        pool.endDate = block.timestamp.add(_duration);\n    }\n    // Deposit  tokens to Vault.\n    function deposit(uint256 _pid, uint256 _amount) public{\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        pool.token.transferFrom(address(msg.sender), address(this), _amount);\n        user.amount = user.amount.add(_amount);\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    function withdraw(uint256 _pid, uint256 _amount) public{\n        PoolInfo storage pool = poolInfo[_pid];\n        require(pool.withdrawable, \"Withdrawing from pool is disabled\");\n        require(now >= pool.endDate, \"Timelock: Funds cannot be withdrawn yet\");\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        require(user.amount >=_amount,\"withdraw: unsufficient funds in the pool\");\n        user.amount = user.amount.sub(_amount);\n        pool.token.transfer(address(msg.sender),_amount);\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    //No Timelock implemented\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        require(pool.withdrawable,\"Withdrawing from pool disabled\");\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        user.amount = 0;\n        pool.token.transfer(msg.sender,user.amount);\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\n    }\n\n    //To set allowance of ERC20 to a particular contractAddress. Good or not? Only owner can call. May add superadmin too.\n    function setContractAllowance(address tokenAddress, uint256 _amount,address contractAddress) public{\n        \n        // Can be superadmin\n        require(isOwner());\n        require(isContract(contractAddress));\n        IERC20(tokenAddress).approve(contractAddress, _amount);\n    }\n\n    function isContract(address addr) public returns (bool){\n        uint size;\n        assembly { size:= extcodesize(addr) }\n        return size > 0;\n    }\n\n}\n",
  "sourceMap": "188:4315:54:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Vault/ERC20Vault.sol",
  "type": "contract"
}