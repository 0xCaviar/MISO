{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accessControls",
      "outputs": [
        {
          "internalType": "contract MISOAccessControls",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_lpToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bonusEndBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bonusMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTips",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        }
      ],
      "name": "dev",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devaddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmTemplate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewards",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsPerBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_accessControls",
          "type": "address"
        }
      ],
      "name": "initFarm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "massUpdatePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "pendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accRewardsPerShare",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bonusEndBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bonusMultiplier",
          "type": "uint256"
        }
      ],
      "name": "setBonus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tips",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/GSN/Context.sol",
    "1": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/access/AccessControl.sol",
    "11": "contracts/Access/MISOAdminAccess.sol",
    "19": "contracts/Farms/MasterChef.sol",
    "3": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
    "4": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/IERC20.sol",
    "5": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/SafeERC20.sol",
    "6": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/Address.sol",
    "67": "interfaces/IMisoFarm.sol",
    "7": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/EnumerableSet.sol",
    "9": "contracts/Access/MISOAccessControls.sol"
  },
  "ast": {
    "absolutePath": "contracts/Farms/MasterChef.sol",
    "exportedSymbols": {
      "MasterChef": [
        5128
      ]
    },
    "id": 5129,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4168,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:19"
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4169,
        "nodeType": "ImportDirective",
        "scope": 5129,
        "sourceUnit": 20040,
        "src": "26:56:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 4170,
        "nodeType": "ImportDirective",
        "scope": 5129,
        "sourceUnit": 20253,
        "src": "83:59:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "id": 4171,
        "nodeType": "ImportDirective",
        "scope": 5129,
        "sourceUnit": 20648,
        "src": "143:57:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 4172,
        "nodeType": "ImportDirective",
        "scope": 5129,
        "sourceUnit": 19701,
        "src": "201:51:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4173,
        "nodeType": "ImportDirective",
        "scope": 5129,
        "sourceUnit": 19962,
        "src": "253:52:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Access/MISOAccessControls.sol",
        "file": "../Access/MISOAccessControls.sol",
        "id": 4174,
        "nodeType": "ImportDirective",
        "scope": 5129,
        "sourceUnit": 215,
        "src": "307:42:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMisoFarm.sol",
        "file": "../../interfaces/IMisoFarm.sol",
        "id": 4175,
        "nodeType": "ImportDirective",
        "scope": 5129,
        "sourceUnit": 20664,
        "src": "350:40:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4176,
              "name": "IMisoFarm",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20663,
              "src": "973:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMisoFarm_$20663",
                "typeString": "contract IMisoFarm"
              }
            },
            "id": 4177,
            "nodeType": "InheritanceSpecifier",
            "src": "973:9:19"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4178,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19504,
              "src": "984:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$19504",
                "typeString": "contract AccessControl"
              }
            },
            "id": 4179,
            "nodeType": "InheritanceSpecifier",
            "src": "984:13:19"
          }
        ],
        "contractDependencies": [
          19504,
          19852,
          20663
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5128,
        "linearizedBaseContracts": [
          5128,
          19504,
          19852,
          20663
        ],
        "name": "MasterChef",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4182,
            "libraryName": {
              "contractScope": null,
              "id": 4180,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19700,
              "src": "1010:8:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$19700",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1004:27:19",
            "typeName": {
              "id": 4181,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1023:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 4185,
            "libraryName": {
              "contractScope": null,
              "id": 4183,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20252,
              "src": "1042:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$20252",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1036:27:19",
            "typeName": {
              "contractScope": null,
              "id": 4184,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20039,
              "src": "1056:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$20039",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "748365ef",
            "id": 4187,
            "mutability": "mutable",
            "name": "accessControls",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "1069:40:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MISOAccessControls_$214",
              "typeString": "contract MISOAccessControls"
            },
            "typeName": {
              "contractScope": null,
              "id": 4186,
              "name": "MISOAccessControls",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 214,
              "src": "1069:18:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                "typeString": "contract MISOAccessControls"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "MasterChef.UserInfo",
            "id": 4192,
            "members": [
              {
                "constant": false,
                "id": 4189,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4192,
                "src": "1169:14:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4188,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1169:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4191,
                "mutability": "mutable",
                "name": "rewardDebt",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4192,
                "src": "1242:18:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4190,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1242:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nodeType": "StructDefinition",
            "scope": 5128,
            "src": "1143:784:19",
            "visibility": "public"
          },
          {
            "canonicalName": "MasterChef.PoolInfo",
            "id": 4201,
            "members": [
              {
                "constant": false,
                "id": 4194,
                "mutability": "mutable",
                "name": "lpToken",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4201,
                "src": "1985:14:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$20039",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 4193,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 20039,
                  "src": "1985:6:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$20039",
                    "typeString": "contract IERC20"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4196,
                "mutability": "mutable",
                "name": "allocPoint",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4201,
                "src": "2052:18:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4195,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2052:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4198,
                "mutability": "mutable",
                "name": "lastRewardBlock",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4201,
                "src": "2171:23:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4197,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2171:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4200,
                "mutability": "mutable",
                "name": "accRewardsPerShare",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4201,
                "src": "2259:26:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4199,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2259:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nodeType": "StructDefinition",
            "scope": 5128,
            "src": "1959:389:19",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9ec5a894",
            "id": 4203,
            "mutability": "mutable",
            "name": "rewards",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "2379:21:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$20039",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 4202,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20039,
              "src": "2379:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$20039",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d49e77cd",
            "id": 4205,
            "mutability": "mutable",
            "name": "devaddr",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "2426:22:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4204,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2426:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3a43824",
            "id": 4207,
            "mutability": "mutable",
            "name": "devPercentage",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "2501:28:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4206,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2501:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1a4e1e78",
            "id": 4209,
            "mutability": "mutable",
            "name": "tips",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "2566:19:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4208,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2566:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1aed6553",
            "id": 4211,
            "mutability": "mutable",
            "name": "bonusEndBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "2643:28:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4210,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2643:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5eeb6710",
            "id": 4213,
            "mutability": "mutable",
            "name": "rewardsPerBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "2717:30:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4212,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2717:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8b973a1",
            "id": 4215,
            "mutability": "mutable",
            "name": "bonusMultiplier",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "2802:30:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4214,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2802:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2c77f656",
            "id": 4218,
            "mutability": "constant",
            "name": "farmTemplate",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "2873:40:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4216,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2873:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 4217,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2912:1:19",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4220,
            "mutability": "mutable",
            "name": "initialised",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "2944:24:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4219,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2944:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "1526fe27",
            "id": 4223,
            "mutability": "mutable",
            "name": "poolInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "3001:26:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4201_storage_$dyn_storage",
              "typeString": "struct MasterChef.PoolInfo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 4221,
                "name": "PoolInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4201,
                "src": "3001:8:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                  "typeString": "struct MasterChef.PoolInfo"
                }
              },
              "id": 4222,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "3001:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4201_storage_$dyn_storage_ptr",
                "typeString": "struct MasterChef.PoolInfo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93f1a40b",
            "id": 4229,
            "mutability": "mutable",
            "name": "userInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "3081:66:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$4192_storage_$_$",
              "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"
            },
            "typeName": {
              "id": 4228,
              "keyType": {
                "id": 4224,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3090:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3081:50:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$4192_storage_$_$",
                "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"
              },
              "valueType": {
                "id": 4227,
                "keyType": {
                  "id": 4225,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3110:7:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3101:29:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$4192_storage_$",
                  "typeString": "mapping(address => struct MasterChef.UserInfo)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 4226,
                  "name": "UserInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 4192,
                  "src": "3121:8:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                    "typeString": "struct MasterChef.UserInfo"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "17caf6f1",
            "id": 4231,
            "mutability": "mutable",
            "name": "totalAllocPoint",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "3240:30:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4230,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3240:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "48cd4cb1",
            "id": 4233,
            "mutability": "mutable",
            "name": "startBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5128,
            "src": "3328:25:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4232,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3328:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4241,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4235,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4241,
                  "src": "3374:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3374:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4237,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4241,
                  "src": "3396:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4239,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4241,
                  "src": "3417:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3417:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3373:59:19"
            },
            "src": "3360:73:19"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4249,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4243,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4249,
                  "src": "3453:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3453:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4245,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4249,
                  "src": "3475:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3475:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4247,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4249,
                  "src": "3496:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3496:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3452:59:19"
            },
            "src": "3438:74:19"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4257,
            "name": "EmergencyWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4251,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4257,
                  "src": "3541:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3541:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4253,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4257,
                  "src": "3563:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3563:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4255,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4257,
                  "src": "3584:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3584:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3540:59:19"
            },
            "src": "3517:83:19"
          },
          {
            "baseFunctions": [
              20662
            ],
            "body": {
              "id": 4308,
              "nodeType": "Block",
              "src": "3794:299:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3812:12:19",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 4272,
                          "name": "initialised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4220,
                          "src": "3813:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3804:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3804:21:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4275,
                  "nodeType": "ExpressionStatement",
                  "src": "3804:21:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4276,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4203,
                      "src": "3835:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$20039",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4278,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4259,
                          "src": "3852:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4277,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20039,
                        "src": "3845:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$20039_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 4279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3845:16:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$20039",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3835:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$20039",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 4281,
                  "nodeType": "ExpressionStatement",
                  "src": "3835:26:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4282,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4231,
                      "src": "3871:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3889:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3871:19:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4285,
                  "nodeType": "ExpressionStatement",
                  "src": "3871:19:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4286,
                      "name": "initialised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4220,
                      "src": "3900:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 4287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3914:4:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3900:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4289,
                  "nodeType": "ExpressionStatement",
                  "src": "3900:18:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4290,
                      "name": "rewardsPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4213,
                      "src": "3928:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4291,
                      "name": "_rewardsPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4261,
                      "src": "3946:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3928:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4293,
                  "nodeType": "ExpressionStatement",
                  "src": "3928:34:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4294,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4233,
                      "src": "3972:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4295,
                      "name": "_startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4263,
                      "src": "3985:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3972:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4297,
                  "nodeType": "ExpressionStatement",
                  "src": "3972:24:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4298,
                      "name": "devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4205,
                      "src": "4006:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4299,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4265,
                      "src": "4016:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4006:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4301,
                  "nodeType": "ExpressionStatement",
                  "src": "4006:18:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4302,
                      "name": "accessControls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4187,
                      "src": "4034:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4304,
                          "name": "_accessControls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4267,
                          "src": "4070:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4303,
                        "name": "MISOAccessControls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4051:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MISOAccessControls_$214_$",
                          "typeString": "type(contract MISOAccessControls)"
                        }
                      },
                      "id": 4305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4051:35:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "src": "4034:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                      "typeString": "contract MISOAccessControls"
                    }
                  },
                  "id": 4307,
                  "nodeType": "ExpressionStatement",
                  "src": "4034:52:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5befdbca",
            "id": 4309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initFarm",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4269,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3785:8:19"
            },
            "parameters": {
              "id": 4268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4259,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4309,
                  "src": "3633:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3633:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4261,
                  "mutability": "mutable",
                  "name": "_rewardsPerBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4309,
                  "src": "3659:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3659:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4263,
                  "mutability": "mutable",
                  "name": "_startBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4309,
                  "src": "3693:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4265,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4309,
                  "src": "3722:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3722:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4267,
                  "mutability": "mutable",
                  "name": "_accessControls",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4309,
                  "src": "3748:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3748:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3623:154:19"
            },
            "returnParameters": {
              "id": 4270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3794:0:19"
            },
            "scope": 5128,
            "src": "3606:487:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4333,
              "nodeType": "Block",
              "src": "4196:224:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4319,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4255:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4255:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4317,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4187,
                            "src": "4227:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 4318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasAdminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 557,
                          "src": "4227:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 4321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4227:39:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6173746572436865662e6164643a2053656e646572206d7573742062652061646d696e",
                        "id": 4322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4280:38:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f84fe4d16e0c4dc801ea14413fd557930cc85137075aa9b46ca2dcd28bc59e0",
                          "typeString": "literal_string \"MasterChef.add: Sender must be admin\""
                        },
                        "value": "MasterChef.add: Sender must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f84fe4d16e0c4dc801ea14413fd557930cc85137075aa9b46ca2dcd28bc59e0",
                          "typeString": "literal_string \"MasterChef.add: Sender must be admin\""
                        }
                      ],
                      "id": 4316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4206:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4206:122:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4324,
                  "nodeType": "ExpressionStatement",
                  "src": "4206:122:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4325,
                      "name": "bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4211,
                      "src": "4339:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4326,
                      "name": "_bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4311,
                      "src": "4355:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4339:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4328,
                  "nodeType": "ExpressionStatement",
                  "src": "4339:30:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4329,
                      "name": "bonusMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4215,
                      "src": "4379:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4330,
                      "name": "_bonusMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4313,
                      "src": "4397:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4379:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4332,
                  "nodeType": "ExpressionStatement",
                  "src": "4379:34:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "037c99b0",
            "id": 4334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBonus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4311,
                  "mutability": "mutable",
                  "name": "_bonusEndBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4334,
                  "src": "4126:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4126:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4313,
                  "mutability": "mutable",
                  "name": "_bonusMultiplier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4334,
                  "src": "4158:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4158:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4116:72:19"
            },
            "returnParameters": {
              "id": 4315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4196:0:19"
            },
            "scope": 5128,
            "src": "4099:321:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4342,
              "nodeType": "Block",
              "src": "4480:39:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 4339,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4223,
                      "src": "4497:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4201_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4497:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4338,
                  "id": 4341,
                  "nodeType": "Return",
                  "src": "4490:22:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "081e3eda",
            "id": 4343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4445:2:19"
            },
            "returnParameters": {
              "id": 4338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4337,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4343,
                  "src": "4471:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4471:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4470:9:19"
            },
            "scope": 5128,
            "src": "4426:93:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4402,
              "nodeType": "Block",
              "src": "4766:601:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4355,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4825:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4825:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4353,
                              "name": "accessControls",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4187,
                              "src": "4797:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                                "typeString": "contract MISOAccessControls"
                              }
                            },
                            "id": 4354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasAdminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 557,
                            "src": "4797:27:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 4357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4797:39:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4360,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4876:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4876:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4358,
                              "name": "accessControls",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4187,
                              "src": "4840:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                                "typeString": "contract MISOAccessControls"
                              }
                            },
                            "id": 4359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasSmartContractRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 91,
                            "src": "4840:35:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 4362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4840:47:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4797:90:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6173746572436865662e6164643a2053656e646572206d7573742062652061646d696e",
                        "id": 4364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4901:38:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f84fe4d16e0c4dc801ea14413fd557930cc85137075aa9b46ca2dcd28bc59e0",
                          "typeString": "literal_string \"MasterChef.add: Sender must be admin\""
                        },
                        "value": "MasterChef.add: Sender must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f84fe4d16e0c4dc801ea14413fd557930cc85137075aa9b46ca2dcd28bc59e0",
                          "typeString": "literal_string \"MasterChef.add: Sender must be admin\""
                        }
                      ],
                      "id": 4352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4776:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4776:173:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4366,
                  "nodeType": "ExpressionStatement",
                  "src": "4776:173:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4367,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4349,
                    "src": "4963:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4372,
                  "nodeType": "IfStatement",
                  "src": "4959:59:19",
                  "trueBody": {
                    "id": 4371,
                    "nodeType": "Block",
                    "src": "4976:42:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4368,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4621,
                            "src": "4990:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4990:17:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4370,
                        "nodeType": "ExpressionStatement",
                        "src": "4990:17:19"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4374,
                      "mutability": "mutable",
                      "name": "lastRewardBlock",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4402,
                      "src": "5027:23:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4373,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5027:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4383,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4375,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5053:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5053:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 4377,
                        "name": "startBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4233,
                        "src": "5068:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5053:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 4381,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4233,
                      "src": "5096:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5053:53:19",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4379,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5081:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5081:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5027:79:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4384,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4231,
                      "src": "5116:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4387,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4345,
                          "src": "5154:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4385,
                          "name": "totalAllocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4231,
                          "src": "5134:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19533,
                        "src": "5134:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5134:32:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5116:50:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4390,
                  "nodeType": "ExpressionStatement",
                  "src": "5116:50:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4395,
                            "name": "_lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4347,
                            "src": "5222:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$20039",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4396,
                            "name": "_allocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4345,
                            "src": "5256:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4397,
                            "name": "lastRewardBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4374,
                            "src": "5298:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 4398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5347:1:19",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$20039",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4394,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4201,
                          "src": "5190:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$4201_storage_ptr_$",
                            "typeString": "type(struct MasterChef.PoolInfo storage pointer)"
                          }
                        },
                        "id": 4399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "lpToken",
                          "allocPoint",
                          "lastRewardBlock",
                          "accRewardsPerShare"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "5190:169:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4201_memory_ptr",
                          "typeString": "struct MasterChef.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$4201_memory_ptr",
                          "typeString": "struct MasterChef.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4391,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4223,
                        "src": "5176:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4201_storage_$dyn_storage",
                          "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 4393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5176:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$4201_storage_$returns$__$",
                        "typeString": "function (struct MasterChef.PoolInfo storage ref)"
                      }
                    },
                    "id": 4400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5176:184:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4401,
                  "nodeType": "ExpressionStatement",
                  "src": "5176:184:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d69de7e7",
            "id": 4403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4345,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4403,
                  "src": "4702:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4702:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4347,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4403,
                  "src": "4723:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$20039",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4346,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 20039,
                    "src": "4723:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$20039",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4349,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4403,
                  "src": "4740:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4348,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4740:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4701:56:19"
            },
            "returnParameters": {
              "id": 4351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4766:0:19"
            },
            "scope": 5128,
            "src": "4684:683:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4447,
              "nodeType": "Block",
              "src": "5537:353:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4415,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5599:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5599:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4413,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4187,
                            "src": "5568:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 4414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasOperatorRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 105,
                          "src": "5568:30:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 4417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5568:42:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6173746572436865662e7365743a2053656e646572206d757374206265206f70657261746f72",
                        "id": 4418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5624:41:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6b1719cb12154edaa2dcd3dd718becebff50b66bdd523c1f446822567358dc4",
                          "typeString": "literal_string \"MasterChef.set: Sender must be operator\""
                        },
                        "value": "MasterChef.set: Sender must be operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6b1719cb12154edaa2dcd3dd718becebff50b66bdd523c1f446822567358dc4",
                          "typeString": "literal_string \"MasterChef.set: Sender must be operator\""
                        }
                      ],
                      "id": 4412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5547:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5547:128:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4420,
                  "nodeType": "ExpressionStatement",
                  "src": "5547:128:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4421,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4409,
                    "src": "5689:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4426,
                  "nodeType": "IfStatement",
                  "src": "5685:59:19",
                  "trueBody": {
                    "id": 4425,
                    "nodeType": "Block",
                    "src": "5702:42:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4422,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4621,
                            "src": "5716:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5716:17:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4424,
                        "nodeType": "ExpressionStatement",
                        "src": "5716:17:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4427,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4231,
                      "src": "5753:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4436,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4407,
                          "src": "5822:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 4430,
                                  "name": "poolInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4223,
                                  "src": "5791:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4201_storage_$dyn_storage",
                                    "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 4432,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 4431,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4405,
                                  "src": "5800:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5791:14:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4201_storage",
                                  "typeString": "struct MasterChef.PoolInfo storage ref"
                                }
                              },
                              "id": 4433,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allocPoint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4196,
                              "src": "5791:25:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4428,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4231,
                              "src": "5771:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19550,
                            "src": "5771:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5771:46:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19533,
                        "src": "5771:50:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5771:63:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5753:81:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4439,
                  "nodeType": "ExpressionStatement",
                  "src": "5753:81:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4440,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4223,
                          "src": "5844:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4201_storage_$dyn_storage",
                            "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 4442,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4441,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4405,
                          "src": "5853:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5844:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4201_storage",
                          "typeString": "struct MasterChef.PoolInfo storage ref"
                        }
                      },
                      "id": 4443,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocPoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4196,
                      "src": "5844:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4444,
                      "name": "_allocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4407,
                      "src": "5872:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5844:39:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4446,
                  "nodeType": "ExpressionStatement",
                  "src": "5844:39:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "64482f79",
            "id": 4448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4405,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4448,
                  "src": "5476:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5476:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4407,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4448,
                  "src": "5490:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5490:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4409,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4448,
                  "src": "5511:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4408,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5511:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5475:53:19"
            },
            "returnParameters": {
              "id": 4411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5537:0:19"
            },
            "scope": 5128,
            "src": "5463:427:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4495,
              "nodeType": "Block",
              "src": "6045:330:19",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4457,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4452,
                      "src": "6059:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4458,
                      "name": "bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4211,
                      "src": "6066:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6059:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4469,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4450,
                        "src": "6158:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 4470,
                        "name": "bonusEndBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4211,
                        "src": "6167:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6158:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 4492,
                      "nodeType": "Block",
                      "src": "6234:135:19",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4488,
                                    "name": "bonusEndBlock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4211,
                                    "src": "6330:13:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 4486,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4452,
                                    "src": "6322:3:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4487,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19550,
                                  "src": "6322:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6322:22:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4483,
                                    "name": "bonusMultiplier",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4215,
                                    "src": "6284:15:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 4480,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4450,
                                        "src": "6273:5:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 4478,
                                        "name": "bonusEndBlock",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4211,
                                        "src": "6255:13:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 4479,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 19550,
                                      "src": "6255:17:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 4481,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6255:24:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4482,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19613,
                                  "src": "6255:28:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6255:45:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19533,
                              "src": "6255:49:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6255:103:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 4456,
                          "id": 4491,
                          "nodeType": "Return",
                          "src": "6248:110:19"
                        }
                      ]
                    },
                    "id": 4493,
                    "nodeType": "IfStatement",
                    "src": "6154:215:19",
                    "trueBody": {
                      "id": 4477,
                      "nodeType": "Block",
                      "src": "6182:46:19",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4474,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4450,
                                "src": "6211:5:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4472,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4452,
                                "src": "6203:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19550,
                              "src": "6203:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6203:14:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 4456,
                          "id": 4476,
                          "nodeType": "Return",
                          "src": "6196:21:19"
                        }
                      ]
                    }
                  },
                  "id": 4494,
                  "nodeType": "IfStatement",
                  "src": "6055:314:19",
                  "trueBody": {
                    "id": 4468,
                    "nodeType": "Block",
                    "src": "6081:67:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4465,
                              "name": "bonusMultiplier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4215,
                              "src": "6121:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4462,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4450,
                                  "src": "6110:5:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4460,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4452,
                                  "src": "6102:3:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19550,
                                "src": "6102:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 4463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6102:14:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19613,
                            "src": "6102:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6102:35:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4456,
                        "id": 4467,
                        "nodeType": "Return",
                        "src": "6095:42:19"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8dbb1e3a",
            "id": 4496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMultiplier",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4450,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4496,
                  "src": "5987:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5987:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4452,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4496,
                  "src": "6002:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6002:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5986:28:19"
            },
            "returnParameters": {
              "id": 4456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4455,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4496,
                  "src": "6036:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6036:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6035:9:19"
            },
            "scope": 5128,
            "src": "5964:411:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4595,
              "nodeType": "Block",
              "src": "6522:688:19",
              "statements": [
                {
                  "assignments": [
                    4506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4506,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4595,
                      "src": "6532:21:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4505,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4201,
                        "src": "6532:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4510,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4507,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4223,
                      "src": "6556:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4201_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4509,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4508,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4498,
                      "src": "6565:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6556:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$4201_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6532:38:19"
                },
                {
                  "assignments": [
                    4512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4512,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4595,
                      "src": "6580:21:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4511,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4192,
                        "src": "6580:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4518,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4513,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4229,
                        "src": "6604:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$4192_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 4515,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4514,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4498,
                        "src": "6613:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6604:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$4192_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 4517,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4516,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4500,
                      "src": "6619:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6604:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$4192_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6580:45:19"
                },
                {
                  "assignments": [
                    4520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4520,
                      "mutability": "mutable",
                      "name": "accRewardsPerShare",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4595,
                      "src": "6635:26:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4519,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6635:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4523,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 4521,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4506,
                      "src": "6664:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo storage pointer"
                      }
                    },
                    "id": 4522,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accRewardsPerShare",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4200,
                    "src": "6664:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6635:52:19"
                },
                {
                  "assignments": [
                    4525
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4525,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4595,
                      "src": "6697:16:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4524,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6697:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4534,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4531,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6747:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$5128",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$5128",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 4530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6739:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4529,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6739:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6739:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4526,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4506,
                          "src": "6716:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 4527,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4194,
                        "src": "6716:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$20039",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19978,
                      "src": "6716:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6716:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6697:56:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4535,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6767:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6767:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4537,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4506,
                          "src": "6782:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 4538,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4198,
                        "src": "6782:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6767:35:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4540,
                        "name": "lpSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4525,
                        "src": "6806:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 4541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6818:1:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6806:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6767:52:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4581,
                  "nodeType": "IfStatement",
                  "src": "6763:358:19",
                  "trueBody": {
                    "id": 4580,
                    "nodeType": "Block",
                    "src": "6821:300:19",
                    "statements": [
                      {
                        "assignments": [
                          4545
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4545,
                            "mutability": "mutable",
                            "name": "multiplier",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 4580,
                            "src": "6835:18:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4544,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6835:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 4552,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4547,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4506,
                                "src": "6870:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 4548,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRewardBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4198,
                              "src": "6870:20:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4549,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6892:5:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 4550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6892:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4546,
                            "name": "getMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4496,
                            "src": "6856:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 4551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6856:49:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6835:70:19"
                      },
                      {
                        "assignments": [
                          4554
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4554,
                            "mutability": "mutable",
                            "name": "rewardsAccum",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 4580,
                            "src": "6919:20:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4553,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6919:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 4566,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4564,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4231,
                              "src": "6999:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 4560,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4506,
                                    "src": "6978:4:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                                      "typeString": "struct MasterChef.PoolInfo storage pointer"
                                    }
                                  },
                                  "id": 4561,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allocPoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4196,
                                  "src": "6978:15:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 4557,
                                      "name": "rewardsPerBlock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4213,
                                      "src": "6957:15:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4555,
                                      "name": "multiplier",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4545,
                                      "src": "6942:10:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4556,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 19613,
                                    "src": "6942:14:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 4558,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6942:31:19",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19613,
                                "src": "6942:35:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 4562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6942:52:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19630,
                            "src": "6942:56:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6942:73:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6919:96:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4567,
                            "name": "accRewardsPerShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4520,
                            "src": "7029:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4575,
                                    "name": "lpSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4525,
                                    "src": "7100:8:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "31653132",
                                        "id": 4572,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7090:4:19",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        },
                                        "value": "1e12"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 4570,
                                        "name": "rewardsAccum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4554,
                                        "src": "7073:12:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 4571,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 19613,
                                      "src": "7073:16:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 4573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7073:22:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4574,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19630,
                                  "src": "7073:26:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7073:36:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4568,
                                "name": "accRewardsPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4520,
                                "src": "7050:18:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19533,
                              "src": "7050:22:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7050:60:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7029:81:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4579,
                        "nodeType": "ExpressionStatement",
                        "src": "7029:81:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4591,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4512,
                          "src": "7187:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                            "typeString": "struct MasterChef.UserInfo storage pointer"
                          }
                        },
                        "id": 4592,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4191,
                        "src": "7187:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 4588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7177:4:19",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4585,
                                "name": "accRewardsPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4520,
                                "src": "7153:18:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4582,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4512,
                                  "src": "7137:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 4583,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4189,
                                "src": "7137:11:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19613,
                              "src": "7137:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7137:35:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19630,
                          "src": "7137:39:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7137:45:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19550,
                      "src": "7137:49:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7137:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4504,
                  "id": 4594,
                  "nodeType": "Return",
                  "src": "7130:73:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d18df53c",
            "id": 4596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingRewards",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4498,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4596,
                  "src": "6461:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6461:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4500,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4596,
                  "src": "6475:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6475:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6460:29:19"
            },
            "returnParameters": {
              "id": 4504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4503,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4596,
                  "src": "6513:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6513:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6512:9:19"
            },
            "scope": 5128,
            "src": "6437:773:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4620,
              "nodeType": "Block",
              "src": "7324:141:19",
              "statements": [
                {
                  "assignments": [
                    4600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4600,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4620,
                      "src": "7334:14:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4599,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7334:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4603,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 4601,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4223,
                      "src": "7351:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4201_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "7351:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7334:32:19"
                },
                {
                  "body": {
                    "id": 4618,
                    "nodeType": "Block",
                    "src": "7419:40:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4615,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4605,
                              "src": "7444:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4614,
                            "name": "updatePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4729,
                            "src": "7433:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 4616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7433:15:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4617,
                        "nodeType": "ExpressionStatement",
                        "src": "7433:15:19"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4608,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4605,
                      "src": "7398:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4609,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4600,
                      "src": "7404:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7398:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4619,
                  "initializationExpression": {
                    "assignments": [
                      4605
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4605,
                        "mutability": "mutable",
                        "name": "pid",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 4619,
                        "src": "7381:11:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4604,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7381:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 4607,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7395:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7381:15:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 4612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7412:5:19",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 4611,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4605,
                        "src": "7414:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4613,
                    "nodeType": "ExpressionStatement",
                    "src": "7412:5:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "7376:83:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "630b5ba1",
            "id": 4621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "massUpdatePools",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7314:2:19"
            },
            "returnParameters": {
              "id": 4598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7324:0:19"
            },
            "scope": 5128,
            "src": "7290:175:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4728,
              "nodeType": "Block",
              "src": "7579:758:19",
              "statements": [
                {
                  "assignments": [
                    4627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4627,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4728,
                      "src": "7589:21:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4626,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4201,
                        "src": "7589:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4631,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4628,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4223,
                      "src": "7613:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4201_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4630,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4629,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4623,
                      "src": "7622:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7613:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$4201_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7589:38:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4632,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7641:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7641:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4634,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4627,
                        "src": "7657:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                        }
                      },
                      "id": 4635,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4198,
                      "src": "7657:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7641:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4639,
                  "nodeType": "IfStatement",
                  "src": "7637:73:19",
                  "trueBody": {
                    "id": 4638,
                    "nodeType": "Block",
                    "src": "7679:31:19",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 4625,
                        "id": 4637,
                        "nodeType": "Return",
                        "src": "7693:7:19"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4641,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4728,
                      "src": "7719:16:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4640,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7719:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4650,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4647,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7769:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$5128",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$5128",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 4646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7761:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4645,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7761:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7761:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4642,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4627,
                          "src": "7738:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 4643,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4194,
                        "src": "7738:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$20039",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19978,
                      "src": "7738:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7738:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7719:56:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4651,
                      "name": "lpSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4641,
                      "src": "7789:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7801:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7789:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4663,
                  "nodeType": "IfStatement",
                  "src": "7785:99:19",
                  "trueBody": {
                    "id": 4662,
                    "nodeType": "Block",
                    "src": "7804:80:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4654,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4627,
                              "src": "7818:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                                "typeString": "struct MasterChef.PoolInfo storage pointer"
                              }
                            },
                            "id": 4656,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastRewardBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4198,
                            "src": "7818:20:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4657,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7841:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 4658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7841:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7818:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4660,
                        "nodeType": "ExpressionStatement",
                        "src": "7818:35:19"
                      },
                      {
                        "expression": null,
                        "functionReturnParameters": 4625,
                        "id": 4661,
                        "nodeType": "Return",
                        "src": "7867:7:19"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4665,
                      "mutability": "mutable",
                      "name": "multiplier",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4728,
                      "src": "7893:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4664,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7893:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4672,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4667,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4627,
                          "src": "7928:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 4668,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4198,
                        "src": "7928:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4669,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7950:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7950:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4666,
                      "name": "getMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4496,
                      "src": "7914:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 4671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7914:49:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7893:70:19"
                },
                {
                  "assignments": [
                    4674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4674,
                      "mutability": "mutable",
                      "name": "rewardsAccum",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4728,
                      "src": "7973:20:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4673,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7973:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4686,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4684,
                        "name": "totalAllocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4231,
                        "src": "8053:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4680,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4627,
                              "src": "8032:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                                "typeString": "struct MasterChef.PoolInfo storage pointer"
                              }
                            },
                            "id": 4681,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allocPoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4196,
                            "src": "8032:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4677,
                                "name": "rewardsPerBlock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4213,
                                "src": "8011:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4675,
                                "name": "multiplier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4665,
                                "src": "7996:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19613,
                              "src": "7996:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7996:31:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19613,
                          "src": "7996:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7996:52:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19630,
                      "src": "7996:56:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7996:73:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7973:96:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4687,
                      "name": "devPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4207,
                      "src": "8083:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8099:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8083:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4704,
                  "nodeType": "IfStatement",
                  "src": "8079:106:19",
                  "trueBody": {
                    "id": 4703,
                    "nodeType": "Block",
                    "src": "8102:83:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4690,
                            "name": "tips",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4209,
                            "src": "8116:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030",
                                    "id": 4698,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8168:4:19",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 4695,
                                        "name": "devPercentage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4207,
                                        "src": "8149:13:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 4693,
                                        "name": "rewardsAccum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4674,
                                        "src": "8132:12:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 4694,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 19613,
                                      "src": "8132:16:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 4696,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8132:31:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4697,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19630,
                                  "src": "8132:35:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8132:41:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4691,
                                "name": "tips",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4209,
                                "src": "8123:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19533,
                              "src": "8123:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8123:51:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8116:58:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4702,
                        "nodeType": "ExpressionStatement",
                        "src": "8116:58:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4705,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4627,
                        "src": "8194:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                        }
                      },
                      "id": 4707,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accRewardsPerShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4200,
                      "src": "8194:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4716,
                              "name": "lpSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4641,
                              "src": "8275:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 4713,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8265:4:19",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4711,
                                  "name": "rewardsAccum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4674,
                                  "src": "8248:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19613,
                                "src": "8248:16:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 4714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8248:22:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19630,
                            "src": "8248:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8248:36:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4708,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4627,
                            "src": "8220:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                              "typeString": "struct MasterChef.PoolInfo storage pointer"
                            }
                          },
                          "id": 4709,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accRewardsPerShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4200,
                          "src": "8220:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19533,
                        "src": "8220:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8220:65:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8194:91:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4720,
                  "nodeType": "ExpressionStatement",
                  "src": "8194:91:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4721,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4627,
                        "src": "8295:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                        }
                      },
                      "id": 4723,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4198,
                      "src": "8295:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4724,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8318:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8318:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8295:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4727,
                  "nodeType": "ExpressionStatement",
                  "src": "8295:35:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "51eb05a6",
            "id": 4729,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4623,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4729,
                  "src": "7558:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7558:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7557:14:19"
            },
            "returnParameters": {
              "id": 4625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7579:0:19"
            },
            "scope": 5128,
            "src": "7538:799:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4841,
              "nodeType": "Block",
              "src": "8461:690:19",
              "statements": [
                {
                  "assignments": [
                    4737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4737,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4841,
                      "src": "8471:21:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4736,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4201,
                        "src": "8471:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4741,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4738,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4223,
                      "src": "8495:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4201_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4740,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4739,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4731,
                      "src": "8504:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8495:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$4201_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8471:38:19"
                },
                {
                  "assignments": [
                    4743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4743,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4841,
                      "src": "8519:21:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4742,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4192,
                        "src": "8519:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4750,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4744,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4229,
                        "src": "8543:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$4192_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 4746,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4745,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4731,
                        "src": "8552:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8543:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$4192_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 4749,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4747,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8558:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8558:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8543:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$4192_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8519:50:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4752,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4731,
                        "src": "8590:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4751,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4729,
                      "src": "8579:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8579:16:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4754,
                  "nodeType": "ExpressionStatement",
                  "src": "8579:16:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4755,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4743,
                        "src": "8609:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 4756,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4189,
                      "src": "8609:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8623:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8609:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4787,
                  "nodeType": "IfStatement",
                  "src": "8605:237:19",
                  "trueBody": {
                    "id": 4786,
                    "nodeType": "Block",
                    "src": "8626:216:19",
                    "statements": [
                      {
                        "assignments": [
                          4760
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4760,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 4786,
                            "src": "8640:15:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4759,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8640:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 4774,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4771,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4743,
                                "src": "8713:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                                  "typeString": "struct MasterChef.UserInfo storage pointer"
                                }
                              },
                              "id": 4772,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardDebt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4191,
                              "src": "8713:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 4768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8703:4:19",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 4764,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4737,
                                        "src": "8674:4:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                                        }
                                      },
                                      "id": 4765,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "accRewardsPerShare",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4200,
                                      "src": "8674:23:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 4761,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4743,
                                        "src": "8658:4:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                                          "typeString": "struct MasterChef.UserInfo storage pointer"
                                        }
                                      },
                                      "id": 4762,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4189,
                                      "src": "8658:11:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4763,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 19613,
                                    "src": "8658:15:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 4766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8658:40:19",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19630,
                                "src": "8658:44:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 4769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8658:50:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19550,
                            "src": "8658:54:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8658:71:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8640:89:19"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 4775,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4760,
                            "src": "8746:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 4776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8756:1:19",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8746:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 4785,
                        "nodeType": "IfStatement",
                        "src": "8743:89:19",
                        "trueBody": {
                          "id": 4784,
                          "nodeType": "Block",
                          "src": "8759:73:19",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4779,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8797:3:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4780,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8797:10:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 4781,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4760,
                                    "src": "8809:7:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4778,
                                  "name": "safeRewardsTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5049,
                                  "src": "8777:19:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 4782,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8777:40:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4783,
                              "nodeType": "ExpressionStatement",
                              "src": "8777:40:19"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4788,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4733,
                      "src": "8854:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8864:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8854:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4819,
                  "nodeType": "IfStatement",
                  "src": "8851:167:19",
                  "trueBody": {
                    "id": 4818,
                    "nodeType": "Block",
                    "src": "8867:151:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 4798,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8919:3:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 4799,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "8919:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 4797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8911:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4796,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8911:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 4800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8911:19:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4803,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8940:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MasterChef_$5128",
                                    "typeString": "contract MasterChef"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MasterChef_$5128",
                                    "typeString": "contract MasterChef"
                                  }
                                ],
                                "id": 4802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8932:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4801,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8932:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 4804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8932:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4805,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4733,
                              "src": "8947:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4791,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4737,
                                "src": "8881:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 4794,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4194,
                              "src": "8881:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$20039",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20098,
                            "src": "8881:29:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$20039_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$20039_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 4806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8881:74:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4807,
                        "nodeType": "ExpressionStatement",
                        "src": "8881:74:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4808,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4743,
                              "src": "8969:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                                "typeString": "struct MasterChef.UserInfo storage pointer"
                              }
                            },
                            "id": 4810,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4189,
                            "src": "8969:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4814,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4733,
                                "src": "8999:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4811,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4743,
                                  "src": "8983:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 4812,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4189,
                                "src": "8983:11:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19533,
                              "src": "8983:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8983:24:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8969:38:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4817,
                        "nodeType": "ExpressionStatement",
                        "src": "8969:38:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4820,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4743,
                        "src": "9027:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 4822,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4191,
                      "src": "9027:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 4830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9090:4:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4826,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4737,
                                "src": "9061:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 4827,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accRewardsPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4200,
                              "src": "9061:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4823,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4743,
                                "src": "9045:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                                  "typeString": "struct MasterChef.UserInfo storage pointer"
                                }
                              },
                              "id": 4824,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4189,
                              "src": "9045:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19613,
                            "src": "9045:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9045:40:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19630,
                        "src": "9045:44:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9045:50:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9027:68:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4833,
                  "nodeType": "ExpressionStatement",
                  "src": "9027:68:19"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4835,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9118:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9118:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4837,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4731,
                        "src": "9130:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4838,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4733,
                        "src": "9136:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4834,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4241,
                      "src": "9110:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 4839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9110:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4840,
                  "nodeType": "EmitStatement",
                  "src": "9105:39:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e2bbb158",
            "id": 4842,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4731,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4842,
                  "src": "8423:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8423:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4733,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4842,
                  "src": "8437:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8437:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8422:31:19"
            },
            "returnParameters": {
              "id": 4735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8461:0:19"
            },
            "scope": 5128,
            "src": "8406:745:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4952,
              "nodeType": "Block",
              "src": "9256:678:19",
              "statements": [
                {
                  "assignments": [
                    4850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4850,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4952,
                      "src": "9266:21:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4849,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4201,
                        "src": "9266:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4854,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4851,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4223,
                      "src": "9290:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4201_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4853,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4852,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4844,
                      "src": "9299:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9290:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$4201_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9266:38:19"
                },
                {
                  "assignments": [
                    4856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4856,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4952,
                      "src": "9314:21:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4855,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4192,
                        "src": "9314:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4863,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4857,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4229,
                        "src": "9338:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$4192_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 4859,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4858,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4844,
                        "src": "9347:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9338:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$4192_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 4862,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4860,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9353:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9353:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9338:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$4192_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9314:50:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4865,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4856,
                            "src": "9382:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                              "typeString": "struct MasterChef.UserInfo storage pointer"
                            }
                          },
                          "id": 4866,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4189,
                          "src": "9382:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4867,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4846,
                          "src": "9397:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9382:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77697468647261773a206e6f7420676f6f64",
                        "id": 4869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9406:20:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        },
                        "value": "withdraw: not good"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        }
                      ],
                      "id": 4864,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9374:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9374:53:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4871,
                  "nodeType": "ExpressionStatement",
                  "src": "9374:53:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4873,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4844,
                        "src": "9448:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4872,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4729,
                      "src": "9437:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9437:16:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4875,
                  "nodeType": "ExpressionStatement",
                  "src": "9437:16:19"
                },
                {
                  "assignments": [
                    4877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4877,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4952,
                      "src": "9463:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4876,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9463:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4891,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4888,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4856,
                          "src": "9536:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                            "typeString": "struct MasterChef.UserInfo storage pointer"
                          }
                        },
                        "id": 4889,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4191,
                        "src": "9536:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 4885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9526:4:19",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4881,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4850,
                                  "src": "9497:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                                    "typeString": "struct MasterChef.PoolInfo storage pointer"
                                  }
                                },
                                "id": 4882,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accRewardsPerShare",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4200,
                                "src": "9497:23:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4878,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4856,
                                  "src": "9481:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 4879,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4189,
                                "src": "9481:11:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19613,
                              "src": "9481:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9481:40:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19630,
                          "src": "9481:44:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9481:50:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19550,
                      "src": "9481:54:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9481:71:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9463:89:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4892,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4877,
                      "src": "9565:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9575:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9565:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4902,
                  "nodeType": "IfStatement",
                  "src": "9562:81:19",
                  "trueBody": {
                    "id": 4901,
                    "nodeType": "Block",
                    "src": "9578:65:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4896,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9612:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9612:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4898,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4877,
                              "src": "9624:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4895,
                            "name": "safeRewardsTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5049,
                            "src": "9592:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9592:40:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4900,
                        "nodeType": "ExpressionStatement",
                        "src": "9592:40:19"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4903,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4846,
                      "src": "9655:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9665:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9655:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4930,
                  "nodeType": "IfStatement",
                  "src": "9652:148:19",
                  "trueBody": {
                    "id": 4929,
                    "nodeType": "Block",
                    "src": "9668:132:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4906,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4856,
                              "src": "9682:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                                "typeString": "struct MasterChef.UserInfo storage pointer"
                              }
                            },
                            "id": 4908,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4189,
                            "src": "9682:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4912,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4846,
                                "src": "9712:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4909,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4856,
                                  "src": "9696:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 4910,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4189,
                                "src": "9696:11:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19550,
                              "src": "9696:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9696:24:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9682:38:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4915,
                        "nodeType": "ExpressionStatement",
                        "src": "9682:38:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 4923,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9768:3:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 4924,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "9768:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 4922,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9760:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4921,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9760:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 4925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9760:19:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4926,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4846,
                              "src": "9781:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4916,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4850,
                                "src": "9734:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 4919,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4194,
                              "src": "9734:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$20039",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20073,
                            "src": "9734:25:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$20039_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$20039_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9734:55:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4928,
                        "nodeType": "ExpressionStatement",
                        "src": "9734:55:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4931,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4856,
                        "src": "9809:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 4933,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4191,
                      "src": "9809:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 4941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9872:4:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4937,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4850,
                                "src": "9843:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 4938,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accRewardsPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4200,
                              "src": "9843:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4934,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4856,
                                "src": "9827:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                                  "typeString": "struct MasterChef.UserInfo storage pointer"
                                }
                              },
                              "id": 4935,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4189,
                              "src": "9827:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19613,
                            "src": "9827:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9827:40:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19630,
                        "src": "9827:44:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9827:50:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9809:68:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4944,
                  "nodeType": "ExpressionStatement",
                  "src": "9809:68:19"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4946,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9901:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9901:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4948,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4844,
                        "src": "9913:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4949,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4846,
                        "src": "9919:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4945,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4249,
                      "src": "9892:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 4950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9892:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4951,
                  "nodeType": "EmitStatement",
                  "src": "9887:40:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "441a3e70",
            "id": 4953,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4844,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4953,
                  "src": "9218:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9218:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4846,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4953,
                  "src": "9232:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9232:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9217:31:19"
            },
            "returnParameters": {
              "id": 4848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9256:0:19"
            },
            "scope": 5128,
            "src": "9200:734:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5010,
              "nodeType": "Block",
              "src": "10050:329:19",
              "statements": [
                {
                  "assignments": [
                    4959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4959,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5010,
                      "src": "10060:21:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4958,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4201,
                        "src": "10060:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4963,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4960,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4223,
                      "src": "10084:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4201_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4962,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4961,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4955,
                      "src": "10093:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10084:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$4201_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10060:38:19"
                },
                {
                  "assignments": [
                    4965
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4965,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5010,
                      "src": "10108:21:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4964,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4192,
                        "src": "10108:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4972,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4966,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4229,
                        "src": "10132:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$4192_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 4968,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4967,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4955,
                        "src": "10141:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10132:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$4192_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 4971,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4969,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10147:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "10147:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10132:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$4192_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10108:50:19"
                },
                {
                  "assignments": [
                    4974
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4974,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5010,
                      "src": "10168:14:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4973,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10168:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4977,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 4975,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4965,
                      "src": "10185:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo storage pointer"
                      }
                    },
                    "id": 4976,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4189,
                    "src": "10185:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10168:28:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4978,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4965,
                        "src": "10206:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 4980,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4189,
                      "src": "10206:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10220:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10206:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4983,
                  "nodeType": "ExpressionStatement",
                  "src": "10206:15:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4984,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4965,
                        "src": "10231:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4192_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 4986,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4191,
                      "src": "10231:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10249:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10231:19:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4989,
                  "nodeType": "ExpressionStatement",
                  "src": "10231:19:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4997,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10294:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10294:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 4996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10286:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4995,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10286:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10286:19:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5000,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4974,
                        "src": "10307:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4990,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4959,
                          "src": "10260:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4201_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 4993,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4194,
                        "src": "10260:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$20039",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20073,
                      "src": "10260:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$20039_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$20039_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 5001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10260:54:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5002,
                  "nodeType": "ExpressionStatement",
                  "src": "10260:54:19"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5004,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10347:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10347:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5006,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4955,
                        "src": "10359:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5007,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4974,
                        "src": "10365:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5003,
                      "name": "EmergencyWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4257,
                      "src": "10329:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 5008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10329:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5009,
                  "nodeType": "EmitStatement",
                  "src": "10324:48:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5312ea8e",
            "id": 5011,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4955,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5011,
                  "src": "10029:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10029:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10028:14:19"
            },
            "returnParameters": {
              "id": 4957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10050:0:19"
            },
            "scope": 5128,
            "src": "10002:377:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5048,
              "nodeType": "Block",
              "src": "10562:224:19",
              "statements": [
                {
                  "assignments": [
                    5019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5019,
                      "mutability": "mutable",
                      "name": "rewardsBal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5048,
                      "src": "10572:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5018,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10572:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5027,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5024,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10619:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$5128",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$5128",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 5023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10611:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5022,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10611:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10611:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5020,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4203,
                        "src": "10593:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$20039",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19978,
                      "src": "10593:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10593:32:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10572:53:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5028,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5015,
                      "src": "10639:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 5029,
                      "name": "rewardsBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5019,
                      "src": "10649:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10639:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5046,
                    "nodeType": "Block",
                    "src": "10725:55:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5042,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5013,
                              "src": "10756:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5043,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5015,
                              "src": "10761:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 5039,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4203,
                              "src": "10739:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$20039",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19988,
                            "src": "10739:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 5044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10739:30:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5045,
                        "nodeType": "ExpressionStatement",
                        "src": "10739:30:19"
                      }
                    ]
                  },
                  "id": 5047,
                  "nodeType": "IfStatement",
                  "src": "10635:145:19",
                  "trueBody": {
                    "id": 5038,
                    "nodeType": "Block",
                    "src": "10661:58:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5034,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5013,
                              "src": "10692:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5035,
                              "name": "rewardsBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5019,
                              "src": "10697:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 5031,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4203,
                              "src": "10675:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$20039",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19988,
                            "src": "10675:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 5036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10675:33:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5037,
                        "nodeType": "ExpressionStatement",
                        "src": "10675:33:19"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 5049,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeRewardsTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5013,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5049,
                  "src": "10523:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10523:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5015,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5049,
                  "src": "10536:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10536:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10522:30:19"
            },
            "returnParameters": {
              "id": 5017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10562:0:19"
            },
            "scope": 5128,
            "src": "10494:292:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5076,
              "nodeType": "Block",
              "src": "10922:203:19",
              "statements": [
                {
                  "assignments": [
                    5055
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5055,
                      "mutability": "mutable",
                      "name": "rewardsBal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5076,
                      "src": "10932:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5054,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10932:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5063,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5060,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10979:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$5128",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$5128",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 5059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10971:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5058,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10971:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10971:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5056,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4203,
                        "src": "10953:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$20039",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19978,
                      "src": "10953:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10953:32:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10932:53:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5064,
                      "name": "rewardsPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4213,
                      "src": "10999:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11017:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10999:19:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5074,
                    "nodeType": "Block",
                    "src": "11086:33:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11107:1:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 5053,
                        "id": 5073,
                        "nodeType": "Return",
                        "src": "11100:8:19"
                      }
                    ]
                  },
                  "id": 5075,
                  "nodeType": "IfStatement",
                  "src": "10995:124:19",
                  "trueBody": {
                    "id": 5071,
                    "nodeType": "Block",
                    "src": "11020:60:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 5067,
                            "name": "rewardsBal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5055,
                            "src": "11041:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 5068,
                            "name": "rewardsPerBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4213,
                            "src": "11054:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11041:28:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 5053,
                        "id": 5070,
                        "nodeType": "Return",
                        "src": "11034:35:19"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d0863580",
            "id": 5077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "blocksRemaining",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10895:2:19"
            },
            "returnParameters": {
              "id": 5053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5052,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5077,
                  "src": "10914:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10914:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10913:9:19"
            },
            "scope": 5128,
            "src": "10871:254:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5108,
              "nodeType": "Block",
              "src": "11212:202:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5081,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11230:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11230:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5083,
                          "name": "devaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4205,
                          "src": "11244:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11230:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6465763a207775743f",
                        "id": 5085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11253:11:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        },
                        "value": "dev: wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        }
                      ],
                      "id": 5080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11222:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11222:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5087,
                  "nodeType": "ExpressionStatement",
                  "src": "11222:43:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5089,
                          "name": "tips",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4209,
                          "src": "11283:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11290:1:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11283:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6465763a2062726f6b65",
                        "id": 5092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11293:12:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9e90bf8c8678d4c5c05f36598b8e38aa6f142849c613a846dc9373143675b38",
                          "typeString": "literal_string \"dev: broke\""
                        },
                        "value": "dev: broke"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9e90bf8c8678d4c5c05f36598b8e38aa6f142849c613a846dc9373143675b38",
                          "typeString": "literal_string \"dev: broke\""
                        }
                      ],
                      "id": 5088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11275:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11275:31:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5094,
                  "nodeType": "ExpressionStatement",
                  "src": "11275:31:19"
                },
                {
                  "assignments": [
                    5096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5096,
                      "mutability": "mutable",
                      "name": "claimable",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5108,
                      "src": "11316:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5095,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11316:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5098,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 5097,
                    "name": "tips",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4209,
                    "src": "11336:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11316:24:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5099,
                      "name": "tips",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4209,
                      "src": "11350:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11357:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11350:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5102,
                  "nodeType": "ExpressionStatement",
                  "src": "11350:8:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5104,
                        "name": "devaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4205,
                        "src": "11388:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5105,
                        "name": "claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5096,
                        "src": "11397:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5103,
                      "name": "safeRewardsTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5049,
                      "src": "11368:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11368:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5107,
                  "nodeType": "ExpressionStatement",
                  "src": "11368:39:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "06af3dfd",
            "id": 5109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTips",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11202:2:19"
            },
            "returnParameters": {
              "id": 5079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11212:0:19"
            },
            "scope": 5128,
            "src": "11184:230:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5126,
              "nodeType": "Block",
              "src": "11505:88:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11523:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11523:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5117,
                          "name": "devaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4205,
                          "src": "11537:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11523:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6465763a207775743f",
                        "id": 5119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11546:11:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        },
                        "value": "dev: wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        }
                      ],
                      "id": 5114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11515:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11515:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5121,
                  "nodeType": "ExpressionStatement",
                  "src": "11515:43:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5122,
                      "name": "devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4205,
                      "src": "11568:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5123,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5111,
                      "src": "11578:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11568:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5125,
                  "nodeType": "ExpressionStatement",
                  "src": "11568:18:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8d88a90e",
            "id": 5127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dev",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5111,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5127,
                  "src": "11480:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11480:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11479:18:19"
            },
            "returnParameters": {
              "id": 5113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11505:0:19"
            },
            "scope": 5128,
            "src": "11467:126:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5129,
        "src": "950:10645:19"
      }
    ],
    "src": "0:11595:19"
  },
  "bytecode": "608060405234801561001057600080fd5b5061204b806100206000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c806364482f7911610125578063a8b973a1116100ad578063d18df53c1161007c578063d18df53c14610588578063d49e77cd146105b4578063d547741f146105bc578063d69de7e7146105e8578063e2bbb1581461061c5761021c565b8063a8b973a114610553578063c3a438241461055b578063ca15c87314610563578063d0863580146105805761021c565b80639010d07c116100f45780639010d07c1461049b57806391d14854146104be57806393f1a40b146104fe5780639ec5a89414610543578063a217fddf1461054b5761021c565b806364482f7914610403578063748365ef1461042e5780638d88a90e146104525780638dbb1e3a146104785761021c565b80632f2ff15d116101a857806351eb05a61161017757806351eb05a6146103755780635312ea8e146103925780635befdbca146103af5780635eeb6710146103f3578063630b5ba1146103fb5761021c565b80632f2ff15d146102f257806336568abe1461031e578063441a3e701461034a57806348cd4cb11461036d5761021c565b806317caf6f1116101ef57806317caf6f1146102b55780631a4e1e78146102bd5780631aed6553146102c5578063248a9ca3146102cd5780632c77f656146102ea5761021c565b8063037c99b01461022157806306af3dfd14610246578063081e3eda1461024e5780631526fe2714610268575b600080fd5b6102446004803603604081101561023757600080fd5b508035906020013561063f565b005b6102446106fc565b6102566107ad565b60408051918252519081900360200190f35b6102856004803603602081101561027e57600080fd5b50356107b4565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b6102566107f5565b6102566107fb565b610256610801565b610256600480360360208110156102e357600080fd5b5035610807565b61025661081c565b6102446004803603604081101561030857600080fd5b50803590602001356001600160a01b0316610821565b6102446004803603604081101561033457600080fd5b50803590602001356001600160a01b031661088d565b6102446004803603604081101561036057600080fd5b50803590602001356108ee565b610256610a4d565b6102446004803603602081101561038b57600080fd5b5035610a53565b610244600480360360208110156103a857600080fd5b5035610bb6565b610244600480360360a08110156103c557600080fd5b506001600160a01b038135811691602081013591604082013591606081013582169160809091013516610c52565b610256610cc1565b610244610cc7565b6102446004803603606081101561041957600080fd5b50803590602081013590604001351515610ce6565b610436610e11565b604080516001600160a01b039092168252519081900360200190f35b6102446004803603602081101561046857600080fd5b50356001600160a01b0316610e20565b6102566004803603604081101561048e57600080fd5b5080359060200135610e8d565b610436600480360360408110156104b157600080fd5b5080359060200135610efc565b6104ea600480360360408110156104d457600080fd5b50803590602001356001600160a01b0316610f1b565b604080519115158252519081900360200190f35b61052a6004803603604081101561051457600080fd5b50803590602001356001600160a01b0316610f33565b6040805192835260208301919091528051918290030190f35b610436610f57565b610256610f66565b610256610f6b565b610256610f71565b6102566004803603602081101561057957600080fd5b5035610f77565b610256610f8e565b6102566004803603604081101561059e57600080fd5b50803590602001356001600160a01b0316611033565b610436611195565b610244600480360360408110156105d257600080fd5b50803590602001356001600160a01b03166111a4565b610244600480360360608110156105fe57600080fd5b508035906001600160a01b03602082013516906040013515156111fd565b6102446004803603604081101561063257600080fd5b5080359060200135611450565b6001546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b15801561068a57600080fd5b505afa15801561069e573d6000803e3d6000fd5b505050506040513d60208110156106b457600080fd5b50516106f15760405162461bcd60e51b8152600401808060200182810382526024815260200180611f516024913960400191505060405180910390fd5b600691909155600855565b6003546001600160a01b03163314610747576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b60006005541161078b576040805162461bcd60e51b815260206004820152600a6024820152696465763a2062726f6b6560b01b604482015290519081900360640190fd5b6005805460009091556003546107aa906001600160a01b031682611562565b50565b600a545b90565b600a81815481106107c157fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b600c5481565b60055481565b60065481565b60009081526020819052604090206002015490565b600181565b6000828152602081905260409020600201546108449061083f6116f3565b610f1b565b61087f5760405162461bcd60e51b815260040180806020018281038252602f815260200180611ef2602f913960400191505060405180910390fd5b61088982826116f7565b5050565b6108956116f3565b6001600160a01b0316816001600160a01b0316146108e45760405162461bcd60e51b815260040180806020018281038252602f815260200180611fe7602f913960400191505060405180910390fd5b6108898282611760565b6000600a83815481106108fd57fe5b60009182526020808320868452600b825260408085203386529092529220805460049092029092019250831115610970576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b61097984610a53565b60006109b382600101546109ad64e8d4a510006109a7876003015487600001546117c990919063ffffffff16565b90611822565b90611864565b905080156109c5576109c53382611562565b83156109ef5781546109d79085611864565b825582546109ef906001600160a01b031633866118a6565b60038301548254610a0a9164e8d4a51000916109a7916117c9565b6001830155604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050505050565b600d5481565b6000600a8281548110610a6257fe5b9060005260206000209060040201905080600201544311610a8357506107aa565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610acd57600080fd5b505afa158015610ae1573d6000803e3d6000fd5b505050506040513d6020811015610af757600080fd5b5051905080610b0d5750436002909101556107aa565b6000610b1d836002015443610e8d565b90506000610b4a600c546109a78660010154610b44600754876117c990919063ffffffff16565b906117c9565b60045490915015610b8057610b7c610b736103e86109a7600454856117c990919063ffffffff16565b600554906118f8565b6005555b610ba1610b96846109a78464e8d4a510006117c9565b6003860154906118f8565b60038501555050436002909201919091555050565b6000600a8281548110610bc557fe5b60009182526020808320858452600b825260408085203380875293528420805485825560018201959095556004909302018054909450919291610c15916001600160a01b039190911690836118a6565b604080518281529051859133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a350505050565b60095460ff1615610c6257600080fd5b600280546001600160a01b039687166001600160a01b0319918216179091556000600c556009805460ff19166001908117909155600795909555600d939093556003805492861692841692909217909155825493169216919091179055565b60075481565b600a5460005b8181101561088957610cde81610a53565b600101610ccd565b60015460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b158015610d3157600080fd5b505afa158015610d45573d6000803e3d6000fd5b505050506040513d6020811015610d5b57600080fd5b5051610d985760405162461bcd60e51b8152600401808060200182810382526027815260200180611fc06027913960400191505060405180910390fd5b8015610da657610da6610cc7565b610de382610ddd600a8681548110610dba57fe5b906000526020600020906004020160010154600c5461186490919063ffffffff16565b906118f8565b600c8190555081600a8481548110610df757fe5b906000526020600020906004020160010181905550505050565b6001546001600160a01b031681565b6003546001600160a01b03163314610e6b576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60006006548211610eb057600854610ea990610b448486611864565b9050610ef6565b6006548310610ec357610ea98284611864565b610ea9610edb6006548461186490919063ffffffff16565b610ddd600854610b448760065461186490919063ffffffff16565b92915050565b6000828152602081905260408120610f149083611952565b9392505050565b6000828152602081905260408120610f14908361195e565b600b6020908152600092835260408084209091529082529020805460019091015482565b6002546001600160a01b031681565b600081565b60085481565b60045481565b6000818152602081905260408120610ef690611973565b600254604080516370a0823160e01b8152306004820152905160009283926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b158015610fde57600080fd5b505afa158015610ff2573d6000803e3d6000fd5b505050506040513d602081101561100857600080fd5b50516007549091501561102957600754818161102057fe5b049150506107b1565b60009150506107b1565b600080600a848154811061104357fe5b60009182526020808320878452600b825260408085206001600160a01b03898116875290845281862060049586029093016003810154815484516370a0823160e01b81523098810198909852935191985093969395939492909116926370a08231926024808301939192829003018186803b1580156110c157600080fd5b505afa1580156110d5573d6000803e3d6000fd5b505050506040513d60208110156110eb57600080fd5b505160028501549091504311801561110257508015155b15611162576000611117856002015443610e8d565b9050600061113e600c546109a78860010154610b44600754876117c990919063ffffffff16565b905061115d611156846109a78464e8d4a510006117c9565b85906118f8565b935050505b61118a83600101546109ad64e8d4a510006109a78688600001546117c990919063ffffffff16565b979650505050505050565b6003546001600160a01b031681565b6000828152602081905260409020600201546111c29061083f6116f3565b6108e45760405162461bcd60e51b8152600401808060200182810382526030815260200180611f216030913960400191505060405180910390fd5b6001546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b15801561124857600080fd5b505afa15801561125c573d6000803e3d6000fd5b505050506040513d602081101561127257600080fd5b5051806112f257506001546040805163089d855960e11b815233600482015290516001600160a01b039092169163113b0ab291602480820192602092909190829003018186803b1580156112c557600080fd5b505afa1580156112d9573d6000803e3d6000fd5b505050506040513d60208110156112ef57600080fd5b50515b61132d5760405162461bcd60e51b8152600401808060200182810382526024815260200180611f516024913960400191505060405180910390fd5b801561133b5761133b610cc7565b6000600d54431161134e57600d54611350565b435b600c5490915061136090856118f8565b600c55604080516080810182526001600160a01b03948516815260208101958652908101918252600060608201818152600a8054600181018255925291517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8600490920291820180546001600160a01b031916919096161790945593517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a9840155517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa8301555090517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ab90910155565b6000600a838154811061145f57fe5b60009182526020808320868452600b8252604080852033865290925292206004909102909101915061149084610a53565b8054156114d95760006114c582600101546109ad64e8d4a510006109a7876003015487600001546117c990919063ffffffff16565b905080156114d7576114d73382611562565b505b82156115055781546114f6906001600160a01b031633308661197e565b805461150290846118f8565b81555b600382015481546115209164e8d4a51000916109a7916117c9565b6001820155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b600254604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156115ad57600080fd5b505afa1580156115c1573d6000803e3d6000fd5b505050506040513d60208110156115d757600080fd5b505190508082111561166b576002546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561163957600080fd5b505af115801561164d573d6000803e3d6000fd5b505050506040513d602081101561166357600080fd5b506116ee9050565b6002546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156116c157600080fd5b505af11580156116d5573d6000803e3d6000fd5b505050506040513d60208110156116eb57600080fd5b50505b505050565b3390565b600082815260208190526040902061170f90826119de565b156108895761171c6116f3565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260208190526040902061177890826119f3565b15610889576117856116f3565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000826117d857506000610ef6565b828202828482816117e557fe5b0414610f145760405162461bcd60e51b8152600401808060200182810382526021815260200180611f756021913960400191505060405180910390fd5b6000610f1483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611a08565b6000610f1483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611aaa565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526116ee908490611b04565b600082820183811015610f14576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610f148383611bb5565b6000610f14836001600160a01b038416611c19565b6000610ef682611c31565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526119d8908590611b04565b50505050565b6000610f14836001600160a01b038416611c35565b6000610f14836001600160a01b038416611c7f565b60008183611a945760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a59578181015183820152602001611a41565b50505050905090810190601f168015611a865780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581611aa057fe5b0495945050505050565b60008184841115611afc5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611a59578181015183820152602001611a41565b505050900390565b6060611b59826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d459092919063ffffffff16565b8051909150156116ee57808060200190516020811015611b7857600080fd5b50516116ee5760405162461bcd60e51b815260040180806020018281038252602a815260200180611f96602a913960400191505060405180910390fd5b81546000908210611bf75760405162461bcd60e51b8152600401808060200182810382526022815260200180611ed06022913960400191505060405180910390fd5b826000018281548110611c0657fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6000611c418383611c19565b611c7757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610ef6565b506000610ef6565b60008181526001830160205260408120548015611d3b5783546000198083019190810190600090879083908110611cb257fe5b9060005260206000200154905080876000018481548110611ccf57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611cff57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610ef6565b6000915050610ef6565b6060611d548484600085611d5c565b949350505050565b6060611d6785611ec9565b611db8576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611df75780518252601f199092019160209182019101611dd8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611e59576040519150601f19603f3d011682016040523d82523d6000602084013e611e5e565b606091505b50915091508115611e72579150611d549050565b805115611e825780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315611a59578181015183820152602001611a41565b3b15159056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654d6173746572436865662e6164643a2053656e646572206d7573742062652061646d696e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644d6173746572436865662e7365743a2053656e646572206d757374206265206f70657261746f72416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220ae3ea3ef9075d4f77604e6f966b3a380e0cf8984fb4d1839237a34671b6b363364736f6c634300060c0033",
  "bytecodeSha1": "d8b51276f6281f68714ea2c7cce69e0e0c57a4e6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "MasterChef",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "AccessControl._grantRole": {
          "135": [
            7088,
            7121,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "136": [
            7279,
            7315,
            false
          ]
        },
        "AccessControl.grantRole": {
          "132": [
            4717,
            4762,
            true
          ]
        },
        "AccessControl.renounceRole": {
          "133": [
            5894,
            5917,
            true
          ]
        },
        "AccessControl.revokeRole": {
          "134": [
            5175,
            5220,
            true
          ]
        }
      },
      "11": {},
      "19": {
        "MasterChef.addToken": {
          "124": [
            4797,
            4836,
            true
          ],
          "125": [
            4840,
            4887,
            true
          ],
          "126": [
            4963,
            4974,
            false
          ],
          "127": [
            5053,
            5078,
            true
          ]
        },
        "MasterChef.blocksRemaining": {
          "121": [
            10999,
            11018,
            false
          ]
        },
        "MasterChef.claimTips": {
          "107": [
            11230,
            11251,
            true
          ],
          "108": [
            11283,
            11291,
            true
          ]
        },
        "MasterChef.deposit": {
          "128": [
            8609,
            8624,
            false
          ],
          "129": [
            8746,
            8757,
            false
          ],
          "130": [
            8854,
            8865,
            false
          ]
        },
        "MasterChef.dev": {
          "118": [
            11523,
            11544,
            true
          ]
        },
        "MasterChef.getMultiplier": {
          "119": [
            6059,
            6079,
            false
          ],
          "120": [
            6158,
            6180,
            false
          ]
        },
        "MasterChef.initFarm": {
          "115": [
            3812,
            3824,
            true
          ]
        },
        "MasterChef.pendingRewards": {
          "122": [
            6767,
            6802,
            false
          ],
          "123": [
            6806,
            6819,
            false
          ]
        },
        "MasterChef.safeRewardsTransfer": {
          "131": [
            10639,
            10659,
            false
          ]
        },
        "MasterChef.set": {
          "116": [
            5568,
            5610,
            true
          ],
          "117": [
            5689,
            5700,
            false
          ]
        },
        "MasterChef.setBonus": {
          "106": [
            4227,
            4266,
            true
          ]
        },
        "MasterChef.updatePool": {
          "112": [
            7641,
            7677,
            false
          ],
          "113": [
            7789,
            7802,
            false
          ],
          "114": [
            8083,
            8100,
            false
          ]
        },
        "MasterChef.withdraw": {
          "109": [
            9382,
            9404,
            true
          ],
          "110": [
            9565,
            9576,
            false
          ],
          "111": [
            9655,
            9666,
            false
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "147": [
            986,
            992,
            true
          ]
        },
        "SafeMath.div": {
          "148": [
            3826,
            3831,
            true
          ]
        },
        "SafeMath.mul": {
          "145": [
            2479,
            2485,
            false
          ],
          "146": [
            2565,
            2575,
            true
          ]
        },
        "SafeMath.sub": {
          "149": [
            1859,
            1865,
            true
          ]
        }
      },
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "143": [
            3487,
            3508,
            false
          ],
          "144": [
            3616,
            3646,
            true
          ]
        }
      },
      "6": {
        "Address._functionCallWithValue": {
          "137": [
            5082,
            5100,
            true
          ],
          "138": [
            5296,
            5303,
            false
          ],
          "139": [
            5437,
            5458,
            false
          ]
        }
      },
      "67": {},
      "7": {
        "EnumerableSet._add": {
          "141": [
            1695,
            1716,
            false
          ]
        },
        "EnumerableSet._at": {
          "140": [
            4517,
            4543,
            true
          ]
        },
        "EnumerableSet._remove": {
          "142": [
            2420,
            2435,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "69": [
            670,
            687
          ]
        }
      },
      "1": {
        "AccessControl._grantRole": {
          "70": [
            7137,
            7182
          ]
        },
        "AccessControl._revokeRole": {
          "71": [
            7331,
            7376
          ]
        },
        "AccessControl.getRoleAdmin": {
          "8": [
            4348,
            4377
          ]
        },
        "AccessControl.getRoleMember": {
          "49": [
            4047,
            4084
          ]
        },
        "AccessControl.getRoleMemberCount": {
          "51": [
            3327,
            3363
          ]
        },
        "AccessControl.grantRole": {
          "9": [
            4709,
            4814
          ],
          "10": [
            4825,
            4850
          ]
        },
        "AccessControl.hasRole": {
          "50": [
            3025,
            3070
          ]
        },
        "AccessControl.renounceRole": {
          "11": [
            5886,
            5969
          ],
          "12": [
            5980,
            6006
          ]
        },
        "AccessControl.revokeRole": {
          "56": [
            5167,
            5273
          ]
        }
      },
      "11": {},
      "19": {
        "MasterChef.addToken": {
          "57": [
            4776,
            4949
          ],
          "58": [
            4990,
            5007
          ],
          "59": [
            5116,
            5166
          ],
          "60": [
            5176,
            5360
          ]
        },
        "MasterChef.blocksRemaining": {
          "52": [
            11034,
            11069
          ],
          "53": [
            11100,
            11108
          ]
        },
        "MasterChef.claimTips": {
          "3": [
            11222,
            11265
          ],
          "4": [
            11275,
            11306
          ],
          "5": [
            11350,
            11358
          ],
          "6": [
            11368,
            11407
          ]
        },
        "MasterChef.deposit": {
          "61": [
            8579,
            8595
          ],
          "62": [
            8777,
            8817
          ],
          "63": [
            8881,
            8955
          ],
          "64": [
            8969,
            9007
          ],
          "65": [
            9027,
            9095
          ],
          "66": [
            9105,
            9144
          ]
        },
        "MasterChef.dev": {
          "44": [
            11515,
            11558
          ],
          "45": [
            11568,
            11586
          ]
        },
        "MasterChef.emergencyWithdraw": {
          "26": [
            10206,
            10221
          ],
          "27": [
            10231,
            10250
          ],
          "28": [
            10260,
            10314
          ],
          "29": [
            10324,
            10372
          ]
        },
        "MasterChef.getMultiplier": {
          "46": [
            6095,
            6137
          ],
          "47": [
            6196,
            6217
          ],
          "48": [
            6248,
            6358
          ]
        },
        "MasterChef.initFarm": {
          "30": [
            3804,
            3825
          ],
          "31": [
            3835,
            3861
          ],
          "32": [
            3871,
            3890
          ],
          "33": [
            3900,
            3918
          ],
          "34": [
            3928,
            3962
          ],
          "35": [
            3972,
            3996
          ],
          "36": [
            4006,
            4024
          ],
          "37": [
            4034,
            4086
          ]
        },
        "MasterChef.massUpdatePools": {
          "38": [
            7433,
            7448
          ],
          "39": [
            7412,
            7417
          ]
        },
        "MasterChef.pendingRewards": {
          "54": [
            7029,
            7110
          ],
          "55": [
            7130,
            7203
          ]
        },
        "MasterChef.poolLength": {
          "7": [
            4490,
            4512
          ]
        },
        "MasterChef.safeRewardsTransfer": {
          "67": [
            10675,
            10708
          ],
          "68": [
            10739,
            10769
          ]
        },
        "MasterChef.set": {
          "40": [
            5547,
            5675
          ],
          "41": [
            5716,
            5733
          ],
          "42": [
            5753,
            5834
          ],
          "43": [
            5844,
            5883
          ]
        },
        "MasterChef.setBonus": {
          "0": [
            4206,
            4328
          ],
          "1": [
            4339,
            4369
          ],
          "2": [
            4379,
            4413
          ]
        },
        "MasterChef.updatePool": {
          "20": [
            7693,
            7700
          ],
          "21": [
            7818,
            7853
          ],
          "22": [
            7867,
            7874
          ],
          "23": [
            8116,
            8174
          ],
          "24": [
            8194,
            8285
          ],
          "25": [
            8295,
            8330
          ]
        },
        "MasterChef.withdraw": {
          "13": [
            9374,
            9427
          ],
          "14": [
            9437,
            9453
          ],
          "15": [
            9592,
            9632
          ],
          "16": [
            9682,
            9720
          ],
          "17": [
            9734,
            9789
          ],
          "18": [
            9809,
            9877
          ],
          "19": [
            9887,
            9927
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "77": [
            978,
            1024
          ]
        },
        "SafeMath.div": {
          "74": [
            3178,
            3224
          ],
          "84": [
            3818,
            3846
          ]
        },
        "SafeMath.mul": {
          "72": [
            2501,
            2509
          ],
          "73": [
            2557,
            2613
          ]
        },
        "SafeMath.sub": {
          "75": [
            1398,
            1448
          ],
          "85": [
            1851,
            1880
          ]
        }
      },
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "86": [
            3608,
            3693
          ]
        },
        "SafeERC20.safeTransfer": {
          "76": [
            778,
            864
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "81": [
            977,
            1073
          ]
        }
      },
      "6": {
        "Address._functionCallWithValue": {
          "102": [
            5074,
            5134
          ],
          "103": [
            5319,
            5336
          ],
          "104": [
            5827,
            5847
          ]
        },
        "Address.functionCall": {
          "101": [
            3700,
            3760
          ]
        },
        "Address.isContract": {
          "105": [
            1109,
            1124
          ]
        }
      },
      "67": {},
      "7": {
        "EnumerableSet._add": {
          "91": [
            1732,
            1755
          ],
          "92": [
            1890,
            1930
          ],
          "93": [
            1944,
            1955
          ],
          "94": [
            1986,
            1998
          ]
        },
        "EnumerableSet._at": {
          "87": [
            4509,
            4582
          ],
          "88": [
            4592,
            4617
          ]
        },
        "EnumerableSet._contains": {
          "89": [
            3865,
            3896
          ]
        },
        "EnumerableSet._length": {
          "90": [
            4059,
            4084
          ]
        },
        "EnumerableSet._remove": {
          "95": [
            3245,
            3283
          ],
          "96": [
            3349,
            3392
          ],
          "97": [
            3498,
            3515
          ],
          "98": [
            3583,
            3609
          ],
          "99": [
            3624,
            3635
          ],
          "100": [
            3666,
            3678
          ]
        },
        "EnumerableSet.add": {
          "82": [
            4950,
            4998
          ]
        },
        "EnumerableSet.at": {
          "78": [
            6178,
            6225
          ]
        },
        "EnumerableSet.contains": {
          "79": [
            5497,
            5550
          ]
        },
        "EnumerableSet.length": {
          "80": [
            5720,
            5746
          ]
        },
        "EnumerableSet.remove": {
          "83": [
            5262,
            5313
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.2.0/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/EnumerableSet",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/IERC20",
    "IMisoFarm",
    "MISOAccessControls",
    "MISOAdminAccess",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "950:10645:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4099:321;;;;;;;;;;;;;;;;-1:-1:-1;4099:321:19;;;;;;;:::i;:::-;;11184:230;;;:::i;4426:93::-;;;:::i;:::-;;;;;;;;;;;;;;;;3001:26;;;;;;;;;;;;;;;;-1:-1:-1;3001:26:19;;:::i;:::-;;;;-1:-1:-1;;;;;3001:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3240:30;;;:::i;2566:19::-;;;:::i;2643:28::-;;;:::i;4272:112:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4272:112:1;;:::i;2873:40:19:-;;;:::i;4634:223:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4634:223:1;;;;;;-1:-1:-1;;;;;4634:223:1;;:::i;5808:205::-;;;;;;;;;;;;;;;;-1:-1:-1;5808:205:1;;;;;;-1:-1:-1;;;;;5808:205:1;;:::i;9200:734:19:-;;;;;;;;;;;;;;;;-1:-1:-1;9200:734:19;;;;;;;:::i;3328:25::-;;;:::i;7538:799::-;;;;;;;;;;;;;;;;-1:-1:-1;7538:799:19;;:::i;10002:377::-;;;;;;;;;;;;;;;;-1:-1:-1;10002:377:19;;:::i;3606:487::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3606:487:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2717:30::-;;;:::i;7290:175::-;;;:::i;5463:427::-;;;;;;;;;;;;;;;;-1:-1:-1;5463:427:19;;;;;;;;;;;;;;:::i;1069:40::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1069:40:19;;;;;;;;;;;;;;11467:126;;;;;;;;;;;;;;;;-1:-1:-1;11467:126:19;-1:-1:-1;;;;;11467:126:19;;:::i;5964:411::-;;;;;;;;;;;;;;;;-1:-1:-1;5964:411:19;;;;;;;:::i;3955:136:1:-;;;;;;;;;;;;;;;;-1:-1:-1;3955:136:1;;;;;;;:::i;2940:137::-;;;;;;;;;;;;;;;;-1:-1:-1;2940:137:1;;;;;;-1:-1:-1;;;;;2940:137:1;;:::i;:::-;;;;;;;;;;;;;;;;;;3081:66:19;;;;;;;;;;;;;;;;-1:-1:-1;3081:66:19;;;;;;-1:-1:-1;;;;;3081:66:19;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2379:21;;;:::i;1717:49:1:-;;;:::i;2802:30:19:-;;;:::i;2501:28::-;;;:::i;3245:125:1:-;;;;;;;;;;;;;;;;-1:-1:-1;3245:125:1;;:::i;10871:254:19:-;;;:::i;6437:773::-;;;;;;;;;;;;;;;;-1:-1:-1;6437:773:19;;;;;;-1:-1:-1;;;;;6437:773:19;;:::i;2426:22::-;;;:::i;5091:226:1:-;;;;;;;;;;;;;;;;-1:-1:-1;5091:226:1;;;;;;-1:-1:-1;;;;;5091:226:1;;:::i;4684:683:19:-;;;;;;;;;;;;;;;;-1:-1:-1;4684:683:19;;;-1:-1:-1;;;;;4684:683:19;;;;;;;;;;;;:::i;8406:745::-;;;;;;;;;;;;;;;;-1:-1:-1;8406:745:19;;;;;;;:::i;4099:321::-;4227:14;;:39;;;-1:-1:-1;;;4227:39:19;;4255:10;4227:39;;;;;;-1:-1:-1;;;;;4227:14:19;;;;:27;;:39;;;;;;;;;;;;;;;:14;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4227:39:19;4206:122;;;;-1:-1:-1;;;4206:122:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4339:13;:30;;;;4379:15;:34;4099:321::o;11184:230::-;11244:7;;-1:-1:-1;;;;;11244:7:19;11230:10;:21;11222:43;;;;;-1:-1:-1;;;11222:43:19;;;;;;;;;;;;-1:-1:-1;;;11222:43:19;;;;;;;;;;;;;;;11290:1;11283:4;;:8;11275:31;;;;;-1:-1:-1;;;11275:31:19;;;;;;;;;;;;-1:-1:-1;;;11275:31:19;;;;;;;;;;;;;;;11336:4;;;11316:17;11350:8;;;11388:7;;11368:39;;-1:-1:-1;;;;;11388:7:19;11336:4;11368:19;:39::i;:::-;11184:230;:::o;4426:93::-;4497:8;:15;4426:93;;:::o;3001:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3001:26:19;;;;-1:-1:-1;3001:26:19;;;:::o;3240:30::-;;;;:::o;2566:19::-;;;;:::o;2643:28::-;;;;:::o;4272:112:1:-;4329:7;4355:12;;;;;;;;;;:22;;;;4272:112::o;2873:40:19:-;2912:1;2873:40;:::o;4634:223:1:-;4725:6;:12;;;;;;;;;;:22;;;4717:45;;4749:12;:10;:12::i;:::-;4717:7;:45::i;:::-;4709:105;;;;-1:-1:-1;;;4709:105:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;5808:205::-;5905:12;:10;:12::i;:::-;-1:-1:-1;;;;;5894:23:1;:7;-1:-1:-1;;;;;5894:23:1;;5886:83;;;;-1:-1:-1;;;5886:83:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;9200:734:19:-;9266:21;9290:8;9299:4;9290:14;;;;;;;;;;;;;;;;9338;;;:8;:14;;;;;;9353:10;9338:26;;;;;;;9382:11;;9290:14;;;;;;;;-1:-1:-1;9382:22:19;-1:-1:-1;9382:22:19;9374:53;;;;;-1:-1:-1;;;9374:53:19;;;;;;;;;;;;-1:-1:-1;;;9374:53:19;;;;;;;;;;;;;;;9437:16;9448:4;9437:10;:16::i;:::-;9463:15;9481:71;9536:4;:15;;;9481:50;9526:4;9481:40;9497:4;:23;;;9481:4;:11;;;:15;;:40;;;;:::i;:::-;:44;;:50::i;:::-;:54;;:71::i;:::-;9463:89;-1:-1:-1;9565:11:19;;9562:81;;9592:40;9612:10;9624:7;9592:19;:40::i;:::-;9655:11;;9652:148;;9696:11;;:24;;9712:7;9696:15;:24::i;:::-;9682:38;;9734:12;;:55;;-1:-1:-1;;;;;9734:12:19;9768:10;9781:7;9734:25;:55::i;:::-;9843:23;;;;9827:11;;:50;;9872:4;;9827:40;;:15;:40::i;:50::-;9809:15;;;:68;9892:35;;;;;;;;9913:4;;9901:10;;9892:35;;;;;;;;;9200:734;;;;;:::o;3328:25::-;;;;:::o;7538:799::-;7589:21;7613:8;7622:4;7613:14;;;;;;;;;;;;;;;;;;7589:38;;7657:4;:20;;;7641:12;:36;7637:73;;7693:7;;;7637:73;7738:12;;:37;;;-1:-1:-1;;;7738:37:19;;7769:4;7738:37;;;;;;7719:16;;-1:-1:-1;;;;;7738:12:19;;:22;;:37;;;;;;;;;;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7738:37:19;;-1:-1:-1;7789:13:19;7785:99;;-1:-1:-1;7841:12:19;7818:20;;;;:35;7867:7;;7785:99;7893:18;7914:49;7928:4;:20;;;7950:12;7914:13;:49::i;:::-;7893:70;;7973:20;7996:73;8053:15;;7996:52;8032:4;:15;;;7996:31;8011:15;;7996:10;:14;;:31;;;;:::i;:::-;:35;;:52::i;:73::-;8083:13;;7973:96;;-1:-1:-1;8083:17:19;8079:106;;8123:51;8132:41;8168:4;8132:31;8149:13;;8132:12;:16;;:31;;;;:::i;:41::-;8123:4;;;:8;:51::i;:::-;8116:4;:58;8079:106;8220:65;8248:36;8275:8;8248:22;:12;8265:4;8248:16;:22::i;:36::-;8220:23;;;;;:27;:65::i;:::-;8194:23;;;:91;-1:-1:-1;;8318:12:19;8295:20;;;;:35;;;;-1:-1:-1;7538:799:19;:::o;10002:377::-;10060:21;10084:8;10093:4;10084:14;;;;;;;;;;;;;;;;10132;;;:8;:14;;;;;;10147:10;10132:26;;;;;;;10185:11;;10206:15;;;-1:-1:-1;10231:15:19;;:19;;;;10084:14;;;;;10260:12;;10084:14;;-1:-1:-1;10132:26:19;;10185:11;10260:54;;-1:-1:-1;;;;;10260:12:19;;;;;10185:11;10260:25;:54::i;:::-;10329:43;;;;;;;;10359:4;;10347:10;;10329:43;;;;;;;;;10002:377;;;;:::o;3606:487::-;3813:11;;;;3812:12;3804:21;;;;;;3835:7;:26;;-1:-1:-1;;;;;3835:26:19;;;-1:-1:-1;;;;;;3835:26:19;;;;;;;:7;3871:15;:19;3900:11;:18;;-1:-1:-1;;3900:18:19;3835:26;3900:18;;;;;;3928:15;:34;;;;3972:10;:24;;;;-1:-1:-1;4006:18:19;;;;;;;;;;;;;;;4034:52;;;;;;;;;;;;3606:487::o;2717:30::-;;;;:::o;7290:175::-;7351:8;:15;7334:14;7376:83;7404:6;7398:3;:12;7376:83;;;7433:15;7444:3;7433:10;:15::i;:::-;7412:5;;7376:83;;5463:427;5568:14;;:42;;;-1:-1:-1;;;5568:42:19;;5599:10;5568:42;;;;;;-1:-1:-1;;;;;5568:14:19;;;;:30;;:42;;;;;;;;;;;;;;;:14;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5568:42:19;5547:128;;;;-1:-1:-1;;;5547:128:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5689:11;5685:59;;;5716:17;:15;:17::i;:::-;5771:63;5822:11;5771:46;5791:8;5800:4;5791:14;;;;;;;;;;;;;;;;;;:25;;;5771:15;;:19;;:46;;;;:::i;:::-;:50;;:63::i;:::-;5753:15;:81;;;;5872:11;5844:8;5853:4;5844:14;;;;;;;;;;;;;;;;;;:25;;:39;;;;5463:427;;;:::o;1069:40::-;;;-1:-1:-1;;;;;1069:40:19;;:::o;11467:126::-;11537:7;;-1:-1:-1;;;;;11537:7:19;11523:10;:21;11515:43;;;;;-1:-1:-1;;;11515:43:19;;;;;;;;;;;;-1:-1:-1;;;11515:43:19;;;;;;;;;;;;;;;11568:7;:18;;-1:-1:-1;;;;;;11568:18:19;-1:-1:-1;;;;;11568:18:19;;;;;;;;;;11467:126::o;5964:411::-;6036:7;6066:13;;6059:3;:20;6055:314;;6121:15;;6102:35;;:14;:3;6110:5;6102:7;:14::i;:35::-;6095:42;;;;6055:314;6167:13;;6158:5;:22;6154:215;;6203:14;:3;6211:5;6203:7;:14::i;6154:215::-;6255:103;6322:22;6330:13;;6322:3;:7;;:22;;;;:::i;:::-;6255:45;6284:15;;6255:24;6273:5;6255:13;;:17;;:24;;;;:::i;6154:215::-;5964:411;;;;:::o;3955:136:1:-;4028:7;4054:12;;;;;;;;;;:30;;4078:5;4054:23;:30::i;:::-;4047:37;3955:136;-1:-1:-1;;;3955:136:1:o;2940:137::-;3009:4;3032:12;;;;;;;;;;:38;;3062:7;3032:29;:38::i;3081:66:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2379:21::-;;;-1:-1:-1;;;;;2379:21:19;;:::o;1717:49:1:-;1762:4;1717:49;:::o;2802:30:19:-;;;;:::o;2501:28::-;;;;:::o;3245:125:1:-;3308:7;3334:12;;;;;;;;;;:29;;:27;:29::i;10871:254:19:-;10953:7;;:32;;;-1:-1:-1;;;10953:32:19;;10979:4;10953:32;;;;;;10914:7;;;;-1:-1:-1;;;;;10953:7:19;;;;:17;;:32;;;;;;;;;;;;;;;:7;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10953:32:19;10999:15;;10953:32;;-1:-1:-1;10999:19:19;10995:124;;11054:15;;11041:10;:28;;;;;;11034:35;;;;;10995:124;11107:1;11100:8;;;;;6437:773;6513:7;6532:21;6556:8;6565:4;6556:14;;;;;;;;;;;;;;;;6604;;;:8;:14;;;;;;-1:-1:-1;;;;;6604:21:19;;;;;;;;;;;6556:14;;;;;;;6664:23;;;;6716:12;;:37;;-1:-1:-1;;;6716:37:19;;6747:4;6716:37;;;;;;;;;6556:14;;-1:-1:-1;6604:21:19;;6664:23;;6556:14;;6716:12;;;;;:22;;:37;;;;;6556:14;;6716:37;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6716:37:19;6782:20;;;;6716:37;;-1:-1:-1;6767:12:19;:35;:52;;;;-1:-1:-1;6806:13:19;;;6767:52;6763:358;;;6835:18;6856:49;6870:4;:20;;;6892:12;6856:13;:49::i;:::-;6835:70;;6919:20;6942:73;6999:15;;6942:52;6978:4;:15;;;6942:31;6957:15;;6942:10;:14;;:31;;;;:::i;:73::-;6919:96;-1:-1:-1;7050:60:19;7073:36;7100:8;7073:22;6919:96;7090:4;7073:16;:22::i;:36::-;7050:18;;:22;:60::i;:::-;7029:81;;6763:358;;;7137:66;7187:4;:15;;;7137:45;7177:4;7137:35;7153:18;7137:4;:11;;;:15;;:35;;;;:::i;:66::-;7130:73;6437:773;-1:-1:-1;;;;;;;6437:773:19:o;2426:22::-;;;-1:-1:-1;;;;;2426:22:19;;:::o;5091:226:1:-;5183:6;:12;;;;;;;;;;:22;;;5175:45;;5207:12;:10;:12::i;5175:45::-;5167:106;;;;-1:-1:-1;;;5167:106:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4684:683:19;4797:14;;:39;;;-1:-1:-1;;;4797:39:19;;4825:10;4797:39;;;;;;-1:-1:-1;;;;;4797:14:19;;;;:27;;:39;;;;;;;;;;;;;;;:14;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4797:39:19;;:90;;-1:-1:-1;4840:14:19;;:47;;;-1:-1:-1;;;4840:47:19;;4876:10;4840:47;;;;;;-1:-1:-1;;;;;4840:14:19;;;;:35;;:47;;;;;;;;;;;;;;;:14;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4840:47:19;4797:90;4776:173;;;;-1:-1:-1;;;4776:173:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4963:11;4959:59;;;4990:17;:15;:17::i;:::-;5027:23;5068:10;;5053:12;:25;:53;;5096:10;;5053:53;;;5081:12;5053:53;5134:15;;5027:79;;-1:-1:-1;5134:32:19;;5154:11;5134:19;:32::i;:::-;5116:15;:50;5190:169;;;;;;;;-1:-1:-1;;;;;5190:169:19;;;;;;;;;;;;;;;;;-1:-1:-1;5190:169:19;;;;;;5176:8;:184;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5176:184:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5176:184:19;;;;;;;4684:683::o;8406:745::-;8471:21;8495:8;8504:4;8495:14;;;;;;;;;;;;;;;;8543;;;:8;:14;;;;;;8558:10;8543:26;;;;;;;8495:14;;;;;;;;-1:-1:-1;8579:16:19;8552:4;8579:10;:16::i;:::-;8609:11;;:15;8605:237;;8640:15;8658:71;8713:4;:15;;;8658:50;8703:4;8658:40;8674:4;:23;;;8658:4;:11;;;:15;;:40;;;;:::i;:71::-;8640:89;-1:-1:-1;8746:11:19;;8743:89;;8777:40;8797:10;8809:7;8777:19;:40::i;:::-;8605:237;;8854:11;;8851:167;;8881:12;;:74;;-1:-1:-1;;;;;8881:12:19;8919:10;8940:4;8947:7;8881:29;:74::i;:::-;8983:11;;:24;;8999:7;8983:15;:24::i;:::-;8969:38;;8851:167;9061:23;;;;9045:11;;:50;;9090:4;;9045:40;;:15;:40::i;:50::-;9027:15;;;:68;9110:34;;;;;;;;9130:4;;9118:10;;9110:34;;;;;;;;;8406:745;;;;:::o;10494:292::-;10593:7;;:32;;;-1:-1:-1;;;10593:32:19;;10619:4;10593:32;;;;;;10572:18;;-1:-1:-1;;;;;10593:7:19;;:17;;:32;;;;;;;;;;;;;;:7;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10593:32:19;;-1:-1:-1;10639:20:19;;;10635:145;;;10675:7;;:33;;;-1:-1:-1;;;10675:33:19;;-1:-1:-1;;;;;10675:33:19;;;;;;;;;;;;;;;:7;;;;;:16;;:33;;;;;;;;;;;;;;:7;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10635:145:19;;-1:-1:-1;10635:145:19;;10739:7;;:30;;;-1:-1:-1;;;10739:30:19;;-1:-1:-1;;;;;10739:30:19;;;;;;;;;;;;;;;:7;;;;;:16;;:30;;;;;;;;;;;;;;:7;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10635:145:19;10494:292;;;:::o;590:104:0:-;677:10;590:104;:::o;7015:184:1:-;7088:6;:12;;;;;;;;;;:33;;7113:7;7088:24;:33::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:1;7160:7;-1:-1:-1;;;;;7142:40:1;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;7205:188::-;7279:6;:12;;;;;;;;;;:36;;7307:7;7279:27;:36::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;-1:-1:-1;;;;;7336:40:1;7354:7;-1:-1:-1;;;;;7336:40:1;7348:4;7336:40;;;;;;;;;;7205:188;;:::o;2180:459:3:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:3;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3101:130;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;1321:134::-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;696:175:5:-;805:58;;;-1:-1:-1;;;;;805:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;805:58:5;-1:-1:-1;;;805:58:5;;;778:86;;798:5;;778:19;:86::i;874:176:3:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;6085:147:7;6159:7;6201:22;6205:3;6217:5;6201:3;:22::i;5401:156::-;5481:4;5504:46;5514:3;-1:-1:-1;;;;;5534:14:7;;5504:9;:46::i;5638:115::-;5701:7;5727:19;5735:3;5727:7;:19::i;877:203:5:-;1004:68;;;-1:-1:-1;;;;;1004:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1004:68:5;-1:-1:-1;;;1004:68:5;;;977:96;;997:5;;977:19;:96::i;:::-;877:203;;;;:::o;4864:141:7:-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:7;;4957:4;:41::i;5173:147::-;5246:4;5269:44;5277:3;-1:-1:-1;;;;;5297:14:7;;5269:7;:44::i;3713:272:3:-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:3:o;1746:187::-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:3;;;1746:187::o;2959:751:5:-;3378:23;3404:69;3432:4;3404:69;;;;;;;;;;;;;;;;;3412:5;-1:-1:-1;;;;;3404:27:5;;;:69;;;;;:::i;:::-;3487:17;;3378:95;;-1:-1:-1;3487:21:5;3483:221;;3627:10;3616:30;;;;;;;;;;;;;;;-1:-1:-1;3616:30:5;3608:85;;;;-1:-1:-1;;;3608:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4423:201:7;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:7;;;;-1:-1:-1;;;4509:73:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;3984:107::-;4066:18;;3984:107::o;1611:404::-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;1732:23:7;;;;;;;;:11;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:7;1986:12;;2183:1512;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:7;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;;3573:194:6;3676:12;3707:53;3730:6;3738:4;3744:1;3747:12;3707:22;:53::i;:::-;3700:60;3573:194;-1:-1:-1;;;;3573:194:6:o;4920:958::-;5050:12;5082:18;5093:6;5082:10;:18::i;:::-;5074:60;;;;;-1:-1:-1;;;5074:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;5205:12;5219:23;5246:6;-1:-1:-1;;;;;5246:11:6;5266:8;5277:4;5246:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5246:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5204:78;;;;5296:7;5292:580;;;5326:10;-1:-1:-1;5319:17:6;;-1:-1:-1;5319:17:6;5292:580;5437:17;;:21;5433:429;;5695:10;5689:17;5755:15;5742:10;5738:2;5734:19;5727:44;5644:145;5827:20;;-1:-1:-1;;;5827:20:6;;;;;;;;;;;;;;;;;5834:12;;5827:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:413;1078:20;1116:8;;;718:413::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      }
    },
    "version": 1
  },
  "offset": [
    950,
    11595
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64482F79 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xA8B973A1 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD18DF53C GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD18DF53C EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xD69DE7E7 EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x61C JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xA8B973A1 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xC3A43824 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0xD0863580 EQ PUSH2 0x580 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x9010D07C GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x9EC5A894 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x54B JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x64482F79 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x748365EF EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x8D88A90E EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x478 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x5BEFDBCA EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x5EEB6710 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x3FB JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x36D JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x1A4E1E78 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x2C77F656 EQ PUSH2 0x2EA JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x37C99B0 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6AF3DFD EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x268 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x63F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x256 PUSH2 0x7AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x256 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x807 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x821 JUMP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x88D JUMP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x256 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0xC52 JUMP JUMPDEST PUSH2 0x256 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x244 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0x436 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x436 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x4EA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x52A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x436 PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x256 PUSH2 0xF66 JUMP JUMPDEST PUSH2 0x256 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x256 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x256 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x1195 JUMP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC395FCB3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC395FCB3 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x69E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x6F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F51 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x747 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6465763A207775743F PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT PUSH2 0x78B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6465763A2062726F6B65 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x7AA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x1562 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7C1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x844 SWAP1 PUSH2 0x83F PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EF2 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x889 DUP3 DUP3 PUSH2 0x16F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x895 PUSH2 0x16F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FE7 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x889 DUP3 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8FD JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0xB DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x970 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x979 DUP5 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x9AD PUSH5 0xE8D4A51000 PUSH2 0x9A7 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x17C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1822 JUMP JUMPDEST SWAP1 PUSH2 0x1864 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x9C5 JUMPI PUSH2 0x9C5 CALLER DUP3 PUSH2 0x1562 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x9EF JUMPI DUP2 SLOAD PUSH2 0x9D7 SWAP1 DUP6 PUSH2 0x1864 JUMP JUMPDEST DUP3 SSTORE DUP3 SLOAD PUSH2 0x9EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP3 SLOAD PUSH2 0xA0A SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x9A7 SWAP2 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA62 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0xA83 JUMPI POP PUSH2 0x7AA JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0xB0D JUMPI POP NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1D DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xE8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB4A PUSH1 0xC SLOAD PUSH2 0x9A7 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0xB44 PUSH1 0x7 SLOAD DUP8 PUSH2 0x17C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB80 JUMPI PUSH2 0xB7C PUSH2 0xB73 PUSH2 0x3E8 PUSH2 0x9A7 PUSH1 0x4 SLOAD DUP6 PUSH2 0x17C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMPDEST PUSH2 0xBA1 PUSH2 0xB96 DUP5 PUSH2 0x9A7 DUP5 PUSH5 0xE8D4A51000 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE POP POP NUMBER PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBC5 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0xB DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x4 SWAP1 SWAP4 MUL ADD DUP1 SLOAD SWAP1 SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH2 0xC15 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x7 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0xD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 DUP7 AND SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP3 SLOAD SWAP4 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x889 JUMPI PUSH2 0xCDE DUP2 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7E271F05 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xFC4E3E0A SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xD98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FC0 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xDA6 JUMPI PUSH2 0xDA6 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0xDE3 DUP3 PUSH2 0xDDD PUSH1 0xA DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xDBA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0xC SLOAD PUSH2 0x1864 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xDF7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE6B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6465763A207775743F PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP3 GT PUSH2 0xEB0 JUMPI PUSH1 0x8 SLOAD PUSH2 0xEA9 SWAP1 PUSH2 0xB44 DUP5 DUP7 PUSH2 0x1864 JUMP JUMPDEST SWAP1 POP PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT PUSH2 0xEC3 JUMPI PUSH2 0xEA9 DUP3 DUP5 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0xEA9 PUSH2 0xEDB PUSH1 0x6 SLOAD DUP5 PUSH2 0x1864 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDDD PUSH1 0x8 SLOAD PUSH2 0xB44 DUP8 PUSH1 0x6 SLOAD PUSH2 0x1864 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xF14 SWAP1 DUP4 PUSH2 0x1952 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xF14 SWAP1 DUP4 PUSH2 0x195E JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xEF6 SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1029 JUMPI PUSH1 0x7 SLOAD DUP2 DUP2 PUSH2 0x1020 JUMPI INVALID JUMPDEST DIV SWAP2 POP POP PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1043 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0xB DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP8 MSTORE SWAP1 DUP5 MSTORE DUP2 DUP7 KECCAK256 PUSH1 0x4 SWAP6 DUP7 MUL SWAP1 SWAP4 ADD PUSH1 0x3 DUP2 ADD SLOAD DUP2 SLOAD DUP5 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP9 DUP2 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP4 MLOAD SWAP2 SWAP9 POP SWAP4 SWAP7 SWAP4 SWAP6 SWAP4 SWAP5 SWAP3 SWAP1 SWAP2 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 DUP6 ADD SLOAD SWAP1 SWAP2 POP NUMBER GT DUP1 ISZERO PUSH2 0x1102 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1162 JUMPI PUSH1 0x0 PUSH2 0x1117 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xE8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x113E PUSH1 0xC SLOAD PUSH2 0x9A7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xB44 PUSH1 0x7 SLOAD DUP8 PUSH2 0x17C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x115D PUSH2 0x1156 DUP5 PUSH2 0x9A7 DUP5 PUSH5 0xE8D4A51000 PUSH2 0x17C9 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x118A DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x9AD PUSH5 0xE8D4A51000 PUSH2 0x9A7 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x17C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x11C2 SWAP1 PUSH2 0x83F PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F21 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC395FCB3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC395FCB3 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x125C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP1 PUSH2 0x12F2 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x89D8559 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x113B0AB2 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x132D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F51 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x133B JUMPI PUSH2 0x133B PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD NUMBER GT PUSH2 0x134E JUMPI PUSH1 0xD SLOAD PUSH2 0x1350 JUMP JUMPDEST NUMBER JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP2 POP PUSH2 0x1360 SWAP1 DUP6 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 DUP7 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE SWAP2 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 PUSH1 0x4 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP4 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9 DUP5 ADD SSTORE MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA DUP4 ADD SSTORE POP SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AB SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x145F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0xB DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x1490 DUP5 PUSH2 0xA53 JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x0 PUSH2 0x14C5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x9AD PUSH5 0xE8D4A51000 PUSH2 0x9A7 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x17C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x14D7 JUMPI PUSH2 0x14D7 CALLER DUP3 PUSH2 0x1562 JUMP JUMPDEST POP JUMPDEST DUP3 ISZERO PUSH2 0x1505 JUMPI DUP2 SLOAD PUSH2 0x14F6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x197E JUMP JUMPDEST DUP1 SLOAD PUSH2 0x1502 SWAP1 DUP5 PUSH2 0x18F8 JUMP JUMPDEST DUP2 SSTORE JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH2 0x1520 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x9A7 SWAP2 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x166B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x164D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16EE SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x170F SWAP1 DUP3 PUSH2 0x19DE JUMP JUMPDEST ISZERO PUSH2 0x889 JUMPI PUSH2 0x171C PUSH2 0x16F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1778 SWAP1 DUP3 PUSH2 0x19F3 JUMP JUMPDEST ISZERO PUSH2 0x889 JUMPI PUSH2 0x1785 PUSH2 0x16F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x17D8 JUMPI POP PUSH1 0x0 PUSH2 0xEF6 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x17E5 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xF14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F75 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF14 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF14 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x16EE SWAP1 DUP5 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF14 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF14 DUP4 DUP4 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF14 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF6 DUP3 PUSH2 0x1C31 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x19D8 SWAP1 DUP6 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF14 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF14 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A59 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A41 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A86 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1AA0 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1AFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1A59 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A41 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B59 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D45 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x16EE JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x16EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F96 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1BF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1ED0 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C06 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C41 DUP4 DUP4 PUSH2 0x1C19 JUMP JUMPDEST PUSH2 0x1C77 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xEF6 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1D3B JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1CB2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1CCF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x1CFF JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D54 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1D5C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D67 DUP6 PUSH2 0x1EC9 JUMP JUMPDEST PUSH2 0x1DB8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1DF7 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E59 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x1E72 JUMPI SWAP2 POP PUSH2 0x1D54 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1E82 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1A59 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A41 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F206772616E74416363 PUSH6 0x7373436F6E74 PUSH19 0x6F6C3A2073656E646572206D75737420626520 PUSH2 0x6E20 PUSH2 0x646D PUSH10 0x6E20746F207265766F6B PUSH6 0x4D6173746572 NUMBER PUSH9 0x65662E6164643A2053 PUSH6 0x6E646572206D PUSH22 0x73742062652061646D696E536166654D6174683A206D PUSH22 0x6C7469706C69636174696F6E206F766572666C6F7753 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565644D6173746572436865662E736574 GASPRICE KECCAK256 MSTORE8 PUSH6 0x6E646572206D PUSH22 0x7374206265206F70657261746F72416363657373436F PUSH15 0x74726F6C3A2063616E206F6E6C7920 PUSH19 0x656E6F756E636520726F6C657320666F722073 PUSH6 0x6C66A2646970 PUSH7 0x7358221220AE3E LOG3 0xEF SWAP1 PUSH22 0xD4F77604E6F966B3A380E0CF8984FB4D1839237A3467 SHL PUSH12 0x363364736F6C634300060C00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        950,
        11595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "6": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "REVERT",
      "path": "19"
    },
    "16": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "17": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "POP",
      "path": "19"
    },
    "18": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "21": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "LT",
      "path": "19"
    },
    "22": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21C"
    },
    "25": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "26": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "29": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "SHR",
      "path": "19"
    },
    "32": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "33": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x64482F79"
    },
    "38": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "GT",
      "path": "19"
    },
    "39": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "43": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "44": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA8B973A1"
    },
    "49": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "GT",
      "path": "19"
    },
    "50": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "54": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "55": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD18DF53C"
    },
    "60": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "GT",
      "path": "19"
    },
    "61": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "65": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "66": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD18DF53C"
    },
    "71": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "72": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x588"
    },
    "75": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "76": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "77": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD49E77CD"
    },
    "82": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "83": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5B4"
    },
    "86": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "87": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "88": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD547741F"
    },
    "93": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "94": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5BC"
    },
    "97": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "98": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "99": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD69DE7E7"
    },
    "104": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "105": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5E8"
    },
    "108": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "109": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "110": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xE2BBB158"
    },
    "115": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "116": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x61C"
    },
    "119": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "120": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21C"
    },
    "123": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMP",
      "path": "19"
    },
    "124": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "125": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "126": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA8B973A1"
    },
    "131": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "132": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x553"
    },
    "135": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "136": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "137": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC3A43824"
    },
    "142": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "143": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x55B"
    },
    "146": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "147": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "148": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xCA15C873"
    },
    "153": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "154": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x563"
    },
    "157": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "158": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "159": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xD0863580"
    },
    "164": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "165": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x580"
    },
    "168": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "169": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21C"
    },
    "172": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMP",
      "path": "19"
    },
    "173": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "174": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "175": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9010D07C"
    },
    "180": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "GT",
      "path": "19"
    },
    "181": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "185": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "186": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9010D07C"
    },
    "191": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "192": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x49B"
    },
    "195": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "196": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "197": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x91D14854"
    },
    "202": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "203": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4BE"
    },
    "206": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "207": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "208": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x93F1A40B"
    },
    "213": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "214": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4FE"
    },
    "217": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "218": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "219": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x9EC5A894"
    },
    "224": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "225": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x543"
    },
    "228": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "229": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "230": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA217FDDF"
    },
    "235": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "236": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x54B"
    },
    "239": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "240": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21C"
    },
    "243": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMP",
      "path": "19"
    },
    "244": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "245": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "246": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x64482F79"
    },
    "251": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "252": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x403"
    },
    "255": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "256": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "257": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x748365EF"
    },
    "262": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "263": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42E"
    },
    "266": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "267": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "268": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8D88A90E"
    },
    "273": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "274": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x452"
    },
    "277": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "278": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "279": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8DBB1E3A"
    },
    "284": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "285": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x478"
    },
    "288": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "289": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21C"
    },
    "292": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMP",
      "path": "19"
    },
    "293": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "294": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "295": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2F2FF15D"
    },
    "300": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "GT",
      "path": "19"
    },
    "301": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "305": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "306": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x51EB05A6"
    },
    "311": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "GT",
      "path": "19"
    },
    "312": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "316": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "317": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x51EB05A6"
    },
    "322": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "323": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x375"
    },
    "326": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "327": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "328": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5312EA8E"
    },
    "333": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "334": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x392"
    },
    "337": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "338": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "339": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5BEFDBCA"
    },
    "344": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "345": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3AF"
    },
    "348": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "349": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "350": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5EEB6710"
    },
    "355": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "356": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3F3"
    },
    "359": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "360": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "361": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x630B5BA1"
    },
    "366": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "367": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3FB"
    },
    "370": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "371": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21C"
    },
    "374": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMP",
      "path": "19"
    },
    "375": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "376": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "377": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2F2FF15D"
    },
    "382": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "383": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F2"
    },
    "386": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "387": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "388": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x36568ABE"
    },
    "393": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "394": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x31E"
    },
    "397": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "398": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "399": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x441A3E70"
    },
    "404": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "405": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34A"
    },
    "408": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "409": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "410": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x48CD4CB1"
    },
    "415": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "416": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x36D"
    },
    "419": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "420": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21C"
    },
    "423": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMP",
      "path": "19"
    },
    "424": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "425": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "426": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x17CAF6F1"
    },
    "431": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "GT",
      "path": "19"
    },
    "432": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1EF"
    },
    "435": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "436": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "437": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x17CAF6F1"
    },
    "442": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "443": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B5"
    },
    "446": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "447": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "448": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1A4E1E78"
    },
    "453": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "454": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BD"
    },
    "457": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "458": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "459": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1AED6553"
    },
    "464": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "465": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C5"
    },
    "468": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "469": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "470": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x248A9CA3"
    },
    "475": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "476": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2CD"
    },
    "479": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "480": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "481": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x2C77F656"
    },
    "486": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "487": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2EA"
    },
    "490": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "491": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21C"
    },
    "494": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMP",
      "path": "19"
    },
    "495": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "496": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "497": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x37C99B0"
    },
    "502": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "503": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x221"
    },
    "506": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "507": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "508": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6AF3DFD"
    },
    "513": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "514": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x246"
    },
    "517": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "518": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "519": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x81E3EDA"
    },
    "524": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "525": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x24E"
    },
    "528": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "529": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "530": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1526FE27"
    },
    "535": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "EQ",
      "path": "19"
    },
    "536": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x268"
    },
    "539": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "540": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "541": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "543": {
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "DUP1",
      "path": "19"
    },
    "544": {
      "first_revert": true,
      "fn": null,
      "offset": [
        950,
        11595
      ],
      "op": "REVERT",
      "path": "19"
    },
    "545": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "546": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x244"
    },
    "549": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "551": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "DUP1",
      "path": "19"
    },
    "552": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "553": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "SUB",
      "path": "19"
    },
    "554": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "556": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "DUP2",
      "path": "19"
    },
    "557": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "LT",
      "path": "19"
    },
    "558": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "559": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x237"
    },
    "562": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "563": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "565": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "DUP1",
      "path": "19"
    },
    "566": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "REVERT",
      "path": "19"
    },
    "567": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "568": {
      "op": "POP"
    },
    "569": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "DUP1",
      "path": "19"
    },
    "570": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "571": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "572": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "574": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "ADD",
      "path": "19"
    },
    "575": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "576": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x63F"
    },
    "579": {
      "fn": "MasterChef.setBonus",
      "jump": "i",
      "offset": [
        4099,
        4420
      ],
      "op": "JUMP",
      "path": "19"
    },
    "580": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "581": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "STOP",
      "path": "19"
    },
    "582": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11184,
        11414
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "583": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11184,
        11414
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x244"
    },
    "586": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11184,
        11414
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6FC"
    },
    "589": {
      "fn": "MasterChef.claimTips",
      "jump": "i",
      "offset": [
        11184,
        11414
      ],
      "op": "JUMP",
      "path": "19"
    },
    "590": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "591": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x256"
    },
    "594": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7AD"
    },
    "597": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        4426,
        4519
      ],
      "op": "JUMP",
      "path": "19"
    },
    "598": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "599": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "601": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "DUP1",
      "path": "19"
    },
    "602": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "603": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "604": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "DUP3",
      "path": "19"
    },
    "605": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "606": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "607": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "608": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "DUP2",
      "path": "19"
    },
    "609": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "610": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "SUB",
      "path": "19"
    },
    "611": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "613": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "ADD",
      "path": "19"
    },
    "614": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "615": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "RETURN",
      "path": "19"
    },
    "616": {
      "offset": [
        3001,
        3027
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "617": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x285"
    },
    "620": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "622": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP1",
      "path": "19"
    },
    "623": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "624": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SUB",
      "path": "19"
    },
    "625": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "627": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP2",
      "path": "19"
    },
    "628": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "LT",
      "path": "19"
    },
    "629": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "630": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x27E"
    },
    "633": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "634": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "636": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP1",
      "path": "19"
    },
    "637": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "REVERT",
      "path": "19"
    },
    "638": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "639": {
      "op": "POP"
    },
    "640": {
      "offset": [
        3001,
        3027
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "641": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7B4"
    },
    "644": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        3001,
        3027
      ],
      "op": "JUMP",
      "path": "19"
    },
    "645": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "646": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "648": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP1",
      "path": "19"
    },
    "649": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "656": {
      "op": "SHL"
    },
    "657": {
      "op": "SUB"
    },
    "658": {
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "659": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "660": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "AND",
      "path": "19"
    },
    "661": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP6",
      "path": "19"
    },
    "662": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "663": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "665": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP6",
      "path": "19"
    },
    "666": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "ADD",
      "path": "19"
    },
    "667": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "668": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "669": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "670": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "671": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP4",
      "path": "19"
    },
    "672": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP4",
      "path": "19"
    },
    "673": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "ADD",
      "path": "19"
    },
    "674": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "675": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "676": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "677": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "678": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "680": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP4",
      "path": "19"
    },
    "681": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "ADD",
      "path": "19"
    },
    "682": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "683": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "684": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "685": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP2",
      "path": "19"
    },
    "686": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "687": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SUB",
      "path": "19"
    },
    "688": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "690": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "ADD",
      "path": "19"
    },
    "691": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "692": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "RETURN",
      "path": "19"
    },
    "693": {
      "offset": [
        3240,
        3270
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "694": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3240,
        3270
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x256"
    },
    "697": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3240,
        3270
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7F5"
    },
    "700": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        3240,
        3270
      ],
      "op": "JUMP",
      "path": "19"
    },
    "701": {
      "offset": [
        2566,
        2585
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "702": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2566,
        2585
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x256"
    },
    "705": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2566,
        2585
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7FB"
    },
    "708": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        2566,
        2585
      ],
      "op": "JUMP",
      "path": "19"
    },
    "709": {
      "offset": [
        2643,
        2671
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "710": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2643,
        2671
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x256"
    },
    "713": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2643,
        2671
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x801"
    },
    "716": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        2643,
        2671
      ],
      "op": "JUMP",
      "path": "19"
    },
    "717": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "718": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x256"
    },
    "721": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "723": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "DUP1",
      "path": "1"
    },
    "724": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "725": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "SUB",
      "path": "1"
    },
    "726": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "728": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "729": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "LT",
      "path": "1"
    },
    "730": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "731": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E3"
    },
    "734": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "735": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "737": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "DUP1",
      "path": "1"
    },
    "738": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "REVERT",
      "path": "1"
    },
    "739": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "740": {
      "op": "POP"
    },
    "741": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "742": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x807"
    },
    "745": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4272,
        4384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "746": {
      "offset": [
        2873,
        2913
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "747": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        2873,
        2913
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x256"
    },
    "750": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        2873,
        2913
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x81C"
    },
    "753": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        2873,
        2913
      ],
      "op": "JUMP",
      "path": "19"
    },
    "754": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "755": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x244"
    },
    "758": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "760": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "DUP1",
      "path": "1"
    },
    "761": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "762": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "SUB",
      "path": "1"
    },
    "763": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "765": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "DUP2",
      "path": "1"
    },
    "766": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "LT",
      "path": "1"
    },
    "767": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "768": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x308"
    },
    "771": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "772": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "774": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "DUP1",
      "path": "1"
    },
    "775": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "REVERT",
      "path": "1"
    },
    "776": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "DUP1",
      "path": "1"
    },
    "779": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "780": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "781": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "783": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "ADD",
      "path": "1"
    },
    "784": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "791": {
      "op": "SHL"
    },
    "792": {
      "op": "SUB"
    },
    "793": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "AND",
      "path": "1"
    },
    "794": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x821"
    },
    "797": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMP",
      "path": "1"
    },
    "798": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "799": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x244"
    },
    "802": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "804": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "DUP1",
      "path": "1"
    },
    "805": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "806": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "SUB",
      "path": "1"
    },
    "807": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "809": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "810": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "LT",
      "path": "1"
    },
    "811": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "812": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x334"
    },
    "815": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "816": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "818": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "DUP1",
      "path": "1"
    },
    "819": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "REVERT",
      "path": "1"
    },
    "820": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "821": {
      "op": "POP"
    },
    "822": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "DUP1",
      "path": "1"
    },
    "823": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "824": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "825": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "827": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "ADD",
      "path": "1"
    },
    "828": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "835": {
      "op": "SHL"
    },
    "836": {
      "op": "SUB"
    },
    "837": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "AND",
      "path": "1"
    },
    "838": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x88D"
    },
    "841": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5808,
        6013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "842": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "843": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x244"
    },
    "846": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "848": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "DUP1",
      "path": "19"
    },
    "849": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "850": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "SUB",
      "path": "19"
    },
    "851": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "853": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "DUP2",
      "path": "19"
    },
    "854": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "LT",
      "path": "19"
    },
    "855": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "856": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x360"
    },
    "859": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "860": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "862": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "DUP1",
      "path": "19"
    },
    "863": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "REVERT",
      "path": "19"
    },
    "864": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "865": {
      "op": "POP"
    },
    "866": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "DUP1",
      "path": "19"
    },
    "867": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "868": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "869": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "871": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "ADD",
      "path": "19"
    },
    "872": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "873": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8EE"
    },
    "876": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9200,
        9934
      ],
      "op": "JUMP",
      "path": "19"
    },
    "877": {
      "offset": [
        3328,
        3353
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "878": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3328,
        3353
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x256"
    },
    "881": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3328,
        3353
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA4D"
    },
    "884": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        3328,
        3353
      ],
      "op": "JUMP",
      "path": "19"
    },
    "885": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "886": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x244"
    },
    "889": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "891": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "DUP1",
      "path": "19"
    },
    "892": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "893": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "SUB",
      "path": "19"
    },
    "894": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "896": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "DUP2",
      "path": "19"
    },
    "897": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "LT",
      "path": "19"
    },
    "898": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "899": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38B"
    },
    "902": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "903": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "905": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "DUP1",
      "path": "19"
    },
    "906": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "REVERT",
      "path": "19"
    },
    "907": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "908": {
      "op": "POP"
    },
    "909": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "910": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA53"
    },
    "913": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        7538,
        8337
      ],
      "op": "JUMP",
      "path": "19"
    },
    "914": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "915": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x244"
    },
    "918": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "920": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "DUP1",
      "path": "19"
    },
    "921": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "922": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "SUB",
      "path": "19"
    },
    "923": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "925": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "DUP2",
      "path": "19"
    },
    "926": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "LT",
      "path": "19"
    },
    "927": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "928": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A8"
    },
    "931": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "932": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "934": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "DUP1",
      "path": "19"
    },
    "935": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "REVERT",
      "path": "19"
    },
    "936": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "937": {
      "op": "POP"
    },
    "938": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "939": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBB6"
    },
    "942": {
      "fn": "MasterChef.emergencyWithdraw",
      "jump": "i",
      "offset": [
        10002,
        10379
      ],
      "op": "JUMP",
      "path": "19"
    },
    "943": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "944": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x244"
    },
    "947": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "949": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "DUP1",
      "path": "19"
    },
    "950": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "951": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "SUB",
      "path": "19"
    },
    "952": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA0"
    },
    "954": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "DUP2",
      "path": "19"
    },
    "955": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "LT",
      "path": "19"
    },
    "956": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "957": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3C5"
    },
    "960": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "961": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "963": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "DUP1",
      "path": "19"
    },
    "964": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "REVERT",
      "path": "19"
    },
    "965": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "966": {
      "op": "POP"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "op": "SUB"
    },
    "975": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "DUP2",
      "path": "19"
    },
    "976": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "977": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "DUP2",
      "path": "19"
    },
    "978": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "AND",
      "path": "19"
    },
    "979": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "980": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "982": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "DUP2",
      "path": "19"
    },
    "983": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "ADD",
      "path": "19"
    },
    "984": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "985": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "986": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "988": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "DUP3",
      "path": "19"
    },
    "989": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "ADD",
      "path": "19"
    },
    "990": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "991": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "992": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "994": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "DUP2",
      "path": "19"
    },
    "995": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "ADD",
      "path": "19"
    },
    "996": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "997": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "DUP3",
      "path": "19"
    },
    "998": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "AND",
      "path": "19"
    },
    "999": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1000": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "1002": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1003": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1004": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "ADD",
      "path": "19"
    },
    "1005": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1006": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "AND",
      "path": "19"
    },
    "1007": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC52"
    },
    "1010": {
      "fn": "MasterChef.initFarm",
      "jump": "i",
      "offset": [
        3606,
        4093
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1011": {
      "offset": [
        2717,
        2747
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1012": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2717,
        2747
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x256"
    },
    "1015": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2717,
        2747
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCC1"
    },
    "1018": {
      "fn": "MasterChef.initFarm",
      "jump": "i",
      "offset": [
        2717,
        2747
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1019": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7290,
        7465
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1020": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7290,
        7465
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x244"
    },
    "1023": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7290,
        7465
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCC7"
    },
    "1026": {
      "fn": "MasterChef.massUpdatePools",
      "jump": "i",
      "offset": [
        7290,
        7465
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1027": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1028": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x244"
    },
    "1031": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1033": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1034": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1035": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "SUB",
      "path": "19"
    },
    "1036": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "1038": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1039": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "LT",
      "path": "19"
    },
    "1040": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1041": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x419"
    },
    "1044": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1045": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1047": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1048": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1049": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1050": {
      "op": "POP"
    },
    "1051": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1052": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1053": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1054": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1056": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1057": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "ADD",
      "path": "19"
    },
    "1058": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1059": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1060": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1062": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "ADD",
      "path": "19"
    },
    "1063": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1064": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1065": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1066": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCE6"
    },
    "1069": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        5463,
        5890
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1070": {
      "offset": [
        1069,
        1109
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1071": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x436"
    },
    "1074": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE11"
    },
    "1077": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        1069,
        1109
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1078": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1079": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1081": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1082": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "op": "SUB"
    },
    "1091": {
      "offset": [
        1069,
        1109
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1092": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1093": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "AND",
      "path": "19"
    },
    "1094": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1095": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1096": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1097": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1098": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1099": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1100": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "SUB",
      "path": "19"
    },
    "1101": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1103": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "ADD",
      "path": "19"
    },
    "1104": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1105": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "RETURN",
      "path": "19"
    },
    "1106": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1107": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x244"
    },
    "1110": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1112": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1113": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1114": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "SUB",
      "path": "19"
    },
    "1115": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1117": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1118": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "LT",
      "path": "19"
    },
    "1119": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1120": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x468"
    },
    "1123": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1124": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1126": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1127": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1128": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1129": {
      "op": "POP"
    },
    "1130": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1137": {
      "op": "SHL"
    },
    "1138": {
      "op": "SUB"
    },
    "1139": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "AND",
      "path": "19"
    },
    "1140": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE20"
    },
    "1143": {
      "fn": "MasterChef.dev",
      "jump": "i",
      "offset": [
        11467,
        11593
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1144": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1145": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x256"
    },
    "1148": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1150": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1151": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1152": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "SUB",
      "path": "19"
    },
    "1153": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1155": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1156": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "LT",
      "path": "19"
    },
    "1157": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1158": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x48E"
    },
    "1161": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1162": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1164": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1165": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1166": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1167": {
      "op": "POP"
    },
    "1168": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1169": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1170": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1171": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1173": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "ADD",
      "path": "19"
    },
    "1174": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1175": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE8D"
    },
    "1178": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        5964,
        6375
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1179": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1180": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x436"
    },
    "1183": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1185": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1186": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1187": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "SUB",
      "path": "1"
    },
    "1188": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1190": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1191": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "LT",
      "path": "1"
    },
    "1192": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1193": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B1"
    },
    "1196": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1197": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1199": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1200": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1201": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1204": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1205": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1206": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1208": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "ADD",
      "path": "1"
    },
    "1209": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1210": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEFC"
    },
    "1213": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        3955,
        4091
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1214": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1215": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4EA"
    },
    "1218": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1220": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1221": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1222": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "SUB",
      "path": "1"
    },
    "1223": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1225": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1226": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "LT",
      "path": "1"
    },
    "1227": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1228": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D4"
    },
    "1231": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1232": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1234": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1235": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1236": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1237": {
      "op": "POP"
    },
    "1238": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1239": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1240": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1241": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1243": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "ADD",
      "path": "1"
    },
    "1244": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1251": {
      "op": "SHL"
    },
    "1252": {
      "op": "SUB"
    },
    "1253": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "AND",
      "path": "1"
    },
    "1254": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1B"
    },
    "1257": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2940,
        3077
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1258": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1259": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1261": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1262": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1263": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1264": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1265": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1266": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1267": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1268": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1269": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1270": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1271": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1272": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "SUB",
      "path": "1"
    },
    "1273": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1275": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "ADD",
      "path": "1"
    },
    "1276": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1277": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "RETURN",
      "path": "1"
    },
    "1278": {
      "offset": [
        3081,
        3147
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1279": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x52A"
    },
    "1282": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1284": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1285": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1286": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SUB",
      "path": "19"
    },
    "1287": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1289": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1290": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "LT",
      "path": "19"
    },
    "1291": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1292": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x514"
    },
    "1295": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1296": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1298": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1299": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1300": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1301": {
      "op": "POP"
    },
    "1302": {
      "offset": [
        3081,
        3147
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1303": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1304": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1305": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1307": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "ADD",
      "path": "19"
    },
    "1308": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "offset": [
        3081,
        3147
      ],
      "op": "AND",
      "path": "19"
    },
    "1318": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF33"
    },
    "1321": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3081,
        3147
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1322": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1323": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1325": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1326": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1327": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1328": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1329": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1330": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1332": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1333": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "ADD",
      "path": "19"
    },
    "1334": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1335": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1336": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1337": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1338": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1339": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1340": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1341": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1342": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1343": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SUB",
      "path": "19"
    },
    "1344": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "ADD",
      "path": "19"
    },
    "1345": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1346": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "RETURN",
      "path": "19"
    },
    "1347": {
      "offset": [
        2379,
        2400
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1348": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2379,
        2400
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x436"
    },
    "1351": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2379,
        2400
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF57"
    },
    "1354": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2379,
        2400
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1355": {
      "offset": [
        1717,
        1766
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1356": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1717,
        1766
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x256"
    },
    "1359": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1717,
        1766
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF66"
    },
    "1362": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        1717,
        1766
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1363": {
      "offset": [
        2802,
        2832
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1364": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2802,
        2832
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x256"
    },
    "1367": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2802,
        2832
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF6B"
    },
    "1370": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2802,
        2832
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1371": {
      "offset": [
        2501,
        2529
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1372": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2501,
        2529
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x256"
    },
    "1375": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2501,
        2529
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF71"
    },
    "1378": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2501,
        2529
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1379": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1380": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x256"
    },
    "1383": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1385": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1386": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1387": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "SUB",
      "path": "1"
    },
    "1388": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1390": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1391": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "LT",
      "path": "1"
    },
    "1392": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1393": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x579"
    },
    "1396": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1397": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1399": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1400": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1401": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1404": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF77"
    },
    "1407": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3245,
        3370
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1408": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10871,
        11125
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1409": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10871,
        11125
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x256"
    },
    "1412": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10871,
        11125
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF8E"
    },
    "1415": {
      "fn": "MasterChef.blocksRemaining",
      "jump": "i",
      "offset": [
        10871,
        11125
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1416": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1417": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x256"
    },
    "1420": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1422": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1423": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1424": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "SUB",
      "path": "19"
    },
    "1425": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1427": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1428": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "LT",
      "path": "19"
    },
    "1429": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1430": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x59E"
    },
    "1433": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1434": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1436": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1437": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1438": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1439": {
      "op": "POP"
    },
    "1440": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1441": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1442": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1443": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1445": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "ADD",
      "path": "19"
    },
    "1446": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1453": {
      "op": "SHL"
    },
    "1454": {
      "op": "SUB"
    },
    "1455": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "AND",
      "path": "19"
    },
    "1456": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1033"
    },
    "1459": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        6437,
        7210
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1460": {
      "offset": [
        2426,
        2448
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1461": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2426,
        2448
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x436"
    },
    "1464": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2426,
        2448
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1195"
    },
    "1467": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        2426,
        2448
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1468": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1469": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x244"
    },
    "1472": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1474": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1475": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1476": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "SUB",
      "path": "1"
    },
    "1477": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1479": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1480": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "LT",
      "path": "1"
    },
    "1481": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1482": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D2"
    },
    "1485": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1486": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1488": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1489": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1490": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1491": {
      "op": "POP"
    },
    "1492": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1493": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1494": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1495": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1497": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "ADD",
      "path": "1"
    },
    "1498": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1505": {
      "op": "SHL"
    },
    "1506": {
      "op": "SUB"
    },
    "1507": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "AND",
      "path": "1"
    },
    "1508": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A4"
    },
    "1511": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5091,
        5317
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1512": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1513": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x244"
    },
    "1516": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1518": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1519": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1520": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "SUB",
      "path": "19"
    },
    "1521": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "1523": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1524": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "LT",
      "path": "19"
    },
    "1525": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1526": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5FE"
    },
    "1529": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1530": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1532": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1533": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1534": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1535": {
      "op": "POP"
    },
    "1536": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1537": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1538": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1545": {
      "op": "SHL"
    },
    "1546": {
      "op": "SUB"
    },
    "1547": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1549": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1550": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "ADD",
      "path": "19"
    },
    "1551": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1552": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "AND",
      "path": "19"
    },
    "1553": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1554": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1556": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "ADD",
      "path": "19"
    },
    "1557": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1558": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1559": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1560": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x11FD"
    },
    "1563": {
      "fn": "MasterChef.addToken",
      "jump": "i",
      "offset": [
        4684,
        5367
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1564": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1565": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x244"
    },
    "1568": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1570": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1571": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1572": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "SUB",
      "path": "19"
    },
    "1573": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1575": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1576": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "LT",
      "path": "19"
    },
    "1577": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1578": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x632"
    },
    "1581": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1582": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1584": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1585": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1586": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1587": {
      "op": "POP"
    },
    "1588": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1589": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1590": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1591": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1593": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "ADD",
      "path": "19"
    },
    "1594": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1595": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1450"
    },
    "1598": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8406,
        9151
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1599": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4099,
        4420
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1600": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4241
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 0,
      "value": "0x1"
    },
    "1602": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4241
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1603": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1605": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1606": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1607": {
      "op": "PUSH4",
      "value": "0xC395FCB3"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1614": {
      "op": "SHL"
    },
    "1615": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1616": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1617": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4255,
        4265
      ],
      "op": "CALLER",
      "path": "19"
    },
    "1618": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1620": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1621": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "ADD",
      "path": "19"
    },
    "1622": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1623": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1624": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1631": {
      "op": "SHL"
    },
    "1632": {
      "op": "SUB"
    },
    "1633": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4241
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1634": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4241
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1635": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4241
      ],
      "op": "AND",
      "path": "19"
    },
    "1636": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4241
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1637": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4254
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC395FCB3"
    },
    "1642": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4254
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1643": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1645": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1646": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1647": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "ADD",
      "path": "19"
    },
    "1648": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1649": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1651": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1652": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1653": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1654": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1655": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1656": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1657": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "SUB",
      "path": "19"
    },
    "1658": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "ADD",
      "path": "19"
    },
    "1659": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1660": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4241
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1661": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1662": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "1663": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1664": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1665": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1666": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x68A"
    },
    "1669": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1670": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1672": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1673": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1674": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1675": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "POP",
      "path": "19"
    },
    "1676": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "GAS",
      "path": "19"
    },
    "1677": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "1678": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1679": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1680": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1681": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x69E"
    },
    "1684": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1685": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1686": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1688": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1689": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "1690": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1691": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1693": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1694": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1695": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "POP",
      "path": "19"
    },
    "1696": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "POP",
      "path": "19"
    },
    "1697": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "POP",
      "path": "19"
    },
    "1698": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "POP",
      "path": "19"
    },
    "1699": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1701": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1702": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1703": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1705": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1706": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "LT",
      "path": "19"
    },
    "1707": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1708": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6B4"
    },
    "1711": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1712": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1714": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1715": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1716": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1717": {
      "op": "POP"
    },
    "1718": {
      "branch": 106,
      "fn": "MasterChef.setBonus",
      "offset": [
        4227,
        4266
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1719": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6F1"
    },
    "1722": {
      "branch": 106,
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1723": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1725": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1726": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1732": {
      "op": "SHL"
    },
    "1733": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1734": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1735": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1737": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "ADD",
      "path": "19"
    },
    "1738": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1739": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1740": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1742": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "ADD",
      "path": "19"
    },
    "1743": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1744": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1745": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "SUB",
      "path": "19"
    },
    "1746": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1747": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1748": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1750": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1751": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1752": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1754": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "ADD",
      "path": "19"
    },
    "1755": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1756": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F51"
    },
    "1759": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1761": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1762": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "CODECOPY",
      "path": "19"
    },
    "1763": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1765": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "ADD",
      "path": "19"
    },
    "1766": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1767": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "POP",
      "path": "19"
    },
    "1768": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "POP",
      "path": "19"
    },
    "1769": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1771": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1772": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1773": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1774": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "SUB",
      "path": "19"
    },
    "1775": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1776": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1777": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4206,
        4328
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1778": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4339,
        4352
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 1,
      "value": "0x6"
    },
    "1780": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4339,
        4369
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1781": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4339,
        4369
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1782": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4339,
        4369
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1783": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4339,
        4369
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "1784": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4379,
        4394
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 2,
      "value": "0x8"
    },
    "1786": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4379,
        4413
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "1787": {
      "fn": "MasterChef.setBonus",
      "jump": "o",
      "offset": [
        4099,
        4420
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1788": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11184,
        11414
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1789": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11244,
        11251
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 3,
      "value": "0x3"
    },
    "1791": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11244,
        11251
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1798": {
      "op": "SHL"
    },
    "1799": {
      "op": "SUB"
    },
    "1800": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11244,
        11251
      ],
      "op": "AND",
      "path": "19"
    },
    "1801": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11230,
        11240
      ],
      "op": "CALLER",
      "path": "19"
    },
    "1802": {
      "branch": 107,
      "fn": "MasterChef.claimTips",
      "offset": [
        11230,
        11251
      ],
      "op": "EQ",
      "path": "19"
    },
    "1803": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x747"
    },
    "1806": {
      "branch": 107,
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1807": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1809": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1810": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1811": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1817": {
      "op": "SHL"
    },
    "1818": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1819": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1820": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1822": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1824": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1825": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "ADD",
      "path": "19"
    },
    "1826": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1827": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "1829": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1831": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1832": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "ADD",
      "path": "19"
    },
    "1833": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1834": {
      "op": "PUSH9",
      "value": "0x6465763A207775743F"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1846": {
      "op": "SHL"
    },
    "1847": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "1849": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1850": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "ADD",
      "path": "19"
    },
    "1851": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1852": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1853": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1854": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1855": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1856": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1857": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "SUB",
      "path": "19"
    },
    "1858": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "1860": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "ADD",
      "path": "19"
    },
    "1861": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1862": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1863": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11222,
        11265
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1864": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11290,
        11291
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 4,
      "value": "0x0"
    },
    "1866": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11283,
        11287
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1868": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11283,
        11287
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1869": {
      "branch": 108,
      "fn": "MasterChef.claimTips",
      "offset": [
        11283,
        11291
      ],
      "op": "GT",
      "path": "19"
    },
    "1870": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x78B"
    },
    "1873": {
      "branch": 108,
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1874": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1876": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1877": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1884": {
      "op": "SHL"
    },
    "1885": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1886": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1887": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1889": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1891": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1892": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "ADD",
      "path": "19"
    },
    "1893": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1894": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "1896": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1898": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1899": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "ADD",
      "path": "19"
    },
    "1900": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1901": {
      "op": "PUSH10",
      "value": "0x6465763A2062726F6B65"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1914": {
      "op": "SHL"
    },
    "1915": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "1917": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1918": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "ADD",
      "path": "19"
    },
    "1919": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1920": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1921": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1922": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1923": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1924": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1925": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "SUB",
      "path": "19"
    },
    "1926": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "1928": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "ADD",
      "path": "19"
    },
    "1929": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1930": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1931": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11306
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1932": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11336,
        11340
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1934": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11336,
        11340
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1935": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11336,
        11340
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1936": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11316,
        11333
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1938": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11350,
        11358
      ],
      "op": "SWAP1",
      "path": "19",
      "statement": 5
    },
    "1939": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11350,
        11358
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1940": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11350,
        11358
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "1941": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11388,
        11395
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 6,
      "value": "0x3"
    },
    "1943": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11388,
        11395
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1944": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11368,
        11407
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7AA"
    },
    "1947": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11368,
        11407
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1954": {
      "op": "SHL"
    },
    "1955": {
      "op": "SUB"
    },
    "1956": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11388,
        11395
      ],
      "op": "AND",
      "path": "19"
    },
    "1957": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11336,
        11340
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1958": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11368,
        11387
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1562"
    },
    "1961": {
      "fn": "MasterChef.claimTips",
      "jump": "i",
      "offset": [
        11368,
        11407
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1962": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11368,
        11407
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1963": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11184,
        11414
      ],
      "op": "POP",
      "path": "19"
    },
    "1964": {
      "fn": "MasterChef.claimTips",
      "jump": "o",
      "offset": [
        11184,
        11414
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1965": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1966": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4497,
        4505
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 7,
      "value": "0xA"
    },
    "1968": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4497,
        4512
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1969": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1970": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4426,
        4519
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1971": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        4426,
        4519
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1972": {
      "offset": [
        3001,
        3027
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1973": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "1975": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1976": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1977": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1978": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1979": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "LT",
      "path": "19"
    },
    "1980": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7C1"
    },
    "1983": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1984": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "INVALID",
      "path": "19"
    },
    "1985": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1986": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1988": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1989": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1990": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1991": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1993": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1994": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1995": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1996": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1998": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1999": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2000": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "MUL",
      "path": "19"
    },
    "2001": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "ADD",
      "path": "19"
    },
    "2002": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2003": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2004": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2006": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2007": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "ADD",
      "path": "19"
    },
    "2008": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2009": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "2011": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2012": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "ADD",
      "path": "19"
    },
    "2013": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2014": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "2016": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2017": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2018": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "ADD",
      "path": "19"
    },
    "2019": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2026": {
      "op": "SHL"
    },
    "2027": {
      "op": "SUB"
    },
    "2028": {
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2029": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2030": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "AND",
      "path": "19"
    },
    "2031": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2034": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2035": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3001,
        3027
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2036": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        3001,
        3027
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2037": {
      "offset": [
        3240,
        3270
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2038": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3240,
        3270
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "2040": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3240,
        3270
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2041": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3240,
        3270
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2042": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        3240,
        3270
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2043": {
      "offset": [
        2566,
        2585
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2044": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2566,
        2585
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "2046": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2566,
        2585
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2047": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2566,
        2585
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2048": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        2566,
        2585
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2049": {
      "offset": [
        2643,
        2671
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2050": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2643,
        2671
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "2052": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2643,
        2671
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2053": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2643,
        2671
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2054": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        2643,
        2671
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2055": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2056": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4329,
        4336
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2058": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 8
    },
    "2059": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2060": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2061": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2063": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2064": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2065": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2066": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2068": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2069": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2070": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2072": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4377
      ],
      "op": "ADD",
      "path": "1"
    },
    "2073": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4377
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2074": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4377
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2075": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "o",
      "offset": [
        4272,
        4384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2076": {
      "offset": [
        2873,
        2913
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2077": {
      "offset": [
        2912,
        2913
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2079": {
      "offset": [
        2873,
        2913
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2080": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "o",
      "offset": [
        2873,
        2913
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2081": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2082": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4731
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x0"
    },
    "2084": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2085": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2086": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2087": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2089": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2090": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2091": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2092": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2094": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2095": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2096": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4747
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2098": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4747
      ],
      "op": "ADD",
      "path": "1"
    },
    "2099": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4747
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2100": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4717,
        4762
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x844"
    },
    "2103": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4717,
        4762
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2104": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4749,
        4761
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83F"
    },
    "2107": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4749,
        4759
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F3"
    },
    "2110": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4749,
        4761
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2111": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4749,
        4761
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2112": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4717,
        4724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1B"
    },
    "2115": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4717,
        4762
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2116": {
      "branch": 132,
      "fn": "AccessControl.grantRole",
      "offset": [
        4717,
        4762
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2117": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x87F"
    },
    "2120": {
      "branch": 132,
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2121": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2123": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2124": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2130": {
      "op": "SHL"
    },
    "2131": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2132": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2133": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2135": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "ADD",
      "path": "1"
    },
    "2136": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2137": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2138": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2140": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "ADD",
      "path": "1"
    },
    "2141": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2142": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2143": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "SUB",
      "path": "1"
    },
    "2144": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2145": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2146": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2F"
    },
    "2148": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2149": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2150": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2152": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "ADD",
      "path": "1"
    },
    "2153": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2154": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EF2"
    },
    "2157": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2F"
    },
    "2159": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2160": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2161": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2163": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "ADD",
      "path": "1"
    },
    "2164": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2165": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "POP",
      "path": "1"
    },
    "2166": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "POP",
      "path": "1"
    },
    "2167": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2169": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2170": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2171": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2172": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "SUB",
      "path": "1"
    },
    "2173": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2174": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2175": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2176": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4825,
        4850
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 10,
      "value": "0x889"
    },
    "2179": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4836,
        4840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2180": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4842,
        4849
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2181": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4825,
        4835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F7"
    },
    "2184": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4825,
        4850
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2185": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4825,
        4850
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2186": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "POP",
      "path": "1"
    },
    "2187": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "POP",
      "path": "1"
    },
    "2188": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2189": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2190": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5905,
        5917
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x895"
    },
    "2193": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5905,
        5915
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F3"
    },
    "2196": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5905,
        5917
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2197": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5905,
        5917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2204": {
      "op": "SHL"
    },
    "2205": {
      "op": "SUB"
    },
    "2206": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5894,
        5917
      ],
      "op": "AND",
      "path": "1"
    },
    "2207": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5894,
        5901
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2214": {
      "op": "SHL"
    },
    "2215": {
      "op": "SUB"
    },
    "2216": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5894,
        5917
      ],
      "op": "AND",
      "path": "1"
    },
    "2217": {
      "branch": 133,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5894,
        5917
      ],
      "op": "EQ",
      "path": "1"
    },
    "2218": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E4"
    },
    "2221": {
      "branch": 133,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2222": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2224": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2225": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2231": {
      "op": "SHL"
    },
    "2232": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2233": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2234": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2236": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "ADD",
      "path": "1"
    },
    "2237": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2238": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2239": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2241": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "ADD",
      "path": "1"
    },
    "2242": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2243": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2244": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "SUB",
      "path": "1"
    },
    "2245": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2246": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2247": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2F"
    },
    "2249": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2250": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2251": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2253": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "ADD",
      "path": "1"
    },
    "2254": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2255": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FE7"
    },
    "2258": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2F"
    },
    "2260": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2261": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2262": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2264": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "ADD",
      "path": "1"
    },
    "2265": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2266": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "POP",
      "path": "1"
    },
    "2267": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "POP",
      "path": "1"
    },
    "2268": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2270": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2271": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2272": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2273": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "SUB",
      "path": "1"
    },
    "2274": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2275": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2276": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2277": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5980,
        6006
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0x889"
    },
    "2280": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5992,
        5996
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2281": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5998,
        6005
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2282": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5980,
        5991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1760"
    },
    "2285": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5980,
        6006
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2286": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2287": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9266,
        9287
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2289": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9298
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "2291": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9299,
        9303
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2292": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2293": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2294": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2295": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "LT",
      "path": "19"
    },
    "2296": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8FD"
    },
    "2299": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2300": {
      "dev": "Index out of range",
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "INVALID",
      "path": "19"
    },
    "2301": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2302": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2304": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2305": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2306": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2307": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2309": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2310": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2311": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2312": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9352
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2313": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9352
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2314": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9352
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2315": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9346
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "2317": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9352
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2318": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9352
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2319": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9352
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2321": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9352
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2322": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9352
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2323": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9352
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2324": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9353,
        9363
      ],
      "op": "CALLER",
      "path": "19"
    },
    "2325": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9364
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2326": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9364
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2327": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9364
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2328": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9364
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2329": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9364
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2330": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9364
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2331": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9364
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2332": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9382,
        9393
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 13
    },
    "2333": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9382,
        9393
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2334": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2336": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2337": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2338": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "MUL",
      "path": "19"
    },
    "2339": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2340": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2341": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "ADD",
      "path": "19"
    },
    "2342": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9290,
        9304
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2343": {
      "op": "POP"
    },
    "2344": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9382,
        9404
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2345": {
      "op": "GT"
    },
    "2346": {
      "branch": 109,
      "fn": "MasterChef.withdraw",
      "offset": [
        9382,
        9404
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2347": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x970"
    },
    "2350": {
      "branch": 109,
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2351": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2353": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2354": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2355": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2361": {
      "op": "SHL"
    },
    "2362": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2363": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2364": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2366": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2368": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2369": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "ADD",
      "path": "19"
    },
    "2370": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2371": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "2373": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2375": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2376": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "ADD",
      "path": "19"
    },
    "2377": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2378": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "2399": {
      "op": "SHL"
    },
    "2400": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "2402": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2403": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "ADD",
      "path": "19"
    },
    "2404": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2405": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2406": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2407": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2408": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2409": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2410": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "SUB",
      "path": "19"
    },
    "2411": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "2413": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "ADD",
      "path": "19"
    },
    "2414": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2415": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2416": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9374,
        9427
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2417": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9437,
        9453
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 14,
      "value": "0x979"
    },
    "2420": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9448,
        9452
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2421": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9437,
        9447
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA53"
    },
    "2424": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9437,
        9453
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2425": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9437,
        9453
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2426": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9463,
        9478
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2428": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9552
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9B3"
    },
    "2431": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9536,
        9540
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2432": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9536,
        9551
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2434": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9536,
        9551
      ],
      "op": "ADD",
      "path": "19"
    },
    "2435": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9536,
        9551
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2436": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9531
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9AD"
    },
    "2439": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9526,
        9530
      ],
      "op": "PUSH5",
      "path": "19",
      "value": "0xE8D4A51000"
    },
    "2445": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9521
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9A7"
    },
    "2448": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9497,
        9501
      ],
      "op": "DUP8",
      "path": "19"
    },
    "2449": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9497,
        9520
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "2451": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9497,
        9520
      ],
      "op": "ADD",
      "path": "19"
    },
    "2452": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9497,
        9520
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2453": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9485
      ],
      "op": "DUP8",
      "path": "19"
    },
    "2454": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9492
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2456": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9492
      ],
      "op": "ADD",
      "path": "19"
    },
    "2457": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9492
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2458": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9496
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C9"
    },
    "2461": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9496
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2462": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9521
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2463": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9521
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2464": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9521
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "2469": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9521
      ],
      "op": "AND",
      "path": "19"
    },
    "2470": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9481,
        9521
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2471": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9521
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2472": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9525
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2473": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1822"
    },
    "2476": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9481,
        9531
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2477": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9531
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2478": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9535
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2479": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9535
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1864"
    },
    "2482": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9481,
        9552
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2483": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9481,
        9552
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2484": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9463,
        9552
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2485": {
      "op": "POP"
    },
    "2486": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9565,
        9576
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2487": {
      "branch": 110,
      "fn": "MasterChef.withdraw",
      "offset": [
        9565,
        9576
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2488": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9562,
        9643
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9C5"
    },
    "2491": {
      "branch": 110,
      "fn": "MasterChef.withdraw",
      "offset": [
        9562,
        9643
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2492": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9592,
        9632
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 15,
      "value": "0x9C5"
    },
    "2495": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9612,
        9622
      ],
      "op": "CALLER",
      "path": "19"
    },
    "2496": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9624,
        9631
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2497": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9592,
        9611
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1562"
    },
    "2500": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9592,
        9632
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2501": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9592,
        9632
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2502": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9655,
        9666
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2503": {
      "branch": 111,
      "fn": "MasterChef.withdraw",
      "offset": [
        9655,
        9666
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2504": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9652,
        9800
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9EF"
    },
    "2507": {
      "branch": 111,
      "fn": "MasterChef.withdraw",
      "offset": [
        9652,
        9800
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2508": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9696,
        9707
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 16
    },
    "2509": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9696,
        9707
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2510": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9696,
        9720
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9D7"
    },
    "2513": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9696,
        9720
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2514": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9712,
        9719
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2515": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9696,
        9711
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1864"
    },
    "2518": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9696,
        9720
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2519": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9696,
        9720
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2520": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9682,
        9720
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2521": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9682,
        9720
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "2522": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9734,
        9746
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 17
    },
    "2523": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9734,
        9746
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2524": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9734,
        9789
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9EF"
    },
    "2527": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9734,
        9789
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2534": {
      "op": "SHL"
    },
    "2535": {
      "op": "SUB"
    },
    "2536": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9734,
        9746
      ],
      "op": "AND",
      "path": "19"
    },
    "2537": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9768,
        9778
      ],
      "op": "CALLER",
      "path": "19"
    },
    "2538": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9781,
        9788
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2539": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9734,
        9759
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18A6"
    },
    "2542": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9734,
        9789
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2543": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9734,
        9789
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2544": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9843,
        9866
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 18,
      "value": "0x3"
    },
    "2546": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9843,
        9866
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2547": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9843,
        9866
      ],
      "op": "ADD",
      "path": "19"
    },
    "2548": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9843,
        9866
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2549": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9827,
        9838
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2550": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9827,
        9838
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2551": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9827,
        9877
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA0A"
    },
    "2554": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9827,
        9877
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2555": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9872,
        9876
      ],
      "op": "PUSH5",
      "path": "19",
      "value": "0xE8D4A51000"
    },
    "2561": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9872,
        9876
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2562": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9827,
        9867
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9A7"
    },
    "2565": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9827,
        9867
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2566": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9827,
        9842
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C9"
    },
    "2569": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9827,
        9867
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2570": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9827,
        9877
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2571": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9809,
        9824
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2573": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9809,
        9824
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2574": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9809,
        9824
      ],
      "op": "ADD",
      "path": "19"
    },
    "2575": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9809,
        9877
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "2576": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 19,
      "value": "0x40"
    },
    "2578": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2579": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2580": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2581": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2582": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2583": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2584": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2585": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9913,
        9917
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2586": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9913,
        9917
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2587": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9901,
        9911
      ],
      "op": "CALLER",
      "path": "19"
    },
    "2588": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9901,
        9911
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2589": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
    },
    "2622": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2623": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2624": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2625": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "SUB",
      "path": "19"
    },
    "2626": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2628": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "ADD",
      "path": "19"
    },
    "2629": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2630": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9892,
        9927
      ],
      "op": "LOG3",
      "path": "19"
    },
    "2631": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "POP",
      "path": "19"
    },
    "2632": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "POP",
      "path": "19"
    },
    "2633": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "POP",
      "path": "19"
    },
    "2634": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "POP",
      "path": "19"
    },
    "2635": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9200,
        9934
      ],
      "op": "POP",
      "path": "19"
    },
    "2636": {
      "fn": "MasterChef.withdraw",
      "jump": "o",
      "offset": [
        9200,
        9934
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2637": {
      "offset": [
        3328,
        3353
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2638": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3328,
        3353
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "2640": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3328,
        3353
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2641": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3328,
        3353
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2642": {
      "fn": "MasterChef.withdraw",
      "jump": "o",
      "offset": [
        3328,
        3353
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2643": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2644": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7589,
        7610
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2646": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7621
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "2648": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7622,
        7626
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2649": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2650": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2651": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2652": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "LT",
      "path": "19"
    },
    "2653": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA62"
    },
    "2656": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2657": {
      "dev": "Index out of range",
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "INVALID",
      "path": "19"
    },
    "2658": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2659": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2660": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2662": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2663": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2665": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2667": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2668": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2669": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2671": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "MUL",
      "path": "19"
    },
    "2672": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7613,
        7627
      ],
      "op": "ADD",
      "path": "19"
    },
    "2673": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7589,
        7627
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2674": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7589,
        7627
      ],
      "op": "POP",
      "path": "19"
    },
    "2675": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7657,
        7661
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2676": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7657,
        7677
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "2678": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7657,
        7677
      ],
      "op": "ADD",
      "path": "19"
    },
    "2679": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7657,
        7677
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2680": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7641,
        7653
      ],
      "op": "NUMBER",
      "path": "19"
    },
    "2681": {
      "branch": 112,
      "fn": "MasterChef.updatePool",
      "offset": [
        7641,
        7677
      ],
      "op": "GT",
      "path": "19"
    },
    "2682": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7637,
        7710
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA83"
    },
    "2685": {
      "branch": 112,
      "fn": "MasterChef.updatePool",
      "offset": [
        7637,
        7710
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2686": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7693,
        7700
      ],
      "op": "POP",
      "path": "19",
      "statement": 20
    },
    "2687": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7693,
        7700
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7AA"
    },
    "2690": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7693,
        7700
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2691": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7637,
        7710
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2692": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7750
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2693": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7750
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2694": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2696": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2697": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2698": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2705": {
      "op": "SHL"
    },
    "2706": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2707": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2708": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7769,
        7773
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "2709": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2711": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2712": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "ADD",
      "path": "19"
    },
    "2713": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2714": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2715": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2716": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7719,
        7735
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2718": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7719,
        7735
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2725": {
      "op": "SHL"
    },
    "2726": {
      "op": "SUB"
    },
    "2727": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7750
      ],
      "op": "AND",
      "path": "19"
    },
    "2728": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7750
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2729": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7760
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "2734": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7760
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2735": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2737": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2738": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2739": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "ADD",
      "path": "19"
    },
    "2740": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2741": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2743": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2744": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2745": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2746": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2747": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2748": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "SUB",
      "path": "19"
    },
    "2749": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "ADD",
      "path": "19"
    },
    "2750": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2751": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7750
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2752": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2753": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "2754": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2755": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2756": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2757": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xACD"
    },
    "2760": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2761": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2763": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2764": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2765": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2766": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "POP",
      "path": "19"
    },
    "2767": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "GAS",
      "path": "19"
    },
    "2768": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "2769": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2770": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2771": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2772": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xAE1"
    },
    "2775": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2776": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "2777": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2779": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2780": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "2781": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "2782": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2784": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2785": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2786": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "POP",
      "path": "19"
    },
    "2787": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "POP",
      "path": "19"
    },
    "2788": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "POP",
      "path": "19"
    },
    "2789": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "POP",
      "path": "19"
    },
    "2790": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2792": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2793": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "2794": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2796": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2797": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "LT",
      "path": "19"
    },
    "2798": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2799": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xAF7"
    },
    "2802": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2803": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2805": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2806": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2807": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2808": {
      "op": "POP"
    },
    "2809": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2810": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7738,
        7775
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2811": {
      "op": "POP"
    },
    "2812": {
      "branch": 113,
      "fn": "MasterChef.updatePool",
      "offset": [
        7789,
        7802
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2813": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7785,
        7884
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB0D"
    },
    "2816": {
      "branch": 113,
      "fn": "MasterChef.updatePool",
      "offset": [
        7785,
        7884
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2817": {
      "op": "POP"
    },
    "2818": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7841,
        7853
      ],
      "op": "NUMBER",
      "path": "19",
      "statement": 21
    },
    "2819": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7818,
        7838
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "2821": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7818,
        7838
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2822": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7818,
        7838
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2823": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7818,
        7838
      ],
      "op": "ADD",
      "path": "19"
    },
    "2824": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7818,
        7853
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "2825": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7867,
        7874
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 22,
      "value": "0x7AA"
    },
    "2828": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7867,
        7874
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2829": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7785,
        7884
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2830": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7893,
        7911
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2832": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7914,
        7963
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB1D"
    },
    "2835": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7928,
        7932
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2836": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7928,
        7948
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "2838": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7928,
        7948
      ],
      "op": "ADD",
      "path": "19"
    },
    "2839": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7928,
        7948
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2840": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7950,
        7962
      ],
      "op": "NUMBER",
      "path": "19"
    },
    "2841": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7914,
        7927
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE8D"
    },
    "2844": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        7914,
        7963
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2845": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7914,
        7963
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2846": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7893,
        7963
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2847": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7893,
        7963
      ],
      "op": "POP",
      "path": "19"
    },
    "2848": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7973,
        7993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2850": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8069
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB4A"
    },
    "2853": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8053,
        8068
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "2855": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8053,
        8068
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2856": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8048
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9A7"
    },
    "2859": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8032,
        8036
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2860": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8032,
        8047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2862": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8032,
        8047
      ],
      "op": "ADD",
      "path": "19"
    },
    "2863": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8032,
        8047
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2864": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8027
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB44"
    },
    "2867": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8011,
        8026
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "2869": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8011,
        8026
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2870": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8006
      ],
      "op": "DUP8",
      "path": "19"
    },
    "2871": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8010
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C9"
    },
    "2874": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8010
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2875": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8027
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2876": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8027
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2877": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8027
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "2882": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8027
      ],
      "op": "AND",
      "path": "19"
    },
    "2883": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        7996,
        8027
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2884": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8027
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2885": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8031
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2886": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8031
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C9"
    },
    "2889": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        7996,
        8048
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2890": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8069
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2891": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8083,
        8096
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2893": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8083,
        8096
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2894": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7973,
        8069
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2895": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7973,
        8069
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2896": {
      "op": "POP"
    },
    "2897": {
      "branch": 114,
      "fn": "MasterChef.updatePool",
      "offset": [
        8083,
        8100
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2898": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8079,
        8185
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB80"
    },
    "2901": {
      "branch": 114,
      "fn": "MasterChef.updatePool",
      "offset": [
        8079,
        8185
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2902": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8123,
        8174
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 23,
      "value": "0xB7C"
    },
    "2905": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8132,
        8173
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB73"
    },
    "2908": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8168,
        8172
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3E8"
    },
    "2911": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8132,
        8163
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9A7"
    },
    "2914": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8149,
        8162
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2916": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8149,
        8162
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2917": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8132,
        8144
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2918": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8132,
        8148
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C9"
    },
    "2921": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8132,
        8148
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2922": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8132,
        8163
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2923": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8132,
        8163
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2924": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8132,
        8163
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "2929": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8132,
        8163
      ],
      "op": "AND",
      "path": "19"
    },
    "2930": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        8132,
        8163
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2931": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8132,
        8173
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2932": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8123,
        8127
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "2934": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8123,
        8127
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2935": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8123,
        8127
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2936": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8123,
        8131
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18F8"
    },
    "2939": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        8123,
        8174
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2940": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8123,
        8174
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2941": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8116,
        8120
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "2943": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8116,
        8174
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "2944": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8079,
        8185
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2945": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8220,
        8285
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 24,
      "value": "0xBA1"
    },
    "2948": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8248,
        8284
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB96"
    },
    "2951": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8275,
        8283
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2952": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8248,
        8270
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9A7"
    },
    "2955": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8248,
        8260
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2956": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8265,
        8269
      ],
      "op": "PUSH5",
      "path": "19",
      "value": "0xE8D4A51000"
    },
    "2962": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8248,
        8264
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C9"
    },
    "2965": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        8248,
        8270
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2966": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8248,
        8284
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2967": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8220,
        8243
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "2969": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8220,
        8243
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2970": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8220,
        8243
      ],
      "op": "ADD",
      "path": "19"
    },
    "2971": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8220,
        8243
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2972": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8220,
        8243
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2973": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8220,
        8247
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18F8"
    },
    "2976": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        8220,
        8285
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2977": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8220,
        8285
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2978": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8194,
        8217
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "2980": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8194,
        8217
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2981": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8194,
        8217
      ],
      "op": "ADD",
      "path": "19"
    },
    "2982": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8194,
        8285
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "2983": {
      "op": "POP"
    },
    "2984": {
      "op": "POP"
    },
    "2985": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8318,
        8330
      ],
      "op": "NUMBER",
      "path": "19",
      "statement": 25
    },
    "2986": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8295,
        8315
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "2988": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8295,
        8315
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2989": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8295,
        8315
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2990": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8295,
        8315
      ],
      "op": "ADD",
      "path": "19"
    },
    "2991": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8295,
        8330
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2992": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8295,
        8330
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2993": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8295,
        8330
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2994": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8295,
        8330
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "2995": {
      "op": "POP"
    },
    "2996": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7538,
        8337
      ],
      "op": "POP",
      "path": "19"
    },
    "2997": {
      "fn": "MasterChef.updatePool",
      "jump": "o",
      "offset": [
        7538,
        8337
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2998": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2999": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10060,
        10081
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3001": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10092
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "3003": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10093,
        10097
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3004": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3005": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3006": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3007": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "LT",
      "path": "19"
    },
    "3008": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBC5"
    },
    "3011": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3012": {
      "dev": "Index out of range",
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "INVALID",
      "path": "19"
    },
    "3013": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3014": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3016": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3017": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3018": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3019": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3021": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3022": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3023": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3024": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10146
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3025": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10146
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3026": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10146
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3027": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3029": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10146
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3030": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10146
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3031": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10146
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3033": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10146
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3034": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10146
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3035": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10146
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3036": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10147,
        10157
      ],
      "op": "CALLER",
      "path": "19"
    },
    "3037": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10158
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3038": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10158
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3039": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10158
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3040": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10158
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "3041": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10158
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3042": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10158
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3043": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10158
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3044": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10185,
        10196
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3045": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10185,
        10196
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3046": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10206,
        10221
      ],
      "op": "DUP6",
      "path": "19",
      "statement": 26
    },
    "3047": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10206,
        10221
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3048": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10206,
        10221
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3051": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10231,
        10246
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 27
    },
    "3052": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10231,
        10246
      ],
      "op": "ADD",
      "path": "19"
    },
    "3053": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10231,
        10250
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "3054": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10231,
        10250
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3055": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10231,
        10250
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "3056": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10231,
        10250
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3057": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3059": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3060": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "3061": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "MUL",
      "path": "19"
    },
    "3062": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "ADD",
      "path": "19"
    },
    "3063": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10260,
        10272
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 28
    },
    "3064": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10260,
        10272
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3065": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3066": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10084,
        10098
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "3067": {
      "op": "POP"
    },
    "3068": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10158
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3069": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10158
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3070": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10185,
        10196
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3071": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10260,
        10314
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC15"
    },
    "3074": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10260,
        10314
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3081": {
      "op": "SHL"
    },
    "3082": {
      "op": "SUB"
    },
    "3083": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10260,
        10272
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3084": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10260,
        10272
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3085": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10260,
        10272
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3086": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10260,
        10272
      ],
      "op": "AND",
      "path": "19"
    },
    "3087": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10260,
        10272
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3088": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10185,
        10196
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3089": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10260,
        10285
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18A6"
    },
    "3092": {
      "fn": "MasterChef.emergencyWithdraw",
      "jump": "i",
      "offset": [
        10260,
        10314
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3093": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10260,
        10314
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3094": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 29,
      "value": "0x40"
    },
    "3096": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3097": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3098": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3099": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3100": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3101": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3102": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3103": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10359,
        10363
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3104": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10359,
        10363
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3105": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10347,
        10357
      ],
      "op": "CALLER",
      "path": "19"
    },
    "3106": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10347,
        10357
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3107": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
    },
    "3140": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3141": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3142": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3143": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "SUB",
      "path": "19"
    },
    "3144": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3146": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "ADD",
      "path": "19"
    },
    "3147": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3148": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10329,
        10372
      ],
      "op": "LOG3",
      "path": "19"
    },
    "3149": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "POP",
      "path": "19"
    },
    "3150": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "POP",
      "path": "19"
    },
    "3151": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "POP",
      "path": "19"
    },
    "3152": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10002,
        10379
      ],
      "op": "POP",
      "path": "19"
    },
    "3153": {
      "fn": "MasterChef.emergencyWithdraw",
      "jump": "o",
      "offset": [
        10002,
        10379
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3154": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3606,
        4093
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3155": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3813,
        3824
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 30,
      "value": "0x9"
    },
    "3157": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3813,
        3824
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3158": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3813,
        3824
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "3160": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3813,
        3824
      ],
      "op": "AND",
      "path": "19"
    },
    "3161": {
      "branch": 115,
      "fn": "MasterChef.initFarm",
      "offset": [
        3812,
        3824
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3162": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3804,
        3825
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC62"
    },
    "3165": {
      "branch": 115,
      "fn": "MasterChef.initFarm",
      "offset": [
        3804,
        3825
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3166": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3804,
        3825
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3168": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3804,
        3825
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3169": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3804,
        3825
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3170": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3804,
        3825
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3171": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3842
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 31,
      "value": "0x2"
    },
    "3173": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3174": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3181": {
      "op": "SHL"
    },
    "3182": {
      "op": "SUB"
    },
    "3183": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "3184": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3185": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "AND",
      "path": "19"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3192": {
      "op": "SHL"
    },
    "3193": {
      "op": "SUB"
    },
    "3194": {
      "op": "NOT"
    },
    "3195": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3196": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3197": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "AND",
      "path": "19"
    },
    "3198": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "OR",
      "path": "19"
    },
    "3199": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3200": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3201": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3202": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3842
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3204": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3871,
        3886
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 32,
      "value": "0xC"
    },
    "3206": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3871,
        3890
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3207": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3900,
        3911
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 33,
      "value": "0x9"
    },
    "3209": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3900,
        3918
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3210": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3900,
        3918
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3213": {
      "op": "NOT"
    },
    "3214": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3900,
        3918
      ],
      "op": "AND",
      "path": "19"
    },
    "3215": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3835,
        3861
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3217": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3900,
        3918
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3218": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3900,
        3918
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3219": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3900,
        3918
      ],
      "op": "OR",
      "path": "19"
    },
    "3220": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3900,
        3918
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3221": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3900,
        3918
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3222": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3900,
        3918
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3223": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3928,
        3943
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 34,
      "value": "0x7"
    },
    "3225": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3928,
        3962
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "3226": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3928,
        3962
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3227": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3928,
        3962
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "3228": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3928,
        3962
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3229": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3972,
        3982
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 35,
      "value": "0xD"
    },
    "3231": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3972,
        3996
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "3232": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3972,
        3996
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3233": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3972,
        3996
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "3234": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3972,
        3996
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3237": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 36
    },
    "3238": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3239": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3240": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3241": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "AND",
      "path": "19"
    },
    "3242": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3243": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3244": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "AND",
      "path": "19"
    },
    "3245": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3246": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3247": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3248": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "OR",
      "path": "19"
    },
    "3249": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3250": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3251": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4006,
        4024
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3252": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4034,
        4086
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 37
    },
    "3253": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4034,
        4086
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3254": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4034,
        4086
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "3255": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4034,
        4086
      ],
      "op": "AND",
      "path": "19"
    },
    "3256": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4034,
        4086
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3257": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4034,
        4086
      ],
      "op": "AND",
      "path": "19"
    },
    "3258": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4034,
        4086
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3259": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4034,
        4086
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3260": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4034,
        4086
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3261": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4034,
        4086
      ],
      "op": "OR",
      "path": "19"
    },
    "3262": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4034,
        4086
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3263": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4034,
        4086
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3264": {
      "fn": "MasterChef.initFarm",
      "jump": "o",
      "offset": [
        3606,
        4093
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3265": {
      "offset": [
        2717,
        2747
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3266": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2717,
        2747
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "3268": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2717,
        2747
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3269": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2717,
        2747
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3270": {
      "fn": "MasterChef.initFarm",
      "jump": "o",
      "offset": [
        2717,
        2747
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3271": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7290,
        7465
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3272": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7351,
        7359
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "3274": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7351,
        7366
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3275": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7334,
        7348
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3277": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7376,
        7459
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3278": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7404,
        7410
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3279": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7398,
        7401
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3280": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7398,
        7410
      ],
      "op": "LT",
      "path": "19"
    },
    "3281": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7376,
        7459
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3282": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7376,
        7459
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x889"
    },
    "3285": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7376,
        7459
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3286": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7433,
        7448
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 38,
      "value": "0xCDE"
    },
    "3289": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7444,
        7447
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3290": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7433,
        7443
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA53"
    },
    "3293": {
      "fn": "MasterChef.massUpdatePools",
      "jump": "i",
      "offset": [
        7433,
        7448
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3294": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7433,
        7448
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3295": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7412,
        7417
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 39,
      "value": "0x1"
    },
    "3297": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7412,
        7417
      ],
      "op": "ADD",
      "path": "19"
    },
    "3298": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7376,
        7459
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCCD"
    },
    "3301": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7376,
        7459
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3302": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3303": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5582
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 40,
      "value": "0x1"
    },
    "3305": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5582
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3306": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3308": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3309": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3310": {
      "op": "PUSH4",
      "value": "0x7E271F05"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3317": {
      "op": "SHL"
    },
    "3318": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3319": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3320": {
      "fn": "MasterChef.set",
      "offset": [
        5599,
        5609
      ],
      "op": "CALLER",
      "path": "19"
    },
    "3321": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3323": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3324": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "ADD",
      "path": "19"
    },
    "3325": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3326": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3327": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3334": {
      "op": "SHL"
    },
    "3335": {
      "op": "SUB"
    },
    "3336": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5582
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3337": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5582
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3338": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5582
      ],
      "op": "AND",
      "path": "19"
    },
    "3339": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5582
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3340": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5598
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFC4E3E0A"
    },
    "3345": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5598
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3346": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "3348": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3349": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3350": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "ADD",
      "path": "19"
    },
    "3351": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3352": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3354": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3355": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3356": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3357": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3358": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3359": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3360": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "SUB",
      "path": "19"
    },
    "3361": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "ADD",
      "path": "19"
    },
    "3362": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3363": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5582
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3364": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3365": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3366": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3367": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3368": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3369": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD31"
    },
    "3372": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3373": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3375": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3376": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3377": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3378": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "POP",
      "path": "19"
    },
    "3379": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "GAS",
      "path": "19"
    },
    "3380": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "3381": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3382": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3383": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3384": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD45"
    },
    "3387": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3388": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3389": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3391": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3392": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3393": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3394": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3396": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3397": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3398": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "POP",
      "path": "19"
    },
    "3399": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "POP",
      "path": "19"
    },
    "3400": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "POP",
      "path": "19"
    },
    "3401": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "POP",
      "path": "19"
    },
    "3402": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3404": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3405": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3406": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3408": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3409": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "LT",
      "path": "19"
    },
    "3410": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3411": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD5B"
    },
    "3414": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3415": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3417": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3418": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3419": {
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3420": {
      "op": "POP"
    },
    "3421": {
      "branch": 116,
      "fn": "MasterChef.set",
      "offset": [
        5568,
        5610
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3422": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD98"
    },
    "3425": {
      "branch": 116,
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3426": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3428": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3429": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3435": {
      "op": "SHL"
    },
    "3436": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3437": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3438": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3440": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "ADD",
      "path": "19"
    },
    "3441": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3442": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3443": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3445": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "ADD",
      "path": "19"
    },
    "3446": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3447": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3448": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "SUB",
      "path": "19"
    },
    "3449": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3450": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3451": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x27"
    },
    "3453": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3454": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3455": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3457": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "ADD",
      "path": "19"
    },
    "3458": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3459": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FC0"
    },
    "3462": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x27"
    },
    "3464": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3465": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "CODECOPY",
      "path": "19"
    },
    "3466": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3468": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "ADD",
      "path": "19"
    },
    "3469": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3470": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "POP",
      "path": "19"
    },
    "3471": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "POP",
      "path": "19"
    },
    "3472": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3474": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3475": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3476": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3477": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "SUB",
      "path": "19"
    },
    "3478": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3479": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3480": {
      "fn": "MasterChef.set",
      "offset": [
        5547,
        5675
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3481": {
      "branch": 117,
      "fn": "MasterChef.set",
      "offset": [
        5689,
        5700
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3482": {
      "fn": "MasterChef.set",
      "offset": [
        5685,
        5744
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3483": {
      "fn": "MasterChef.set",
      "offset": [
        5685,
        5744
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDA6"
    },
    "3486": {
      "branch": 117,
      "fn": "MasterChef.set",
      "offset": [
        5685,
        5744
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3487": {
      "fn": "MasterChef.set",
      "offset": [
        5716,
        5733
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 41,
      "value": "0xDA6"
    },
    "3490": {
      "fn": "MasterChef.set",
      "offset": [
        5716,
        5731
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCC7"
    },
    "3493": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        5716,
        5733
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3494": {
      "fn": "MasterChef.set",
      "offset": [
        5716,
        5733
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3495": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5834
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 42,
      "value": "0xDE3"
    },
    "3498": {
      "fn": "MasterChef.set",
      "offset": [
        5822,
        5833
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3499": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5817
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDDD"
    },
    "3502": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "3504": {
      "fn": "MasterChef.set",
      "offset": [
        5800,
        5804
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3505": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3506": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3507": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3508": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "LT",
      "path": "19"
    },
    "3509": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDBA"
    },
    "3512": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3513": {
      "dev": "Index out of range",
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "INVALID",
      "path": "19"
    },
    "3514": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3515": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3516": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3518": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3519": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3521": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3523": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3524": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3525": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3527": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "MUL",
      "path": "19"
    },
    "3528": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5805
      ],
      "op": "ADD",
      "path": "19"
    },
    "3529": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5816
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3531": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5816
      ],
      "op": "ADD",
      "path": "19"
    },
    "3532": {
      "fn": "MasterChef.set",
      "offset": [
        5791,
        5816
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3533": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5786
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "3535": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5786
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3536": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5790
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1864"
    },
    "3539": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5790
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3540": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5817
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3541": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5817
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3542": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5817
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "3547": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5817
      ],
      "op": "AND",
      "path": "19"
    },
    "3548": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        5771,
        5817
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3549": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5817
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3550": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5821
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3551": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5821
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18F8"
    },
    "3554": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        5771,
        5834
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3555": {
      "fn": "MasterChef.set",
      "offset": [
        5771,
        5834
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3556": {
      "fn": "MasterChef.set",
      "offset": [
        5753,
        5768
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "3558": {
      "fn": "MasterChef.set",
      "offset": [
        5753,
        5834
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3559": {
      "fn": "MasterChef.set",
      "offset": [
        5753,
        5834
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3560": {
      "fn": "MasterChef.set",
      "offset": [
        5753,
        5834
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3561": {
      "fn": "MasterChef.set",
      "offset": [
        5753,
        5834
      ],
      "op": "POP",
      "path": "19"
    },
    "3562": {
      "fn": "MasterChef.set",
      "offset": [
        5872,
        5883
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 43
    },
    "3563": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5852
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "3565": {
      "fn": "MasterChef.set",
      "offset": [
        5853,
        5857
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3566": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3567": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3568": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3569": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "LT",
      "path": "19"
    },
    "3570": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDF7"
    },
    "3573": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3574": {
      "dev": "Index out of range",
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "INVALID",
      "path": "19"
    },
    "3575": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3576": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3577": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3579": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3580": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3582": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3584": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3585": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3586": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3588": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "MUL",
      "path": "19"
    },
    "3589": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5858
      ],
      "op": "ADD",
      "path": "19"
    },
    "3590": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5869
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3592": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5869
      ],
      "op": "ADD",
      "path": "19"
    },
    "3593": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5883
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3594": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5883
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3595": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5883
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3596": {
      "fn": "MasterChef.set",
      "offset": [
        5844,
        5883
      ],
      "op": "POP",
      "path": "19"
    },
    "3597": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "POP",
      "path": "19"
    },
    "3598": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "POP",
      "path": "19"
    },
    "3599": {
      "fn": "MasterChef.set",
      "offset": [
        5463,
        5890
      ],
      "op": "POP",
      "path": "19"
    },
    "3600": {
      "fn": "MasterChef.set",
      "jump": "o",
      "offset": [
        5463,
        5890
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3601": {
      "offset": [
        1069,
        1109
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3602": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3604": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3611": {
      "op": "SHL"
    },
    "3612": {
      "op": "SUB"
    },
    "3613": {
      "offset": [
        1069,
        1109
      ],
      "op": "AND",
      "path": "19"
    },
    "3614": {
      "fn": "MasterChef.set",
      "offset": [
        1069,
        1109
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3615": {
      "fn": "MasterChef.set",
      "jump": "o",
      "offset": [
        1069,
        1109
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3616": {
      "fn": "MasterChef.dev",
      "offset": [
        11467,
        11593
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3617": {
      "fn": "MasterChef.dev",
      "offset": [
        11537,
        11544
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 44,
      "value": "0x3"
    },
    "3619": {
      "fn": "MasterChef.dev",
      "offset": [
        11537,
        11544
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3626": {
      "op": "SHL"
    },
    "3627": {
      "op": "SUB"
    },
    "3628": {
      "fn": "MasterChef.dev",
      "offset": [
        11537,
        11544
      ],
      "op": "AND",
      "path": "19"
    },
    "3629": {
      "fn": "MasterChef.dev",
      "offset": [
        11523,
        11533
      ],
      "op": "CALLER",
      "path": "19"
    },
    "3630": {
      "branch": 118,
      "fn": "MasterChef.dev",
      "offset": [
        11523,
        11544
      ],
      "op": "EQ",
      "path": "19"
    },
    "3631": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE6B"
    },
    "3634": {
      "branch": 118,
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3635": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3637": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3638": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3639": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3645": {
      "op": "SHL"
    },
    "3646": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3647": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3648": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3650": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3652": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3653": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "ADD",
      "path": "19"
    },
    "3654": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3655": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "3657": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "3659": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3660": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "ADD",
      "path": "19"
    },
    "3661": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3662": {
      "op": "PUSH9",
      "value": "0x6465763A207775743F"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "3674": {
      "op": "SHL"
    },
    "3675": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "3677": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3678": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "ADD",
      "path": "19"
    },
    "3679": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3680": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3681": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3682": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3683": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3684": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3685": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "SUB",
      "path": "19"
    },
    "3686": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "3688": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "ADD",
      "path": "19"
    },
    "3689": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3690": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3691": {
      "fn": "MasterChef.dev",
      "offset": [
        11515,
        11558
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3692": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11575
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 45,
      "value": "0x3"
    },
    "3694": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3695": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3702": {
      "op": "SHL"
    },
    "3703": {
      "op": "SUB"
    },
    "3704": {
      "op": "NOT"
    },
    "3705": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "AND",
      "path": "19"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3712": {
      "op": "SHL"
    },
    "3713": {
      "op": "SUB"
    },
    "3714": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3715": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3716": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3717": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "AND",
      "path": "19"
    },
    "3718": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3719": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3720": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3721": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "OR",
      "path": "19"
    },
    "3722": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3723": {
      "fn": "MasterChef.dev",
      "offset": [
        11568,
        11586
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3724": {
      "fn": "MasterChef.dev",
      "jump": "o",
      "offset": [
        11467,
        11593
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3725": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3726": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6036,
        6043
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3728": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6066,
        6079
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "3730": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6066,
        6079
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3731": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6059,
        6062
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3732": {
      "branch": 119,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6059,
        6079
      ],
      "op": "GT",
      "path": "19"
    },
    "3733": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6055,
        6369
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEB0"
    },
    "3736": {
      "branch": 119,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6055,
        6369
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3737": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6121,
        6136
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 46,
      "value": "0x8"
    },
    "3739": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6121,
        6136
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3740": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6102,
        6137
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEA9"
    },
    "3743": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6102,
        6137
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3744": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6102,
        6116
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB44"
    },
    "3747": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6102,
        6105
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3748": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6110,
        6115
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3749": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6102,
        6109
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1864"
    },
    "3752": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        6102,
        6116
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3753": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6102,
        6137
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3754": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6095,
        6137
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3755": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6095,
        6137
      ],
      "op": "POP",
      "path": "19"
    },
    "3756": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6095,
        6137
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEF6"
    },
    "3759": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6095,
        6137
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3760": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6055,
        6369
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3761": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6167,
        6180
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "3763": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6167,
        6180
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3764": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6158,
        6163
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3765": {
      "branch": 120,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6158,
        6180
      ],
      "op": "LT",
      "path": "19"
    },
    "3766": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6154,
        6369
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEC3"
    },
    "3769": {
      "branch": 120,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6154,
        6369
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3770": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6203,
        6217
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 47,
      "value": "0xEA9"
    },
    "3773": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6203,
        6206
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3774": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6211,
        6216
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3775": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6203,
        6210
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1864"
    },
    "3778": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        6203,
        6217
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3779": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6154,
        6369
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3780": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6255,
        6358
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 48,
      "value": "0xEA9"
    },
    "3783": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6322,
        6344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEDB"
    },
    "3786": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6330,
        6343
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "3788": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6330,
        6343
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3789": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6322,
        6325
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3790": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6322,
        6329
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1864"
    },
    "3793": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6322,
        6329
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3794": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6322,
        6344
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3795": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6322,
        6344
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3796": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6322,
        6344
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "3801": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6322,
        6344
      ],
      "op": "AND",
      "path": "19"
    },
    "3802": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        6322,
        6344
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3803": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6322,
        6344
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3804": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6255,
        6300
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDDD"
    },
    "3807": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6284,
        6299
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "3809": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6284,
        6299
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3810": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6255,
        6279
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB44"
    },
    "3813": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6273,
        6278
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3814": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6255,
        6268
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "3816": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6255,
        6268
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3817": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6255,
        6272
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1864"
    },
    "3820": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6255,
        6272
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3821": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6255,
        6279
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3822": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6255,
        6279
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3823": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6255,
        6279
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "3828": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6255,
        6279
      ],
      "op": "AND",
      "path": "19"
    },
    "3829": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        6255,
        6279
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3830": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6154,
        6369
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3831": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3832": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3833": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "POP",
      "path": "19"
    },
    "3834": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5964,
        6375
      ],
      "op": "POP",
      "path": "19"
    },
    "3835": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        5964,
        6375
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3836": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3837": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4028,
        4035
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3839": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 49
    },
    "3840": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3841": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3842": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3844": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3845": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3846": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3847": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3849": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3850": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3851": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4084
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF14"
    },
    "3854": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3855": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4078,
        4083
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3856": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1952"
    },
    "3859": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        4054,
        4084
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3860": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4084
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3861": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4047,
        4084
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3862": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3863": {
      "op": "POP"
    },
    "3864": {
      "op": "POP"
    },
    "3865": {
      "op": "POP"
    },
    "3866": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        3955,
        4091
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3867": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3868": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3009,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3870": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 50
    },
    "3871": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3872": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3873": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3875": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3876": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3877": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3878": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3880": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3881": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3882": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3070
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF14"
    },
    "3885": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3070
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3886": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3062,
        3069
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3887": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3061
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x195E"
    },
    "3890": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3032,
        3070
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3891": {
      "offset": [
        3081,
        3147
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3892": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "3894": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3896": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3897": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3898": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3899": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3901": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3902": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3903": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3904": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3906": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3907": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3908": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3909": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3910": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3911": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3912": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3913": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3914": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3915": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3916": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3917": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3918": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3919": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3921": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3922": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3923": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "ADD",
      "path": "19"
    },
    "3924": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3925": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3081,
        3147
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3926": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        3081,
        3147
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3927": {
      "offset": [
        2379,
        2400
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3928": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2379,
        2400
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "3930": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2379,
        2400
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3937": {
      "op": "SHL"
    },
    "3938": {
      "op": "SUB"
    },
    "3939": {
      "offset": [
        2379,
        2400
      ],
      "op": "AND",
      "path": "19"
    },
    "3940": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2379,
        2400
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3941": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        2379,
        2400
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3942": {
      "offset": [
        1717,
        1766
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3943": {
      "offset": [
        1762,
        1766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3945": {
      "offset": [
        1717,
        1766
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3946": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        1717,
        1766
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3947": {
      "offset": [
        2802,
        2832
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3948": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2802,
        2832
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "3950": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2802,
        2832
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3951": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2802,
        2832
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3952": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        2802,
        2832
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3953": {
      "offset": [
        2501,
        2529
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3954": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2501,
        2529
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3956": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2501,
        2529
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3957": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2501,
        2529
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3958": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        2501,
        2529
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3959": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3960": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3308,
        3315
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3962": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 51
    },
    "3963": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3964": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3965": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3967": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3968": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3969": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3970": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3972": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3973": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3974": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF6"
    },
    "3977": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3978": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1973"
    },
    "3981": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3334,
        3363
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3982": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10871,
        11125
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3983": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10960
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "3985": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10960
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3986": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3988": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3989": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3990": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3997": {
      "op": "SHL"
    },
    "3998": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3999": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4000": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10979,
        10983
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "4001": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4003": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4004": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "ADD",
      "path": "19"
    },
    "4005": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4006": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4007": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4008": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10914,
        10921
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4010": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10914,
        10921
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4011": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10914,
        10921
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4012": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10914,
        10921
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4019": {
      "op": "SHL"
    },
    "4020": {
      "op": "SUB"
    },
    "4021": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10960
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4022": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10960
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4023": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10960
      ],
      "op": "AND",
      "path": "19"
    },
    "4024": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10960
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4025": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10970
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "4030": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10970
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4031": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4033": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4034": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4035": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "ADD",
      "path": "19"
    },
    "4036": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4037": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4039": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4040": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4041": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4042": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4043": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4044": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4045": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "SUB",
      "path": "19"
    },
    "4046": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "ADD",
      "path": "19"
    },
    "4047": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4048": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10960
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4049": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4050": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "4051": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4052": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4053": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4054": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFDE"
    },
    "4057": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4058": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4060": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4061": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4062": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4063": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "POP",
      "path": "19"
    },
    "4064": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "GAS",
      "path": "19"
    },
    "4065": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "4066": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4067": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4068": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4069": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFF2"
    },
    "4072": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4073": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4074": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4076": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4077": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "4078": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4079": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4081": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4082": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4083": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "POP",
      "path": "19"
    },
    "4084": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "POP",
      "path": "19"
    },
    "4085": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "POP",
      "path": "19"
    },
    "4086": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "POP",
      "path": "19"
    },
    "4087": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4089": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4090": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4091": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4093": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4094": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "LT",
      "path": "19"
    },
    "4095": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4096": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1008"
    },
    "4099": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4100": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4102": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4103": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4104": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4105": {
      "op": "POP"
    },
    "4106": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4107": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10999,
        11014
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "4109": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10999,
        11014
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4110": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4111": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10953,
        10985
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4112": {
      "op": "POP"
    },
    "4113": {
      "branch": 121,
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10999,
        11018
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4114": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10995,
        11119
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1029"
    },
    "4117": {
      "branch": 121,
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10995,
        11119
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4118": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11054,
        11069
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 52,
      "value": "0x7"
    },
    "4120": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11054,
        11069
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4121": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11041,
        11051
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4122": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11041,
        11069
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4123": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11041,
        11069
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1020"
    },
    "4126": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11041,
        11069
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4127": {
      "dev": "Division by zero",
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11041,
        11069
      ],
      "op": "INVALID",
      "path": "19"
    },
    "4128": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11041,
        11069
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4129": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11041,
        11069
      ],
      "op": "DIV",
      "path": "19"
    },
    "4130": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11034,
        11069
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4131": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11034,
        11069
      ],
      "op": "POP",
      "path": "19"
    },
    "4132": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11034,
        11069
      ],
      "op": "POP",
      "path": "19"
    },
    "4133": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11034,
        11069
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7B1"
    },
    "4136": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11034,
        11069
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4137": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10995,
        11119
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4138": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11107,
        11108
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 53,
      "value": "0x0"
    },
    "4140": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11100,
        11108
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4141": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11100,
        11108
      ],
      "op": "POP",
      "path": "19"
    },
    "4142": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11100,
        11108
      ],
      "op": "POP",
      "path": "19"
    },
    "4143": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11100,
        11108
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7B1"
    },
    "4146": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11100,
        11108
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4147": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4148": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6513,
        6520
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4150": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6532,
        6553
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4151": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6564
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "4153": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6565,
        6569
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4154": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4155": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4156": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4157": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "LT",
      "path": "19"
    },
    "4158": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1043"
    },
    "4161": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4162": {
      "dev": "Index out of range",
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "INVALID",
      "path": "19"
    },
    "4163": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4164": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4166": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4167": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4168": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4169": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4171": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4172": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4173": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4174": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6618
      ],
      "op": "DUP8",
      "path": "19"
    },
    "4175": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6618
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4176": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6618
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4177": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6612
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "4179": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6618
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4180": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6618
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4181": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6618
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4183": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6618
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4184": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6618
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4185": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6618
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4192": {
      "op": "SHL"
    },
    "4193": {
      "op": "SUB"
    },
    "4194": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "DUP10",
      "path": "19"
    },
    "4195": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4196": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "AND",
      "path": "19"
    },
    "4197": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "DUP8",
      "path": "19"
    },
    "4198": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4199": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4200": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4201": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4202": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4203": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4204": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4205": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4207": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "4208": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4209": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "MUL",
      "path": "19"
    },
    "4210": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4211": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4212": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "ADD",
      "path": "19"
    },
    "4213": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6664,
        6687
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "4215": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6664,
        6687
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4216": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6664,
        6687
      ],
      "op": "ADD",
      "path": "19"
    },
    "4217": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6664,
        6687
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4218": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6728
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4219": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6728
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4220": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4221": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4222": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4229": {
      "op": "SHL"
    },
    "4230": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4231": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4232": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6747,
        6751
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "4233": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "4234": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4235": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "ADD",
      "path": "19"
    },
    "4236": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "4237": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4238": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "4239": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4240": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4241": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4242": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4243": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "4244": {
      "op": "POP"
    },
    "4245": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4246": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6604,
        6625
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "4247": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6664,
        6687
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4248": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6664,
        6687
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "4249": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4250": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "4251": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6728
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4252": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6728
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4253": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6728
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4254": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6728
      ],
      "op": "AND",
      "path": "19"
    },
    "4255": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6728
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4256": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6738
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "4261": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6738
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4262": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4264": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4265": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4266": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "ADD",
      "path": "19"
    },
    "4267": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4268": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4269": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6556,
        6570
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4270": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4271": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4272": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "SUB",
      "path": "19"
    },
    "4273": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "ADD",
      "path": "19"
    },
    "4274": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4275": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6728
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4276": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4277": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "4278": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4279": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4280": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4281": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10C1"
    },
    "4284": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4285": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4287": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4288": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4289": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4290": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "POP",
      "path": "19"
    },
    "4291": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "GAS",
      "path": "19"
    },
    "4292": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "4293": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4294": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4295": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4296": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10D5"
    },
    "4299": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4300": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4301": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4303": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4304": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "4305": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4306": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4308": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4309": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4310": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "POP",
      "path": "19"
    },
    "4311": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "POP",
      "path": "19"
    },
    "4312": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "POP",
      "path": "19"
    },
    "4313": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "POP",
      "path": "19"
    },
    "4314": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4316": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4317": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4318": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4320": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4321": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "LT",
      "path": "19"
    },
    "4322": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4323": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10EB"
    },
    "4326": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4327": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4329": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4330": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4331": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4332": {
      "op": "POP"
    },
    "4333": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4334": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6782,
        6802
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "4336": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6782,
        6802
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4337": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6782,
        6802
      ],
      "op": "ADD",
      "path": "19"
    },
    "4338": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6782,
        6802
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4339": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4340": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6716,
        6753
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4341": {
      "op": "POP"
    },
    "4342": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6767,
        6779
      ],
      "op": "NUMBER",
      "path": "19"
    },
    "4343": {
      "branch": 122,
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6767,
        6802
      ],
      "op": "GT",
      "path": "19"
    },
    "4344": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6767,
        6819
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4345": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6767,
        6819
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4346": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6767,
        6819
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1102"
    },
    "4349": {
      "branch": 122,
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6767,
        6819
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4350": {
      "op": "POP"
    },
    "4351": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6806,
        6819
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4352": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6806,
        6819
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4353": {
      "branch": 123,
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6806,
        6819
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4354": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6767,
        6819
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4355": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6763,
        7121
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4356": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6763,
        7121
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1162"
    },
    "4359": {
      "branch": 123,
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6763,
        7121
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4360": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6835,
        6853
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4362": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6856,
        6905
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1117"
    },
    "4365": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6870,
        6874
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4366": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6870,
        6890
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "4368": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6870,
        6890
      ],
      "op": "ADD",
      "path": "19"
    },
    "4369": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6870,
        6890
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4370": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6892,
        6904
      ],
      "op": "NUMBER",
      "path": "19"
    },
    "4371": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6856,
        6869
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE8D"
    },
    "4374": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        6856,
        6905
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4375": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6856,
        6905
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4376": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6835,
        6905
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4377": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6835,
        6905
      ],
      "op": "POP",
      "path": "19"
    },
    "4378": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6919,
        6939
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4380": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        7015
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x113E"
    },
    "4383": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6999,
        7014
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "4385": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6999,
        7014
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4386": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6994
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9A7"
    },
    "4389": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6978,
        6982
      ],
      "op": "DUP9",
      "path": "19"
    },
    "4390": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6978,
        6993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4392": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6978,
        6993
      ],
      "op": "ADD",
      "path": "19"
    },
    "4393": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6978,
        6993
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4394": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6973
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB44"
    },
    "4397": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6957,
        6972
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "4399": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6957,
        6972
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4400": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6952
      ],
      "op": "DUP8",
      "path": "19"
    },
    "4401": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6956
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C9"
    },
    "4404": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6956
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4405": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6973
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4406": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6973
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4407": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6973
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "4412": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6973
      ],
      "op": "AND",
      "path": "19"
    },
    "4413": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        6942,
        6973
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4414": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        7015
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4415": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6919,
        7015
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4416": {
      "op": "POP"
    },
    "4417": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7050,
        7110
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 54,
      "value": "0x115D"
    },
    "4420": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7073,
        7109
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1156"
    },
    "4423": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7100,
        7108
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4424": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7073,
        7095
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9A7"
    },
    "4427": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6919,
        7015
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4428": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7090,
        7094
      ],
      "op": "PUSH5",
      "path": "19",
      "value": "0xE8D4A51000"
    },
    "4434": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7073,
        7089
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C9"
    },
    "4437": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        7073,
        7095
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4438": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7073,
        7109
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4439": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7050,
        7068
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4440": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7050,
        7068
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4441": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7050,
        7072
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18F8"
    },
    "4444": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        7050,
        7110
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4445": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7050,
        7110
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4446": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7110
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4447": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7029,
        7110
      ],
      "op": "POP",
      "path": "19"
    },
    "4448": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6763,
        7121
      ],
      "op": "POP",
      "path": "19"
    },
    "4449": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6763,
        7121
      ],
      "op": "POP",
      "path": "19"
    },
    "4450": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6763,
        7121
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4451": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7203
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 55,
      "value": "0x118A"
    },
    "4454": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7187,
        7191
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4455": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7187,
        7202
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4457": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7187,
        7202
      ],
      "op": "ADD",
      "path": "19"
    },
    "4458": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7187,
        7202
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4459": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7182
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9AD"
    },
    "4462": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7177,
        7181
      ],
      "op": "PUSH5",
      "path": "19",
      "value": "0xE8D4A51000"
    },
    "4468": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7172
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9A7"
    },
    "4471": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7153,
        7171
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4472": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7141
      ],
      "op": "DUP9",
      "path": "19"
    },
    "4473": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7148
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4475": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7148
      ],
      "op": "ADD",
      "path": "19"
    },
    "4476": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7148
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4477": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7152
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C9"
    },
    "4480": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7152
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4481": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7172
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4482": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7172
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4483": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7172
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "4488": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7172
      ],
      "op": "AND",
      "path": "19"
    },
    "4489": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        7137,
        7172
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4490": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7137,
        7203
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4491": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7130,
        7203
      ],
      "op": "SWAP8",
      "path": "19"
    },
    "4492": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6437,
        7210
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "4493": {
      "op": "POP"
    },
    "4494": {
      "op": "POP"
    },
    "4495": {
      "op": "POP"
    },
    "4496": {
      "op": "POP"
    },
    "4497": {
      "op": "POP"
    },
    "4498": {
      "op": "POP"
    },
    "4499": {
      "op": "POP"
    },
    "4500": {
      "fn": "MasterChef.pendingRewards",
      "jump": "o",
      "offset": [
        6437,
        7210
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4501": {
      "offset": [
        2426,
        2448
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4502": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2426,
        2448
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "4504": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2426,
        2448
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4511": {
      "op": "SHL"
    },
    "4512": {
      "op": "SUB"
    },
    "4513": {
      "offset": [
        2426,
        2448
      ],
      "op": "AND",
      "path": "19"
    },
    "4514": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2426,
        2448
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4515": {
      "fn": "MasterChef.pendingRewards",
      "jump": "o",
      "offset": [
        2426,
        2448
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4516": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4517": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5189
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 56,
      "value": "0x0"
    },
    "4519": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4520": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4521": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4522": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4524": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4525": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4526": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4527": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4529": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4530": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4531": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5205
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4533": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5205
      ],
      "op": "ADD",
      "path": "1"
    },
    "4534": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5205
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4535": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5175,
        5220
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11C2"
    },
    "4538": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5175,
        5220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4539": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5207,
        5219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83F"
    },
    "4542": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5207,
        5217
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F3"
    },
    "4545": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5207,
        5219
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4546": {
      "branch": 134,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5175,
        5220
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4547": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E4"
    },
    "4550": {
      "branch": 134,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4551": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4553": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4554": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4560": {
      "op": "SHL"
    },
    "4561": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4562": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4563": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4565": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "ADD",
      "path": "1"
    },
    "4566": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4567": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4568": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4570": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "ADD",
      "path": "1"
    },
    "4571": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4572": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4573": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "SUB",
      "path": "1"
    },
    "4574": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4575": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4576": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x30"
    },
    "4578": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4579": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4580": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4582": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "ADD",
      "path": "1"
    },
    "4583": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4584": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F21"
    },
    "4587": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x30"
    },
    "4589": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4590": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "4591": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4593": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "ADD",
      "path": "1"
    },
    "4594": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4595": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "POP",
      "path": "1"
    },
    "4596": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "POP",
      "path": "1"
    },
    "4597": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4599": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4600": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4601": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4602": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "SUB",
      "path": "1"
    },
    "4603": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4604": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4605": {
      "fn": "MasterChef.addToken",
      "offset": [
        4684,
        5367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4606": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4811
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 57,
      "value": "0x1"
    },
    "4608": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4811
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4609": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4611": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4612": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4613": {
      "op": "PUSH4",
      "value": "0xC395FCB3"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4620": {
      "op": "SHL"
    },
    "4621": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4622": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4623": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4835
      ],
      "op": "CALLER",
      "path": "19"
    },
    "4624": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4626": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4627": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "ADD",
      "path": "19"
    },
    "4628": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4629": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4630": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4637": {
      "op": "SHL"
    },
    "4638": {
      "op": "SUB"
    },
    "4639": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4811
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4640": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4811
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4641": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4811
      ],
      "op": "AND",
      "path": "19"
    },
    "4642": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4811
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4643": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4824
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC395FCB3"
    },
    "4648": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4824
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4649": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4651": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4652": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4653": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "ADD",
      "path": "19"
    },
    "4654": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4655": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4657": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4658": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4659": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4660": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4661": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4662": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4663": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "SUB",
      "path": "19"
    },
    "4664": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "ADD",
      "path": "19"
    },
    "4665": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4666": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4811
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4667": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4668": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "4669": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4670": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4671": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4672": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1248"
    },
    "4675": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4676": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4678": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4679": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4680": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4681": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "POP",
      "path": "19"
    },
    "4682": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "GAS",
      "path": "19"
    },
    "4683": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "4684": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4685": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4686": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4687": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x125C"
    },
    "4690": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4691": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4692": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4694": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4695": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "4696": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4697": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4699": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4700": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4701": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "POP",
      "path": "19"
    },
    "4702": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "POP",
      "path": "19"
    },
    "4703": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "POP",
      "path": "19"
    },
    "4704": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "POP",
      "path": "19"
    },
    "4705": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4707": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4708": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4709": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4711": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4712": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "LT",
      "path": "19"
    },
    "4713": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4714": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1272"
    },
    "4717": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4718": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4720": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4721": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4722": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4723": {
      "op": "POP"
    },
    "4724": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4725": {
      "branch": 124,
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4836
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4726": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4887
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12F2"
    },
    "4729": {
      "branch": 124,
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4887
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4730": {
      "op": "POP"
    },
    "4731": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4854
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4733": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4854
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4734": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4736": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4737": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4738": {
      "op": "PUSH4",
      "value": "0x89D8559"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4745": {
      "op": "SHL"
    },
    "4746": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4747": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4748": {
      "fn": "MasterChef.addToken",
      "offset": [
        4876,
        4886
      ],
      "op": "CALLER",
      "path": "19"
    },
    "4749": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4751": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4752": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "ADD",
      "path": "19"
    },
    "4753": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4754": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4755": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4762": {
      "op": "SHL"
    },
    "4763": {
      "op": "SUB"
    },
    "4764": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4854
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4765": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4854
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4766": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4854
      ],
      "op": "AND",
      "path": "19"
    },
    "4767": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4854
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4768": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4875
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x113B0AB2"
    },
    "4773": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4875
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4774": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4776": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4777": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4778": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "ADD",
      "path": "19"
    },
    "4779": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4780": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4782": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4783": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4784": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4785": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4786": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4787": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4788": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "SUB",
      "path": "19"
    },
    "4789": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "ADD",
      "path": "19"
    },
    "4790": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4791": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4854
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4792": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4793": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "4794": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4795": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4796": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4797": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12C5"
    },
    "4800": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4801": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4803": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4804": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4805": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4806": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "POP",
      "path": "19"
    },
    "4807": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "GAS",
      "path": "19"
    },
    "4808": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "4809": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4810": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4811": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4812": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12D9"
    },
    "4815": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4816": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4817": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4819": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4820": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "4821": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4822": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4824": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4825": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4826": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "POP",
      "path": "19"
    },
    "4827": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "POP",
      "path": "19"
    },
    "4828": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "POP",
      "path": "19"
    },
    "4829": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "POP",
      "path": "19"
    },
    "4830": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4832": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4833": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4834": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4836": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4837": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "LT",
      "path": "19"
    },
    "4838": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4839": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12EF"
    },
    "4842": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4843": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4845": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4846": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4847": {
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4848": {
      "op": "POP"
    },
    "4849": {
      "branch": 125,
      "fn": "MasterChef.addToken",
      "offset": [
        4840,
        4887
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4850": {
      "fn": "MasterChef.addToken",
      "offset": [
        4797,
        4887
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4851": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x132D"
    },
    "4854": {
      "branch": 125,
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4855": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4857": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4858": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4864": {
      "op": "SHL"
    },
    "4865": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4866": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4867": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4869": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "ADD",
      "path": "19"
    },
    "4870": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4871": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4872": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4874": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "ADD",
      "path": "19"
    },
    "4875": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4876": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4877": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "SUB",
      "path": "19"
    },
    "4878": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4879": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4880": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4882": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4883": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4884": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4886": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "ADD",
      "path": "19"
    },
    "4887": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4888": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F51"
    },
    "4891": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4893": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4894": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "CODECOPY",
      "path": "19"
    },
    "4895": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4897": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "ADD",
      "path": "19"
    },
    "4898": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4899": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "POP",
      "path": "19"
    },
    "4900": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "POP",
      "path": "19"
    },
    "4901": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4903": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4904": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4905": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4906": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "SUB",
      "path": "19"
    },
    "4907": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4908": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4909": {
      "fn": "MasterChef.addToken",
      "offset": [
        4776,
        4949
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4910": {
      "branch": 126,
      "fn": "MasterChef.addToken",
      "offset": [
        4963,
        4974
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4911": {
      "fn": "MasterChef.addToken",
      "offset": [
        4959,
        5018
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4912": {
      "fn": "MasterChef.addToken",
      "offset": [
        4959,
        5018
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x133B"
    },
    "4915": {
      "branch": 126,
      "fn": "MasterChef.addToken",
      "offset": [
        4959,
        5018
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4916": {
      "fn": "MasterChef.addToken",
      "offset": [
        4990,
        5007
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 58,
      "value": "0x133B"
    },
    "4919": {
      "fn": "MasterChef.addToken",
      "offset": [
        4990,
        5005
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCC7"
    },
    "4922": {
      "fn": "MasterChef.addToken",
      "jump": "i",
      "offset": [
        4990,
        5007
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4923": {
      "fn": "MasterChef.addToken",
      "offset": [
        4990,
        5007
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4924": {
      "fn": "MasterChef.addToken",
      "offset": [
        5027,
        5050
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4926": {
      "fn": "MasterChef.addToken",
      "offset": [
        5068,
        5078
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "4928": {
      "fn": "MasterChef.addToken",
      "offset": [
        5068,
        5078
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4929": {
      "fn": "MasterChef.addToken",
      "offset": [
        5053,
        5065
      ],
      "op": "NUMBER",
      "path": "19"
    },
    "4930": {
      "branch": 127,
      "fn": "MasterChef.addToken",
      "offset": [
        5053,
        5078
      ],
      "op": "GT",
      "path": "19"
    },
    "4931": {
      "fn": "MasterChef.addToken",
      "offset": [
        5053,
        5106
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x134E"
    },
    "4934": {
      "branch": 127,
      "fn": "MasterChef.addToken",
      "offset": [
        5053,
        5106
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4935": {
      "fn": "MasterChef.addToken",
      "offset": [
        5096,
        5106
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "4937": {
      "fn": "MasterChef.addToken",
      "offset": [
        5096,
        5106
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4938": {
      "fn": "MasterChef.addToken",
      "offset": [
        5053,
        5106
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1350"
    },
    "4941": {
      "fn": "MasterChef.addToken",
      "offset": [
        5053,
        5106
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4942": {
      "fn": "MasterChef.addToken",
      "offset": [
        5053,
        5106
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4943": {
      "fn": "MasterChef.addToken",
      "offset": [
        5081,
        5093
      ],
      "op": "NUMBER",
      "path": "19"
    },
    "4944": {
      "fn": "MasterChef.addToken",
      "offset": [
        5053,
        5106
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4945": {
      "fn": "MasterChef.addToken",
      "offset": [
        5134,
        5149
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 59,
      "value": "0xC"
    },
    "4947": {
      "fn": "MasterChef.addToken",
      "offset": [
        5134,
        5149
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4948": {
      "fn": "MasterChef.addToken",
      "offset": [
        5027,
        5106
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4949": {
      "fn": "MasterChef.addToken",
      "offset": [
        5027,
        5106
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4950": {
      "op": "POP"
    },
    "4951": {
      "fn": "MasterChef.addToken",
      "offset": [
        5134,
        5166
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1360"
    },
    "4954": {
      "fn": "MasterChef.addToken",
      "offset": [
        5134,
        5166
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4955": {
      "fn": "MasterChef.addToken",
      "offset": [
        5154,
        5165
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4956": {
      "fn": "MasterChef.addToken",
      "offset": [
        5134,
        5153
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18F8"
    },
    "4959": {
      "fn": "MasterChef.addToken",
      "jump": "i",
      "offset": [
        5134,
        5166
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4960": {
      "fn": "MasterChef.addToken",
      "offset": [
        5134,
        5166
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4961": {
      "fn": "MasterChef.addToken",
      "offset": [
        5116,
        5131
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "4963": {
      "fn": "MasterChef.addToken",
      "offset": [
        5116,
        5166
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4964": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 60,
      "value": "0x40"
    },
    "4966": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4967": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4968": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "4970": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4971": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "ADD",
      "path": "19"
    },
    "4972": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4973": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4980": {
      "op": "SHL"
    },
    "4981": {
      "op": "SUB"
    },
    "4982": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "4983": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4984": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "AND",
      "path": "19"
    },
    "4985": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4986": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4987": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4989": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4990": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "ADD",
      "path": "19"
    },
    "4991": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "4992": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4993": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4994": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4995": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4996": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "ADD",
      "path": "19"
    },
    "4997": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4998": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4999": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5002": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "5004": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5005": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "ADD",
      "path": "19"
    },
    "5006": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5007": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5008": {
      "fn": "MasterChef.addToken",
      "offset": [
        5190,
        5359
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5009": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5184
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "5011": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5012": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5013": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5015": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5016": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "ADD",
      "path": "19"
    },
    "5017": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5018": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5019": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5020": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5021": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5022": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5023": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8"
    },
    "5056": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5058": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5059": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5060": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "MUL",
      "path": "19"
    },
    "5061": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5062": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5063": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "ADD",
      "path": "19"
    },
    "5064": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5065": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5072": {
      "op": "SHL"
    },
    "5073": {
      "op": "SUB"
    },
    "5074": {
      "op": "NOT"
    },
    "5075": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "AND",
      "path": "19"
    },
    "5076": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5077": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5078": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "5079": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "AND",
      "path": "19"
    },
    "5080": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "OR",
      "path": "19"
    },
    "5081": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5082": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "5083": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5084": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5085": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5086": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9"
    },
    "5119": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5120": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "ADD",
      "path": "19"
    },
    "5121": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5122": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5123": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA"
    },
    "5156": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5157": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "ADD",
      "path": "19"
    },
    "5158": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5159": {
      "op": "POP"
    },
    "5160": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5161": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5162": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AB"
    },
    "5195": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5196": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5197": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "ADD",
      "path": "19"
    },
    "5198": {
      "fn": "MasterChef.addToken",
      "offset": [
        5176,
        5360
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5199": {
      "fn": "MasterChef.addToken",
      "jump": "o",
      "offset": [
        4684,
        5367
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5200": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5201": {
      "fn": "MasterChef.deposit",
      "offset": [
        8471,
        8492
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5203": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8503
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "5205": {
      "fn": "MasterChef.deposit",
      "offset": [
        8504,
        8508
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5206": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5207": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5208": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5209": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "LT",
      "path": "19"
    },
    "5210": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x145F"
    },
    "5213": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5214": {
      "dev": "Index out of range",
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "INVALID",
      "path": "19"
    },
    "5215": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5216": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5218": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5219": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5220": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5221": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5223": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5224": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5225": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5226": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8557
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5227": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8557
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5228": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8557
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5229": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8551
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "5231": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8557
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5232": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8557
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5233": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8557
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5235": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8557
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5236": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8557
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5237": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8557
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5238": {
      "fn": "MasterChef.deposit",
      "offset": [
        8558,
        8568
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5239": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8569
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5240": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8569
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5241": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8569
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5242": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8569
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5243": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8569
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5244": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8569
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5245": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8569
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5246": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5248": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5249": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5250": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "MUL",
      "path": "19"
    },
    "5251": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5252": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5253": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "ADD",
      "path": "19"
    },
    "5254": {
      "fn": "MasterChef.deposit",
      "offset": [
        8495,
        8509
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5255": {
      "op": "POP"
    },
    "5256": {
      "fn": "MasterChef.deposit",
      "offset": [
        8579,
        8595
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 61,
      "value": "0x1490"
    },
    "5259": {
      "fn": "MasterChef.deposit",
      "offset": [
        8552,
        8556
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5260": {
      "fn": "MasterChef.deposit",
      "offset": [
        8579,
        8589
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA53"
    },
    "5263": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8579,
        8595
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5264": {
      "fn": "MasterChef.deposit",
      "offset": [
        8579,
        8595
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5265": {
      "fn": "MasterChef.deposit",
      "offset": [
        8609,
        8620
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5266": {
      "fn": "MasterChef.deposit",
      "offset": [
        8609,
        8620
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5267": {
      "branch": 128,
      "fn": "MasterChef.deposit",
      "offset": [
        8609,
        8624
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5268": {
      "fn": "MasterChef.deposit",
      "offset": [
        8605,
        8842
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14D9"
    },
    "5271": {
      "branch": 128,
      "fn": "MasterChef.deposit",
      "offset": [
        8605,
        8842
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5272": {
      "fn": "MasterChef.deposit",
      "offset": [
        8640,
        8655
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5274": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8729
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14C5"
    },
    "5277": {
      "fn": "MasterChef.deposit",
      "offset": [
        8713,
        8717
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5278": {
      "fn": "MasterChef.deposit",
      "offset": [
        8713,
        8728
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5280": {
      "fn": "MasterChef.deposit",
      "offset": [
        8713,
        8728
      ],
      "op": "ADD",
      "path": "19"
    },
    "5281": {
      "fn": "MasterChef.deposit",
      "offset": [
        8713,
        8728
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5282": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8708
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9AD"
    },
    "5285": {
      "fn": "MasterChef.deposit",
      "offset": [
        8703,
        8707
      ],
      "op": "PUSH5",
      "path": "19",
      "value": "0xE8D4A51000"
    },
    "5291": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8698
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9A7"
    },
    "5294": {
      "fn": "MasterChef.deposit",
      "offset": [
        8674,
        8678
      ],
      "op": "DUP8",
      "path": "19"
    },
    "5295": {
      "fn": "MasterChef.deposit",
      "offset": [
        8674,
        8697
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "5297": {
      "fn": "MasterChef.deposit",
      "offset": [
        8674,
        8697
      ],
      "op": "ADD",
      "path": "19"
    },
    "5298": {
      "fn": "MasterChef.deposit",
      "offset": [
        8674,
        8697
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5299": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8662
      ],
      "op": "DUP8",
      "path": "19"
    },
    "5300": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8669
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5302": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8669
      ],
      "op": "ADD",
      "path": "19"
    },
    "5303": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8669
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5304": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8673
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C9"
    },
    "5307": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8673
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5308": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8698
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5309": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8698
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5310": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8698
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "5315": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8698
      ],
      "op": "AND",
      "path": "19"
    },
    "5316": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8658,
        8698
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5317": {
      "fn": "MasterChef.deposit",
      "offset": [
        8658,
        8729
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5318": {
      "fn": "MasterChef.deposit",
      "offset": [
        8640,
        8729
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5319": {
      "op": "POP"
    },
    "5320": {
      "fn": "MasterChef.deposit",
      "offset": [
        8746,
        8757
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5321": {
      "branch": 129,
      "fn": "MasterChef.deposit",
      "offset": [
        8746,
        8757
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5322": {
      "fn": "MasterChef.deposit",
      "offset": [
        8743,
        8832
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14D7"
    },
    "5325": {
      "branch": 129,
      "fn": "MasterChef.deposit",
      "offset": [
        8743,
        8832
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5326": {
      "fn": "MasterChef.deposit",
      "offset": [
        8777,
        8817
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 62,
      "value": "0x14D7"
    },
    "5329": {
      "fn": "MasterChef.deposit",
      "offset": [
        8797,
        8807
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5330": {
      "fn": "MasterChef.deposit",
      "offset": [
        8809,
        8816
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5331": {
      "fn": "MasterChef.deposit",
      "offset": [
        8777,
        8796
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1562"
    },
    "5334": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8777,
        8817
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5335": {
      "fn": "MasterChef.deposit",
      "offset": [
        8777,
        8817
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5336": {
      "fn": "MasterChef.deposit",
      "offset": [
        8605,
        8842
      ],
      "op": "POP",
      "path": "19"
    },
    "5337": {
      "fn": "MasterChef.deposit",
      "offset": [
        8605,
        8842
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5338": {
      "fn": "MasterChef.deposit",
      "offset": [
        8854,
        8865
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5339": {
      "branch": 130,
      "fn": "MasterChef.deposit",
      "offset": [
        8854,
        8865
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5340": {
      "fn": "MasterChef.deposit",
      "offset": [
        8851,
        9018
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1505"
    },
    "5343": {
      "branch": 130,
      "fn": "MasterChef.deposit",
      "offset": [
        8851,
        9018
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5344": {
      "fn": "MasterChef.deposit",
      "offset": [
        8881,
        8893
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 63
    },
    "5345": {
      "fn": "MasterChef.deposit",
      "offset": [
        8881,
        8893
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5346": {
      "fn": "MasterChef.deposit",
      "offset": [
        8881,
        8955
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14F6"
    },
    "5349": {
      "fn": "MasterChef.deposit",
      "offset": [
        8881,
        8955
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5356": {
      "op": "SHL"
    },
    "5357": {
      "op": "SUB"
    },
    "5358": {
      "fn": "MasterChef.deposit",
      "offset": [
        8881,
        8893
      ],
      "op": "AND",
      "path": "19"
    },
    "5359": {
      "fn": "MasterChef.deposit",
      "offset": [
        8919,
        8929
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5360": {
      "fn": "MasterChef.deposit",
      "offset": [
        8940,
        8944
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "5361": {
      "fn": "MasterChef.deposit",
      "offset": [
        8947,
        8954
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5362": {
      "fn": "MasterChef.deposit",
      "offset": [
        8881,
        8910
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x197E"
    },
    "5365": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8881,
        8955
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5366": {
      "fn": "MasterChef.deposit",
      "offset": [
        8881,
        8955
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5367": {
      "fn": "MasterChef.deposit",
      "offset": [
        8983,
        8994
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 64
    },
    "5368": {
      "fn": "MasterChef.deposit",
      "offset": [
        8983,
        8994
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5369": {
      "fn": "MasterChef.deposit",
      "offset": [
        8983,
        9007
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1502"
    },
    "5372": {
      "fn": "MasterChef.deposit",
      "offset": [
        8983,
        9007
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5373": {
      "fn": "MasterChef.deposit",
      "offset": [
        8999,
        9006
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5374": {
      "fn": "MasterChef.deposit",
      "offset": [
        8983,
        8998
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18F8"
    },
    "5377": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8983,
        9007
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5378": {
      "fn": "MasterChef.deposit",
      "offset": [
        8983,
        9007
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5379": {
      "fn": "MasterChef.deposit",
      "offset": [
        8969,
        9007
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5380": {
      "fn": "MasterChef.deposit",
      "offset": [
        8969,
        9007
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5381": {
      "fn": "MasterChef.deposit",
      "offset": [
        8851,
        9018
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5382": {
      "fn": "MasterChef.deposit",
      "offset": [
        9061,
        9084
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 65,
      "value": "0x3"
    },
    "5384": {
      "fn": "MasterChef.deposit",
      "offset": [
        9061,
        9084
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5385": {
      "fn": "MasterChef.deposit",
      "offset": [
        9061,
        9084
      ],
      "op": "ADD",
      "path": "19"
    },
    "5386": {
      "fn": "MasterChef.deposit",
      "offset": [
        9061,
        9084
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5387": {
      "fn": "MasterChef.deposit",
      "offset": [
        9045,
        9056
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5388": {
      "fn": "MasterChef.deposit",
      "offset": [
        9045,
        9056
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5389": {
      "fn": "MasterChef.deposit",
      "offset": [
        9045,
        9095
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1520"
    },
    "5392": {
      "fn": "MasterChef.deposit",
      "offset": [
        9045,
        9095
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5393": {
      "fn": "MasterChef.deposit",
      "offset": [
        9090,
        9094
      ],
      "op": "PUSH5",
      "path": "19",
      "value": "0xE8D4A51000"
    },
    "5399": {
      "fn": "MasterChef.deposit",
      "offset": [
        9090,
        9094
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5400": {
      "fn": "MasterChef.deposit",
      "offset": [
        9045,
        9085
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9A7"
    },
    "5403": {
      "fn": "MasterChef.deposit",
      "offset": [
        9045,
        9085
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5404": {
      "fn": "MasterChef.deposit",
      "offset": [
        9045,
        9060
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17C9"
    },
    "5407": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        9045,
        9085
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5408": {
      "fn": "MasterChef.deposit",
      "offset": [
        9045,
        9095
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5409": {
      "fn": "MasterChef.deposit",
      "offset": [
        9027,
        9042
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5411": {
      "fn": "MasterChef.deposit",
      "offset": [
        9027,
        9042
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5412": {
      "fn": "MasterChef.deposit",
      "offset": [
        9027,
        9042
      ],
      "op": "ADD",
      "path": "19"
    },
    "5413": {
      "fn": "MasterChef.deposit",
      "offset": [
        9027,
        9095
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5414": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 66,
      "value": "0x40"
    },
    "5416": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5417": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5418": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5419": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5420": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5421": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5422": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5423": {
      "fn": "MasterChef.deposit",
      "offset": [
        9130,
        9134
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5424": {
      "fn": "MasterChef.deposit",
      "offset": [
        9130,
        9134
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5425": {
      "fn": "MasterChef.deposit",
      "offset": [
        9118,
        9128
      ],
      "op": "CALLER",
      "path": "19"
    },
    "5426": {
      "fn": "MasterChef.deposit",
      "offset": [
        9118,
        9128
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5427": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
    },
    "5460": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5461": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5462": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5463": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "SUB",
      "path": "19"
    },
    "5464": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5466": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "ADD",
      "path": "19"
    },
    "5467": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5468": {
      "fn": "MasterChef.deposit",
      "offset": [
        9110,
        9144
      ],
      "op": "LOG3",
      "path": "19"
    },
    "5469": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "POP",
      "path": "19"
    },
    "5470": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "POP",
      "path": "19"
    },
    "5471": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "POP",
      "path": "19"
    },
    "5472": {
      "fn": "MasterChef.deposit",
      "offset": [
        8406,
        9151
      ],
      "op": "POP",
      "path": "19"
    },
    "5473": {
      "fn": "MasterChef.deposit",
      "jump": "o",
      "offset": [
        8406,
        9151
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5474": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10494,
        10786
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5475": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10600
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "5477": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10600
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5478": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5480": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5481": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5482": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5489": {
      "op": "SHL"
    },
    "5490": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5491": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5492": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10619,
        10623
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "5493": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5495": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5496": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "ADD",
      "path": "19"
    },
    "5497": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5498": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5499": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5500": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10572,
        10590
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5502": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10572,
        10590
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5509": {
      "op": "SHL"
    },
    "5510": {
      "op": "SUB"
    },
    "5511": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10600
      ],
      "op": "AND",
      "path": "19"
    },
    "5512": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10600
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5513": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10610
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "5518": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10610
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5519": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5521": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5522": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5523": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "ADD",
      "path": "19"
    },
    "5524": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5525": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5527": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5528": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5529": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5530": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5531": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5532": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "SUB",
      "path": "19"
    },
    "5533": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "ADD",
      "path": "19"
    },
    "5534": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5535": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10600
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5536": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5537": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5538": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5539": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5540": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5541": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15AD"
    },
    "5544": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5545": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5547": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5548": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5549": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5550": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "POP",
      "path": "19"
    },
    "5551": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "GAS",
      "path": "19"
    },
    "5552": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "5553": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5554": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5555": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5556": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15C1"
    },
    "5559": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5560": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5561": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5563": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5564": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5565": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5566": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5568": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5569": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5570": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "POP",
      "path": "19"
    },
    "5571": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "POP",
      "path": "19"
    },
    "5572": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "POP",
      "path": "19"
    },
    "5573": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "POP",
      "path": "19"
    },
    "5574": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5576": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5577": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5578": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5580": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5581": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "LT",
      "path": "19"
    },
    "5582": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5583": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15D7"
    },
    "5586": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5587": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5589": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5590": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5591": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5592": {
      "op": "POP"
    },
    "5593": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5594": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10593,
        10625
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5595": {
      "op": "POP"
    },
    "5596": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10639,
        10659
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5597": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10639,
        10659
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5598": {
      "branch": 131,
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10639,
        10659
      ],
      "op": "GT",
      "path": "19"
    },
    "5599": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10635,
        10780
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5600": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10635,
        10780
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x166B"
    },
    "5603": {
      "branch": 131,
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10635,
        10780
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5604": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10682
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 67,
      "value": "0x2"
    },
    "5606": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10682
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5607": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5609": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5610": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5611": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5618": {
      "op": "SHL"
    },
    "5619": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5620": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5627": {
      "op": "SHL"
    },
    "5628": {
      "op": "SUB"
    },
    "5629": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5630": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5631": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "AND",
      "path": "19"
    },
    "5632": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5634": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5635": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "ADD",
      "path": "19"
    },
    "5636": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5637": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5639": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5640": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "ADD",
      "path": "19"
    },
    "5641": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5642": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5643": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5644": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5645": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5646": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10682
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5647": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10682
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5648": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10682
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5649": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10682
      ],
      "op": "AND",
      "path": "19"
    },
    "5650": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10682
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5651": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10691
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA9059CBB"
    },
    "5656": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10691
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5657": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "5659": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5660": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5661": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "ADD",
      "path": "19"
    },
    "5662": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5663": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5665": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5666": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5667": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5668": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5669": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5670": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "SUB",
      "path": "19"
    },
    "5671": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "ADD",
      "path": "19"
    },
    "5672": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5673": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10682
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5675": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10682
      ],
      "op": "DUP8",
      "path": "19"
    },
    "5676": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5677": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5678": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5679": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5680": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5681": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1639"
    },
    "5684": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5685": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5687": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5688": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5689": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5690": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "POP",
      "path": "19"
    },
    "5691": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "GAS",
      "path": "19"
    },
    "5692": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "CALL",
      "path": "19"
    },
    "5693": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5694": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5695": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5696": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x164D"
    },
    "5699": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5700": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5701": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5703": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5704": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5705": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5706": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5708": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5709": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5710": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "POP",
      "path": "19"
    },
    "5711": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "POP",
      "path": "19"
    },
    "5712": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "POP",
      "path": "19"
    },
    "5713": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "POP",
      "path": "19"
    },
    "5714": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5716": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5717": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5718": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5720": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5721": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "LT",
      "path": "19"
    },
    "5722": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5723": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1663"
    },
    "5726": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5727": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5729": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5730": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5731": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10675,
        10708
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5732": {
      "op": "POP"
    },
    "5733": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10635,
        10780
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16EE"
    },
    "5736": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10635,
        10780
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5737": {
      "op": "POP"
    },
    "5738": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10635,
        10780
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5739": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10635,
        10780
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5740": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10746
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 68,
      "value": "0x2"
    },
    "5742": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10746
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5743": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5745": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5746": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5747": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5752": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5754": {
      "op": "SHL"
    },
    "5755": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5756": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5763": {
      "op": "SHL"
    },
    "5764": {
      "op": "SUB"
    },
    "5765": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5766": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5767": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "AND",
      "path": "19"
    },
    "5768": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5770": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5771": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "ADD",
      "path": "19"
    },
    "5772": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5773": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5775": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5776": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "ADD",
      "path": "19"
    },
    "5777": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5778": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5779": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5780": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5781": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5782": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10746
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5783": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10746
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5784": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10746
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5785": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10746
      ],
      "op": "AND",
      "path": "19"
    },
    "5786": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10746
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5787": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10755
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA9059CBB"
    },
    "5792": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10755
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5793": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "5795": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5796": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5797": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "ADD",
      "path": "19"
    },
    "5798": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5799": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5801": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5802": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5803": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5804": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5805": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5806": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "SUB",
      "path": "19"
    },
    "5807": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "ADD",
      "path": "19"
    },
    "5808": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5809": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10746
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5811": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10746
      ],
      "op": "DUP8",
      "path": "19"
    },
    "5812": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5813": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5814": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5815": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5816": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5817": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16C1"
    },
    "5820": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5821": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5823": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5824": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5825": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5826": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "POP",
      "path": "19"
    },
    "5827": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "GAS",
      "path": "19"
    },
    "5828": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "CALL",
      "path": "19"
    },
    "5829": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5830": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5831": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5832": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16D5"
    },
    "5835": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5836": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5837": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5839": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5840": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5841": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5842": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5844": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5845": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5846": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "POP",
      "path": "19"
    },
    "5847": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "POP",
      "path": "19"
    },
    "5848": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "POP",
      "path": "19"
    },
    "5849": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "POP",
      "path": "19"
    },
    "5850": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5852": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5853": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5854": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5856": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5857": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "LT",
      "path": "19"
    },
    "5858": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5859": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16EB"
    },
    "5862": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5863": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5865": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5866": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5867": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10739,
        10769
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5868": {
      "op": "POP"
    },
    "5869": {
      "op": "POP"
    },
    "5870": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10635,
        10780
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5871": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10494,
        10786
      ],
      "op": "POP",
      "path": "19"
    },
    "5872": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10494,
        10786
      ],
      "op": "POP",
      "path": "19"
    },
    "5873": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10494,
        10786
      ],
      "op": "POP",
      "path": "19"
    },
    "5874": {
      "fn": "MasterChef.safeRewardsTransfer",
      "jump": "o",
      "offset": [
        10494,
        10786
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5875": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5876": {
      "fn": "Context._msgSender",
      "offset": [
        677,
        687
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 69
    },
    "5877": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5878": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        590,
        694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5879": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7015,
        7199
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5880": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7094
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5882": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5883": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5884": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5885": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5887": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5888": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5889": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5890": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5892": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5893": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5894": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7121
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170F"
    },
    "5897": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7121
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5898": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7113,
        7120
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5899": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7112
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19DE"
    },
    "5902": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7088,
        7121
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5903": {
      "branch": 135,
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7121
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5904": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7084,
        7193
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5905": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7084,
        7193
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x889"
    },
    "5908": {
      "branch": 135,
      "fn": "AccessControl._grantRole",
      "offset": [
        7084,
        7193
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5909": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7169,
        7181
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 70,
      "value": "0x171C"
    },
    "5912": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7169,
        7179
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F3"
    },
    "5915": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7169,
        7181
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5916": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7169,
        7181
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5923": {
      "op": "SHL"
    },
    "5924": {
      "op": "SUB"
    },
    "5925": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "AND",
      "path": "1"
    },
    "5926": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7160,
        7167
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5933": {
      "op": "SHL"
    },
    "5934": {
      "op": "SUB"
    },
    "5935": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "AND",
      "path": "1"
    },
    "5936": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7154,
        7158
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5937": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "5970": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5972": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5973": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5975": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5976": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5977": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5978": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "SUB",
      "path": "1"
    },
    "5979": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5980": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "LOG4",
      "path": "1"
    },
    "5981": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7015,
        7199
      ],
      "op": "POP",
      "path": "1"
    },
    "5982": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7015,
        7199
      ],
      "op": "POP",
      "path": "1"
    },
    "5983": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        7015,
        7199
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5984": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7205,
        7393
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5985": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7285
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5987": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5988": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5989": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5990": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5992": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5993": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5994": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5995": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5997": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5998": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5999": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1778"
    },
    "6002": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6003": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7307,
        7314
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6004": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7306
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19F3"
    },
    "6007": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7279,
        7315
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6008": {
      "branch": 136,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7315
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6009": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7275,
        7387
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6010": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7275,
        7387
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x889"
    },
    "6013": {
      "branch": 136,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7275,
        7387
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6014": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7363,
        7375
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 71,
      "value": "0x1785"
    },
    "6017": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7363,
        7373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F3"
    },
    "6020": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7363,
        7375
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6021": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7363,
        7375
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6028": {
      "op": "SHL"
    },
    "6029": {
      "op": "SUB"
    },
    "6030": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "AND",
      "path": "1"
    },
    "6031": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7354,
        7361
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6038": {
      "op": "SHL"
    },
    "6039": {
      "op": "SUB"
    },
    "6040": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "AND",
      "path": "1"
    },
    "6041": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7348,
        7352
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6042": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "6075": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6077": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6078": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6080": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6081": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6082": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6083": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "SUB",
      "path": "1"
    },
    "6084": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6085": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "LOG4",
      "path": "1"
    },
    "6086": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7205,
        7393
      ],
      "op": "POP",
      "path": "1"
    },
    "6087": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7205,
        7393
      ],
      "op": "POP",
      "path": "1"
    },
    "6088": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7205,
        7393
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6089": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6090": {
      "fn": "SafeMath.mul",
      "offset": [
        2238,
        2245
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6092": {
      "branch": 145,
      "fn": "SafeMath.mul",
      "offset": [
        2479,
        2485
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6093": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17D8"
    },
    "6096": {
      "branch": 145,
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6097": {
      "op": "POP"
    },
    "6098": {
      "fn": "SafeMath.mul",
      "offset": [
        2508,
        2509
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 72,
      "value": "0x0"
    },
    "6100": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEF6"
    },
    "6103": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6104": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6105": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6106": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6107": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "MUL",
      "path": "3"
    },
    "6108": {
      "fn": "SafeMath.mul",
      "offset": [
        2546,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6109": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6110": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6111": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6112": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 73,
      "value": "0x17E5"
    },
    "6115": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6116": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "INVALID",
      "path": "3"
    },
    "6117": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6118": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "DIV",
      "path": "3"
    },
    "6119": {
      "branch": 146,
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2575
      ],
      "op": "EQ",
      "path": "3"
    },
    "6120": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF14"
    },
    "6123": {
      "branch": 146,
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6124": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6126": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6133": {
      "op": "SHL"
    },
    "6134": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6135": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6136": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6138": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6139": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6140": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6141": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6143": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6144": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6145": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6146": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SUB",
      "path": "3"
    },
    "6147": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6148": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6149": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "6151": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6152": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6153": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6155": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6156": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6157": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F75"
    },
    "6160": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "6162": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6163": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "6164": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6166": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6167": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6168": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "POP",
      "path": "3"
    },
    "6169": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "POP",
      "path": "3"
    },
    "6170": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6172": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6173": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6174": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6175": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SUB",
      "path": "3"
    },
    "6176": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6177": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6178": {
      "fn": "SafeMath.div",
      "offset": [
        3101,
        3231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6179": {
      "fn": "SafeMath.div",
      "offset": [
        3159,
        3166
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6181": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 74,
      "value": "0xF14"
    },
    "6184": {
      "fn": "SafeMath.div",
      "offset": [
        3189,
        3190
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6185": {
      "fn": "SafeMath.div",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6186": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6188": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6189": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6190": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6192": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "3"
    },
    "6193": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6195": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6196": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6197": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "6199": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6200": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6201": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6203": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "3"
    },
    "6204": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "6237": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6238": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6239": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "POP",
      "path": "3"
    },
    "6240": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3188
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A08"
    },
    "6243": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3185,
        3224
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6244": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6245": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6247": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 75,
      "value": "0xF14"
    },
    "6250": {
      "fn": "SafeMath.sub",
      "offset": [
        1409,
        1410
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6251": {
      "fn": "SafeMath.sub",
      "offset": [
        1412,
        1413
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6252": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6254": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6255": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6256": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6258": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "6259": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6261": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6262": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6263": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "6265": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6266": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6267": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6269": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "6270": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "6303": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6304": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6305": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "POP",
      "path": "3"
    },
    "6306": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AAA"
    },
    "6309": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1405,
        1448
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6310": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        696,
        871
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6311": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 76,
      "value": "0x40"
    },
    "6313": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6314": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6321": {
      "op": "SHL"
    },
    "6322": {
      "op": "SUB"
    },
    "6323": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6324": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "AND",
      "path": "5"
    },
    "6325": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "6327": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6328": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "6329": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6330": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "6332": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6333": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6334": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "6335": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6336": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6337": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6338": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6339": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6340": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6341": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6342": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SUB",
      "path": "5"
    },
    "6343": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6344": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6345": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "6346": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6347": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6348": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "6350": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6351": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6352": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "6353": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6354": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6355": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6356": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6358": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6359": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "6360": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6361": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6368": {
      "op": "SHL"
    },
    "6369": {
      "op": "SUB"
    },
    "6370": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "AND",
      "path": "5"
    },
    "6371": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6378": {
      "op": "SHL"
    },
    "6379": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "OR",
      "path": "5"
    },
    "6380": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6381": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6382": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16EE"
    },
    "6385": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        864
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6386": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        798,
        803
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6387": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        798,
        803
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6388": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        797
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B04"
    },
    "6391": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        778,
        864
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6392": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6393": {
      "fn": "SafeMath.add",
      "offset": [
        932,
        939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6395": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6396": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6397": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "ADD",
      "path": "3"
    },
    "6398": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 77
    },
    "6399": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6400": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "LT",
      "path": "3"
    },
    "6401": {
      "branch": 147,
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6402": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF14"
    },
    "6405": {
      "branch": 147,
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6406": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6408": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6409": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6410": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6416": {
      "op": "SHL"
    },
    "6417": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6418": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6419": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6421": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6423": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6424": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "6425": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6426": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "6428": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "6430": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6431": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "6432": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6433": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "6466": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "6468": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6469": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "6470": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6471": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6472": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6473": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6474": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6475": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6476": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SUB",
      "path": "3"
    },
    "6477": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "6479": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "6480": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6481": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6482": {
      "fn": "EnumerableSet.at",
      "offset": [
        6085,
        6232
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6483": {
      "fn": "EnumerableSet.at",
      "offset": [
        6159,
        6166
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6485": {
      "fn": "EnumerableSet.at",
      "offset": [
        6201,
        6223
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 78,
      "value": "0xF14"
    },
    "6488": {
      "fn": "EnumerableSet.at",
      "offset": [
        6205,
        6208
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6489": {
      "fn": "EnumerableSet.at",
      "offset": [
        6217,
        6222
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6490": {
      "fn": "EnumerableSet.at",
      "offset": [
        6201,
        6204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BB5"
    },
    "6493": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        6201,
        6223
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6494": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5401,
        5557
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6495": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5481,
        5485
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6497": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5504,
        5550
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 79,
      "value": "0xF14"
    },
    "6500": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5514,
        5517
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6507": {
      "op": "SHL"
    },
    "6508": {
      "op": "SUB"
    },
    "6509": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5534,
        5548
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6510": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5534,
        5548
      ],
      "op": "AND",
      "path": "7"
    },
    "6511": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5504,
        5513
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C19"
    },
    "6514": {
      "fn": "EnumerableSet.contains",
      "jump": "i",
      "offset": [
        5504,
        5550
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6515": {
      "fn": "EnumerableSet.length",
      "offset": [
        5638,
        5753
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6516": {
      "fn": "EnumerableSet.length",
      "offset": [
        5701,
        5708
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6518": {
      "fn": "EnumerableSet.length",
      "offset": [
        5727,
        5746
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 80,
      "value": "0xEF6"
    },
    "6521": {
      "fn": "EnumerableSet.length",
      "offset": [
        5735,
        5738
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6522": {
      "fn": "EnumerableSet.length",
      "offset": [
        5727,
        5734
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C31"
    },
    "6525": {
      "fn": "EnumerableSet.length",
      "jump": "i",
      "offset": [
        5727,
        5746
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6526": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6527": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 81,
      "value": "0x40"
    },
    "6529": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6530": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6537": {
      "op": "SHL"
    },
    "6538": {
      "op": "SUB"
    },
    "6539": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6540": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6541": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "5"
    },
    "6542": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "6544": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6545": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "6546": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6547": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6548": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "5"
    },
    "6549": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "6551": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6552": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "6553": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6554": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "6556": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6557": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6558": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "6559": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6560": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6561": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6562": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6563": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6564": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6565": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6566": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SUB",
      "path": "5"
    },
    "6567": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6568": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6569": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "6570": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6571": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6572": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x84"
    },
    "6574": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6575": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6576": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "6577": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6578": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6579": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6580": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6582": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6583": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "6584": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6585": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6590": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6592": {
      "op": "SHL"
    },
    "6593": {
      "op": "SUB"
    },
    "6594": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "5"
    },
    "6595": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6602": {
      "op": "SHL"
    },
    "6603": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "OR",
      "path": "5"
    },
    "6604": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6605": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6606": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19D8"
    },
    "6609": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6610": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        997,
        1002
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6611": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        997,
        1002
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6612": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B04"
    },
    "6615": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        977,
        1073
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6616": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6617": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "6618": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "6619": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "6620": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "6621": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        877,
        1080
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6622": {
      "fn": "EnumerableSet.add",
      "offset": [
        4864,
        5005
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6623": {
      "fn": "EnumerableSet.add",
      "offset": [
        4934,
        4938
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6625": {
      "fn": "EnumerableSet.add",
      "offset": [
        4957,
        4998
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 82,
      "value": "0xF14"
    },
    "6628": {
      "fn": "EnumerableSet.add",
      "offset": [
        4962,
        4965
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6635": {
      "op": "SHL"
    },
    "6636": {
      "op": "SUB"
    },
    "6637": {
      "fn": "EnumerableSet.add",
      "offset": [
        4982,
        4996
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6638": {
      "fn": "EnumerableSet.add",
      "offset": [
        4982,
        4996
      ],
      "op": "AND",
      "path": "7"
    },
    "6639": {
      "fn": "EnumerableSet.add",
      "offset": [
        4957,
        4961
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C35"
    },
    "6642": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        4957,
        4998
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6643": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5173,
        5320
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6644": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5246,
        5250
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6646": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5269,
        5313
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 83,
      "value": "0xF14"
    },
    "6649": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5277,
        5280
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6656": {
      "op": "SHL"
    },
    "6657": {
      "op": "SUB"
    },
    "6658": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5297,
        5311
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6659": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5297,
        5311
      ],
      "op": "AND",
      "path": "7"
    },
    "6660": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5269,
        5276
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C7F"
    },
    "6663": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        5269,
        5313
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6664": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6665": {
      "fn": "SafeMath.div",
      "offset": [
        3799,
        3806
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6667": {
      "fn": "SafeMath.div",
      "offset": [
        3833,
        3845
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 84
    },
    "6668": {
      "branch": 148,
      "fn": "SafeMath.div",
      "offset": [
        3826,
        3831
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6669": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A94"
    },
    "6672": {
      "branch": 148,
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6673": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6675": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6682": {
      "op": "SHL"
    },
    "6683": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6684": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6685": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6687": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "6688": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6689": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6690": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6692": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "6693": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6694": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6695": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "6696": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6697": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6698": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6699": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6700": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6701": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6702": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6703": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6704": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6706": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "6707": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6708": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "6709": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6710": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6711": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6712": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6714": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "6715": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6716": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6717": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6718": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6719": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6721": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6722": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6723": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6724": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "LT",
      "path": "3"
    },
    "6725": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6726": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A59"
    },
    "6729": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6730": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6731": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6732": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "6733": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6734": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6735": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6736": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "6737": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6738": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6740": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "6741": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A41"
    },
    "6744": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6745": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6746": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "6747": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "6748": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "6749": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "6750": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6751": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "6752": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6753": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6754": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "6755": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6756": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6758": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "AND",
      "path": "3"
    },
    "6759": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6760": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6761": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A86"
    },
    "6764": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6765": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6766": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6767": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "6768": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6769": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6770": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6772": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6773": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6775": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "6776": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "6779": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "EXP",
      "path": "3"
    },
    "6780": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "6781": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "NOT",
      "path": "3"
    },
    "6782": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "AND",
      "path": "3"
    },
    "6783": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6784": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6785": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6787": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "6788": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6789": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "6790": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6791": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "6792": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6793": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "6794": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "6795": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "6796": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6798": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6799": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6800": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6801": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "6802": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6803": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6804": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6805": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "6806": {
      "fn": "SafeMath.div",
      "offset": [
        3856,
        3865
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6808": {
      "fn": "SafeMath.div",
      "offset": [
        3872,
        3873
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6809": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3869
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6810": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6811": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA0"
    },
    "6814": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6815": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "INVALID",
      "path": "3"
    },
    "6816": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6817": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DIV",
      "path": "3"
    },
    "6818": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "6819": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6820": {
      "op": "POP"
    },
    "6821": {
      "op": "POP"
    },
    "6822": {
      "op": "POP"
    },
    "6823": {
      "op": "POP"
    },
    "6824": {
      "op": "POP"
    },
    "6825": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6826": {
      "fn": "SafeMath.sub",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6827": {
      "fn": "SafeMath.sub",
      "offset": [
        1832,
        1839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6829": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1879
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 85
    },
    "6830": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6831": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6832": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "GT",
      "path": "3"
    },
    "6833": {
      "branch": 149,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6834": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AFC"
    },
    "6837": {
      "branch": 149,
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6838": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6840": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6841": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6847": {
      "op": "SHL"
    },
    "6848": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6849": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6850": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6852": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6854": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6855": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "6856": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6857": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6858": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6859": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6860": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6861": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "6863": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6864": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "6865": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6866": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6867": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6868": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6869": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6870": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6871": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6872": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "6874": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6875": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6876": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "6877": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6878": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6879": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6880": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "6881": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6882": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6883": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6884": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6885": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6887": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6888": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6889": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A59"
    },
    "6892": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6893": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6894": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6895": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "6896": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6897": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6898": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6899": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "6900": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6901": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6903": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "6904": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A41"
    },
    "6907": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6908": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6909": {
      "op": "POP"
    },
    "6910": {
      "op": "POP"
    },
    "6911": {
      "op": "POP"
    },
    "6912": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6913": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SUB",
      "path": "3"
    },
    "6914": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6915": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2959,
        3710
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6917": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3401
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6919": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B59"
    },
    "6922": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3432,
        3436
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6923": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6925": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6926": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6927": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6929": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "6930": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6932": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6933": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6934": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6936": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6937": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6938": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6940": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "6941": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "6974": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6975": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6976": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "POP",
      "path": "5"
    },
    "6977": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3417
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6984": {
      "op": "SHL"
    },
    "6985": {
      "op": "SUB"
    },
    "6986": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "AND",
      "path": "5"
    },
    "6987": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D45"
    },
    "6990": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6991": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6992": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6993": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6994": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "6999": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "AND",
      "path": "5"
    },
    "7000": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3404,
        3473
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7001": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7002": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3504
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7003": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3504
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7004": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7005": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7006": {
      "op": "POP"
    },
    "7007": {
      "branch": 143,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3508
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7008": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3483,
        3704
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16EE"
    },
    "7011": {
      "branch": 143,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3483,
        3704
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7012": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3627,
        3637
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 86
    },
    "7013": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7014": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7016": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "ADD",
      "path": "5"
    },
    "7017": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7018": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7019": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7021": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7022": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "LT",
      "path": "5"
    },
    "7023": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7024": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B78"
    },
    "7027": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7028": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7030": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7031": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7032": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7033": {
      "op": "POP"
    },
    "7034": {
      "branch": 144,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7035": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16EE"
    },
    "7038": {
      "branch": 144,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7039": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7041": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7042": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7046": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7048": {
      "op": "SHL"
    },
    "7049": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7050": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7051": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7053": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "7054": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7055": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7056": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7058": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "7059": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7060": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7061": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SUB",
      "path": "5"
    },
    "7062": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7063": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7064": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "7066": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7067": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7068": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7070": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "7071": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7072": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F96"
    },
    "7075": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "7077": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7078": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "7079": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7081": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "7082": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7083": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "POP",
      "path": "5"
    },
    "7084": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "POP",
      "path": "5"
    },
    "7085": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7087": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7088": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7089": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7090": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SUB",
      "path": "5"
    },
    "7091": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7092": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7093": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7094": {
      "fn": "EnumerableSet._at",
      "offset": [
        4517,
        4535
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 87
    },
    "7095": {
      "fn": "EnumerableSet._at",
      "offset": [
        4517,
        4535
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7096": {
      "fn": "EnumerableSet._at",
      "offset": [
        4490,
        4497
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7098": {
      "fn": "EnumerableSet._at",
      "offset": [
        4490,
        4497
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7099": {
      "branch": 140,
      "fn": "EnumerableSet._at",
      "offset": [
        4517,
        4543
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7100": {
      "op": "LT"
    },
    "7101": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BF7"
    },
    "7104": {
      "branch": 140,
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7105": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7107": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7114": {
      "op": "SHL"
    },
    "7115": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7116": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7117": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7119": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "ADD",
      "path": "7"
    },
    "7120": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7121": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7122": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7124": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "ADD",
      "path": "7"
    },
    "7125": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7126": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7127": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SUB",
      "path": "7"
    },
    "7128": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7129": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7130": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x22"
    },
    "7132": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7133": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7134": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7136": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "ADD",
      "path": "7"
    },
    "7137": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7138": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1ED0"
    },
    "7141": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x22"
    },
    "7143": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7144": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "CODECOPY",
      "path": "7"
    },
    "7145": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7147": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "ADD",
      "path": "7"
    },
    "7148": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7149": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "POP",
      "path": "7"
    },
    "7150": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "POP",
      "path": "7"
    },
    "7151": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7153": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7154": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7155": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7156": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SUB",
      "path": "7"
    },
    "7157": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7158": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "REVERT",
      "path": "7"
    },
    "7159": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7160": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4602
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 88
    },
    "7161": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4610
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7163": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4610
      ],
      "op": "ADD",
      "path": "7"
    },
    "7164": {
      "fn": "EnumerableSet._at",
      "offset": [
        4611,
        4616
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7165": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7166": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7167": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7168": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "LT",
      "path": "7"
    },
    "7169": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C06"
    },
    "7172": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7173": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "INVALID",
      "path": "7"
    },
    "7174": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7175": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7176": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7178": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7179": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7181": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7183": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7184": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "ADD",
      "path": "7"
    },
    "7185": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7186": {
      "fn": "EnumerableSet._at",
      "offset": [
        4592,
        4617
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7187": {
      "fn": "EnumerableSet._at",
      "offset": [
        4592,
        4617
      ],
      "op": "POP",
      "path": "7"
    },
    "7188": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7189": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7190": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "POP",
      "path": "7"
    },
    "7191": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "POP",
      "path": "7"
    },
    "7192": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4423,
        4624
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7193": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3776,
        3903
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7194": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3849,
        3853
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7196": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 89
    },
    "7197": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7198": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7199": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7201": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7202": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7203": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7204": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "ADD",
      "path": "7"
    },
    "7205": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7207": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7208": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7210": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7211": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7212": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7213": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3896
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7214": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3896
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7215": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3896
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7216": {
      "fn": "EnumerableSet._contains",
      "jump": "o",
      "offset": [
        3776,
        3903
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7217": {
      "fn": "EnumerableSet._length",
      "offset": [
        3984,
        4091
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7218": {
      "fn": "EnumerableSet._length",
      "offset": [
        4066,
        4084
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 90
    },
    "7219": {
      "fn": "EnumerableSet._length",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7220": {
      "fn": "EnumerableSet._length",
      "jump": "o",
      "offset": [
        3984,
        4091
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7221": {
      "fn": "EnumerableSet._add",
      "offset": [
        1611,
        2015
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7222": {
      "fn": "EnumerableSet._add",
      "offset": [
        1674,
        1678
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7224": {
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1716
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C41"
    },
    "7227": {
      "fn": "EnumerableSet._add",
      "offset": [
        1705,
        1708
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7228": {
      "fn": "EnumerableSet._add",
      "offset": [
        1710,
        1715
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7229": {
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1704
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C19"
    },
    "7232": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1695,
        1716
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7233": {
      "branch": 141,
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1716
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7234": {
      "fn": "EnumerableSet._add",
      "offset": [
        1690,
        2009
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C77"
    },
    "7237": {
      "branch": 141,
      "fn": "EnumerableSet._add",
      "offset": [
        1690,
        2009
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7238": {
      "op": "POP"
    },
    "7239": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 91
    },
    "7240": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7241": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7243": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7244": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7245": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "ADD",
      "path": "7"
    },
    "7246": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7247": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7248": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1743
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7250": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7251": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7252": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7253": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7255": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7256": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7257": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7258": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7259": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7260": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "ADD",
      "path": "7"
    },
    "7261": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7262": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7263": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7264": {
      "fn": "EnumerableSet._add",
      "offset": [
        1912,
        1930
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 92
    },
    "7265": {
      "fn": "EnumerableSet._add",
      "offset": [
        1912,
        1930
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7266": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7267": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7268": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7269": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1902
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7270": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1902
      ],
      "op": "DUP7",
      "path": "7"
    },
    "7271": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1902
      ],
      "op": "ADD",
      "path": "7"
    },
    "7272": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7273": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7274": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7275": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7277": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7278": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7279": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1930
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7280": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1930
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7281": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1930
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7282": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1930
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7283": {
      "fn": "EnumerableSet._add",
      "offset": [
        1944,
        1955
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 93,
      "value": "0xEF6"
    },
    "7286": {
      "fn": "EnumerableSet._add",
      "offset": [
        1944,
        1955
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7287": {
      "fn": "EnumerableSet._add",
      "offset": [
        1690,
        2009
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7288": {
      "op": "POP"
    },
    "7289": {
      "fn": "EnumerableSet._add",
      "offset": [
        1993,
        1998
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 94,
      "value": "0x0"
    },
    "7291": {
      "fn": "EnumerableSet._add",
      "offset": [
        1986,
        1998
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEF6"
    },
    "7294": {
      "fn": "EnumerableSet._add",
      "offset": [
        1986,
        1998
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7295": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2183,
        3695
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7296": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2249,
        2253
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7298": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7299": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7300": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7301": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2398
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7303": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2398
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7304": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2398
      ],
      "op": "ADD",
      "path": "7"
    },
    "7305": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7307": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7308": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7310": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7311": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7312": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7313": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2420,
        2435
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7314": {
      "branch": 142,
      "fn": "EnumerableSet._remove",
      "offset": [
        2420,
        2435
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7315": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2416,
        3689
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3B"
    },
    "7318": {
      "branch": 142,
      "fn": "EnumerableSet._remove",
      "offset": [
        2416,
        3689
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7319": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2867
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7320": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2867
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7323": {
      "op": "NOT"
    },
    "7324": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2801,
        2815
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7325": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2801,
        2815
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7326": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2801,
        2815
      ],
      "op": "ADD",
      "path": "7"
    },
    "7327": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2801,
        2815
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7328": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7329": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7330": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "ADD",
      "path": "7"
    },
    "7331": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7332": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2777,
        2798
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7334": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2777,
        2798
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7335": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2852
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7336": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2852
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7337": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7338": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7339": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7340": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "LT",
      "path": "7"
    },
    "7341": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CB2"
    },
    "7344": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7345": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "INVALID",
      "path": "7"
    },
    "7346": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7347": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7348": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7350": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7351": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7353": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7355": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7356": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "ADD",
      "path": "7"
    },
    "7357": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7358": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3111,
        3153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7359": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3111,
        3153
      ],
      "op": "POP",
      "path": "7"
    },
    "7360": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3283
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 95
    },
    "7361": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3248
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7362": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3256
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7364": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3256
      ],
      "op": "ADD",
      "path": "7"
    },
    "7365": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3257,
        3270
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7366": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7367": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7368": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7369": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "LT",
      "path": "7"
    },
    "7370": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CCF"
    },
    "7373": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7374": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "INVALID",
      "path": "7"
    },
    "7375": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7376": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7378": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7379": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7380": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7381": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7383": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7384": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7385": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7386": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7387": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7388": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "ADD",
      "path": "7"
    },
    "7389": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3283
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7390": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3283
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7391": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3283
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7392": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3283
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7393": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 96
    },
    "7394": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7395": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7396": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3391,
        3392
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7398": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3361
      ],
      "op": "DUP10",
      "path": "7"
    },
    "7399": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3361
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7400": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3361
      ],
      "op": "ADD",
      "path": "7"
    },
    "7401": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7402": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7403": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7404": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7406": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7407": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7408": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3375,
        3392
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7409": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3375,
        3392
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7410": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3375,
        3392
      ],
      "op": "ADD",
      "path": "7"
    },
    "7411": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3392
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7412": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3392
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7413": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "DUP7",
      "path": "7",
      "statement": 97
    },
    "7414": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7415": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3352
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7416": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3352
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7417": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7418": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CFF"
    },
    "7421": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7422": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "INVALID",
      "path": "7"
    },
    "7423": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7424": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7426": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7427": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SUB",
      "path": "7"
    },
    "7428": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7429": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7430": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7431": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7433": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7434": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7436": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7438": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7439": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "ADD",
      "path": "7"
    },
    "7440": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7442": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7443": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7444": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7445": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7446": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3593
      ],
      "op": "DUP7",
      "path": "7",
      "statement": 98
    },
    "7447": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3602
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7449": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3602
      ],
      "op": "ADD",
      "path": "7"
    },
    "7450": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7452": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3603,
        3608
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7453": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7454": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7455": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7457": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "ADD",
      "path": "7"
    },
    "7458": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7459": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7460": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7461": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7463": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "ADD",
      "path": "7"
    },
    "7464": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7466": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7467": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3583,
        3609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7469": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3583,
        3609
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7470": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3583,
        3609
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7471": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3631,
        3635
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 99,
      "value": "0x1"
    },
    "7473": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "7474": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "7"
    },
    "7475": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "7"
    },
    "7476": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "7"
    },
    "7477": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "7"
    },
    "7478": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "7"
    },
    "7479": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEF6"
    },
    "7482": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7483": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2416,
        3689
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7484": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3673,
        3678
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 100,
      "value": "0x0"
    },
    "7486": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7487": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "POP",
      "path": "7"
    },
    "7488": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "POP",
      "path": "7"
    },
    "7489": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEF6"
    },
    "7492": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7493": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3767
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7494": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "7496": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3760
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 101,
      "value": "0x1D54"
    },
    "7499": {
      "fn": "Address.functionCall",
      "offset": [
        3730,
        3736
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7500": {
      "fn": "Address.functionCall",
      "offset": [
        3738,
        3742
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7501": {
      "fn": "Address.functionCall",
      "offset": [
        3744,
        3745
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7503": {
      "fn": "Address.functionCall",
      "offset": [
        3747,
        3759
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7504": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3729
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D5C"
    },
    "7507": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3707,
        3760
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7508": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3760
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7509": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3760
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "7510": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3767
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "7511": {
      "op": "POP"
    },
    "7512": {
      "op": "POP"
    },
    "7513": {
      "op": "POP"
    },
    "7514": {
      "op": "POP"
    },
    "7515": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3573,
        3767
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7516": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        4920,
        5878
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7517": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5050,
        5062
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "7519": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5082,
        5100
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 102,
      "value": "0x1D67"
    },
    "7522": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5093,
        5099
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7523": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5082,
        5092
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EC9"
    },
    "7526": {
      "fn": "Address._functionCallWithValue",
      "jump": "i",
      "offset": [
        5082,
        5100
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7527": {
      "branch": 137,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5082,
        5100
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7528": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DB8"
    },
    "7531": {
      "branch": 137,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7532": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7534": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7535": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7536": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7540": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7542": {
      "op": "SHL"
    },
    "7543": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7544": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7545": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7547": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7549": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7550": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "7551": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7552": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1D"
    },
    "7554": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7556": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7557": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "7558": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7559": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "7592": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7594": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7595": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "7596": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7597": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7598": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7599": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7600": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7601": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7602": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SUB",
      "path": "6"
    },
    "7603": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7605": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "7606": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7607": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7608": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7609": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5205,
        5217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7611": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5219,
        5242
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "7613": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5252
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7620": {
      "op": "SHL"
    },
    "7621": {
      "op": "SUB"
    },
    "7622": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5257
      ],
      "op": "AND",
      "path": "6"
    },
    "7623": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5266,
        5274
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7624": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5277,
        5281
      ],
      "op": "DUP8",
      "path": "6"
    },
    "7625": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7627": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7628": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7629": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7630": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7631": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7632": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7633": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7635": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "7636": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7637": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7638": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7639": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7640": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7641": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7643": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7644": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "LT",
      "path": "6"
    },
    "7645": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DF7"
    },
    "7648": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7649": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7650": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7651": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7652": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7655": {
      "op": "NOT"
    },
    "7656": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7657": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7658": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "7659": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7660": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7662": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7663": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7664": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "7665": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7666": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "7667": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD8"
    },
    "7670": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7671": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7672": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "7674": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7675": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7677": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SUB",
      "path": "6"
    },
    "7678": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "7681": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "EXP",
      "path": "6"
    },
    "7682": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SUB",
      "path": "6"
    },
    "7683": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7684": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "NOT",
      "path": "6"
    },
    "7685": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7686": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7687": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "AND",
      "path": "6"
    },
    "7688": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7689": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7690": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7691": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "AND",
      "path": "6"
    },
    "7692": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7693": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7694": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "OR",
      "path": "6"
    },
    "7695": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7696": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7697": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7698": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7699": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7700": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7701": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7702": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7703": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7704": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7705": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "7706": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7707": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7708": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7709": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7711": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7713": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7714": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7715": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7716": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SUB",
      "path": "6"
    },
    "7717": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7718": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7719": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP8",
      "path": "6"
    },
    "7720": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "GAS",
      "path": "6"
    },
    "7721": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "CALL",
      "path": "6"
    },
    "7722": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7723": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7724": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7725": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7726": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7727": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7728": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7730": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7731": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "EQ",
      "path": "6"
    },
    "7732": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E59"
    },
    "7735": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7736": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7738": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7739": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7740": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7741": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "7743": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "NOT",
      "path": "6"
    },
    "7744": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "7746": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7747": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "7748": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "AND",
      "path": "6"
    },
    "7749": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7750": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "7751": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7753": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7754": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7755": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7756": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7757": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7758": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7760": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7762": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7763": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "7764": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "7765": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E5E"
    },
    "7768": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7769": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7770": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "7772": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7773": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7774": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7775": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7776": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7777": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7778": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7779": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "7780": {
      "branch": 138,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5296,
        5303
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7781": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7782": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E72"
    },
    "7785": {
      "branch": 138,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7786": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5326,
        5336
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 103
    },
    "7787": {
      "op": "POP"
    },
    "7788": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5319,
        5336
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D54"
    },
    "7791": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5319,
        5336
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7792": {
      "op": "POP"
    },
    "7793": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5319,
        5336
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7794": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7795": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5437,
        5454
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7796": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5437,
        5454
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7797": {
      "branch": 139,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5437,
        5458
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7798": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5433,
        5862
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E82"
    },
    "7801": {
      "branch": 139,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5433,
        5862
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7802": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5695,
        5705
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7803": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5689,
        5706
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7804": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5755,
        5770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7805": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5742,
        5752
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7806": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5738,
        5740
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7808": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5734,
        5753
      ],
      "op": "ADD",
      "path": "6"
    },
    "7809": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5727,
        5771
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7810": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5644,
        5789
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7811": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 104,
      "value": "0x40"
    },
    "7813": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7814": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7820": {
      "op": "SHL"
    },
    "7821": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7822": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7823": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7825": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7827": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7828": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "7829": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7830": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7831": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7832": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7833": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7834": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7836": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7837": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "7838": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7839": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7840": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7841": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5834,
        5846
      ],
      "op": "DUP8",
      "path": "6"
    },
    "7842": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5834,
        5846
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "7843": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7844": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7845": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7846": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7847": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7849": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "7850": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7851": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7852": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7853": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "7854": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7855": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7856": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7857": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7858": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7860": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7861": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7862": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A59"
    },
    "7865": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7866": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7867": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7868": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "7869": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7870": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7871": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7872": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "7873": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7874": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7876": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "7877": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A41"
    },
    "7880": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7881": {
      "fn": "Address.isContract",
      "offset": [
        718,
        1131
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7882": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "7883": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "6",
      "statement": 105
    },
    "7884": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7885": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7886": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        718,
        1131
      ],
      "op": "JUMP",
      "path": "6"
    }
  },
  "sha1": "ac944fc7d0c6c816140c7c1691b58c54554ce417",
  "source": "pragma solidity 0.6.12;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"../Access/MISOAccessControls.sol\";\nimport \"../../interfaces/IMisoFarm.sol\";\n\n\n// MasterChef is the master of Rewards. He can make Rewards and he is a fair guy.\n//\n// Note that its ownable and the owner wields tremendous power. The ownership\n// will be transferred to a governance smart contract once tokens are sufficiently\n// distributed and the community can show to govern itself.\n//\n// Have fun reading it. Hopefully its bug-free. God bless.\n//\n// MISO Update - Removed LP migrator\n// MISO Update - Removed minter - Contract holds token\n// MISO Update - Dev tips parameterised\n// MISO Update - Replaced owner with access controls\n\ncontract MasterChef is IMisoFarm, AccessControl {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    MISOAccessControls public accessControls;\n\n\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount;     // How many LP tokens the user has provided.\n        uint256 rewardDebt; // Reward debt. See explanation below.\n        //\n        // We do some fancy math here. Basically, any point in time, the amount of tokens\n        // entitled to a user but is pending to be distributed is:\n        //\n        //   pending reward = (user.amount * pool.accRewardsPerShare) - user.rewardDebt\n        //\n        // Whenever a user deposits or withdraws LP tokens to a pool. Heres what happens:\n        //   1. The pools `accRewardsPerShare` (and `lastRewardBlock`) gets updated.\n        //   2. User receives the pending reward sent to his/her address.\n        //   3. Users `amount` gets updated.\n        //   4. Users `rewardDebt` gets updated.\n    }\n\n    // Info of each pool.\n    struct PoolInfo {\n        IERC20 lpToken;           // Address of LP token contract.\n        uint256 allocPoint;       // How many allocation points assigned to this pool. tokens to distribute per block.\n        uint256 lastRewardBlock;  // Last block number that tokens distribution occurs.\n        uint256 accRewardsPerShare; // Accumulated tokens per share, times 1e12. See below.\n    }\n\n    // The rewards token\n    IERC20 public rewards;\n    // Dev address.\n    address public devaddr;\n    // Percentage amount to be tipped to devs.\n    uint256 public devPercentage;\n    // Tips owed to develpers.\n    uint256 public tips;\n\n    // Block number when bonus tokens period ends.\n    uint256 public bonusEndBlock;\n    // Reward tokens created per block.\n    uint256 public rewardsPerBlock;\n    // Bonus muliplier for early rewards makers.\n    uint256 public bonusMultiplier;\n    // MISOFarmFactory template id\n    uint256 public constant farmTemplate = 1;\n    // For initial setup\n    bool private initialised;\n\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n    // Info of each user that stakes LP tokens.\n    mapping (uint256 => mapping (address => UserInfo)) public userInfo;\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\n    uint256 public totalAllocPoint;\n    // The block number when rewards mining starts.\n    uint256 public startBlock;\n\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\n\n    function initFarm(\n        address _rewards,\n        uint256 _rewardsPerBlock,\n        uint256 _startBlock,\n        address _devaddr,\n        address _accessControls\n    ) public override {\n        require(!initialised);\n        rewards = IERC20(_rewards);\n        totalAllocPoint = 0;\n        initialised = true;\n        rewardsPerBlock = _rewardsPerBlock;\n        startBlock = _startBlock;\n        devaddr = _devaddr;\n        accessControls = MISOAccessControls(_accessControls);\n    }\n\n    function setBonus(\n        uint256 _bonusEndBlock,\n        uint256 _bonusMultiplier\n    ) public {\n        require(\n            accessControls.hasAdminRole(msg.sender),\n            \"MasterChef.add: Sender must be admin\"\n        );\n\n        bonusEndBlock = _bonusEndBlock;\n        bonusMultiplier = _bonusMultiplier;\n    }\n\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    // Add a new lp to the pool. Can only be called by the owner.\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    function addToken(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public  {\n        require(\n            accessControls.hasAdminRole(msg.sender) || accessControls.hasSmartContractRole(msg.sender),\n            \"MasterChef.add: Sender must be admin\"\n        );\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n        poolInfo.push(PoolInfo({\n            lpToken: _lpToken,\n            allocPoint: _allocPoint,\n            lastRewardBlock: lastRewardBlock,\n            accRewardsPerShare: 0\n        }));\n    }\n\n    // Update the given pools token allocation point. Can only be called by the operator.\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public  {\n        require(\n            accessControls.hasOperatorRole(msg.sender),\n            \"MasterChef.set: Sender must be operator\"\n        );\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\n        poolInfo[_pid].allocPoint = _allocPoint;\n    }\n\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\n        if (_to <= bonusEndBlock) {\n            return _to.sub(_from).mul(bonusMultiplier);\n        } else if (_from >= bonusEndBlock) {\n            return _to.sub(_from);\n        } else {\n            return bonusEndBlock.sub(_from).mul(bonusMultiplier).add(\n                _to.sub(bonusEndBlock)\n            );\n        }\n    }\n\n    // View function to see pending tokens on frontend.\n    function pendingRewards(uint256 _pid, address _user) external view returns (uint256) {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accRewardsPerShare = pool.accRewardsPerShare;\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n            uint256 rewardsAccum = multiplier.mul(rewardsPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\n            accRewardsPerShare = accRewardsPerShare.add(rewardsAccum.mul(1e12).div(lpSupply));\n        }\n        return user.amount.mul(accRewardsPerShare).div(1e12).sub(user.rewardDebt);\n    }\n\n    // Update reward vairables for all pools. Be careful of gas spending!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        if (block.number <= pool.lastRewardBlock) {\n            return;\n        }\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (lpSupply == 0) {\n            pool.lastRewardBlock = block.number;\n            return;\n        }\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n        uint256 rewardsAccum = multiplier.mul(rewardsPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\n        if (devPercentage > 0) {\n            tips = tips.add(rewardsAccum.mul(devPercentage).div(1000));\n        }\n        pool.accRewardsPerShare = pool.accRewardsPerShare.add(rewardsAccum.mul(1e12).div(lpSupply));\n        pool.lastRewardBlock = block.number;\n    }\n\n    // Deposit LP tokens to MasterChef for rewards allocation.\n    function deposit(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        updatePool(_pid);\n        if (user.amount > 0) {\n            uint256 pending = user.amount.mul(pool.accRewardsPerShare).div(1e12).sub(user.rewardDebt);\n            if(pending > 0) {\n                safeRewardsTransfer(msg.sender, pending);\n            }\n        }\n        if(_amount > 0) {\n            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\n            user.amount = user.amount.add(_amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accRewardsPerShare).div(1e12);\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw LP tokens from MasterChef.\n    function withdraw(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        require(user.amount >= _amount, \"withdraw: not good\");\n        updatePool(_pid);\n        uint256 pending = user.amount.mul(pool.accRewardsPerShare).div(1e12).sub(user.rewardDebt);\n        if(pending > 0) {\n            safeRewardsTransfer(msg.sender, pending);\n        }\n        if(_amount > 0) {\n            user.amount = user.amount.sub(_amount);\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accRewardsPerShare).div(1e12);\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        uint256 amount = user.amount;\n        user.amount = 0;\n        user.rewardDebt = 0;\n        pool.lpToken.safeTransfer(address(msg.sender), amount);\n        emit EmergencyWithdraw(msg.sender, _pid, amount);\n    }\n\n    // Safe rewards transfer function, just in case if rounding error causes pool to not have enough tokens.\n    function safeRewardsTransfer(address _to, uint256 _amount) internal {\n        uint256 rewardsBal = rewards.balanceOf(address(this));\n        if (_amount > rewardsBal) {\n            rewards.transfer(_to, rewardsBal);\n        } else {\n            rewards.transfer(_to, _amount);\n        }\n    }\n\n    // Returns the number of blocks remaining with the current rewards balance\n    function blocksRemaining() public returns (uint256){\n        uint256 rewardsBal = rewards.balanceOf(address(this));\n        if (rewardsPerBlock > 0) {\n            return rewardsBal / rewardsPerBlock;\n        } else {\n            return 0;\n        }\n    }\n\n    // Claims any rewards for the developers, if set\n    function claimTips() public {\n        require(msg.sender == devaddr, \"dev: wut?\");\n        require(tips > 0, \"dev: broke\");\n        uint256 claimable = tips;\n        tips = 0;\n        safeRewardsTransfer(devaddr, claimable);\n    }\n\n    // Update dev address by the previous dev.\n    function dev(address _devaddr) public {\n        require(msg.sender == devaddr, \"dev: wut?\");\n        devaddr = _devaddr;\n    }\n}",
  "sourceMap": "950:10645:19:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Farms/MasterChef.sol",
  "type": "contract"
}