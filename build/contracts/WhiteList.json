{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "AccountListed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accessControls",
      "outputs": [
        {
          "internalType": "contract MISOAccessControls",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accessControls",
          "type": "address"
        }
      ],
      "name": "initWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isInWhiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/GSN/Context.sol",
    "1": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/access/AccessControl.sol",
    "11": "contracts/Access/MISOAdminAccess.sol",
    "13": "contracts/Access/WhiteList.sol",
    "6": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/Address.sol",
    "7": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/EnumerableSet.sol",
    "75": "interfaces/IWhiteList.sol",
    "9": "contracts/Access/MISOAccessControls.sol"
  },
  "ast": {
    "absolutePath": "contracts/Access/WhiteList.sol",
    "exportedSymbols": {
      "WhiteList": [
        945
      ]
    },
    "id": 946,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 746,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "contracts/Access/MISOAccessControls.sol",
        "file": "./MISOAccessControls.sol",
        "id": 747,
        "nodeType": "ImportDirective",
        "scope": 946,
        "sourceUnit": 215,
        "src": "294:34:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IWhiteList.sol",
        "file": "../../interfaces/IWhiteList.sol",
        "id": 748,
        "nodeType": "ImportDirective",
        "scope": 946,
        "sourceUnit": 19728,
        "src": "329:41:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 749,
              "name": "IWhiteList",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19727,
              "src": "586:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWhiteList_$19727",
                "typeString": "contract IWhiteList"
              }
            },
            "id": 750,
            "nodeType": "InheritanceSpecifier",
            "src": "586:10:13"
          }
        ],
        "contractDependencies": [
          19727
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 945,
        "linearizedBaseContracts": [
          945,
          19727
        ],
        "name": "WhiteList",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "372c12b1",
            "id": 754,
            "mutability": "mutable",
            "name": "whiteList",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 945,
            "src": "604:41:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 753,
              "keyType": {
                "id": 751,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "612:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "604:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 752,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "623:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "748365ef",
            "id": 756,
            "mutability": "mutable",
            "name": "accessControls",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 945,
            "src": "651:40:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MISOAccessControls_$214",
              "typeString": "contract MISOAccessControls"
            },
            "typeName": {
              "contractScope": null,
              "id": 755,
              "name": "MISOAccessControls",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 214,
              "src": "651:18:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                "typeString": "contract MISOAccessControls"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 758,
            "mutability": "mutable",
            "name": "initialised",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 945,
            "src": "697:24:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 757,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "697:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 764,
            "name": "AccountListed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 760,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 764,
                  "src": "748:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 762,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 764,
                  "src": "773:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "747:38:13"
            },
            "src": "728:58:13"
          },
          {
            "body": {
              "id": 767,
              "nodeType": "Block",
              "src": "813:7:13",
              "statements": []
            },
            "documentation": null,
            "id": 768,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:2:13"
            },
            "returnParameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "813:0:13"
            },
            "scope": 945,
            "src": "792:28:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19726
            ],
            "body": {
              "id": 790,
              "nodeType": "Block",
              "src": "889:151:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "907:12:13",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 775,
                          "name": "initialised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 758,
                          "src": "908:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920696e697469616c69736564",
                        "id": 777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "921:21:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_040ac15e9431de40e29f41190238b496a8b10fd05cc15c4fe362b05a4f20de18",
                          "typeString": "literal_string \"Already initialised\""
                        },
                        "value": "Already initialised"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_040ac15e9431de40e29f41190238b496a8b10fd05cc15c4fe362b05a4f20de18",
                          "typeString": "literal_string \"Already initialised\""
                        }
                      ],
                      "id": 774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "899:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "899:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 779,
                  "nodeType": "ExpressionStatement",
                  "src": "899:44:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 780,
                      "name": "accessControls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 756,
                      "src": "953:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 782,
                          "name": "_accessControls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 770,
                          "src": "989:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 781,
                        "name": "MISOAccessControls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "970:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MISOAccessControls_$214_$",
                          "typeString": "type(contract MISOAccessControls)"
                        }
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "970:35:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "src": "953:52:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                      "typeString": "contract MISOAccessControls"
                    }
                  },
                  "id": 785,
                  "nodeType": "ExpressionStatement",
                  "src": "953:52:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 786,
                      "name": "initialised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 758,
                      "src": "1015:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1029:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1015:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "1015:18:13"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ce83c50f",
            "id": 791,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 772,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "881:8:13"
            },
            "parameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "_accessControls",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 791,
                  "src": "849:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "848:25:13"
            },
            "returnParameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "889:0:13"
            },
            "scope": 945,
            "src": "826:214:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19709
            ],
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "1122:42:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 799,
                      "name": "whiteList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "1139:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 801,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 800,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "1149:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1139:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 798,
                  "id": 802,
                  "nodeType": "Return",
                  "src": "1132:25:13"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "96bfc229",
            "id": 804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 795,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1098:8:13"
            },
            "parameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 804,
                  "src": "1069:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1068:17:13"
            },
            "returnParameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 804,
                  "src": "1116:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1115:6:13"
            },
            "scope": 945,
            "src": "1046:118:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19715
            ],
            "body": {
              "id": 874,
              "nodeType": "Block",
              "src": "1235:464:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 814,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1299:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1299:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 812,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "1268:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasOperatorRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 105,
                          "src": "1268:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1268:42:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57686974656c6973742e61646457686974654c6973743a2053656e646572206d757374206265206f70657261746f72",
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1324:49:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c496c82798c4984aece1b02017c5a530f5ccfa367827f9f01b513323b6da49f8",
                          "typeString": "literal_string \"Whitelist.addWhiteList: Sender must be operator\""
                        },
                        "value": "Whitelist.addWhiteList: Sender must be operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c496c82798c4984aece1b02017c5a530f5ccfa367827f9f01b513323b6da49f8",
                          "typeString": "literal_string \"Whitelist.addWhiteList: Sender must be operator\""
                        }
                      ],
                      "id": 811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1247:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:136:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 819,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:136:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 821,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "1401:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1401:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1420:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1401:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1393:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:29:13"
                },
                {
                  "body": {
                    "id": 872,
                    "nodeType": "Block",
                    "src": "1475:218:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 839,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 807,
                                  "src": "1497:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 841,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 840,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 828,
                                  "src": "1506:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1497:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 844,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1520:1:13",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 843,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1512:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 842,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1512:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1512:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1497:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 838,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1489:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1489:34:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 848,
                        "nodeType": "ExpressionStatement",
                        "src": "1489:34:13"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1541:23:13",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 849,
                              "name": "whiteList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 754,
                              "src": "1542:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 853,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 850,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "1552:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 852,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 851,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 828,
                                "src": "1561:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1552:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1542:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 871,
                        "nodeType": "IfStatement",
                        "src": "1537:146:13",
                        "trueBody": {
                          "id": 870,
                          "nodeType": "Block",
                          "src": "1566:117:13",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 855,
                                    "name": "whiteList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 754,
                                    "src": "1584:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 859,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 856,
                                      "name": "accounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 807,
                                      "src": "1594:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 858,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 857,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 828,
                                      "src": "1603:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1594:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1584:22:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 860,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1609:4:13",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1584:29:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 862,
                              "nodeType": "ExpressionStatement",
                              "src": "1584:29:13"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 864,
                                      "name": "accounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 807,
                                      "src": "1650:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 866,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 865,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 828,
                                      "src": "1659:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1650:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "74727565",
                                    "id": 867,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1663:4:13",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 863,
                                  "name": "AccountListed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 764,
                                  "src": "1636:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool)"
                                  }
                                },
                                "id": 868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1636:32:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 869,
                              "nodeType": "EmitStatement",
                              "src": "1631:37:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 831,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 828,
                      "src": "1449:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 832,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "1453:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1453:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1449:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 873,
                  "initializationExpression": {
                    "assignments": [
                      828
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 828,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 873,
                        "src": "1437:6:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 827,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1437:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 830,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1446:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1437:10:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1470:3:13",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 835,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 828,
                        "src": "1470:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 837,
                    "nodeType": "ExpressionStatement",
                    "src": "1470:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "1432:261:13"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5e1045ec",
            "id": 875,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 809,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1226:8:13"
            },
            "parameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 875,
                  "src": "1192:25:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 805,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1192:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 806,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1192:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1191:27:13"
            },
            "returnParameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1235:0:13"
            },
            "scope": 945,
            "src": "1170:529:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19721
            ],
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "1772:464:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 885,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1834:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1834:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 883,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 756,
                            "src": "1803:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$214",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasOperatorRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 105,
                          "src": "1803:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1803:42:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57686974656c6973742e72656d6f766557686974654c6973743a2053656e646572206d757374206265206f70657261746f72",
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1859:52:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d53a28e75b86fa42627d7adbf65412497e50561ff4cdaaaea5736d16c3e58f11",
                          "typeString": "literal_string \"Whitelist.removeWhiteList: Sender must be operator\""
                        },
                        "value": "Whitelist.removeWhiteList: Sender must be operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d53a28e75b86fa42627d7adbf65412497e50561ff4cdaaaea5736d16c3e58f11",
                          "typeString": "literal_string \"Whitelist.removeWhiteList: Sender must be operator\""
                        }
                      ],
                      "id": 882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1782:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1782:139:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "1782:139:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 892,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 878,
                            "src": "1938:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1938:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1957:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1938:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1930:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1930:29:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "1930:29:13"
                },
                {
                  "body": {
                    "id": 941,
                    "nodeType": "Block",
                    "src": "2012:218:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 910,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 878,
                                  "src": "2034:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 912,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 911,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 899,
                                  "src": "2043:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2034:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 915,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2057:1:13",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 914,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2049:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 913,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2049:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 916,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2049:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2034:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 909,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2026:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2026:34:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "2026:34:13"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 920,
                            "name": "whiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 754,
                            "src": "2078:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 924,
                          "indexExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 921,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 878,
                              "src": "2088:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 923,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 922,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "2097:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2088:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2078:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 940,
                        "nodeType": "IfStatement",
                        "src": "2074:146:13",
                        "trueBody": {
                          "id": 939,
                          "nodeType": "Block",
                          "src": "2102:118:13",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "2120:29:13",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 925,
                                    "name": "whiteList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 754,
                                    "src": "2127:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 929,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 926,
                                      "name": "accounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 878,
                                      "src": "2137:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 928,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 927,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 899,
                                      "src": "2146:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2137:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2127:22:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 931,
                              "nodeType": "ExpressionStatement",
                              "src": "2120:29:13"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 933,
                                      "name": "accounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 878,
                                      "src": "2186:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 935,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 934,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 899,
                                      "src": "2195:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2186:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "66616c7365",
                                    "id": 936,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2199:5:13",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 932,
                                  "name": "AccountListed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 764,
                                  "src": "2172:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool)"
                                  }
                                },
                                "id": 937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:33:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 938,
                              "nodeType": "EmitStatement",
                              "src": "2167:38:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 902,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "1986:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 903,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1990:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1990:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1986:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 942,
                  "initializationExpression": {
                    "assignments": [
                      899
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 899,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 942,
                        "src": "1974:6:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 898,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1974:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 901,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1983:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1974:10:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2007:3:13",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 906,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 899,
                        "src": "2007:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 908,
                    "nodeType": "ExpressionStatement",
                    "src": "2007:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "1969:261:13"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "39745791",
            "id": 944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeWhiteList",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 880,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1763:8:13"
            },
            "parameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 944,
                  "src": "1729:25:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 876,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1729:7:13",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 877,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1729:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1728:27:13"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1772:0:13"
            },
            "scope": 945,
            "src": "1704:532:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 946,
        "src": "564:1674:13"
      }
    ],
    "src": "0:2239:13"
  },
  "bytecode": "608060405234801561001057600080fd5b5061077f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063372c12b11461006757806339745791146100a15780635e1045ec14610146578063748365ef146101e957806396bfc2291461020d578063ce83c50f14610233575b600080fd5b61008d6004803603602081101561007d57600080fd5b50356001600160a01b0316610259565b604080519115158252519081900360200190f35b610144600480360360208110156100b757600080fd5b8101906020810181356401000000008111156100d257600080fd5b8201836020820111156100e457600080fd5b8035906020019184602083028401116401000000008311171561010657600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061026e945050505050565b005b6101446004803603602081101561015c57600080fd5b81019060208101813564010000000081111561017757600080fd5b82018360208201111561018957600080fd5b803590602001918460208302840111640100000000831117156101ab57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610450945050505050565b6101f1610636565b604080516001600160a01b039092168252519081900360200190f35b61008d6004803603602081101561022357600080fd5b50356001600160a01b0316610645565b6101446004803603602081101561024957600080fd5b50356001600160a01b0316610663565b60006020819052908152604090205460ff1681565b60015460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b1580156102b957600080fd5b505afa1580156102cd573d6000803e3d6000fd5b505050506040513d60208110156102e357600080fd5b50516103205760405162461bcd60e51b81526004018080602001828103825260328152602001806107186032913960400191505060405180910390fd5b805161032b57600080fd5b60005b815181101561044c5760006001600160a01b031682828151811061034e57fe5b60200260200101516001600160a01b0316141561036a57600080fd5b60008083838151811061037957fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615610444576000808383815181106103b457fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81549060ff02191690558181815181106103f857fe5b60200260200101516001600160a01b03167f0426e02a5e8dbdd68720eb6c318dd8e3128b8c5597fdf2f72335e52f217a1b5b600060405180821515815260200191505060405180910390a25b60010161032e565b5050565b60015460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d60208110156104c557600080fd5b50516105025760405162461bcd60e51b815260040180806020018281038252602f8152602001806106e9602f913960400191505060405180910390fd5b805161050d57600080fd5b60005b815181101561044c5760006001600160a01b031682828151811061053057fe5b60200260200101516001600160a01b0316141561054c57600080fd5b60008083838151811061055b57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1661062e57600160008084848151811061059757fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055508181815181106105e257fe5b60200260200101516001600160a01b03167f0426e02a5e8dbdd68720eb6c318dd8e3128b8c5597fdf2f72335e52f217a1b5b600160405180821515815260200191505060405180910390a25b600101610510565b6001546001600160a01b031681565b6001600160a01b031660009081526020819052604090205460ff1690565b600154600160a01b900460ff16156106b8576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5cd959606a1b604482015290519081900360640190fd5b6001805460ff60a01b196001600160a01b039093166001600160a01b03199091161791909116600160a01b17905556fe57686974656c6973742e61646457686974654c6973743a2053656e646572206d757374206265206f70657261746f7257686974656c6973742e72656d6f766557686974654c6973743a2053656e646572206d757374206265206f70657261746f72a2646970667358221220c63e598b85627c3af0417438c581a401fdbb3a5c6825019f69476daf4a811c4f64736f6c634300060c0033",
  "bytecodeSha1": "ab703e230c5370f06d78d0a17d2c5e3e39bc7829",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "WhiteList",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "11": {},
      "13": {
        "WhiteList.addWhiteList": {
          "19": [
            1268,
            1310,
            true
          ],
          "20": [
            1497,
            1522,
            true
          ],
          "21": [
            1542,
            1564,
            false
          ]
        },
        "WhiteList.initWhiteList": {
          "22": [
            907,
            919,
            true
          ]
        },
        "WhiteList.removeWhiteList": {
          "16": [
            1803,
            1845,
            true
          ],
          "17": [
            2034,
            2059,
            true
          ],
          "18": [
            2078,
            2100,
            false
          ]
        }
      },
      "6": {},
      "7": {},
      "75": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "11": {},
      "13": {
        "WhiteList.addWhiteList": {
          "6": [
            1247,
            1383
          ],
          "7": [
            1393,
            1422
          ],
          "8": [
            1489,
            1523
          ],
          "9": [
            1584,
            1613
          ],
          "10": [
            1631,
            1668
          ],
          "11": [
            1470,
            1473
          ]
        },
        "WhiteList.initWhiteList": {
          "13": [
            899,
            943
          ],
          "14": [
            953,
            1005
          ],
          "15": [
            1015,
            1033
          ]
        },
        "WhiteList.isInWhiteList": {
          "12": [
            1132,
            1157
          ]
        },
        "WhiteList.removeWhiteList": {
          "0": [
            1782,
            1921
          ],
          "1": [
            1930,
            1959
          ],
          "2": [
            2026,
            2060
          ],
          "3": [
            2120,
            2149
          ],
          "4": [
            2167,
            2205
          ],
          "5": [
            2007,
            2010
          ]
        }
      },
      "6": {},
      "7": {},
      "75": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.2.0/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/EnumerableSet",
    "IWhiteList",
    "MISOAccessControls",
    "MISOAdminAccess"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063372c12b11461006757806339745791146100a15780635e1045ec14610146578063748365ef146101e957806396bfc2291461020d578063ce83c50f14610233575b600080fd5b61008d6004803603602081101561007d57600080fd5b50356001600160a01b0316610259565b604080519115158252519081900360200190f35b610144600480360360208110156100b757600080fd5b8101906020810181356401000000008111156100d257600080fd5b8201836020820111156100e457600080fd5b8035906020019184602083028401116401000000008311171561010657600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061026e945050505050565b005b6101446004803603602081101561015c57600080fd5b81019060208101813564010000000081111561017757600080fd5b82018360208201111561018957600080fd5b803590602001918460208302840111640100000000831117156101ab57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610450945050505050565b6101f1610636565b604080516001600160a01b039092168252519081900360200190f35b61008d6004803603602081101561022357600080fd5b50356001600160a01b0316610645565b6101446004803603602081101561024957600080fd5b50356001600160a01b0316610663565b60006020819052908152604090205460ff1681565b60015460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b1580156102b957600080fd5b505afa1580156102cd573d6000803e3d6000fd5b505050506040513d60208110156102e357600080fd5b50516103205760405162461bcd60e51b81526004018080602001828103825260328152602001806107186032913960400191505060405180910390fd5b805161032b57600080fd5b60005b815181101561044c5760006001600160a01b031682828151811061034e57fe5b60200260200101516001600160a01b0316141561036a57600080fd5b60008083838151811061037957fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615610444576000808383815181106103b457fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81549060ff02191690558181815181106103f857fe5b60200260200101516001600160a01b03167f0426e02a5e8dbdd68720eb6c318dd8e3128b8c5597fdf2f72335e52f217a1b5b600060405180821515815260200191505060405180910390a25b60010161032e565b5050565b60015460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d60208110156104c557600080fd5b50516105025760405162461bcd60e51b815260040180806020018281038252602f8152602001806106e9602f913960400191505060405180910390fd5b805161050d57600080fd5b60005b815181101561044c5760006001600160a01b031682828151811061053057fe5b60200260200101516001600160a01b0316141561054c57600080fd5b60008083838151811061055b57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1661062e57600160008084848151811061059757fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055508181815181106105e257fe5b60200260200101516001600160a01b03167f0426e02a5e8dbdd68720eb6c318dd8e3128b8c5597fdf2f72335e52f217a1b5b600160405180821515815260200191505060405180910390a25b600101610510565b6001546001600160a01b031681565b6001600160a01b031660009081526020819052604090205460ff1690565b600154600160a01b900460ff16156106b8576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5cd959606a1b604482015290519081900360640190fd5b6001805460ff60a01b196001600160a01b039093166001600160a01b03199091161791909116600160a01b17905556fe57686974656c6973742e61646457686974654c6973743a2053656e646572206d757374206265206f70657261746f7257686974656c6973742e72656d6f766557686974654c6973743a2053656e646572206d757374206265206f70657261746f72a2646970667358221220c63e598b85627c3af0417438c581a401fdbb3a5c6825019f69476daf4a811c4f64736f6c634300060c0033",
  "deployedSourceMap": "564:1674:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;;;;;;;;;;;;;;;-1:-1:-1;604:41:13;-1:-1:-1;;;;;604:41:13;;:::i;:::-;;;;;;;;;;;;;;;;;;1704:532;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1704:532:13;;-1:-1:-1;1704:532:13;;-1:-1:-1;;;;;1704:532:13:i;:::-;;1170:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1170:529:13;;-1:-1:-1;1170:529:13;;-1:-1:-1;;;;;1170:529:13:i;651:40::-;;;:::i;:::-;;;;-1:-1:-1;;;;;651:40:13;;;;;;;;;;;;;;1046:118;;;;;;;;;;;;;;;;-1:-1:-1;1046:118:13;-1:-1:-1;;;;;1046:118:13;;:::i;826:214::-;;;;;;;;;;;;;;;;-1:-1:-1;826:214:13;-1:-1:-1;;;;;826:214:13;;:::i;604:41::-;;;;;;;;;;;;;;;;:::o;1704:532::-;1803:14;;:42;;;-1:-1:-1;;;1803:42:13;;1834:10;1803:42;;;;;;-1:-1:-1;;;;;1803:14:13;;;;:30;;:42;;;;;;;;;;;;;;;:14;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1803:42:13;1782:139;;;;-1:-1:-1;;;1782:139:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:15;;1930:29;;;;;;1974:6;1969:261;1990:8;:15;1986:1;:19;1969:261;;;2057:1;-1:-1:-1;;;;;2034:25:13;:8;2043:1;2034:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2034:25:13;;;2026:34;;;;;;2078:9;:22;2088:8;2097:1;2088:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2078:22:13;;;;;;;;;;;-1:-1:-1;2078:22:13;;;;2074:146;;;2127:9;:22;2137:8;2146:1;2137:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2127:22:13;-1:-1:-1;;;;;2127:22:13;;;;;;;;;;;;;2120:29;;;;;;;;;;;2186:8;2195:1;2186:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2172:33:13;;2199:5;2172:33;;;;;;;;;;;;;;;;;;;;2074:146;2007:3;;1969:261;;;;1704:532;:::o;1170:529::-;1268:14;;:42;;;-1:-1:-1;;;1268:42:13;;1299:10;1268:42;;;;;;-1:-1:-1;;;;;1268:14:13;;;;:30;;:42;;;;;;;;;;;;;;;:14;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1268:42:13;1247:136;;;;-1:-1:-1;;;1247:136:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1401:15;;1393:29;;;;;;1437:6;1432:261;1453:8;:15;1449:1;:19;1432:261;;;1520:1;-1:-1:-1;;;;;1497:25:13;:8;1506:1;1497:11;;;;;;;;;;;;;;-1:-1:-1;;;;;1497:25:13;;;1489:34;;;;;;1542:9;:22;1552:8;1561:1;1552:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1542:22:13;;;;;;;;;;;-1:-1:-1;1542:22:13;;;;1537:146;;1609:4;1584:9;:22;1594:8;1603:1;1594:11;;;;;;;;;;;;;;-1:-1:-1;;;;;1584:22:13;-1:-1:-1;;;;;1584:22:13;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1650:8;1659:1;1650:11;;;;;;;;;;;;;;-1:-1:-1;;;;;1636:32:13;;1663:4;1636:32;;;;;;;;;;;;;;;;;;;;1537:146;1470:3;;1432:261;;651:40;;;-1:-1:-1;;;;;651:40:13;;:::o;1046:118::-;-1:-1:-1;;;;;1139:18:13;1116:4;1139:18;;;;;;;;;;;;;;1046:118::o;826:214::-;908:11;;-1:-1:-1;;;908:11:13;;;;907:12;899:44;;;;;-1:-1:-1;;;899:44:13;;;;;;;;;;;;-1:-1:-1;;;899:44:13;;;;;;;;;;;;;;;953:14;:52;;-1:-1:-1;;;;;;;;;953:52:13;;;-1:-1:-1;;;;;;953:52:13;;;;1015:18;;;;-1:-1:-1;;;1015:18:13;;;826:214::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    564,
    2238
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x39745791 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x5E1045EC EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x748365EF EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x96BFC229 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xCE83C50F EQ PUSH2 0x233 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x26E SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x450 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x645 JUMP JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x663 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7E271F05 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xFC4E3E0A SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x718 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x34E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x379 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3B4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3F8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x426E02A5E8DBDD68720EB6C318DD8E3128B8C5597FDF2F72335E52F217A1B5B PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x1 ADD PUSH2 0x32E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7E271F05 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xFC4E3E0A SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x6E9 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x530 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x55B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x62E JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x597 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x426E02A5E8DBDD68720EB6C318DD8E3128B8C5597FDF2F72335E52F217A1B5B PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x1 ADD PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5CD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP INVALID JUMPI PUSH9 0x6974656C6973742E61 PUSH5 0x6457686974 PUSH6 0x4C6973743A20 MSTORE8 PUSH6 0x6E646572206D PUSH22 0x7374206265206F70657261746F7257686974656C6973 PUSH21 0x2E72656D6F766557686974654C6973743A2053656E PUSH5 0x6572206D75 PUSH20 0x74206265206F70657261746F72A2646970667358 0x22 SLT KECCAK256 0xC6 RETURNDATACOPY MSIZE DUP12 DUP6 PUSH3 0x7C3AF0 COINBASE PUSH21 0x38C581A401FDBB3A5C6825019F69476DAF4A811C4F PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        564,
        2238
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "6": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "DUP1",
      "path": "13"
    },
    "7": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "12": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "DUP1",
      "path": "13"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "REVERT",
      "path": "13"
    },
    "16": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "17": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "POP",
      "path": "13"
    },
    "18": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "LT",
      "path": "13"
    },
    "22": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "29": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "SHR",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x372C12B1"
    },
    "38": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "EQ",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "43": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "DUP1",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x39745791"
    },
    "49": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "EQ",
      "path": "13"
    },
    "50": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA1"
    },
    "53": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "54": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "DUP1",
      "path": "13"
    },
    "55": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5E1045EC"
    },
    "60": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "EQ",
      "path": "13"
    },
    "61": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x146"
    },
    "64": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "65": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "DUP1",
      "path": "13"
    },
    "66": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x748365EF"
    },
    "71": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "EQ",
      "path": "13"
    },
    "72": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E9"
    },
    "75": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "76": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "DUP1",
      "path": "13"
    },
    "77": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x96BFC229"
    },
    "82": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "EQ",
      "path": "13"
    },
    "83": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x20D"
    },
    "86": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "87": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "DUP1",
      "path": "13"
    },
    "88": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xCE83C50F"
    },
    "93": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "EQ",
      "path": "13"
    },
    "94": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x233"
    },
    "97": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "98": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "99": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "DUP1",
      "path": "13"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [
        564,
        2238
      ],
      "op": "REVERT",
      "path": "13"
    },
    "103": {
      "offset": [
        604,
        645
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "104": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8D"
    },
    "107": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "109": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "DUP1",
      "path": "13"
    },
    "110": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "111": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "SUB",
      "path": "13"
    },
    "112": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "114": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "DUP2",
      "path": "13"
    },
    "115": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "LT",
      "path": "13"
    },
    "116": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "117": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7D"
    },
    "120": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "121": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "123": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "DUP1",
      "path": "13"
    },
    "124": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "REVERT",
      "path": "13"
    },
    "125": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "126": {
      "op": "POP"
    },
    "127": {
      "offset": [
        604,
        645
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "134": {
      "op": "SHL"
    },
    "135": {
      "op": "SUB"
    },
    "136": {
      "offset": [
        604,
        645
      ],
      "op": "AND",
      "path": "13"
    },
    "137": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x259"
    },
    "140": {
      "fn": null,
      "jump": "i",
      "offset": [
        604,
        645
      ],
      "op": "JUMP",
      "path": "13"
    },
    "141": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "142": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "144": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "DUP1",
      "path": "13"
    },
    "145": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "146": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "147": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "148": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "149": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "DUP3",
      "path": "13"
    },
    "150": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "151": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "152": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "153": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "DUP2",
      "path": "13"
    },
    "154": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "155": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "SUB",
      "path": "13"
    },
    "156": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "158": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "ADD",
      "path": "13"
    },
    "159": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "160": {
      "fn": null,
      "offset": [
        604,
        645
      ],
      "op": "RETURN",
      "path": "13"
    },
    "161": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "162": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x144"
    },
    "165": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "167": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "168": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "169": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SUB",
      "path": "13"
    },
    "170": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "172": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP2",
      "path": "13"
    },
    "173": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "LT",
      "path": "13"
    },
    "174": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "175": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB7"
    },
    "178": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "179": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "181": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "182": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "REVERT",
      "path": "13"
    },
    "183": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "184": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP2",
      "path": "13"
    },
    "185": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "186": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "187": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "189": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP2",
      "path": "13"
    },
    "190": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "191": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP2",
      "path": "13"
    },
    "192": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "193": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH5",
      "path": "13",
      "value": "0x100000000"
    },
    "199": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP2",
      "path": "13"
    },
    "200": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "GT",
      "path": "13"
    },
    "201": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "202": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD2"
    },
    "205": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "206": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "208": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "209": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "REVERT",
      "path": "13"
    },
    "210": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "211": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP3",
      "path": "13"
    },
    "212": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "213": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP4",
      "path": "13"
    },
    "214": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "216": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP3",
      "path": "13"
    },
    "217": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "218": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "GT",
      "path": "13"
    },
    "219": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "220": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE4"
    },
    "223": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "224": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "226": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "227": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "REVERT",
      "path": "13"
    },
    "228": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "229": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "230": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "231": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "232": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "234": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "235": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "236": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP5",
      "path": "13"
    },
    "237": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "239": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP4",
      "path": "13"
    },
    "240": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "MUL",
      "path": "13"
    },
    "241": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP5",
      "path": "13"
    },
    "242": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "243": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "GT",
      "path": "13"
    },
    "244": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH5",
      "path": "13",
      "value": "0x100000000"
    },
    "250": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP4",
      "path": "13"
    },
    "251": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "GT",
      "path": "13"
    },
    "252": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "OR",
      "path": "13"
    },
    "253": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "254": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x106"
    },
    "257": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "258": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "260": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "261": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "REVERT",
      "path": "13"
    },
    "262": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "263": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "264": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "265": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "266": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "267": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "269": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "MUL",
      "path": "13"
    },
    "270": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "272": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "273": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "275": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "276": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "277": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP2",
      "path": "13"
    },
    "278": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "279": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "281": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "282": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "283": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "284": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "285": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "286": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "287": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP2",
      "path": "13"
    },
    "288": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP2",
      "path": "13"
    },
    "289": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "290": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "292": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "293": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP4",
      "path": "13"
    },
    "294": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP4",
      "path": "13"
    },
    "295": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "297": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "MUL",
      "path": "13"
    },
    "298": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP1",
      "path": "13"
    },
    "299": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP3",
      "path": "13"
    },
    "300": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "DUP5",
      "path": "13"
    },
    "301": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "CALLDATACOPY",
      "path": "13"
    },
    "302": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "304": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "305": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "ADD",
      "path": "13"
    },
    "306": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "307": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "308": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "309": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "310": {
      "op": "POP"
    },
    "311": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "312": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "313": {
      "op": "POP"
    },
    "314": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x26E"
    },
    "317": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "318": {
      "op": "POP"
    },
    "319": {
      "op": "POP"
    },
    "320": {
      "op": "POP"
    },
    "321": {
      "op": "POP"
    },
    "322": {
      "op": "POP"
    },
    "323": {
      "fn": "WhiteList.removeWhiteList",
      "jump": "i",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMP",
      "path": "13"
    },
    "324": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "325": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "STOP",
      "path": "13"
    },
    "326": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "327": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x144"
    },
    "330": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "332": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP1",
      "path": "13"
    },
    "333": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "334": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SUB",
      "path": "13"
    },
    "335": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "337": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP2",
      "path": "13"
    },
    "338": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "LT",
      "path": "13"
    },
    "339": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "340": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15C"
    },
    "343": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "344": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "346": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP1",
      "path": "13"
    },
    "347": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "REVERT",
      "path": "13"
    },
    "348": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "349": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP2",
      "path": "13"
    },
    "350": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ADD",
      "path": "13"
    },
    "351": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "352": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "354": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP2",
      "path": "13"
    },
    "355": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ADD",
      "path": "13"
    },
    "356": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP2",
      "path": "13"
    },
    "357": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "358": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH5",
      "path": "13",
      "value": "0x100000000"
    },
    "364": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP2",
      "path": "13"
    },
    "365": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "GT",
      "path": "13"
    },
    "366": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "367": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x177"
    },
    "370": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "371": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "373": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP1",
      "path": "13"
    },
    "374": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "REVERT",
      "path": "13"
    },
    "375": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "376": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP3",
      "path": "13"
    },
    "377": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ADD",
      "path": "13"
    },
    "378": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP4",
      "path": "13"
    },
    "379": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "381": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP3",
      "path": "13"
    },
    "382": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ADD",
      "path": "13"
    },
    "383": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "GT",
      "path": "13"
    },
    "384": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "385": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x189"
    },
    "388": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "389": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "391": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP1",
      "path": "13"
    },
    "392": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "REVERT",
      "path": "13"
    },
    "393": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "394": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP1",
      "path": "13"
    },
    "395": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "396": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "397": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "399": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ADD",
      "path": "13"
    },
    "400": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "401": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP5",
      "path": "13"
    },
    "402": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "404": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP4",
      "path": "13"
    },
    "405": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "MUL",
      "path": "13"
    },
    "406": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP5",
      "path": "13"
    },
    "407": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ADD",
      "path": "13"
    },
    "408": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "GT",
      "path": "13"
    },
    "409": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH5",
      "path": "13",
      "value": "0x100000000"
    },
    "415": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP4",
      "path": "13"
    },
    "416": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "GT",
      "path": "13"
    },
    "417": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "OR",
      "path": "13"
    },
    "418": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "419": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1AB"
    },
    "422": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "423": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "425": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP1",
      "path": "13"
    },
    "426": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "REVERT",
      "path": "13"
    },
    "427": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "428": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "429": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "430": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP1",
      "path": "13"
    },
    "431": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP1",
      "path": "13"
    },
    "432": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "434": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "MUL",
      "path": "13"
    },
    "435": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "437": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ADD",
      "path": "13"
    },
    "438": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "440": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "441": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "442": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP2",
      "path": "13"
    },
    "443": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ADD",
      "path": "13"
    },
    "444": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "446": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "447": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP1",
      "path": "13"
    },
    "448": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "449": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "450": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "451": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "452": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP2",
      "path": "13"
    },
    "453": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP2",
      "path": "13"
    },
    "454": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "455": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "457": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ADD",
      "path": "13"
    },
    "458": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP4",
      "path": "13"
    },
    "459": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP4",
      "path": "13"
    },
    "460": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "462": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "MUL",
      "path": "13"
    },
    "463": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP1",
      "path": "13"
    },
    "464": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP3",
      "path": "13"
    },
    "465": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "DUP5",
      "path": "13"
    },
    "466": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "CALLDATACOPY",
      "path": "13"
    },
    "467": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "469": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "470": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "ADD",
      "path": "13"
    },
    "471": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "472": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "473": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "474": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "475": {
      "op": "POP"
    },
    "476": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "477": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "478": {
      "op": "POP"
    },
    "479": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x450"
    },
    "482": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "483": {
      "op": "POP"
    },
    "484": {
      "op": "POP"
    },
    "485": {
      "op": "POP"
    },
    "486": {
      "op": "POP"
    },
    "487": {
      "op": "POP"
    },
    "488": {
      "fn": "WhiteList.addWhiteList",
      "jump": "i",
      "offset": [
        1170,
        1699
      ],
      "op": "JUMP",
      "path": "13"
    },
    "489": {
      "offset": [
        651,
        691
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "490": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F1"
    },
    "493": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x636"
    },
    "496": {
      "fn": "WhiteList.addWhiteList",
      "jump": "i",
      "offset": [
        651,
        691
      ],
      "op": "JUMP",
      "path": "13"
    },
    "497": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "498": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "500": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "DUP1",
      "path": "13"
    },
    "501": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "508": {
      "op": "SHL"
    },
    "509": {
      "op": "SUB"
    },
    "510": {
      "offset": [
        651,
        691
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "511": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "512": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "AND",
      "path": "13"
    },
    "513": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "DUP3",
      "path": "13"
    },
    "514": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "515": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "516": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "517": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "DUP2",
      "path": "13"
    },
    "518": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "519": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "SUB",
      "path": "13"
    },
    "520": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "522": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "ADD",
      "path": "13"
    },
    "523": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "524": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "RETURN",
      "path": "13"
    },
    "525": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "526": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8D"
    },
    "529": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "531": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "DUP1",
      "path": "13"
    },
    "532": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "533": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "SUB",
      "path": "13"
    },
    "534": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "536": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "DUP2",
      "path": "13"
    },
    "537": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "LT",
      "path": "13"
    },
    "538": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "539": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x223"
    },
    "542": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "543": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "545": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "DUP1",
      "path": "13"
    },
    "546": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "REVERT",
      "path": "13"
    },
    "547": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "548": {
      "op": "POP"
    },
    "549": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "op": "SUB"
    },
    "558": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "AND",
      "path": "13"
    },
    "559": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x645"
    },
    "562": {
      "fn": "WhiteList.isInWhiteList",
      "jump": "i",
      "offset": [
        1046,
        1164
      ],
      "op": "JUMP",
      "path": "13"
    },
    "563": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "564": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x144"
    },
    "567": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "569": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "DUP1",
      "path": "13"
    },
    "570": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "571": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "SUB",
      "path": "13"
    },
    "572": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "574": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "DUP2",
      "path": "13"
    },
    "575": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "LT",
      "path": "13"
    },
    "576": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "577": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x249"
    },
    "580": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "581": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "583": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "DUP1",
      "path": "13"
    },
    "584": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "REVERT",
      "path": "13"
    },
    "585": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "586": {
      "op": "POP"
    },
    "587": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "op": "SUB"
    },
    "596": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "AND",
      "path": "13"
    },
    "597": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x663"
    },
    "600": {
      "fn": "WhiteList.initWhiteList",
      "jump": "i",
      "offset": [
        826,
        1040
      ],
      "op": "JUMP",
      "path": "13"
    },
    "601": {
      "offset": [
        604,
        645
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "602": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "604": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "606": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "DUP2",
      "path": "13"
    },
    "607": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "608": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "609": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "610": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "DUP2",
      "path": "13"
    },
    "611": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "612": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "614": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "615": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "616": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "617": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "619": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "AND",
      "path": "13"
    },
    "620": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        604,
        645
      ],
      "op": "DUP2",
      "path": "13"
    },
    "621": {
      "fn": "WhiteList.initWhiteList",
      "jump": "o",
      "offset": [
        604,
        645
      ],
      "op": "JUMP",
      "path": "13"
    },
    "622": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "623": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1817
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 0,
      "value": "0x1"
    },
    "625": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1817
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "626": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "628": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP1",
      "path": "13"
    },
    "629": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "630": {
      "op": "PUSH4",
      "value": "0x7E271F05"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "637": {
      "op": "SHL"
    },
    "638": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP2",
      "path": "13"
    },
    "639": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "640": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1834,
        1844
      ],
      "op": "CALLER",
      "path": "13"
    },
    "641": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "643": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP3",
      "path": "13"
    },
    "644": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "ADD",
      "path": "13"
    },
    "645": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "646": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "647": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "654": {
      "op": "SHL"
    },
    "655": {
      "op": "SUB"
    },
    "656": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1817
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "657": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1817
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "658": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1817
      ],
      "op": "AND",
      "path": "13"
    },
    "659": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1817
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "660": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1833
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFC4E3E0A"
    },
    "665": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1833
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "666": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "668": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP1",
      "path": "13"
    },
    "669": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP3",
      "path": "13"
    },
    "670": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "ADD",
      "path": "13"
    },
    "671": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "672": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "674": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "675": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "676": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "677": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "678": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP3",
      "path": "13"
    },
    "679": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "680": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "SUB",
      "path": "13"
    },
    "681": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "ADD",
      "path": "13"
    },
    "682": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP2",
      "path": "13"
    },
    "683": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1817
      ],
      "op": "DUP7",
      "path": "13"
    },
    "684": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP1",
      "path": "13"
    },
    "685": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "686": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "687": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP1",
      "path": "13"
    },
    "688": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "689": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2B9"
    },
    "692": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "693": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "695": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP1",
      "path": "13"
    },
    "696": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "REVERT",
      "path": "13"
    },
    "697": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "698": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "POP",
      "path": "13"
    },
    "699": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "GAS",
      "path": "13"
    },
    "700": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "701": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "702": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP1",
      "path": "13"
    },
    "703": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "704": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2CD"
    },
    "707": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "708": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "709": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "711": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP1",
      "path": "13"
    },
    "712": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "713": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "714": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "716": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "REVERT",
      "path": "13"
    },
    "717": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "718": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "POP",
      "path": "13"
    },
    "719": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "POP",
      "path": "13"
    },
    "720": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "POP",
      "path": "13"
    },
    "721": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "POP",
      "path": "13"
    },
    "722": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "724": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "725": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "726": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "728": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP2",
      "path": "13"
    },
    "729": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "LT",
      "path": "13"
    },
    "730": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "731": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E3"
    },
    "734": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "735": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "737": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "DUP1",
      "path": "13"
    },
    "738": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "REVERT",
      "path": "13"
    },
    "739": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "740": {
      "op": "POP"
    },
    "741": {
      "branch": 16,
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1803,
        1845
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "742": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x320"
    },
    "745": {
      "branch": 16,
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "746": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "748": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "DUP2",
      "path": "13"
    },
    "757": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "758": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "760": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "ADD",
      "path": "13"
    },
    "761": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "DUP1",
      "path": "13"
    },
    "762": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "DUP1",
      "path": "13"
    },
    "763": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "765": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "ADD",
      "path": "13"
    },
    "766": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "DUP3",
      "path": "13"
    },
    "767": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "DUP2",
      "path": "13"
    },
    "768": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "SUB",
      "path": "13"
    },
    "769": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "DUP3",
      "path": "13"
    },
    "770": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "771": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x32"
    },
    "773": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "DUP2",
      "path": "13"
    },
    "774": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "775": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "777": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "ADD",
      "path": "13"
    },
    "778": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "DUP1",
      "path": "13"
    },
    "779": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x718"
    },
    "782": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x32"
    },
    "784": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "785": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "786": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "788": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "ADD",
      "path": "13"
    },
    "789": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "790": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "POP",
      "path": "13"
    },
    "791": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "POP",
      "path": "13"
    },
    "792": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "794": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "795": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "DUP1",
      "path": "13"
    },
    "796": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "797": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "SUB",
      "path": "13"
    },
    "798": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "799": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "REVERT",
      "path": "13"
    },
    "800": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1782,
        1921
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "801": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1938,
        1953
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 1
    },
    "802": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1938,
        1953
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "803": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1930,
        1959
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x32B"
    },
    "806": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1930,
        1959
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "807": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1930,
        1959
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "809": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1930,
        1959
      ],
      "op": "DUP1",
      "path": "13"
    },
    "810": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1930,
        1959
      ],
      "op": "REVERT",
      "path": "13"
    },
    "811": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1930,
        1959
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "812": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1974,
        1980
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "814": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1969,
        2230
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "815": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1990,
        1998
      ],
      "op": "DUP2",
      "path": "13"
    },
    "816": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1990,
        2005
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "817": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1986,
        1987
      ],
      "op": "DUP2",
      "path": "13"
    },
    "818": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1986,
        2005
      ],
      "op": "LT",
      "path": "13"
    },
    "819": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1969,
        2230
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "820": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1969,
        2230
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x44C"
    },
    "823": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1969,
        2230
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "824": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2057,
        2058
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 2,
      "value": "0x0"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "832": {
      "op": "SHL"
    },
    "833": {
      "op": "SUB"
    },
    "834": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2059
      ],
      "op": "AND",
      "path": "13"
    },
    "835": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2042
      ],
      "op": "DUP3",
      "path": "13"
    },
    "836": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2043,
        2044
      ],
      "op": "DUP3",
      "path": "13"
    },
    "837": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "DUP2",
      "path": "13"
    },
    "838": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "839": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "DUP2",
      "path": "13"
    },
    "840": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "LT",
      "path": "13"
    },
    "841": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x34E"
    },
    "844": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "845": {
      "dev": "Index out of range",
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "INVALID",
      "path": "13"
    },
    "846": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "847": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "849": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "MUL",
      "path": "13"
    },
    "850": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "852": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "ADD",
      "path": "13"
    },
    "853": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "ADD",
      "path": "13"
    },
    "854": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2045
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "861": {
      "op": "SHL"
    },
    "862": {
      "op": "SUB"
    },
    "863": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2059
      ],
      "op": "AND",
      "path": "13"
    },
    "864": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2059
      ],
      "op": "EQ",
      "path": "13"
    },
    "865": {
      "branch": 17,
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2034,
        2059
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "866": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2026,
        2060
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x36A"
    },
    "869": {
      "branch": 17,
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2026,
        2060
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "870": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2026,
        2060
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "872": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2026,
        2060
      ],
      "op": "DUP1",
      "path": "13"
    },
    "873": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2026,
        2060
      ],
      "op": "REVERT",
      "path": "13"
    },
    "874": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2026,
        2060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "875": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2087
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "877": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "DUP1",
      "path": "13"
    },
    "878": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2096
      ],
      "op": "DUP4",
      "path": "13"
    },
    "879": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2097,
        2098
      ],
      "op": "DUP4",
      "path": "13"
    },
    "880": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "DUP2",
      "path": "13"
    },
    "881": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "882": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "DUP2",
      "path": "13"
    },
    "883": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "LT",
      "path": "13"
    },
    "884": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x379"
    },
    "887": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "888": {
      "dev": "Index out of range",
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "INVALID",
      "path": "13"
    },
    "889": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "890": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "892": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "893": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "DUP2",
      "path": "13"
    },
    "894": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "MUL",
      "path": "13"
    },
    "895": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "896": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "897": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "898": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "ADD",
      "path": "13"
    },
    "899": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "DUP2",
      "path": "13"
    },
    "900": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "ADD",
      "path": "13"
    },
    "901": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2088,
        2099
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "op": "SUB"
    },
    "910": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "AND",
      "path": "13"
    },
    "911": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "DUP3",
      "path": "13"
    },
    "912": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "913": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "DUP2",
      "path": "13"
    },
    "914": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "ADD",
      "path": "13"
    },
    "915": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "916": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "917": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "918": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "919": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "921": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "ADD",
      "path": "13"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "924": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "925": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "926": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "928": {
      "branch": 18,
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2078,
        2100
      ],
      "op": "AND",
      "path": "13"
    },
    "929": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2074,
        2220
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "930": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2074,
        2220
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x444"
    },
    "933": {
      "branch": 18,
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2074,
        2220
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "934": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2136
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 3,
      "value": "0x0"
    },
    "936": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "DUP1",
      "path": "13"
    },
    "937": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2145
      ],
      "op": "DUP4",
      "path": "13"
    },
    "938": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2146,
        2147
      ],
      "op": "DUP4",
      "path": "13"
    },
    "939": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "DUP2",
      "path": "13"
    },
    "940": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "941": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "DUP2",
      "path": "13"
    },
    "942": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "LT",
      "path": "13"
    },
    "943": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3B4"
    },
    "946": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "947": {
      "dev": "Index out of range",
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "INVALID",
      "path": "13"
    },
    "948": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "949": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "951": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "MUL",
      "path": "13"
    },
    "952": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "954": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "ADD",
      "path": "13"
    },
    "955": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "ADD",
      "path": "13"
    },
    "956": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2137,
        2148
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "963": {
      "op": "SHL"
    },
    "964": {
      "op": "SUB"
    },
    "965": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "AND",
      "path": "13"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "972": {
      "op": "SHL"
    },
    "973": {
      "op": "SUB"
    },
    "974": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "AND",
      "path": "13"
    },
    "975": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "DUP2",
      "path": "13"
    },
    "976": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "977": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "979": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "ADD",
      "path": "13"
    },
    "980": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "981": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "DUP2",
      "path": "13"
    },
    "982": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "983": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "985": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "ADD",
      "path": "13"
    },
    "986": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "988": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "989": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2127,
        2149
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "991": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2120,
        2149
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "994": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2120,
        2149
      ],
      "op": "EXP",
      "path": "13"
    },
    "995": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2120,
        2149
      ],
      "op": "DUP2",
      "path": "13"
    },
    "996": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2120,
        2149
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "997": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2120,
        2149
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "998": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2120,
        2149
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1000": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2120,
        2149
      ],
      "op": "MUL",
      "path": "13"
    },
    "1001": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2120,
        2149
      ],
      "op": "NOT",
      "path": "13"
    },
    "1002": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2120,
        2149
      ],
      "op": "AND",
      "path": "13"
    },
    "1003": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2120,
        2149
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1004": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2120,
        2149
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1005": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2194
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 4
    },
    "1006": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2195,
        2196
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1007": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1008": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1009": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1010": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "LT",
      "path": "13"
    },
    "1011": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3F8"
    },
    "1014": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1015": {
      "dev": "Index out of range",
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "INVALID",
      "path": "13"
    },
    "1016": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1017": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1019": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "MUL",
      "path": "13"
    },
    "1020": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1022": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "ADD",
      "path": "13"
    },
    "1023": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "ADD",
      "path": "13"
    },
    "1024": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2186,
        2197
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "op": "SUB"
    },
    "1033": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "AND",
      "path": "13"
    },
    "1034": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x426E02A5E8DBDD68720EB6C318DD8E3128B8C5597FDF2F72335E52F217A1B5B"
    },
    "1067": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2199,
        2204
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1069": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1071": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1072": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1073": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1074": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1075": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1076": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1077": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1078": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1080": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "ADD",
      "path": "13"
    },
    "1081": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1082": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "POP",
      "path": "13"
    },
    "1083": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "POP",
      "path": "13"
    },
    "1084": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1086": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1087": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1088": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1089": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "SUB",
      "path": "13"
    },
    "1090": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1091": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2172,
        2205
      ],
      "op": "LOG2",
      "path": "13"
    },
    "1092": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2074,
        2220
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1093": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2007,
        2010
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 5,
      "value": "0x1"
    },
    "1095": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        2007,
        2010
      ],
      "op": "ADD",
      "path": "13"
    },
    "1096": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1969,
        2230
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x32E"
    },
    "1099": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1969,
        2230
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1100": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1969,
        2230
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1101": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1969,
        2230
      ],
      "op": "POP",
      "path": "13"
    },
    "1102": {
      "fn": "WhiteList.removeWhiteList",
      "offset": [
        1704,
        2236
      ],
      "op": "POP",
      "path": "13"
    },
    "1103": {
      "fn": "WhiteList.removeWhiteList",
      "jump": "o",
      "offset": [
        1704,
        2236
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1104": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1170,
        1699
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1105": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1282
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 6,
      "value": "0x1"
    },
    "1107": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1282
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1108": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1110": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1111": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1112": {
      "op": "PUSH4",
      "value": "0x7E271F05"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1119": {
      "op": "SHL"
    },
    "1120": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1121": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1122": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1299,
        1309
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1123": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1125": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1126": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "ADD",
      "path": "13"
    },
    "1127": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1128": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1129": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1136": {
      "op": "SHL"
    },
    "1137": {
      "op": "SUB"
    },
    "1138": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1282
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1139": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1282
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1140": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1282
      ],
      "op": "AND",
      "path": "13"
    },
    "1141": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1282
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1142": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1298
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFC4E3E0A"
    },
    "1147": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1298
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1148": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "1150": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1151": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1152": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "ADD",
      "path": "13"
    },
    "1153": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1154": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1156": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1157": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1158": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1159": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1160": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1161": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1162": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "SUB",
      "path": "13"
    },
    "1163": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "ADD",
      "path": "13"
    },
    "1164": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1165": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1282
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1166": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1167": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1168": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1169": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1170": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1171": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x49B"
    },
    "1174": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1175": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1177": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1178": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1179": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1180": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "POP",
      "path": "13"
    },
    "1181": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "GAS",
      "path": "13"
    },
    "1182": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "1183": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1184": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1185": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1186": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4AF"
    },
    "1189": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1190": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1191": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1193": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1194": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1195": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1196": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1198": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1199": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1200": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "POP",
      "path": "13"
    },
    "1201": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "POP",
      "path": "13"
    },
    "1202": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "POP",
      "path": "13"
    },
    "1203": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "POP",
      "path": "13"
    },
    "1204": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1206": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1207": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1208": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1210": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1211": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "LT",
      "path": "13"
    },
    "1212": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1213": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4C5"
    },
    "1216": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1217": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1219": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1220": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1221": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1222": {
      "op": "POP"
    },
    "1223": {
      "branch": 19,
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1268,
        1310
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1224": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x502"
    },
    "1227": {
      "branch": 19,
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1228": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1230": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1239": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1240": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1242": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "ADD",
      "path": "13"
    },
    "1243": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1244": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1245": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1247": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "ADD",
      "path": "13"
    },
    "1248": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1249": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1250": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "SUB",
      "path": "13"
    },
    "1251": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1252": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1253": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2F"
    },
    "1255": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1256": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1257": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1259": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "ADD",
      "path": "13"
    },
    "1260": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1261": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6E9"
    },
    "1264": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2F"
    },
    "1266": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1267": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "CODECOPY",
      "path": "13"
    },
    "1268": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1270": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "ADD",
      "path": "13"
    },
    "1271": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1272": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "POP",
      "path": "13"
    },
    "1273": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "POP",
      "path": "13"
    },
    "1274": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1276": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1277": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1278": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1279": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "SUB",
      "path": "13"
    },
    "1280": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1281": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1282": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1247,
        1383
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1283": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1401,
        1416
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 7
    },
    "1284": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1401,
        1416
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1285": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x50D"
    },
    "1288": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1289": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1291": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1292": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1393,
        1422
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1293": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1294": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1437,
        1443
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1296": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1432,
        1693
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1297": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1453,
        1461
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1298": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1453,
        1468
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1299": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1449,
        1450
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1300": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1449,
        1468
      ],
      "op": "LT",
      "path": "13"
    },
    "1301": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1432,
        1693
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1302": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1432,
        1693
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x44C"
    },
    "1305": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1432,
        1693
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1306": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1520,
        1521
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 8,
      "value": "0x0"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1314": {
      "op": "SHL"
    },
    "1315": {
      "op": "SUB"
    },
    "1316": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1522
      ],
      "op": "AND",
      "path": "13"
    },
    "1317": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1505
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1318": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1506,
        1507
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1319": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1320": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1321": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1322": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "LT",
      "path": "13"
    },
    "1323": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x530"
    },
    "1326": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1327": {
      "dev": "Index out of range",
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "INVALID",
      "path": "13"
    },
    "1328": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1329": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1331": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "MUL",
      "path": "13"
    },
    "1332": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1334": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "ADD",
      "path": "13"
    },
    "1335": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "ADD",
      "path": "13"
    },
    "1336": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1508
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1343": {
      "op": "SHL"
    },
    "1344": {
      "op": "SUB"
    },
    "1345": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1522
      ],
      "op": "AND",
      "path": "13"
    },
    "1346": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1522
      ],
      "op": "EQ",
      "path": "13"
    },
    "1347": {
      "branch": 20,
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1497,
        1522
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1348": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1489,
        1523
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x54C"
    },
    "1351": {
      "branch": 20,
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1489,
        1523
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1352": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1489,
        1523
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1354": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1489,
        1523
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1355": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1489,
        1523
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1356": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1489,
        1523
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1357": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1551
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1359": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1360": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1560
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1361": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1561,
        1562
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1362": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1363": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1364": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1365": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "LT",
      "path": "13"
    },
    "1366": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x55B"
    },
    "1369": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1370": {
      "dev": "Index out of range",
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "INVALID",
      "path": "13"
    },
    "1371": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1372": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1374": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1375": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1376": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "MUL",
      "path": "13"
    },
    "1377": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1378": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1379": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1380": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "ADD",
      "path": "13"
    },
    "1381": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1382": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "ADD",
      "path": "13"
    },
    "1383": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1552,
        1563
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1390": {
      "op": "SHL"
    },
    "1391": {
      "op": "SUB"
    },
    "1392": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "AND",
      "path": "13"
    },
    "1393": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1394": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1395": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1396": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "ADD",
      "path": "13"
    },
    "1397": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1398": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1399": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1400": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1401": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1403": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "ADD",
      "path": "13"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1406": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1407": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1408": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1410": {
      "branch": 21,
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1542,
        1564
      ],
      "op": "AND",
      "path": "13"
    },
    "1411": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1537,
        1683
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x62E"
    },
    "1414": {
      "branch": 21,
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1537,
        1683
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1415": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1609,
        1613
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 9,
      "value": "0x1"
    },
    "1417": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1593
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1419": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1420": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1602
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1421": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1603,
        1604
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1422": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1423": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1424": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1425": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "LT",
      "path": "13"
    },
    "1426": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x597"
    },
    "1429": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1430": {
      "dev": "Index out of range",
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "INVALID",
      "path": "13"
    },
    "1431": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1432": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1434": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "MUL",
      "path": "13"
    },
    "1435": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1437": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "ADD",
      "path": "13"
    },
    "1438": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "ADD",
      "path": "13"
    },
    "1439": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1594,
        1605
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "op": "SUB"
    },
    "1448": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "AND",
      "path": "13"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "op": "SUB"
    },
    "1457": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "AND",
      "path": "13"
    },
    "1458": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1459": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1460": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1462": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "ADD",
      "path": "13"
    },
    "1463": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1464": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1465": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1466": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1468": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "ADD",
      "path": "13"
    },
    "1469": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1471": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1472": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1474": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "1477": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "EXP",
      "path": "13"
    },
    "1478": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1479": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1480": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1481": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1483": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "MUL",
      "path": "13"
    },
    "1484": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "NOT",
      "path": "13"
    },
    "1485": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "AND",
      "path": "13"
    },
    "1486": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1487": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1488": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1489": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1490": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "MUL",
      "path": "13"
    },
    "1491": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "OR",
      "path": "13"
    },
    "1492": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1493": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1494": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1584,
        1613
      ],
      "op": "POP",
      "path": "13"
    },
    "1495": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1658
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 10
    },
    "1496": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1659,
        1660
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1497": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1498": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1499": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1500": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "LT",
      "path": "13"
    },
    "1501": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5E2"
    },
    "1504": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1505": {
      "dev": "Index out of range",
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "INVALID",
      "path": "13"
    },
    "1506": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1507": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1509": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "MUL",
      "path": "13"
    },
    "1510": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1512": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "ADD",
      "path": "13"
    },
    "1513": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "ADD",
      "path": "13"
    },
    "1514": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1650,
        1661
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1521": {
      "op": "SHL"
    },
    "1522": {
      "op": "SUB"
    },
    "1523": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "AND",
      "path": "13"
    },
    "1524": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x426E02A5E8DBDD68720EB6C318DD8E3128B8C5597FDF2F72335E52F217A1B5B"
    },
    "1557": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1663,
        1667
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1559": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1561": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1562": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1563": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1564": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1565": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1566": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1567": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1568": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1570": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "ADD",
      "path": "13"
    },
    "1571": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1572": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "POP",
      "path": "13"
    },
    "1573": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "POP",
      "path": "13"
    },
    "1574": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1576": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1577": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1578": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1579": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "SUB",
      "path": "13"
    },
    "1580": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1581": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1636,
        1668
      ],
      "op": "LOG2",
      "path": "13"
    },
    "1582": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1537,
        1683
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1583": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1470,
        1473
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 11,
      "value": "0x1"
    },
    "1585": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1470,
        1473
      ],
      "op": "ADD",
      "path": "13"
    },
    "1586": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1432,
        1693
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x510"
    },
    "1589": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        1432,
        1693
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1590": {
      "offset": [
        651,
        691
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1591": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1593": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1600": {
      "op": "SHL"
    },
    "1601": {
      "op": "SUB"
    },
    "1602": {
      "offset": [
        651,
        691
      ],
      "op": "AND",
      "path": "13"
    },
    "1603": {
      "fn": "WhiteList.addWhiteList",
      "offset": [
        651,
        691
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1604": {
      "fn": "WhiteList.addWhiteList",
      "jump": "o",
      "offset": [
        651,
        691
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1605": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1046,
        1164
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1612": {
      "op": "SHL"
    },
    "1613": {
      "op": "SUB"
    },
    "1614": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "AND",
      "path": "13",
      "statement": 12
    },
    "1615": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1116,
        1120
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1617": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1618": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1619": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1620": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1622": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1623": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1624": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1625": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1627": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1628": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1629": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1630": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1632": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "AND",
      "path": "13"
    },
    "1633": {
      "fn": "WhiteList.isInWhiteList",
      "offset": [
        1139,
        1157
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1634": {
      "fn": "WhiteList.isInWhiteList",
      "jump": "o",
      "offset": [
        1046,
        1164
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1635": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        826,
        1040
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1636": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        908,
        919
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 13,
      "value": "0x1"
    },
    "1638": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        908,
        919
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1643": {
      "op": "SHL"
    },
    "1644": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        908,
        919
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1645": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        908,
        919
      ],
      "op": "DIV",
      "path": "13"
    },
    "1646": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        908,
        919
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1648": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        908,
        919
      ],
      "op": "AND",
      "path": "13"
    },
    "1649": {
      "branch": 22,
      "fn": "WhiteList.initWhiteList",
      "offset": [
        907,
        919
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1650": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6B8"
    },
    "1653": {
      "branch": 22,
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1654": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1656": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1657": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1664": {
      "op": "SHL"
    },
    "1665": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1666": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1667": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1669": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1671": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1672": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "ADD",
      "path": "13"
    },
    "1673": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1674": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x13"
    },
    "1676": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "1678": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1679": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "ADD",
      "path": "13"
    },
    "1680": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1681": {
      "op": "PUSH19",
      "value": "0x105B1C9958591E481A5B9A5D1A585B1A5CD959"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "1703": {
      "op": "SHL"
    },
    "1704": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x44"
    },
    "1706": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1707": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "ADD",
      "path": "13"
    },
    "1708": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1709": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1710": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1711": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1712": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1713": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1714": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "SUB",
      "path": "13"
    },
    "1715": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "1717": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "ADD",
      "path": "13"
    },
    "1718": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1719": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1720": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        899,
        943
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1721": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        953,
        967
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 14,
      "value": "0x1"
    },
    "1723": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        953,
        1005
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1724": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        953,
        1005
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1729": {
      "op": "SHL"
    },
    "1730": {
      "op": "NOT"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1737": {
      "op": "SHL"
    },
    "1738": {
      "op": "SUB"
    },
    "1739": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        953,
        1005
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1740": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        953,
        1005
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1741": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        953,
        1005
      ],
      "op": "AND",
      "path": "13"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "op": "SUB"
    },
    "1750": {
      "op": "NOT"
    },
    "1751": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        953,
        1005
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1752": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        953,
        1005
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1753": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        953,
        1005
      ],
      "op": "AND",
      "path": "13"
    },
    "1754": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        953,
        1005
      ],
      "op": "OR",
      "path": "13"
    },
    "1755": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1015,
        1033
      ],
      "op": "SWAP2",
      "path": "13",
      "statement": 15
    },
    "1756": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1015,
        1033
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1757": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1015,
        1033
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1758": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1015,
        1033
      ],
      "op": "AND",
      "path": "13"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1763": {
      "op": "SHL"
    },
    "1764": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1015,
        1033
      ],
      "op": "OR",
      "path": "13"
    },
    "1765": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1015,
        1033
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1766": {
      "fn": "WhiteList.initWhiteList",
      "offset": [
        1015,
        1033
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1767": {
      "fn": "WhiteList.initWhiteList",
      "jump": "o",
      "offset": [
        826,
        1040
      ],
      "op": "JUMP",
      "path": "13"
    }
  },
  "sha1": "f1df02787eefc0aba72b484d75e28760e09b5be4",
  "source": "pragma solidity ^0.6.9;\n\n// ----------------------------------------------------------------------------\n// BokkyPooBahs White List\n//\n//\n// Enjoy.\n//\n// (c) BokkyPooBah / Bok Consulting Pty Ltd. The MIT Licence.\n// ----------------------------------------------------------------------------\n\nimport \"./MISOAccessControls.sol\";\nimport \"../../interfaces/IWhiteList.sol\";\n\n\n// ----------------------------------------------------------------------------\n// White List - on list or not\n// ----------------------------------------------------------------------------\ncontract WhiteList is IWhiteList  {\n    mapping(address => bool) public whiteList;\n    MISOAccessControls public accessControls;\n    bool private initialised;\n\n    event AccountListed(address indexed account, bool status);\n\n    constructor() public {\n    }\n\n    function initWhiteList(address _accessControls) public override{\n        require(!initialised, \"Already initialised\");\n        accessControls = MISOAccessControls(_accessControls);\n        initialised = true;\n    }\n\n    function isInWhiteList(address account) public view override returns (bool) {\n        return whiteList[account];\n    }\n\n    function addWhiteList(address[] memory accounts) public override {  \n        require(\n            accessControls.hasOperatorRole(msg.sender),\n            \"Whitelist.addWhiteList: Sender must be operator\"\n        );\n        require(accounts.length != 0);\n        for (uint i = 0; i < accounts.length; i++) {\n            require(accounts[i] != address(0));\n            if (!whiteList[accounts[i]]) {\n                whiteList[accounts[i]] = true;\n                emit AccountListed(accounts[i], true);\n            }\n        }\n    }\n    function removeWhiteList(address[] memory accounts) public override {\n        require(\n            accessControls.hasOperatorRole(msg.sender),\n            \"Whitelist.removeWhiteList: Sender must be operator\"\n        );        require(accounts.length != 0);\n        for (uint i = 0; i < accounts.length; i++) {\n            require(accounts[i] != address(0));\n            if (whiteList[accounts[i]]) {\n                delete whiteList[accounts[i]];\n                emit AccountListed(accounts[i], false);\n            }\n        }\n    }\n}\n",
  "sourceMap": "564:1674:13:-:0;;;792:28;;;;;;;;;;564:1674;;;;;;",
  "sourcePath": "contracts/Access/WhiteList.sol",
  "type": "contract"
}