{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accessControls",
      "outputs": [
        {
          "internalType": "contract MISOAccessControls",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_lpToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bonusEndBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bonusMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTips",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        }
      ],
      "name": "dev",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devaddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmTemplate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewards",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsPerBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_accessControls",
          "type": "address"
        }
      ],
      "name": "initFarm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "massUpdatePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "pendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accRewardsPerShare",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bonusEndBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bonusMultiplier",
          "type": "uint256"
        }
      ],
      "name": "setBonus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tips",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/GSN/Context.sol",
    "1": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/access/AccessControl.sol",
    "16": "contracts/Farms/MasterChef.sol",
    "3": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
    "4": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/IERC20.sol",
    "5": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/SafeERC20.sol",
    "6": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/Address.sol",
    "64": "interfaces/IMisoFarm.sol",
    "7": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/EnumerableSet.sol",
    "9": "contracts/Access/MISOAccessControls.sol"
  },
  "ast": {
    "absolutePath": "contracts/Farms/MasterChef.sol",
    "exportedSymbols": {
      "MasterChef": [
        3574
      ]
    },
    "id": 3575,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2616,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2617,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 18462,
        "src": "26:56:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 2618,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 18675,
        "src": "83:59:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "id": 2619,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 19070,
        "src": "143:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2620,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 18123,
        "src": "201:51:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2621,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 18384,
        "src": "253:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Access/MISOAccessControls.sol",
        "file": "../Access/MISOAccessControls.sol",
        "id": 2622,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 300,
        "src": "307:42:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMisoFarm.sol",
        "file": "../../interfaces/IMisoFarm.sol",
        "id": 2623,
        "nodeType": "ImportDirective",
        "scope": 3575,
        "sourceUnit": 19086,
        "src": "350:40:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2624,
              "name": "IMisoFarm",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19085,
              "src": "973:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMisoFarm_$19085",
                "typeString": "contract IMisoFarm"
              }
            },
            "id": 2625,
            "nodeType": "InheritanceSpecifier",
            "src": "973:9:16"
          }
        ],
        "contractDependencies": [
          19085
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3574,
        "linearizedBaseContracts": [
          3574,
          19085
        ],
        "name": "MasterChef",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2628,
            "libraryName": {
              "contractScope": null,
              "id": 2626,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18122,
              "src": "995:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$18122",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "989:27:16",
            "typeName": {
              "id": 2627,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1008:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2631,
            "libraryName": {
              "contractScope": null,
              "id": 2629,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18674,
              "src": "1027:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$18674",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1021:27:16",
            "typeName": {
              "contractScope": null,
              "id": 2630,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18461,
              "src": "1041:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$18461",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "748365ef",
            "id": 2633,
            "mutability": "mutable",
            "name": "accessControls",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "1054:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MISOAccessControls_$299",
              "typeString": "contract MISOAccessControls"
            },
            "typeName": {
              "contractScope": null,
              "id": 2632,
              "name": "MISOAccessControls",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 299,
              "src": "1054:18:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MISOAccessControls_$299",
                "typeString": "contract MISOAccessControls"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "MasterChef.UserInfo",
            "id": 2638,
            "members": [
              {
                "constant": false,
                "id": 2635,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2638,
                "src": "1154:14:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2634,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1154:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2637,
                "mutability": "mutable",
                "name": "rewardDebt",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2638,
                "src": "1227:18:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2636,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1227:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nodeType": "StructDefinition",
            "scope": 3574,
            "src": "1128:784:16",
            "visibility": "public"
          },
          {
            "canonicalName": "MasterChef.PoolInfo",
            "id": 2647,
            "members": [
              {
                "constant": false,
                "id": 2640,
                "mutability": "mutable",
                "name": "lpToken",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2647,
                "src": "1970:14:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$18461",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 2639,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 18461,
                  "src": "1970:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$18461",
                    "typeString": "contract IERC20"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2642,
                "mutability": "mutable",
                "name": "allocPoint",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2647,
                "src": "2037:18:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2641,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2037:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2644,
                "mutability": "mutable",
                "name": "lastRewardBlock",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2647,
                "src": "2156:23:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2643,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2156:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2646,
                "mutability": "mutable",
                "name": "accRewardsPerShare",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2647,
                "src": "2244:26:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2645,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2244:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nodeType": "StructDefinition",
            "scope": 3574,
            "src": "1944:389:16",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9ec5a894",
            "id": 2649,
            "mutability": "mutable",
            "name": "rewards",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "2364:21:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$18461",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2648,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18461,
              "src": "2364:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$18461",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d49e77cd",
            "id": 2651,
            "mutability": "mutable",
            "name": "devaddr",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "2411:22:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2650,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2411:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3a43824",
            "id": 2653,
            "mutability": "mutable",
            "name": "devPercentage",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "2486:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2652,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2486:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1a4e1e78",
            "id": 2655,
            "mutability": "mutable",
            "name": "tips",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "2551:19:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2654,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2551:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1aed6553",
            "id": 2657,
            "mutability": "mutable",
            "name": "bonusEndBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "2628:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2656,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2628:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5eeb6710",
            "id": 2659,
            "mutability": "mutable",
            "name": "rewardsPerBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "2702:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2658,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2702:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8b973a1",
            "id": 2661,
            "mutability": "mutable",
            "name": "bonusMultiplier",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "2787:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2660,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2787:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2c77f656",
            "id": 2664,
            "mutability": "constant",
            "name": "farmTemplate",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "2858:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2662,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2858:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 2663,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2897:1:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2666,
            "mutability": "mutable",
            "name": "initialised",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "2929:24:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2665,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2929:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "1526fe27",
            "id": 2669,
            "mutability": "mutable",
            "name": "poolInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "2986:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2647_storage_$dyn_storage",
              "typeString": "struct MasterChef.PoolInfo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 2667,
                "name": "PoolInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2647,
                "src": "2986:8:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                  "typeString": "struct MasterChef.PoolInfo"
                }
              },
              "id": 2668,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "2986:10:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2647_storage_$dyn_storage_ptr",
                "typeString": "struct MasterChef.PoolInfo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93f1a40b",
            "id": 2675,
            "mutability": "mutable",
            "name": "userInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "3066:66:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2638_storage_$_$",
              "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"
            },
            "typeName": {
              "id": 2674,
              "keyType": {
                "id": 2670,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3075:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3066:50:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2638_storage_$_$",
                "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"
              },
              "valueType": {
                "id": 2673,
                "keyType": {
                  "id": 2671,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3095:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3086:29:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2638_storage_$",
                  "typeString": "mapping(address => struct MasterChef.UserInfo)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 2672,
                  "name": "UserInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2638,
                  "src": "3106:8:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                    "typeString": "struct MasterChef.UserInfo"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "17caf6f1",
            "id": 2677,
            "mutability": "mutable",
            "name": "totalAllocPoint",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "3225:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2676,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3225:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "48cd4cb1",
            "id": 2679,
            "mutability": "mutable",
            "name": "startBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3574,
            "src": "3313:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2678,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3313:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2687,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2681,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2687,
                  "src": "3359:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2683,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2687,
                  "src": "3381:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3381:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2685,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2687,
                  "src": "3402:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3358:59:16"
            },
            "src": "3345:73:16"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2695,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2689,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2695,
                  "src": "3438:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3438:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2691,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2695,
                  "src": "3460:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3460:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2693,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2695,
                  "src": "3481:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3481:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3437:59:16"
            },
            "src": "3423:74:16"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2703,
            "name": "EmergencyWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2697,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2703,
                  "src": "3526:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3526:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2699,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2703,
                  "src": "3548:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3548:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2701,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2703,
                  "src": "3569:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3569:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3525:59:16"
            },
            "src": "3502:83:16"
          },
          {
            "baseFunctions": [
              19084
            ],
            "body": {
              "id": 2754,
              "nodeType": "Block",
              "src": "3779:299:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3797:12:16",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 2718,
                          "name": "initialised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2666,
                          "src": "3798:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2717,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3789:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3789:21:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2721,
                  "nodeType": "ExpressionStatement",
                  "src": "3789:21:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2722,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2649,
                      "src": "3820:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$18461",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2724,
                          "name": "_rewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2705,
                          "src": "3837:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2723,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18461,
                        "src": "3830:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$18461_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3830:16:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$18461",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3820:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$18461",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2727,
                  "nodeType": "ExpressionStatement",
                  "src": "3820:26:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2728,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2677,
                      "src": "3856:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3874:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3856:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2731,
                  "nodeType": "ExpressionStatement",
                  "src": "3856:19:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2732,
                      "name": "initialised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2666,
                      "src": "3885:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3899:4:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3885:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2735,
                  "nodeType": "ExpressionStatement",
                  "src": "3885:18:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2736,
                      "name": "rewardsPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2659,
                      "src": "3913:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2737,
                      "name": "_rewardsPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2707,
                      "src": "3931:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3913:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2739,
                  "nodeType": "ExpressionStatement",
                  "src": "3913:34:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2740,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2679,
                      "src": "3957:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2741,
                      "name": "_startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2709,
                      "src": "3970:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3957:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2743,
                  "nodeType": "ExpressionStatement",
                  "src": "3957:24:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2744,
                      "name": "devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2651,
                      "src": "3991:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2745,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2711,
                      "src": "4001:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3991:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2747,
                  "nodeType": "ExpressionStatement",
                  "src": "3991:18:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2748,
                      "name": "accessControls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2633,
                      "src": "4019:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$299",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2750,
                          "name": "_accessControls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2713,
                          "src": "4055:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2749,
                        "name": "MISOAccessControls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4036:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MISOAccessControls_$299_$",
                          "typeString": "type(contract MISOAccessControls)"
                        }
                      },
                      "id": 2751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4036:35:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$299",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "src": "4019:52:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MISOAccessControls_$299",
                      "typeString": "contract MISOAccessControls"
                    }
                  },
                  "id": 2753,
                  "nodeType": "ExpressionStatement",
                  "src": "4019:52:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5befdbca",
            "id": 2755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initFarm",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2715,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3770:8:16"
            },
            "parameters": {
              "id": 2714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2705,
                  "mutability": "mutable",
                  "name": "_rewards",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2755,
                  "src": "3618:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3618:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2707,
                  "mutability": "mutable",
                  "name": "_rewardsPerBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2755,
                  "src": "3644:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3644:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2709,
                  "mutability": "mutable",
                  "name": "_startBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2755,
                  "src": "3678:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3678:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2711,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2755,
                  "src": "3707:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3707:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2713,
                  "mutability": "mutable",
                  "name": "_accessControls",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2755,
                  "src": "3733:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3733:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3608:154:16"
            },
            "returnParameters": {
              "id": 2716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3779:0:16"
            },
            "scope": 3574,
            "src": "3591:487:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2779,
              "nodeType": "Block",
              "src": "4181:224:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2765,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4240:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4240:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2763,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2633,
                            "src": "4212:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$299",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 2764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasAdminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 112,
                          "src": "4212:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 2767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4212:39:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6173746572436865662e6164643a2053656e646572206d7573742062652061646d696e",
                        "id": 2768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4265:38:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f84fe4d16e0c4dc801ea14413fd557930cc85137075aa9b46ca2dcd28bc59e0",
                          "typeString": "literal_string \"MasterChef.add: Sender must be admin\""
                        },
                        "value": "MasterChef.add: Sender must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f84fe4d16e0c4dc801ea14413fd557930cc85137075aa9b46ca2dcd28bc59e0",
                          "typeString": "literal_string \"MasterChef.add: Sender must be admin\""
                        }
                      ],
                      "id": 2762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4191:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4191:122:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2770,
                  "nodeType": "ExpressionStatement",
                  "src": "4191:122:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2771,
                      "name": "bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2657,
                      "src": "4324:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2772,
                      "name": "_bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2757,
                      "src": "4340:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4324:30:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2774,
                  "nodeType": "ExpressionStatement",
                  "src": "4324:30:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2775,
                      "name": "bonusMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2661,
                      "src": "4364:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2776,
                      "name": "_bonusMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2759,
                      "src": "4382:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4364:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2778,
                  "nodeType": "ExpressionStatement",
                  "src": "4364:34:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "037c99b0",
            "id": 2780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBonus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2757,
                  "mutability": "mutable",
                  "name": "_bonusEndBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2780,
                  "src": "4111:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4111:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2759,
                  "mutability": "mutable",
                  "name": "_bonusMultiplier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2780,
                  "src": "4143:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4143:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4101:72:16"
            },
            "returnParameters": {
              "id": 2761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4181:0:16"
            },
            "scope": 3574,
            "src": "4084:321:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2788,
              "nodeType": "Block",
              "src": "4465:39:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2785,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "4482:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2647_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4482:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2784,
                  "id": 2787,
                  "nodeType": "Return",
                  "src": "4475:22:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "081e3eda",
            "id": 2789,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4430:2:16"
            },
            "returnParameters": {
              "id": 2784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2783,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2789,
                  "src": "4456:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4456:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4455:9:16"
            },
            "scope": 3574,
            "src": "4411:93:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2848,
              "nodeType": "Block",
              "src": "4751:601:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2801,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4810:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4810:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2799,
                              "name": "accessControls",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2633,
                              "src": "4782:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MISOAccessControls_$299",
                                "typeString": "contract MISOAccessControls"
                              }
                            },
                            "id": 2800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasAdminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 112,
                            "src": "4782:27:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 2803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4782:39:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2806,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4861:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4861:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2804,
                              "name": "accessControls",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2633,
                              "src": "4825:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MISOAccessControls_$299",
                                "typeString": "contract MISOAccessControls"
                              }
                            },
                            "id": 2805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasSmartContractRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 140,
                            "src": "4825:35:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 2808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4825:47:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4782:90:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6173746572436865662e6164643a2053656e646572206d7573742062652061646d696e",
                        "id": 2810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4886:38:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f84fe4d16e0c4dc801ea14413fd557930cc85137075aa9b46ca2dcd28bc59e0",
                          "typeString": "literal_string \"MasterChef.add: Sender must be admin\""
                        },
                        "value": "MasterChef.add: Sender must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f84fe4d16e0c4dc801ea14413fd557930cc85137075aa9b46ca2dcd28bc59e0",
                          "typeString": "literal_string \"MasterChef.add: Sender must be admin\""
                        }
                      ],
                      "id": 2798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4761:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4761:173:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2812,
                  "nodeType": "ExpressionStatement",
                  "src": "4761:173:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2813,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2795,
                    "src": "4948:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2818,
                  "nodeType": "IfStatement",
                  "src": "4944:59:16",
                  "trueBody": {
                    "id": 2817,
                    "nodeType": "Block",
                    "src": "4961:42:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2814,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3067,
                            "src": "4975:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4975:17:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2816,
                        "nodeType": "ExpressionStatement",
                        "src": "4975:17:16"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2820,
                      "mutability": "mutable",
                      "name": "lastRewardBlock",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2848,
                      "src": "5012:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2819,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5012:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2829,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2821,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5038:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5038:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2823,
                        "name": "startBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2679,
                        "src": "5053:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5038:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 2827,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2679,
                      "src": "5081:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5038:53:16",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2825,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5066:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5066:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5012:79:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2830,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2677,
                      "src": "5101:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2833,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2791,
                          "src": "5139:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2831,
                          "name": "totalAllocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2677,
                          "src": "5119:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17955,
                        "src": "5119:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5119:32:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5101:50:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2836,
                  "nodeType": "ExpressionStatement",
                  "src": "5101:50:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2841,
                            "name": "_lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2793,
                            "src": "5207:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$18461",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2842,
                            "name": "_allocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2791,
                            "src": "5241:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2843,
                            "name": "lastRewardBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2820,
                            "src": "5283:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5332:1:16",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$18461",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2840,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2647,
                          "src": "5175:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$2647_storage_ptr_$",
                            "typeString": "type(struct MasterChef.PoolInfo storage pointer)"
                          }
                        },
                        "id": 2845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "lpToken",
                          "allocPoint",
                          "lastRewardBlock",
                          "accRewardsPerShare"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "5175:169:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2647_memory_ptr",
                          "typeString": "struct MasterChef.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$2647_memory_ptr",
                          "typeString": "struct MasterChef.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2837,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2669,
                        "src": "5161:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2647_storage_$dyn_storage",
                          "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 2839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5161:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$2647_storage_$returns$__$",
                        "typeString": "function (struct MasterChef.PoolInfo storage ref)"
                      }
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5161:184:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2847,
                  "nodeType": "ExpressionStatement",
                  "src": "5161:184:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d69de7e7",
            "id": 2849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2791,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2849,
                  "src": "4687:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4687:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2793,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2849,
                  "src": "4708:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$18461",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2792,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18461,
                    "src": "4708:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$18461",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2795,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2849,
                  "src": "4725:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2794,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4725:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4686:56:16"
            },
            "returnParameters": {
              "id": 2797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4751:0:16"
            },
            "scope": 3574,
            "src": "4669:683:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2893,
              "nodeType": "Block",
              "src": "5522:353:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2861,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5584:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5584:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2859,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2633,
                            "src": "5553:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$299",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 2860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasOperatorRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 154,
                          "src": "5553:30:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 2863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5553:42:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6173746572436865662e7365743a2053656e646572206d757374206265206f70657261746f72",
                        "id": 2864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5609:41:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6b1719cb12154edaa2dcd3dd718becebff50b66bdd523c1f446822567358dc4",
                          "typeString": "literal_string \"MasterChef.set: Sender must be operator\""
                        },
                        "value": "MasterChef.set: Sender must be operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6b1719cb12154edaa2dcd3dd718becebff50b66bdd523c1f446822567358dc4",
                          "typeString": "literal_string \"MasterChef.set: Sender must be operator\""
                        }
                      ],
                      "id": 2858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5532:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5532:128:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2866,
                  "nodeType": "ExpressionStatement",
                  "src": "5532:128:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2867,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2855,
                    "src": "5674:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2872,
                  "nodeType": "IfStatement",
                  "src": "5670:59:16",
                  "trueBody": {
                    "id": 2871,
                    "nodeType": "Block",
                    "src": "5687:42:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2868,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3067,
                            "src": "5701:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5701:17:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2870,
                        "nodeType": "ExpressionStatement",
                        "src": "5701:17:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2873,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2677,
                      "src": "5738:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2882,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2853,
                          "src": "5807:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2876,
                                  "name": "poolInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2669,
                                  "src": "5776:8:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2647_storage_$dyn_storage",
                                    "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 2878,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2877,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2851,
                                  "src": "5785:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5776:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2647_storage",
                                  "typeString": "struct MasterChef.PoolInfo storage ref"
                                }
                              },
                              "id": 2879,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allocPoint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2642,
                              "src": "5776:25:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2874,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2677,
                              "src": "5756:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17972,
                            "src": "5756:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5756:46:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17955,
                        "src": "5756:50:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5756:63:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5738:81:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2885,
                  "nodeType": "ExpressionStatement",
                  "src": "5738:81:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2886,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2669,
                          "src": "5829:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2647_storage_$dyn_storage",
                            "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 2888,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2887,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2851,
                          "src": "5838:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5829:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2647_storage",
                          "typeString": "struct MasterChef.PoolInfo storage ref"
                        }
                      },
                      "id": 2889,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocPoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2642,
                      "src": "5829:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2890,
                      "name": "_allocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2853,
                      "src": "5857:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5829:39:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2892,
                  "nodeType": "ExpressionStatement",
                  "src": "5829:39:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "64482f79",
            "id": 2894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2894,
                  "src": "5461:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5461:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2853,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2894,
                  "src": "5475:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5475:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2855,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2894,
                  "src": "5496:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2854,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5496:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5460:53:16"
            },
            "returnParameters": {
              "id": 2857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5522:0:16"
            },
            "scope": 3574,
            "src": "5448:427:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2941,
              "nodeType": "Block",
              "src": "6030:330:16",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2903,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2898,
                      "src": "6044:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2904,
                      "name": "bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2657,
                      "src": "6051:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6044:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2915,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2896,
                        "src": "6143:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2916,
                        "name": "bonusEndBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2657,
                        "src": "6152:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6143:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 2938,
                      "nodeType": "Block",
                      "src": "6219:135:16",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2934,
                                    "name": "bonusEndBlock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2657,
                                    "src": "6315:13:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2932,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2898,
                                    "src": "6307:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2933,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17972,
                                  "src": "6307:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6307:22:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2929,
                                    "name": "bonusMultiplier",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2661,
                                    "src": "6269:15:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 2926,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2896,
                                        "src": "6258:5:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2924,
                                        "name": "bonusEndBlock",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2657,
                                        "src": "6240:13:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2925,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 17972,
                                      "src": "6240:17:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2927,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6240:24:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2928,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 18035,
                                  "src": "6240:28:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6240:45:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17955,
                              "src": "6240:49:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6240:103:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 2902,
                          "id": 2937,
                          "nodeType": "Return",
                          "src": "6233:110:16"
                        }
                      ]
                    },
                    "id": 2939,
                    "nodeType": "IfStatement",
                    "src": "6139:215:16",
                    "trueBody": {
                      "id": 2923,
                      "nodeType": "Block",
                      "src": "6167:46:16",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2920,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2896,
                                "src": "6196:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2918,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2898,
                                "src": "6188:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17972,
                              "src": "6188:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6188:14:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 2902,
                          "id": 2922,
                          "nodeType": "Return",
                          "src": "6181:21:16"
                        }
                      ]
                    }
                  },
                  "id": 2940,
                  "nodeType": "IfStatement",
                  "src": "6040:314:16",
                  "trueBody": {
                    "id": 2914,
                    "nodeType": "Block",
                    "src": "6066:67:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2911,
                              "name": "bonusMultiplier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2661,
                              "src": "6106:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2908,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2896,
                                  "src": "6095:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2906,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2898,
                                  "src": "6087:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17972,
                                "src": "6087:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6087:14:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18035,
                            "src": "6087:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6087:35:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2902,
                        "id": 2913,
                        "nodeType": "Return",
                        "src": "6080:42:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8dbb1e3a",
            "id": 2942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMultiplier",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2896,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2942,
                  "src": "5972:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5972:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2898,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2942,
                  "src": "5987:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5987:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5971:28:16"
            },
            "returnParameters": {
              "id": 2902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2901,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2942,
                  "src": "6021:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6021:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6020:9:16"
            },
            "scope": 3574,
            "src": "5949:411:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3041,
              "nodeType": "Block",
              "src": "6507:688:16",
              "statements": [
                {
                  "assignments": [
                    2952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2952,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3041,
                      "src": "6517:21:16",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2951,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2647,
                        "src": "6517:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2956,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2953,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "6541:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2647_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2955,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2954,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2944,
                      "src": "6550:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6541:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2647_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6517:38:16"
                },
                {
                  "assignments": [
                    2958
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2958,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3041,
                      "src": "6565:21:16",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2957,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2638,
                        "src": "6565:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2964,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2959,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2675,
                        "src": "6589:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2638_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 2961,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2960,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2944,
                        "src": "6598:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6589:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2638_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 2963,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2962,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2946,
                      "src": "6604:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6589:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2638_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6565:45:16"
                },
                {
                  "assignments": [
                    2966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2966,
                      "mutability": "mutable",
                      "name": "accRewardsPerShare",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3041,
                      "src": "6620:26:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2965,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6620:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2969,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2967,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2952,
                      "src": "6649:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo storage pointer"
                      }
                    },
                    "id": 2968,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accRewardsPerShare",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2646,
                    "src": "6649:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6620:52:16"
                },
                {
                  "assignments": [
                    2971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2971,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3041,
                      "src": "6682:16:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2970,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6682:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2980,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2977,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6732:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$3574",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$3574",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 2976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6724:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2975,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6724:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6724:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2972,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2952,
                          "src": "6701:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2973,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2640,
                        "src": "6701:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$18461",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18400,
                      "src": "6701:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6701:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6682:56:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2981,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6752:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6752:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2983,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2952,
                          "src": "6767:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2984,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2644,
                        "src": "6767:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6752:35:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2986,
                        "name": "lpSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2971,
                        "src": "6791:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6803:1:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6791:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6752:52:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3027,
                  "nodeType": "IfStatement",
                  "src": "6748:358:16",
                  "trueBody": {
                    "id": 3026,
                    "nodeType": "Block",
                    "src": "6806:300:16",
                    "statements": [
                      {
                        "assignments": [
                          2991
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2991,
                            "mutability": "mutable",
                            "name": "multiplier",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3026,
                            "src": "6820:18:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2990,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6820:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2998,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2993,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2952,
                                "src": "6855:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 2994,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRewardBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2644,
                              "src": "6855:20:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2995,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6877:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6877:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2992,
                            "name": "getMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2942,
                            "src": "6841:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 2997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6841:49:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6820:70:16"
                      },
                      {
                        "assignments": [
                          3000
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3000,
                            "mutability": "mutable",
                            "name": "rewardsAccum",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3026,
                            "src": "6904:20:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2999,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6904:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3012,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3010,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2677,
                              "src": "6984:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3006,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2952,
                                    "src": "6963:4:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                                      "typeString": "struct MasterChef.PoolInfo storage pointer"
                                    }
                                  },
                                  "id": 3007,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allocPoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2642,
                                  "src": "6963:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 3003,
                                      "name": "rewardsPerBlock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2659,
                                      "src": "6942:15:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3001,
                                      "name": "multiplier",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2991,
                                      "src": "6927:10:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3002,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18035,
                                    "src": "6927:14:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 3004,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6927:31:16",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 18035,
                                "src": "6927:35:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6927:52:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18052,
                            "src": "6927:56:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6927:73:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6904:96:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3013,
                            "name": "accRewardsPerShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2966,
                            "src": "7014:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3021,
                                    "name": "lpSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2971,
                                    "src": "7085:8:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "31653132",
                                        "id": 3018,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7075:4:16",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        },
                                        "value": "1e12"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 3016,
                                        "name": "rewardsAccum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3000,
                                        "src": "7058:12:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 3017,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 18035,
                                      "src": "7058:16:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 3019,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7058:22:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 18052,
                                  "src": "7058:26:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3022,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7058:36:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3014,
                                "name": "accRewardsPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2966,
                                "src": "7035:18:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17955,
                              "src": "7035:22:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7035:60:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7014:81:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3025,
                        "nodeType": "ExpressionStatement",
                        "src": "7014:81:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3037,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2958,
                          "src": "7172:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                            "typeString": "struct MasterChef.UserInfo storage pointer"
                          }
                        },
                        "id": 3038,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2637,
                        "src": "7172:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 3034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7162:4:16",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3031,
                                "name": "accRewardsPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2966,
                                "src": "7138:18:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3028,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2958,
                                  "src": "7122:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 3029,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2635,
                                "src": "7122:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18035,
                              "src": "7122:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7122:35:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18052,
                          "src": "7122:39:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7122:45:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17972,
                      "src": "7122:49:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7122:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2950,
                  "id": 3040,
                  "nodeType": "Return",
                  "src": "7115:73:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d18df53c",
            "id": 3042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingRewards",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2944,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3042,
                  "src": "6446:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6446:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2946,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3042,
                  "src": "6460:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6460:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6445:29:16"
            },
            "returnParameters": {
              "id": 2950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2949,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3042,
                  "src": "6498:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6498:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6497:9:16"
            },
            "scope": 3574,
            "src": "6422:773:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3066,
              "nodeType": "Block",
              "src": "7309:141:16",
              "statements": [
                {
                  "assignments": [
                    3046
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3046,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3066,
                      "src": "7319:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3045,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7319:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3049,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3047,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "7336:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2647_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "7336:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7319:32:16"
                },
                {
                  "body": {
                    "id": 3064,
                    "nodeType": "Block",
                    "src": "7404:40:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3061,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3051,
                              "src": "7429:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3060,
                            "name": "updatePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3175,
                            "src": "7418:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7418:15:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3063,
                        "nodeType": "ExpressionStatement",
                        "src": "7418:15:16"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3054,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3051,
                      "src": "7383:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3055,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "7389:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7383:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3065,
                  "initializationExpression": {
                    "assignments": [
                      3051
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3051,
                        "mutability": "mutable",
                        "name": "pid",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 3065,
                        "src": "7366:11:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3050,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7366:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 3053,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7380:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7366:15:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 3058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7397:5:16",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 3057,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3051,
                        "src": "7399:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3059,
                    "nodeType": "ExpressionStatement",
                    "src": "7397:5:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "7361:83:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "630b5ba1",
            "id": 3067,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "massUpdatePools",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7299:2:16"
            },
            "returnParameters": {
              "id": 3044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7309:0:16"
            },
            "scope": 3574,
            "src": "7275:175:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3174,
              "nodeType": "Block",
              "src": "7564:758:16",
              "statements": [
                {
                  "assignments": [
                    3073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3073,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3174,
                      "src": "7574:21:16",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3072,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2647,
                        "src": "7574:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3077,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3074,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "7598:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2647_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3076,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3075,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3069,
                      "src": "7607:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7598:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2647_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7574:38:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3078,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7626:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7626:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3080,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3073,
                        "src": "7642:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                        }
                      },
                      "id": 3081,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2644,
                      "src": "7642:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7626:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3085,
                  "nodeType": "IfStatement",
                  "src": "7622:73:16",
                  "trueBody": {
                    "id": 3084,
                    "nodeType": "Block",
                    "src": "7664:31:16",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 3071,
                        "id": 3083,
                        "nodeType": "Return",
                        "src": "7678:7:16"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3087
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3087,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3174,
                      "src": "7704:16:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3086,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7704:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3096,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3093,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7754:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$3574",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$3574",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 3092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7746:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3091,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7746:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7746:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3088,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3073,
                          "src": "7723:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 3089,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2640,
                        "src": "7723:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$18461",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18400,
                      "src": "7723:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7723:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7704:56:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3097,
                      "name": "lpSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3087,
                      "src": "7774:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7786:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7774:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3109,
                  "nodeType": "IfStatement",
                  "src": "7770:99:16",
                  "trueBody": {
                    "id": 3108,
                    "nodeType": "Block",
                    "src": "7789:80:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3100,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3073,
                              "src": "7803:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                                "typeString": "struct MasterChef.PoolInfo storage pointer"
                              }
                            },
                            "id": 3102,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastRewardBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2644,
                            "src": "7803:20:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3103,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7826:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7826:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7803:35:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3106,
                        "nodeType": "ExpressionStatement",
                        "src": "7803:35:16"
                      },
                      {
                        "expression": null,
                        "functionReturnParameters": 3071,
                        "id": 3107,
                        "nodeType": "Return",
                        "src": "7852:7:16"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3111,
                      "mutability": "mutable",
                      "name": "multiplier",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3174,
                      "src": "7878:18:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7878:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3118,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3113,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3073,
                          "src": "7913:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 3114,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2644,
                        "src": "7913:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3115,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7935:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7935:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3112,
                      "name": "getMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2942,
                      "src": "7899:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 3117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7899:49:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7878:70:16"
                },
                {
                  "assignments": [
                    3120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3120,
                      "mutability": "mutable",
                      "name": "rewardsAccum",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3174,
                      "src": "7958:20:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3119,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7958:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3132,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3130,
                        "name": "totalAllocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2677,
                        "src": "8038:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3126,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3073,
                              "src": "8017:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                                "typeString": "struct MasterChef.PoolInfo storage pointer"
                              }
                            },
                            "id": 3127,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allocPoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2642,
                            "src": "8017:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3123,
                                "name": "rewardsPerBlock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2659,
                                "src": "7996:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3121,
                                "name": "multiplier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3111,
                                "src": "7981:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18035,
                              "src": "7981:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7981:31:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18035,
                          "src": "7981:35:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7981:52:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18052,
                      "src": "7981:56:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7981:73:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7958:96:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3133,
                      "name": "devPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2653,
                      "src": "8068:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8084:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8068:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3150,
                  "nodeType": "IfStatement",
                  "src": "8064:106:16",
                  "trueBody": {
                    "id": 3149,
                    "nodeType": "Block",
                    "src": "8087:83:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3136,
                            "name": "tips",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2655,
                            "src": "8101:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31303030",
                                    "id": 3144,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8153:4:16",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 3141,
                                        "name": "devPercentage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2653,
                                        "src": "8134:13:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 3139,
                                        "name": "rewardsAccum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3120,
                                        "src": "8117:12:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 3140,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 18035,
                                      "src": "8117:16:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 3142,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8117:31:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 18052,
                                  "src": "8117:35:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8117:41:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3137,
                                "name": "tips",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2655,
                                "src": "8108:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17955,
                              "src": "8108:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8108:51:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8101:58:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3148,
                        "nodeType": "ExpressionStatement",
                        "src": "8101:58:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3151,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3073,
                        "src": "8179:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                        }
                      },
                      "id": 3153,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accRewardsPerShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2646,
                      "src": "8179:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3162,
                              "name": "lpSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3087,
                              "src": "8260:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 3159,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8250:4:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3157,
                                  "name": "rewardsAccum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3120,
                                  "src": "8233:12:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 18035,
                                "src": "8233:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8233:22:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18052,
                            "src": "8233:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8233:36:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3154,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3073,
                            "src": "8205:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                              "typeString": "struct MasterChef.PoolInfo storage pointer"
                            }
                          },
                          "id": 3155,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accRewardsPerShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2646,
                          "src": "8205:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17955,
                        "src": "8205:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8205:65:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8179:91:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3166,
                  "nodeType": "ExpressionStatement",
                  "src": "8179:91:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3167,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3073,
                        "src": "8280:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                        }
                      },
                      "id": 3169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2644,
                      "src": "8280:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3170,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8303:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8303:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8280:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3173,
                  "nodeType": "ExpressionStatement",
                  "src": "8280:35:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "51eb05a6",
            "id": 3175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3069,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3175,
                  "src": "7543:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7543:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7542:14:16"
            },
            "returnParameters": {
              "id": 3071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7564:0:16"
            },
            "scope": 3574,
            "src": "7523:799:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3287,
              "nodeType": "Block",
              "src": "8446:690:16",
              "statements": [
                {
                  "assignments": [
                    3183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3183,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3287,
                      "src": "8456:21:16",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3182,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2647,
                        "src": "8456:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3187,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3184,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "8480:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2647_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3186,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3185,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3177,
                      "src": "8489:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8480:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2647_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8456:38:16"
                },
                {
                  "assignments": [
                    3189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3189,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3287,
                      "src": "8504:21:16",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3188,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2638,
                        "src": "8504:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3196,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3190,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2675,
                        "src": "8528:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2638_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 3192,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3191,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3177,
                        "src": "8537:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8528:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2638_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 3195,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3193,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8543:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8543:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8528:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2638_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8504:50:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3198,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3177,
                        "src": "8575:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3197,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3175,
                      "src": "8564:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8564:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3200,
                  "nodeType": "ExpressionStatement",
                  "src": "8564:16:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3201,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3189,
                        "src": "8594:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 3202,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2635,
                      "src": "8594:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8608:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8594:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3233,
                  "nodeType": "IfStatement",
                  "src": "8590:237:16",
                  "trueBody": {
                    "id": 3232,
                    "nodeType": "Block",
                    "src": "8611:216:16",
                    "statements": [
                      {
                        "assignments": [
                          3206
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3206,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3232,
                            "src": "8625:15:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3205,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8625:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3220,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3217,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3189,
                                "src": "8698:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                                  "typeString": "struct MasterChef.UserInfo storage pointer"
                                }
                              },
                              "id": 3218,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardDebt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2637,
                              "src": "8698:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 3214,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8688:4:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 3210,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3183,
                                        "src": "8659:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                                        }
                                      },
                                      "id": 3211,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "accRewardsPerShare",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2646,
                                      "src": "8659:23:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 3207,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3189,
                                        "src": "8643:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                                          "typeString": "struct MasterChef.UserInfo storage pointer"
                                        }
                                      },
                                      "id": 3208,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2635,
                                      "src": "8643:11:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18035,
                                    "src": "8643:15:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 3212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8643:40:16",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 18052,
                                "src": "8643:44:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8643:50:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17972,
                            "src": "8643:54:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8643:71:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8625:89:16"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3221,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3206,
                            "src": "8731:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8741:1:16",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8731:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3231,
                        "nodeType": "IfStatement",
                        "src": "8728:89:16",
                        "trueBody": {
                          "id": 3230,
                          "nodeType": "Block",
                          "src": "8744:73:16",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 3225,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8782:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3226,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8782:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 3227,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3206,
                                    "src": "8794:7:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3224,
                                  "name": "safeRewardsTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3495,
                                  "src": "8762:19:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 3228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8762:40:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3229,
                              "nodeType": "ExpressionStatement",
                              "src": "8762:40:16"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3234,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3179,
                      "src": "8839:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8849:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8839:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3265,
                  "nodeType": "IfStatement",
                  "src": "8836:167:16",
                  "trueBody": {
                    "id": 3264,
                    "nodeType": "Block",
                    "src": "8852:151:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3244,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8904:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "8904:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 3243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8896:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3242,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8896:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8896:19:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3249,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8925:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MasterChef_$3574",
                                    "typeString": "contract MasterChef"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MasterChef_$3574",
                                    "typeString": "contract MasterChef"
                                  }
                                ],
                                "id": 3248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8917:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3247,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8917:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8917:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3251,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3179,
                              "src": "8932:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3237,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3183,
                                "src": "8866:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 3240,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2640,
                              "src": "8866:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$18461",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18520,
                            "src": "8866:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$18461_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$18461_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 3252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8866:74:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3253,
                        "nodeType": "ExpressionStatement",
                        "src": "8866:74:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3254,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3189,
                              "src": "8954:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                                "typeString": "struct MasterChef.UserInfo storage pointer"
                              }
                            },
                            "id": 3256,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2635,
                            "src": "8954:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3260,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3179,
                                "src": "8984:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3257,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3189,
                                  "src": "8968:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 3258,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2635,
                                "src": "8968:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17955,
                              "src": "8968:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8968:24:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8954:38:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3263,
                        "nodeType": "ExpressionStatement",
                        "src": "8954:38:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3266,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3189,
                        "src": "9012:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 3268,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2637,
                      "src": "9012:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 3276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9075:4:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3272,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3183,
                                "src": "9046:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 3273,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accRewardsPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2646,
                              "src": "9046:23:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3269,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3189,
                                "src": "9030:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                                  "typeString": "struct MasterChef.UserInfo storage pointer"
                                }
                              },
                              "id": 3270,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2635,
                              "src": "9030:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18035,
                            "src": "9030:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9030:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18052,
                        "src": "9030:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9030:50:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9012:68:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3279,
                  "nodeType": "ExpressionStatement",
                  "src": "9012:68:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9103:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9103:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3283,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3177,
                        "src": "9115:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3284,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "9121:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3280,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2687,
                      "src": "9095:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9095:34:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3286,
                  "nodeType": "EmitStatement",
                  "src": "9090:39:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e2bbb158",
            "id": 3288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3177,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3288,
                  "src": "8408:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8408:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3179,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3288,
                  "src": "8422:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8422:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8407:31:16"
            },
            "returnParameters": {
              "id": 3181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8446:0:16"
            },
            "scope": 3574,
            "src": "8391:745:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3398,
              "nodeType": "Block",
              "src": "9241:678:16",
              "statements": [
                {
                  "assignments": [
                    3296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3296,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3398,
                      "src": "9251:21:16",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3295,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2647,
                        "src": "9251:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3300,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3297,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "9275:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2647_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3299,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3298,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3290,
                      "src": "9284:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9275:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2647_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9251:38:16"
                },
                {
                  "assignments": [
                    3302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3302,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3398,
                      "src": "9299:21:16",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3301,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2638,
                        "src": "9299:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3309,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3303,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2675,
                        "src": "9323:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2638_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 3305,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3304,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3290,
                        "src": "9332:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9323:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2638_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 3308,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3306,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9338:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9338:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9323:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2638_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9299:50:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3311,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3302,
                            "src": "9367:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                              "typeString": "struct MasterChef.UserInfo storage pointer"
                            }
                          },
                          "id": 3312,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2635,
                          "src": "9367:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3313,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3292,
                          "src": "9382:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9367:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77697468647261773a206e6f7420676f6f64",
                        "id": 3315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9391:20:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        },
                        "value": "withdraw: not good"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        }
                      ],
                      "id": 3310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9359:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9359:53:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3317,
                  "nodeType": "ExpressionStatement",
                  "src": "9359:53:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3319,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3290,
                        "src": "9433:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3318,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3175,
                      "src": "9422:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9422:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3321,
                  "nodeType": "ExpressionStatement",
                  "src": "9422:16:16"
                },
                {
                  "assignments": [
                    3323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3323,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3398,
                      "src": "9448:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3322,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9448:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3337,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3334,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3302,
                          "src": "9521:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                            "typeString": "struct MasterChef.UserInfo storage pointer"
                          }
                        },
                        "id": 3335,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2637,
                        "src": "9521:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 3331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9511:4:16",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3327,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3296,
                                  "src": "9482:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                                    "typeString": "struct MasterChef.PoolInfo storage pointer"
                                  }
                                },
                                "id": 3328,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accRewardsPerShare",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2646,
                                "src": "9482:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3324,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3302,
                                  "src": "9466:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 3325,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2635,
                                "src": "9466:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18035,
                              "src": "9466:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9466:40:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18052,
                          "src": "9466:44:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9466:50:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17972,
                      "src": "9466:54:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9466:71:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9448:89:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3338,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3323,
                      "src": "9550:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9560:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9550:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3348,
                  "nodeType": "IfStatement",
                  "src": "9547:81:16",
                  "trueBody": {
                    "id": 3347,
                    "nodeType": "Block",
                    "src": "9563:65:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3342,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9597:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9597:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3344,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3323,
                              "src": "9609:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3341,
                            "name": "safeRewardsTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3495,
                            "src": "9577:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9577:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3346,
                        "nodeType": "ExpressionStatement",
                        "src": "9577:40:16"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3349,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3292,
                      "src": "9640:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9650:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9640:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3376,
                  "nodeType": "IfStatement",
                  "src": "9637:148:16",
                  "trueBody": {
                    "id": 3375,
                    "nodeType": "Block",
                    "src": "9653:132:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3352,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3302,
                              "src": "9667:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                                "typeString": "struct MasterChef.UserInfo storage pointer"
                              }
                            },
                            "id": 3354,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2635,
                            "src": "9667:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3358,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3292,
                                "src": "9697:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 3355,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3302,
                                  "src": "9681:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 3356,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2635,
                                "src": "9681:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17972,
                              "src": "9681:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9681:24:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9667:38:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3361,
                        "nodeType": "ExpressionStatement",
                        "src": "9667:38:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3369,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9753:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "9753:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 3368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9745:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3367,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9745:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9745:19:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3372,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3292,
                              "src": "9766:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3362,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3296,
                                "src": "9719:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 3365,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2640,
                              "src": "9719:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$18461",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18495,
                            "src": "9719:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$18461_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$18461_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9719:55:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3374,
                        "nodeType": "ExpressionStatement",
                        "src": "9719:55:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3377,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "9794:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 3379,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2637,
                      "src": "9794:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 3387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9857:4:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3383,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3296,
                                "src": "9828:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 3384,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accRewardsPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2646,
                              "src": "9828:23:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3380,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3302,
                                "src": "9812:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                                  "typeString": "struct MasterChef.UserInfo storage pointer"
                                }
                              },
                              "id": 3381,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2635,
                              "src": "9812:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18035,
                            "src": "9812:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9812:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18052,
                        "src": "9812:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9812:50:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9794:68:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3390,
                  "nodeType": "ExpressionStatement",
                  "src": "9794:68:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3392,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9886:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9886:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3394,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3290,
                        "src": "9898:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3395,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3292,
                        "src": "9904:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3391,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2695,
                      "src": "9877:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9877:35:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3397,
                  "nodeType": "EmitStatement",
                  "src": "9872:40:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "441a3e70",
            "id": 3399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3290,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3399,
                  "src": "9203:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9203:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3292,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3399,
                  "src": "9217:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9217:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9202:31:16"
            },
            "returnParameters": {
              "id": 3294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9241:0:16"
            },
            "scope": 3574,
            "src": "9185:734:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3456,
              "nodeType": "Block",
              "src": "10035:329:16",
              "statements": [
                {
                  "assignments": [
                    3405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3405,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3456,
                      "src": "10045:21:16",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3404,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2647,
                        "src": "10045:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3409,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3406,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "10069:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2647_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 3408,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3407,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3401,
                      "src": "10078:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10069:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2647_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10045:38:16"
                },
                {
                  "assignments": [
                    3411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3411,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3456,
                      "src": "10093:21:16",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3410,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2638,
                        "src": "10093:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3418,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3412,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2675,
                        "src": "10117:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2638_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 3414,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3413,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3401,
                        "src": "10126:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10117:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2638_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 3417,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3415,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10132:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "10132:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10117:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2638_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10093:50:16"
                },
                {
                  "assignments": [
                    3420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3420,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3456,
                      "src": "10153:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3419,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10153:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3423,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3421,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3411,
                      "src": "10170:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo storage pointer"
                      }
                    },
                    "id": 3422,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2635,
                    "src": "10170:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10153:28:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3424,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3411,
                        "src": "10191:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 3426,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2635,
                      "src": "10191:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10205:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10191:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3429,
                  "nodeType": "ExpressionStatement",
                  "src": "10191:15:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3430,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3411,
                        "src": "10216:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2638_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 3432,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2637,
                      "src": "10216:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10234:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10216:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3435,
                  "nodeType": "ExpressionStatement",
                  "src": "10216:19:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3443,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10279:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10279:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10271:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3441,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10271:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10271:19:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3446,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3420,
                        "src": "10292:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3436,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3405,
                          "src": "10245:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2647_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 3439,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2640,
                        "src": "10245:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$18461",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18495,
                      "src": "10245:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$18461_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$18461_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10245:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3448,
                  "nodeType": "ExpressionStatement",
                  "src": "10245:54:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3450,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10332:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10332:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3452,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3401,
                        "src": "10344:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3453,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3420,
                        "src": "10350:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3449,
                      "name": "EmergencyWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2703,
                      "src": "10314:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10314:43:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3455,
                  "nodeType": "EmitStatement",
                  "src": "10309:48:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5312ea8e",
            "id": 3457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3401,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3457,
                  "src": "10014:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10014:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10013:14:16"
            },
            "returnParameters": {
              "id": 3403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10035:0:16"
            },
            "scope": 3574,
            "src": "9987:377:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3494,
              "nodeType": "Block",
              "src": "10547:224:16",
              "statements": [
                {
                  "assignments": [
                    3465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3465,
                      "mutability": "mutable",
                      "name": "rewardsBal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3494,
                      "src": "10557:18:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3464,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10557:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3473,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3470,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10604:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$3574",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$3574",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 3469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10596:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10596:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10596:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3466,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2649,
                        "src": "10578:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$18461",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18400,
                      "src": "10578:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10578:32:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10557:53:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3474,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3461,
                      "src": "10624:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3475,
                      "name": "rewardsBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3465,
                      "src": "10634:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10624:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3492,
                    "nodeType": "Block",
                    "src": "10710:55:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3488,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3459,
                              "src": "10741:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3489,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3461,
                              "src": "10746:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3485,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2649,
                              "src": "10724:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$18461",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18410,
                            "src": "10724:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10724:30:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3491,
                        "nodeType": "ExpressionStatement",
                        "src": "10724:30:16"
                      }
                    ]
                  },
                  "id": 3493,
                  "nodeType": "IfStatement",
                  "src": "10620:145:16",
                  "trueBody": {
                    "id": 3484,
                    "nodeType": "Block",
                    "src": "10646:58:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3480,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3459,
                              "src": "10677:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3481,
                              "name": "rewardsBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3465,
                              "src": "10682:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3477,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2649,
                              "src": "10660:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$18461",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18410,
                            "src": "10660:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10660:33:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3483,
                        "nodeType": "ExpressionStatement",
                        "src": "10660:33:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 3495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeRewardsTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3459,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3495,
                  "src": "10508:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10508:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3461,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3495,
                  "src": "10521:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10521:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10507:30:16"
            },
            "returnParameters": {
              "id": 3463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10547:0:16"
            },
            "scope": 3574,
            "src": "10479:292:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3522,
              "nodeType": "Block",
              "src": "10907:203:16",
              "statements": [
                {
                  "assignments": [
                    3501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3501,
                      "mutability": "mutable",
                      "name": "rewardsBal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3522,
                      "src": "10917:18:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3500,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10917:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3509,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3506,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10964:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$3574",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$3574",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 3505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10956:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3504,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10956:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10956:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3502,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2649,
                        "src": "10938:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$18461",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18400,
                      "src": "10938:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10938:32:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10917:53:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3510,
                      "name": "rewardsPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2659,
                      "src": "10984:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11002:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10984:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3520,
                    "nodeType": "Block",
                    "src": "11071:33:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11092:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 3499,
                        "id": 3519,
                        "nodeType": "Return",
                        "src": "11085:8:16"
                      }
                    ]
                  },
                  "id": 3521,
                  "nodeType": "IfStatement",
                  "src": "10980:124:16",
                  "trueBody": {
                    "id": 3517,
                    "nodeType": "Block",
                    "src": "11005:60:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3513,
                            "name": "rewardsBal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3501,
                            "src": "11026:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3514,
                            "name": "rewardsPerBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2659,
                            "src": "11039:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11026:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3499,
                        "id": 3516,
                        "nodeType": "Return",
                        "src": "11019:35:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d0863580",
            "id": 3523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "blocksRemaining",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10880:2:16"
            },
            "returnParameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3523,
                  "src": "10899:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10899:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10898:9:16"
            },
            "scope": 3574,
            "src": "10856:254:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3554,
              "nodeType": "Block",
              "src": "11197:202:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3527,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11215:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11215:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3529,
                          "name": "devaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2651,
                          "src": "11229:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11215:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6465763a207775743f",
                        "id": 3531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11238:11:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        },
                        "value": "dev: wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        }
                      ],
                      "id": 3526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11207:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11207:43:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3533,
                  "nodeType": "ExpressionStatement",
                  "src": "11207:43:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3535,
                          "name": "tips",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2655,
                          "src": "11268:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11275:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11268:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6465763a2062726f6b65",
                        "id": 3538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11278:12:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9e90bf8c8678d4c5c05f36598b8e38aa6f142849c613a846dc9373143675b38",
                          "typeString": "literal_string \"dev: broke\""
                        },
                        "value": "dev: broke"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9e90bf8c8678d4c5c05f36598b8e38aa6f142849c613a846dc9373143675b38",
                          "typeString": "literal_string \"dev: broke\""
                        }
                      ],
                      "id": 3534,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11260:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11260:31:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3540,
                  "nodeType": "ExpressionStatement",
                  "src": "11260:31:16"
                },
                {
                  "assignments": [
                    3542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3542,
                      "mutability": "mutable",
                      "name": "claimable",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3554,
                      "src": "11301:17:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11301:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3544,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3543,
                    "name": "tips",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2655,
                    "src": "11321:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11301:24:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3545,
                      "name": "tips",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2655,
                      "src": "11335:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11342:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11335:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3548,
                  "nodeType": "ExpressionStatement",
                  "src": "11335:8:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3550,
                        "name": "devaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2651,
                        "src": "11373:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3551,
                        "name": "claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3542,
                        "src": "11382:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3549,
                      "name": "safeRewardsTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3495,
                      "src": "11353:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11353:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3553,
                  "nodeType": "ExpressionStatement",
                  "src": "11353:39:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "06af3dfd",
            "id": 3555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTips",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11187:2:16"
            },
            "returnParameters": {
              "id": 3525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11197:0:16"
            },
            "scope": 3574,
            "src": "11169:230:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3572,
              "nodeType": "Block",
              "src": "11490:88:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3561,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11508:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11508:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3563,
                          "name": "devaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2651,
                          "src": "11522:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11508:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6465763a207775743f",
                        "id": 3565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11531:11:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        },
                        "value": "dev: wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        }
                      ],
                      "id": 3560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11500:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11500:43:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3567,
                  "nodeType": "ExpressionStatement",
                  "src": "11500:43:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3568,
                      "name": "devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2651,
                      "src": "11553:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3569,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3557,
                      "src": "11563:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11553:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3571,
                  "nodeType": "ExpressionStatement",
                  "src": "11553:18:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8d88a90e",
            "id": 3573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dev",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3557,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3573,
                  "src": "11465:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11465:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11464:18:16"
            },
            "returnParameters": {
              "id": 3559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11490:0:16"
            },
            "scope": 3574,
            "src": "11452:126:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3575,
        "src": "950:10630:16"
      }
    ],
    "src": "0:11580:16"
  },
  "bytecode": "608060405234801561001057600080fd5b506119d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063630b5ba1116100f9578063a8b973a111610097578063d18df53c11610071578063d18df53c14610433578063d49e77cd1461045f578063d69de7e714610467578063e2bbb1581461049b576101c4565b8063a8b973a11461041b578063c3a4382414610423578063d08635801461042b576101c4565b80638d88a90e116100d35780638d88a90e146103855780638dbb1e3a146103ab57806393f1a40b146103ce5780639ec5a89414610413576101c4565b8063630b5ba11461032e57806364482f7914610336578063748365ef14610361576101c4565b80632c77f6561161016657806351eb05a61161014057806351eb05a6146102a85780635312ea8e146102c55780635befdbca146102e25780635eeb671014610326576101c4565b80632c77f65614610275578063441a3e701461027d57806348cd4cb1146102a0576101c4565b80631526fe27116101a25780631526fe271461021057806317caf6f11461025d5780631a4e1e78146102655780631aed65531461026d576101c4565b8063037c99b0146101c957806306af3dfd146101ee578063081e3eda146101f6575b600080fd5b6101ec600480360360408110156101df57600080fd5b50803590602001356104be565b005b6101ec61057b565b6101fe61062c565b60408051918252519081900360200190f35b61022d6004803603602081101561022657600080fd5b5035610633565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b6101fe610674565b6101fe61067a565b6101fe610680565b6101fe610686565b6101ec6004803603604081101561029357600080fd5b508035906020013561068b565b6101fe6107ea565b6101ec600480360360208110156102be57600080fd5b50356107f0565b6101ec600480360360208110156102db57600080fd5b5035610953565b6101ec600480360360a08110156102f857600080fd5b506001600160a01b0381358116916020810135916040820135916060810135821691608090910135166109ef565b6101fe610a5c565b6101ec610a62565b6101ec6004803603606081101561034c57600080fd5b50803590602081013590604001351515610a85565b610369610bb0565b604080516001600160a01b039092168252519081900360200190f35b6101ec6004803603602081101561039b57600080fd5b50356001600160a01b0316610bbf565b6101fe600480360360408110156103c157600080fd5b5080359060200135610c2c565b6103fa600480360360408110156103e457600080fd5b50803590602001356001600160a01b0316610c9b565b6040805192835260208301919091528051918290030190f35b610369610cbf565b6101fe610cce565b6101fe610cd4565b6101fe610cda565b6101fe6004803603604081101561044957600080fd5b50803590602001356001600160a01b0316610d7f565b610369610ee1565b6101ec6004803603606081101561047d57600080fd5b508035906001600160a01b0360208201351690604001351515610ef0565b6101ec600480360360408110156104b157600080fd5b5080359060200135611143565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b15801561050957600080fd5b505afa15801561051d573d6000803e3d6000fd5b505050506040513d602081101561053357600080fd5b50516105705760405162461bcd60e51b815260040180806020018281038252602481526020018061190e6024913960400191505060405180910390fd5b600591909155600755565b6002546001600160a01b031633146105c6576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b60006004541161060a576040805162461bcd60e51b815260206004820152600a6024820152696465763a2062726f6b6560b01b604482015290519081900360640190fd5b600480546000909155600254610629906001600160a01b031682611255565b50565b6009545b90565b6009818154811061064057fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b600b5481565b60045481565b60055481565b600181565b60006009838154811061069a57fe5b60009182526020808320868452600a82526040808520338652909252922080546004909202909201925083111561070d576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b610716846107f0565b6000610750826001015461074a64e8d4a51000610744876003015487600001546113e690919063ffffffff16565b90611446565b90611488565b90508015610762576107623382611255565b831561078c5781546107749085611488565b8255825461078c906001600160a01b031633866114ca565b600383015482546107a79164e8d4a5100091610744916113e6565b6001830155604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050505050565b600c5481565b6000600982815481106107ff57fe5b90600052602060002090600402019050806002015443116108205750610629565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561086a57600080fd5b505afa15801561087e573d6000803e3d6000fd5b505050506040513d602081101561089457600080fd5b50519050806108aa575043600290910155610629565b60006108ba836002015443610c2c565b905060006108e7600b5461074486600101546108e1600654876113e690919063ffffffff16565b906113e6565b6003549091501561091d576109196109106103e8610744600354856113e690919063ffffffff16565b6004549061151c565b6004555b61093e610933846107448464e8d4a510006113e6565b60038601549061151c565b60038501555050436002909201919091555050565b60006009828154811061096257fe5b60009182526020808320858452600a8252604080852033808752935284208054858255600182019590955560049093020180549094509192916109b2916001600160a01b039190911690836114ca565b604080518281529051859133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a350505050565b60085460ff16156109ff57600080fd5b600180546001600160a01b03199081166001600160a01b039788161782556000600b8190556008805460ff1916909317909255600695909555600c9390935560028054851692861692909217909155815490921691909216179055565b60065481565b60095460005b81811015610a8157610a79816107f0565b600101610a68565b5050565b60005460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b158015610ad057600080fd5b505afa158015610ae4573d6000803e3d6000fd5b505050506040513d6020811015610afa57600080fd5b5051610b375760405162461bcd60e51b815260040180806020018281038252602781526020018061197d6027913960400191505060405180910390fd5b8015610b4557610b45610a62565b610b8282610b7c60098681548110610b5957fe5b906000526020600020906004020160010154600b5461148890919063ffffffff16565b9061151c565b600b819055508160098481548110610b9657fe5b906000526020600020906004020160010181905550505050565b6000546001600160a01b031681565b6002546001600160a01b03163314610c0a576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006005548211610c4f57600754610c48906108e18486611488565b9050610c95565b6005548310610c6257610c488284611488565b610c48610c7a6005548461148890919063ffffffff16565b610b7c6007546108e18760055461148890919063ffffffff16565b92915050565b600a6020908152600092835260408084209091529082529020805460019091015482565b6001546001600160a01b031681565b60075481565b60035481565b600154604080516370a0823160e01b8152306004820152905160009283926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b158015610d2a57600080fd5b505afa158015610d3e573d6000803e3d6000fd5b505050506040513d6020811015610d5457600080fd5b505160065490915015610d75576006548181610d6c57fe5b04915050610630565b6000915050610630565b60008060098481548110610d8f57fe5b60009182526020808320878452600a825260408085206001600160a01b03898116875290845281862060049586029093016003810154815484516370a0823160e01b81523098810198909852935191985093969395939492909116926370a08231926024808301939192829003018186803b158015610e0d57600080fd5b505afa158015610e21573d6000803e3d6000fd5b505050506040513d6020811015610e3757600080fd5b5051600285015490915043118015610e4e57508015155b15610eae576000610e63856002015443610c2c565b90506000610e8a600b5461074488600101546108e1600654876113e690919063ffffffff16565b9050610ea9610ea2846107448464e8d4a510006113e6565b859061151c565b935050505b610ed6836001015461074a64e8d4a510006107448688600001546113e690919063ffffffff16565b979650505050505050565b6002546001600160a01b031681565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b158015610f3b57600080fd5b505afa158015610f4f573d6000803e3d6000fd5b505050506040513d6020811015610f6557600080fd5b505180610fe557506000546040805163089d855960e11b815233600482015290516001600160a01b039092169163113b0ab291602480820192602092909190829003018186803b158015610fb857600080fd5b505afa158015610fcc573d6000803e3d6000fd5b505050506040513d6020811015610fe257600080fd5b50515b6110205760405162461bcd60e51b815260040180806020018281038252602481526020018061190e6024913960400191505060405180910390fd5b801561102e5761102e610a62565b6000600c54431161104157600c54611043565b435b600b54909150611053908561151c565b600b55604080516080810182526001600160a01b0394851681526020810195865290810191825260006060820181815260098054600181018255925291517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af600490920291820180546001600160a01b031916919096161790945593517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0840155517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b18301555090517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b290910155565b60006009838154811061115257fe5b60009182526020808320868452600a82526040808520338652909252922060049091029091019150611183846107f0565b8054156111cc5760006111b8826001015461074a64e8d4a51000610744876003015487600001546113e690919063ffffffff16565b905080156111ca576111ca3382611255565b505b82156111f85781546111e9906001600160a01b0316333086611576565b80546111f5908461151c565b81555b600382015481546112139164e8d4a5100091610744916113e6565b6001820155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156112a057600080fd5b505afa1580156112b4573d6000803e3d6000fd5b505050506040513d60208110156112ca57600080fd5b505190508082111561135e576001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561132c57600080fd5b505af1158015611340573d6000803e3d6000fd5b505050506040513d602081101561135657600080fd5b506113e19050565b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156113b457600080fd5b505af11580156113c8573d6000803e3d6000fd5b505050506040513d60208110156113de57600080fd5b50505b505050565b6000826113f557506000610c95565b8282028284828161140257fe5b041461143f5760405162461bcd60e51b81526004018080602001828103825260218152602001806119326021913960400191505060405180910390fd5b9392505050565b600061143f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506115d6565b600061143f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611678565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526113e19084906116d2565b60008282018381101561143f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526115d09085906116d2565b50505050565b600081836116625760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561162757818101518382015260200161160f565b50505050905090810190601f1680156116545780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161166e57fe5b0495945050505050565b600081848411156116ca5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561162757818101518382015260200161160f565b505050900390565b6060611727826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117839092919063ffffffff16565b8051909150156113e15780806020019051602081101561174657600080fd5b50516113e15760405162461bcd60e51b815260040180806020018281038252602a815260200180611953602a913960400191505060405180910390fd5b6060611792848460008561179a565b949350505050565b60606117a585611907565b6117f6576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106118355780518252601f199092019160209182019101611816565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611897576040519150601f19603f3d011682016040523d82523d6000602084013e61189c565b606091505b509150915081156118b05791506117929050565b8051156118c05780518082602001fd5b60405162461bcd60e51b815260206004820181815286516024840152865187939192839260440191908501908083836000831561162757818101518382015260200161160f565b3b15159056fe4d6173746572436865662e6164643a2053656e646572206d7573742062652061646d696e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644d6173746572436865662e7365743a2053656e646572206d757374206265206f70657261746f72a2646970667358221220d12701f51f5d767b2426fdded998b86c7530675b981150c1b93b0698db88699764736f6c634300060c0033",
  "bytecodeSha1": "f3c1bbe90abe9b1c95e5432afac7347ffc15bfbf",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "MasterChef",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "16": {
        "MasterChef.addToken": {
          "94": [
            4782,
            4821,
            true
          ],
          "95": [
            4825,
            4872,
            true
          ],
          "96": [
            4948,
            4959,
            false
          ],
          "97": [
            5038,
            5063,
            true
          ]
        },
        "MasterChef.blocksRemaining": {
          "91": [
            10984,
            11003,
            false
          ]
        },
        "MasterChef.claimTips": {
          "77": [
            11215,
            11236,
            true
          ],
          "78": [
            11268,
            11276,
            true
          ]
        },
        "MasterChef.deposit": {
          "98": [
            8594,
            8609,
            false
          ],
          "99": [
            8731,
            8742,
            false
          ],
          "100": [
            8839,
            8850,
            false
          ]
        },
        "MasterChef.dev": {
          "88": [
            11508,
            11529,
            true
          ]
        },
        "MasterChef.getMultiplier": {
          "89": [
            6044,
            6064,
            false
          ],
          "90": [
            6143,
            6165,
            false
          ]
        },
        "MasterChef.initFarm": {
          "85": [
            3797,
            3809,
            true
          ]
        },
        "MasterChef.pendingRewards": {
          "92": [
            6752,
            6787,
            false
          ],
          "93": [
            6791,
            6804,
            false
          ]
        },
        "MasterChef.safeRewardsTransfer": {
          "101": [
            10624,
            10644,
            false
          ]
        },
        "MasterChef.set": {
          "86": [
            5553,
            5595,
            true
          ],
          "87": [
            5674,
            5685,
            false
          ]
        },
        "MasterChef.setBonus": {
          "76": [
            4212,
            4251,
            true
          ]
        },
        "MasterChef.updatePool": {
          "82": [
            7626,
            7662,
            false
          ],
          "83": [
            7774,
            7787,
            false
          ],
          "84": [
            8068,
            8085,
            false
          ]
        },
        "MasterChef.withdraw": {
          "79": [
            9367,
            9389,
            true
          ],
          "80": [
            9550,
            9561,
            false
          ],
          "81": [
            9640,
            9651,
            false
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "109": [
            986,
            992,
            true
          ]
        },
        "SafeMath.div": {
          "110": [
            3826,
            3831,
            true
          ]
        },
        "SafeMath.mul": {
          "107": [
            2479,
            2485,
            false
          ],
          "108": [
            2565,
            2575,
            true
          ]
        },
        "SafeMath.sub": {
          "111": [
            1859,
            1865,
            true
          ]
        }
      },
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "105": [
            3487,
            3508,
            false
          ],
          "106": [
            3616,
            3646,
            true
          ]
        }
      },
      "6": {
        "Address._functionCallWithValue": {
          "102": [
            5082,
            5100,
            true
          ],
          "103": [
            5296,
            5303,
            false
          ],
          "104": [
            5437,
            5458,
            false
          ]
        }
      },
      "64": {},
      "7": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "16": {
        "MasterChef.addToken": {
          "48": [
            4761,
            4934
          ],
          "49": [
            4975,
            4992
          ],
          "50": [
            5101,
            5151
          ],
          "51": [
            5161,
            5345
          ]
        },
        "MasterChef.blocksRemaining": {
          "44": [
            11019,
            11054
          ],
          "45": [
            11085,
            11093
          ]
        },
        "MasterChef.claimTips": {
          "3": [
            11207,
            11250
          ],
          "4": [
            11260,
            11291
          ],
          "5": [
            11335,
            11343
          ],
          "6": [
            11353,
            11392
          ]
        },
        "MasterChef.deposit": {
          "52": [
            8564,
            8580
          ],
          "53": [
            8762,
            8802
          ],
          "54": [
            8866,
            8940
          ],
          "55": [
            8954,
            8992
          ],
          "56": [
            9012,
            9080
          ],
          "57": [
            9090,
            9129
          ]
        },
        "MasterChef.dev": {
          "39": [
            11500,
            11543
          ],
          "40": [
            11553,
            11571
          ]
        },
        "MasterChef.emergencyWithdraw": {
          "21": [
            10191,
            10206
          ],
          "22": [
            10216,
            10235
          ],
          "23": [
            10245,
            10299
          ],
          "24": [
            10309,
            10357
          ]
        },
        "MasterChef.getMultiplier": {
          "41": [
            6080,
            6122
          ],
          "42": [
            6181,
            6202
          ],
          "43": [
            6233,
            6343
          ]
        },
        "MasterChef.initFarm": {
          "25": [
            3789,
            3810
          ],
          "26": [
            3820,
            3846
          ],
          "27": [
            3856,
            3875
          ],
          "28": [
            3885,
            3903
          ],
          "29": [
            3913,
            3947
          ],
          "30": [
            3957,
            3981
          ],
          "31": [
            3991,
            4009
          ],
          "32": [
            4019,
            4071
          ]
        },
        "MasterChef.massUpdatePools": {
          "33": [
            7418,
            7433
          ],
          "34": [
            7397,
            7402
          ]
        },
        "MasterChef.pendingRewards": {
          "46": [
            7014,
            7095
          ],
          "47": [
            7115,
            7188
          ]
        },
        "MasterChef.poolLength": {
          "7": [
            4475,
            4497
          ]
        },
        "MasterChef.safeRewardsTransfer": {
          "58": [
            10660,
            10693
          ],
          "59": [
            10724,
            10754
          ]
        },
        "MasterChef.set": {
          "35": [
            5532,
            5660
          ],
          "36": [
            5701,
            5718
          ],
          "37": [
            5738,
            5819
          ],
          "38": [
            5829,
            5868
          ]
        },
        "MasterChef.setBonus": {
          "0": [
            4191,
            4313
          ],
          "1": [
            4324,
            4354
          ],
          "2": [
            4364,
            4398
          ]
        },
        "MasterChef.updatePool": {
          "15": [
            7678,
            7685
          ],
          "16": [
            7803,
            7838
          ],
          "17": [
            7852,
            7859
          ],
          "18": [
            8101,
            8159
          ],
          "19": [
            8179,
            8270
          ],
          "20": [
            8280,
            8315
          ]
        },
        "MasterChef.withdraw": {
          "8": [
            9359,
            9412
          ],
          "9": [
            9422,
            9438
          ],
          "10": [
            9577,
            9617
          ],
          "11": [
            9667,
            9705
          ],
          "12": [
            9719,
            9774
          ],
          "13": [
            9794,
            9862
          ],
          "14": [
            9872,
            9912
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "66": [
            978,
            1024
          ]
        },
        "SafeMath.div": {
          "63": [
            3178,
            3224
          ],
          "68": [
            3818,
            3846
          ]
        },
        "SafeMath.mul": {
          "60": [
            2501,
            2509
          ],
          "61": [
            2557,
            2613
          ],
          "62": [
            2624,
            2632
          ]
        },
        "SafeMath.sub": {
          "64": [
            1398,
            1448
          ],
          "69": [
            1851,
            1880
          ]
        }
      },
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "70": [
            3608,
            3693
          ]
        },
        "SafeERC20.safeTransfer": {
          "65": [
            778,
            864
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "67": [
            977,
            1073
          ]
        }
      },
      "6": {
        "Address._functionCallWithValue": {
          "72": [
            5074,
            5134
          ],
          "73": [
            5319,
            5336
          ],
          "74": [
            5827,
            5847
          ]
        },
        "Address.functionCall": {
          "71": [
            3700,
            3760
          ]
        },
        "Address.isContract": {
          "75": [
            1109,
            1124
          ]
        }
      },
      "64": {},
      "7": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.2.0/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/EnumerableSet",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/IERC20",
    "IMisoFarm",
    "MISOAccessControls",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101c45760003560e01c8063630b5ba1116100f9578063a8b973a111610097578063d18df53c11610071578063d18df53c14610433578063d49e77cd1461045f578063d69de7e714610467578063e2bbb1581461049b576101c4565b8063a8b973a11461041b578063c3a4382414610423578063d08635801461042b576101c4565b80638d88a90e116100d35780638d88a90e146103855780638dbb1e3a146103ab57806393f1a40b146103ce5780639ec5a89414610413576101c4565b8063630b5ba11461032e57806364482f7914610336578063748365ef14610361576101c4565b80632c77f6561161016657806351eb05a61161014057806351eb05a6146102a85780635312ea8e146102c55780635befdbca146102e25780635eeb671014610326576101c4565b80632c77f65614610275578063441a3e701461027d57806348cd4cb1146102a0576101c4565b80631526fe27116101a25780631526fe271461021057806317caf6f11461025d5780631a4e1e78146102655780631aed65531461026d576101c4565b8063037c99b0146101c957806306af3dfd146101ee578063081e3eda146101f6575b600080fd5b6101ec600480360360408110156101df57600080fd5b50803590602001356104be565b005b6101ec61057b565b6101fe61062c565b60408051918252519081900360200190f35b61022d6004803603602081101561022657600080fd5b5035610633565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b6101fe610674565b6101fe61067a565b6101fe610680565b6101fe610686565b6101ec6004803603604081101561029357600080fd5b508035906020013561068b565b6101fe6107ea565b6101ec600480360360208110156102be57600080fd5b50356107f0565b6101ec600480360360208110156102db57600080fd5b5035610953565b6101ec600480360360a08110156102f857600080fd5b506001600160a01b0381358116916020810135916040820135916060810135821691608090910135166109ef565b6101fe610a5c565b6101ec610a62565b6101ec6004803603606081101561034c57600080fd5b50803590602081013590604001351515610a85565b610369610bb0565b604080516001600160a01b039092168252519081900360200190f35b6101ec6004803603602081101561039b57600080fd5b50356001600160a01b0316610bbf565b6101fe600480360360408110156103c157600080fd5b5080359060200135610c2c565b6103fa600480360360408110156103e457600080fd5b50803590602001356001600160a01b0316610c9b565b6040805192835260208301919091528051918290030190f35b610369610cbf565b6101fe610cce565b6101fe610cd4565b6101fe610cda565b6101fe6004803603604081101561044957600080fd5b50803590602001356001600160a01b0316610d7f565b610369610ee1565b6101ec6004803603606081101561047d57600080fd5b508035906001600160a01b0360208201351690604001351515610ef0565b6101ec600480360360408110156104b157600080fd5b5080359060200135611143565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b15801561050957600080fd5b505afa15801561051d573d6000803e3d6000fd5b505050506040513d602081101561053357600080fd5b50516105705760405162461bcd60e51b815260040180806020018281038252602481526020018061190e6024913960400191505060405180910390fd5b600591909155600755565b6002546001600160a01b031633146105c6576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b60006004541161060a576040805162461bcd60e51b815260206004820152600a6024820152696465763a2062726f6b6560b01b604482015290519081900360640190fd5b600480546000909155600254610629906001600160a01b031682611255565b50565b6009545b90565b6009818154811061064057fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b600b5481565b60045481565b60055481565b600181565b60006009838154811061069a57fe5b60009182526020808320868452600a82526040808520338652909252922080546004909202909201925083111561070d576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b610716846107f0565b6000610750826001015461074a64e8d4a51000610744876003015487600001546113e690919063ffffffff16565b90611446565b90611488565b90508015610762576107623382611255565b831561078c5781546107749085611488565b8255825461078c906001600160a01b031633866114ca565b600383015482546107a79164e8d4a5100091610744916113e6565b6001830155604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050505050565b600c5481565b6000600982815481106107ff57fe5b90600052602060002090600402019050806002015443116108205750610629565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561086a57600080fd5b505afa15801561087e573d6000803e3d6000fd5b505050506040513d602081101561089457600080fd5b50519050806108aa575043600290910155610629565b60006108ba836002015443610c2c565b905060006108e7600b5461074486600101546108e1600654876113e690919063ffffffff16565b906113e6565b6003549091501561091d576109196109106103e8610744600354856113e690919063ffffffff16565b6004549061151c565b6004555b61093e610933846107448464e8d4a510006113e6565b60038601549061151c565b60038501555050436002909201919091555050565b60006009828154811061096257fe5b60009182526020808320858452600a8252604080852033808752935284208054858255600182019590955560049093020180549094509192916109b2916001600160a01b039190911690836114ca565b604080518281529051859133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a350505050565b60085460ff16156109ff57600080fd5b600180546001600160a01b03199081166001600160a01b039788161782556000600b8190556008805460ff1916909317909255600695909555600c9390935560028054851692861692909217909155815490921691909216179055565b60065481565b60095460005b81811015610a8157610a79816107f0565b600101610a68565b5050565b60005460408051637e271f0560e11b815233600482015290516001600160a01b039092169163fc4e3e0a91602480820192602092909190829003018186803b158015610ad057600080fd5b505afa158015610ae4573d6000803e3d6000fd5b505050506040513d6020811015610afa57600080fd5b5051610b375760405162461bcd60e51b815260040180806020018281038252602781526020018061197d6027913960400191505060405180910390fd5b8015610b4557610b45610a62565b610b8282610b7c60098681548110610b5957fe5b906000526020600020906004020160010154600b5461148890919063ffffffff16565b9061151c565b600b819055508160098481548110610b9657fe5b906000526020600020906004020160010181905550505050565b6000546001600160a01b031681565b6002546001600160a01b03163314610c0a576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006005548211610c4f57600754610c48906108e18486611488565b9050610c95565b6005548310610c6257610c488284611488565b610c48610c7a6005548461148890919063ffffffff16565b610b7c6007546108e18760055461148890919063ffffffff16565b92915050565b600a6020908152600092835260408084209091529082529020805460019091015482565b6001546001600160a01b031681565b60075481565b60035481565b600154604080516370a0823160e01b8152306004820152905160009283926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b158015610d2a57600080fd5b505afa158015610d3e573d6000803e3d6000fd5b505050506040513d6020811015610d5457600080fd5b505160065490915015610d75576006548181610d6c57fe5b04915050610630565b6000915050610630565b60008060098481548110610d8f57fe5b60009182526020808320878452600a825260408085206001600160a01b03898116875290845281862060049586029093016003810154815484516370a0823160e01b81523098810198909852935191985093969395939492909116926370a08231926024808301939192829003018186803b158015610e0d57600080fd5b505afa158015610e21573d6000803e3d6000fd5b505050506040513d6020811015610e3757600080fd5b5051600285015490915043118015610e4e57508015155b15610eae576000610e63856002015443610c2c565b90506000610e8a600b5461074488600101546108e1600654876113e690919063ffffffff16565b9050610ea9610ea2846107448464e8d4a510006113e6565b859061151c565b935050505b610ed6836001015461074a64e8d4a510006107448688600001546113e690919063ffffffff16565b979650505050505050565b6002546001600160a01b031681565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b158015610f3b57600080fd5b505afa158015610f4f573d6000803e3d6000fd5b505050506040513d6020811015610f6557600080fd5b505180610fe557506000546040805163089d855960e11b815233600482015290516001600160a01b039092169163113b0ab291602480820192602092909190829003018186803b158015610fb857600080fd5b505afa158015610fcc573d6000803e3d6000fd5b505050506040513d6020811015610fe257600080fd5b50515b6110205760405162461bcd60e51b815260040180806020018281038252602481526020018061190e6024913960400191505060405180910390fd5b801561102e5761102e610a62565b6000600c54431161104157600c54611043565b435b600b54909150611053908561151c565b600b55604080516080810182526001600160a01b0394851681526020810195865290810191825260006060820181815260098054600181018255925291517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af600490920291820180546001600160a01b031916919096161790945593517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0840155517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b18301555090517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b290910155565b60006009838154811061115257fe5b60009182526020808320868452600a82526040808520338652909252922060049091029091019150611183846107f0565b8054156111cc5760006111b8826001015461074a64e8d4a51000610744876003015487600001546113e690919063ffffffff16565b905080156111ca576111ca3382611255565b505b82156111f85781546111e9906001600160a01b0316333086611576565b80546111f5908461151c565b81555b600382015481546112139164e8d4a5100091610744916113e6565b6001820155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156112a057600080fd5b505afa1580156112b4573d6000803e3d6000fd5b505050506040513d60208110156112ca57600080fd5b505190508082111561135e576001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561132c57600080fd5b505af1158015611340573d6000803e3d6000fd5b505050506040513d602081101561135657600080fd5b506113e19050565b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156113b457600080fd5b505af11580156113c8573d6000803e3d6000fd5b505050506040513d60208110156113de57600080fd5b50505b505050565b6000826113f557506000610c95565b8282028284828161140257fe5b041461143f5760405162461bcd60e51b81526004018080602001828103825260218152602001806119326021913960400191505060405180910390fd5b9392505050565b600061143f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506115d6565b600061143f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611678565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526113e19084906116d2565b60008282018381101561143f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526115d09085906116d2565b50505050565b600081836116625760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561162757818101518382015260200161160f565b50505050905090810190601f1680156116545780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161166e57fe5b0495945050505050565b600081848411156116ca5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561162757818101518382015260200161160f565b505050900390565b6060611727826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117839092919063ffffffff16565b8051909150156113e15780806020019051602081101561174657600080fd5b50516113e15760405162461bcd60e51b815260040180806020018281038252602a815260200180611953602a913960400191505060405180910390fd5b6060611792848460008561179a565b949350505050565b60606117a585611907565b6117f6576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106118355780518252601f199092019160209182019101611816565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611897576040519150601f19603f3d011682016040523d82523d6000602084013e61189c565b606091505b509150915081156118b05791506117929050565b8051156118c05780518082602001fd5b60405162461bcd60e51b815260206004820181815286516024840152865187939192839260440191908501908083836000831561162757818101518382015260200161160f565b3b15159056fe4d6173746572436865662e6164643a2053656e646572206d7573742062652061646d696e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644d6173746572436865662e7365743a2053656e646572206d757374206265206f70657261746f72a2646970667358221220d12701f51f5d767b2426fdded998b86c7530675b981150c1b93b0698db88699764736f6c634300060c0033",
  "deployedSourceMap": "950:10630:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4084:321;;;;;;;;;;;;;;;;-1:-1:-1;4084:321:16;;;;;;;:::i;:::-;;11169:230;;;:::i;4411:93::-;;;:::i;:::-;;;;;;;;;;;;;;;;2986:26;;;;;;;;;;;;;;;;-1:-1:-1;2986:26:16;;:::i;:::-;;;;-1:-1:-1;;;;;2986:26:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3225:30;;;:::i;2551:19::-;;;:::i;2628:28::-;;;:::i;2858:40::-;;;:::i;9185:734::-;;;;;;;;;;;;;;;;-1:-1:-1;9185:734:16;;;;;;;:::i;3313:25::-;;;:::i;7523:799::-;;;;;;;;;;;;;;;;-1:-1:-1;7523:799:16;;:::i;9987:377::-;;;;;;;;;;;;;;;;-1:-1:-1;9987:377:16;;:::i;3591:487::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3591:487:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2702:30::-;;;:::i;7275:175::-;;;:::i;5448:427::-;;;;;;;;;;;;;;;;-1:-1:-1;5448:427:16;;;;;;;;;;;;;;:::i;1054:40::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1054:40:16;;;;;;;;;;;;;;11452:126;;;;;;;;;;;;;;;;-1:-1:-1;11452:126:16;-1:-1:-1;;;;;11452:126:16;;:::i;5949:411::-;;;;;;;;;;;;;;;;-1:-1:-1;5949:411:16;;;;;;;:::i;3066:66::-;;;;;;;;;;;;;;;;-1:-1:-1;3066:66:16;;;;;;-1:-1:-1;;;;;3066:66:16;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2364:21;;;:::i;2787:30::-;;;:::i;2486:28::-;;;:::i;10856:254::-;;;:::i;6422:773::-;;;;;;;;;;;;;;;;-1:-1:-1;6422:773:16;;;;;;-1:-1:-1;;;;;6422:773:16;;:::i;2411:22::-;;;:::i;4669:683::-;;;;;;;;;;;;;;;;-1:-1:-1;4669:683:16;;;-1:-1:-1;;;;;4669:683:16;;;;;;;;;;;;:::i;8391:745::-;;;;;;;;;;;;;;;;-1:-1:-1;8391:745:16;;;;;;;:::i;4084:321::-;4212:14;;:39;;;-1:-1:-1;;;4212:39:16;;4240:10;4212:39;;;;;;-1:-1:-1;;;;;4212:14:16;;;;:27;;:39;;;;;;;;;;;;;;;:14;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4212:39:16;4191:122;;;;-1:-1:-1;;;4191:122:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4324:13;:30;;;;4364:15;:34;4084:321::o;11169:230::-;11229:7;;-1:-1:-1;;;;;11229:7:16;11215:10;:21;11207:43;;;;;-1:-1:-1;;;11207:43:16;;;;;;;;;;;;-1:-1:-1;;;11207:43:16;;;;;;;;;;;;;;;11275:1;11268:4;;:8;11260:31;;;;;-1:-1:-1;;;11260:31:16;;;;;;;;;;;;-1:-1:-1;;;11260:31:16;;;;;;;;;;;;;;;11321:4;;;11301:17;11335:8;;;11373:7;;11353:39;;-1:-1:-1;;;;;11373:7:16;11321:4;11353:19;:39::i;:::-;11169:230;:::o;4411:93::-;4482:8;:15;4411:93;;:::o;2986:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2986:26:16;;;;-1:-1:-1;2986:26:16;;;:::o;3225:30::-;;;;:::o;2551:19::-;;;;:::o;2628:28::-;;;;:::o;2858:40::-;2897:1;2858:40;:::o;9185:734::-;9251:21;9275:8;9284:4;9275:14;;;;;;;;;;;;;;;;9323;;;:8;:14;;;;;;9338:10;9323:26;;;;;;;9367:11;;9275:14;;;;;;;;-1:-1:-1;9367:22:16;-1:-1:-1;9367:22:16;9359:53;;;;;-1:-1:-1;;;9359:53:16;;;;;;;;;;;;-1:-1:-1;;;9359:53:16;;;;;;;;;;;;;;;9422:16;9433:4;9422:10;:16::i;:::-;9448:15;9466:71;9521:4;:15;;;9466:50;9511:4;9466:40;9482:4;:23;;;9466:4;:11;;;:15;;:40;;;;:::i;:::-;:44;;:50::i;:::-;:54;;:71::i;:::-;9448:89;-1:-1:-1;9550:11:16;;9547:81;;9577:40;9597:10;9609:7;9577:19;:40::i;:::-;9640:11;;9637:148;;9681:11;;:24;;9697:7;9681:15;:24::i;:::-;9667:38;;9719:12;;:55;;-1:-1:-1;;;;;9719:12:16;9753:10;9766:7;9719:25;:55::i;:::-;9828:23;;;;9812:11;;:50;;9857:4;;9812:40;;:15;:40::i;:50::-;9794:15;;;:68;9877:35;;;;;;;;9898:4;;9886:10;;9877:35;;;;;;;;;9185:734;;;;;:::o;3313:25::-;;;;:::o;7523:799::-;7574:21;7598:8;7607:4;7598:14;;;;;;;;;;;;;;;;;;7574:38;;7642:4;:20;;;7626:12;:36;7622:73;;7678:7;;;7622:73;7723:12;;:37;;;-1:-1:-1;;;7723:37:16;;7754:4;7723:37;;;;;;7704:16;;-1:-1:-1;;;;;7723:12:16;;:22;;:37;;;;;;;;;;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7723:37:16;;-1:-1:-1;7774:13:16;7770:99;;-1:-1:-1;7826:12:16;7803:20;;;;:35;7852:7;;7770:99;7878:18;7899:49;7913:4;:20;;;7935:12;7899:13;:49::i;:::-;7878:70;;7958:20;7981:73;8038:15;;7981:52;8017:4;:15;;;7981:31;7996:15;;7981:10;:14;;:31;;;;:::i;:::-;:35;;:52::i;:73::-;8068:13;;7958:96;;-1:-1:-1;8068:17:16;8064:106;;8108:51;8117:41;8153:4;8117:31;8134:13;;8117:12;:16;;:31;;;;:::i;:41::-;8108:4;;;:8;:51::i;:::-;8101:4;:58;8064:106;8205:65;8233:36;8260:8;8233:22;:12;8250:4;8233:16;:22::i;:36::-;8205:23;;;;;:27;:65::i;:::-;8179:23;;;:91;-1:-1:-1;;8303:12:16;8280:20;;;;:35;;;;-1:-1:-1;7523:799:16;:::o;9987:377::-;10045:21;10069:8;10078:4;10069:14;;;;;;;;;;;;;;;;10117;;;:8;:14;;;;;;10132:10;10117:26;;;;;;;10170:11;;10191:15;;;-1:-1:-1;10216:15:16;;:19;;;;10069:14;;;;;10245:12;;10069:14;;-1:-1:-1;10117:26:16;;10170:11;10245:54;;-1:-1:-1;;;;;10245:12:16;;;;;10170:11;10245:25;:54::i;:::-;10314:43;;;;;;;;10344:4;;10332:10;;10314:43;;;;;;;;;9987:377;;;;:::o;3591:487::-;3798:11;;;;3797:12;3789:21;;;;;;3820:7;:26;;-1:-1:-1;;;;;;3820:26:16;;;-1:-1:-1;;;;;3820:26:16;;;;;;-1:-1:-1;3856:15:16;:19;;;3885:11;:18;;-1:-1:-1;;3885:18:16;;;;;;;3913:15;:34;;;;3957:10;:24;;;;-1:-1:-1;3991:18:16;;;;;;;;;;;;;;4019:52;;;;;;;;;;;;3591:487::o;2702:30::-;;;;:::o;7275:175::-;7336:8;:15;7319:14;7361:83;7389:6;7383:3;:12;7361:83;;;7418:15;7429:3;7418:10;:15::i;:::-;7397:5;;7361:83;;;;7275:175;:::o;5448:427::-;5553:14;;:42;;;-1:-1:-1;;;5553:42:16;;5584:10;5553:42;;;;;;-1:-1:-1;;;;;5553:14:16;;;;:30;;:42;;;;;;;;;;;;;;;:14;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5553:42:16;5532:128;;;;-1:-1:-1;;;5532:128:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5674:11;5670:59;;;5701:17;:15;:17::i;:::-;5756:63;5807:11;5756:46;5776:8;5785:4;5776:14;;;;;;;;;;;;;;;;;;:25;;;5756:15;;:19;;:46;;;;:::i;:::-;:50;;:63::i;:::-;5738:15;:81;;;;5857:11;5829:8;5838:4;5829:14;;;;;;;;;;;;;;;;;;:25;;:39;;;;5448:427;;;:::o;1054:40::-;;;-1:-1:-1;;;;;1054:40:16;;:::o;11452:126::-;11522:7;;-1:-1:-1;;;;;11522:7:16;11508:10;:21;11500:43;;;;;-1:-1:-1;;;11500:43:16;;;;;;;;;;;;-1:-1:-1;;;11500:43:16;;;;;;;;;;;;;;;11553:7;:18;;-1:-1:-1;;;;;;11553:18:16;-1:-1:-1;;;;;11553:18:16;;;;;;;;;;11452:126::o;5949:411::-;6021:7;6051:13;;6044:3;:20;6040:314;;6106:15;;6087:35;;:14;:3;6095:5;6087:7;:14::i;:35::-;6080:42;;;;6040:314;6152:13;;6143:5;:22;6139:215;;6188:14;:3;6196:5;6188:7;:14::i;6139:215::-;6240:103;6307:22;6315:13;;6307:3;:7;;:22;;;;:::i;:::-;6240:45;6269:15;;6240:24;6258:5;6240:13;;:17;;:24;;;;:::i;6139:215::-;5949:411;;;;:::o;3066:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2364:21::-;;;-1:-1:-1;;;;;2364:21:16;;:::o;2787:30::-;;;;:::o;2486:28::-;;;;:::o;10856:254::-;10938:7;;:32;;;-1:-1:-1;;;10938:32:16;;10964:4;10938:32;;;;;;10899:7;;;;-1:-1:-1;;;;;10938:7:16;;;;:17;;:32;;;;;;;;;;;;;;;:7;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10938:32:16;10984:15;;10938:32;;-1:-1:-1;10984:19:16;10980:124;;11039:15;;11026:10;:28;;;;;;11019:35;;;;;10980:124;11092:1;11085:8;;;;;6422:773;6498:7;6517:21;6541:8;6550:4;6541:14;;;;;;;;;;;;;;;;6589;;;:8;:14;;;;;;-1:-1:-1;;;;;6589:21:16;;;;;;;;;;;6541:14;;;;;;;6649:23;;;;6701:12;;:37;;-1:-1:-1;;;6701:37:16;;6732:4;6701:37;;;;;;;;;6541:14;;-1:-1:-1;6589:21:16;;6649:23;;6541:14;;6701:12;;;;;:22;;:37;;;;;6541:14;;6701:37;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6701:37:16;6767:20;;;;6701:37;;-1:-1:-1;6752:12:16;:35;:52;;;;-1:-1:-1;6791:13:16;;;6752:52;6748:358;;;6820:18;6841:49;6855:4;:20;;;6877:12;6841:13;:49::i;:::-;6820:70;;6904:20;6927:73;6984:15;;6927:52;6963:4;:15;;;6927:31;6942:15;;6927:10;:14;;:31;;;;:::i;:73::-;6904:96;-1:-1:-1;7035:60:16;7058:36;7085:8;7058:22;6904:96;7075:4;7058:16;:22::i;:36::-;7035:18;;:22;:60::i;:::-;7014:81;;6748:358;;;7122:66;7172:4;:15;;;7122:45;7162:4;7122:35;7138:18;7122:4;:11;;;:15;;:35;;;;:::i;:66::-;7115:73;6422:773;-1:-1:-1;;;;;;;6422:773:16:o;2411:22::-;;;-1:-1:-1;;;;;2411:22:16;;:::o;4669:683::-;4782:14;;:39;;;-1:-1:-1;;;4782:39:16;;4810:10;4782:39;;;;;;-1:-1:-1;;;;;4782:14:16;;;;:27;;:39;;;;;;;;;;;;;;;:14;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4782:39:16;;:90;;-1:-1:-1;4825:14:16;;:47;;;-1:-1:-1;;;4825:47:16;;4861:10;4825:47;;;;;;-1:-1:-1;;;;;4825:14:16;;;;:35;;:47;;;;;;;;;;;;;;;:14;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4825:47:16;4782:90;4761:173;;;;-1:-1:-1;;;4761:173:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4948:11;4944:59;;;4975:17;:15;:17::i;:::-;5012:23;5053:10;;5038:12;:25;:53;;5081:10;;5038:53;;;5066:12;5038:53;5119:15;;5012:79;;-1:-1:-1;5119:32:16;;5139:11;5119:19;:32::i;:::-;5101:15;:50;5175:169;;;;;;;;-1:-1:-1;;;;;5175:169:16;;;;;;;;;;;;;;;;;-1:-1:-1;5175:169:16;;;;;;5161:8;:184;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5161:184:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5161:184:16;;;;;;;4669:683::o;8391:745::-;8456:21;8480:8;8489:4;8480:14;;;;;;;;;;;;;;;;8528;;;:8;:14;;;;;;8543:10;8528:26;;;;;;;8480:14;;;;;;;;-1:-1:-1;8564:16:16;8537:4;8564:10;:16::i;:::-;8594:11;;:15;8590:237;;8625:15;8643:71;8698:4;:15;;;8643:50;8688:4;8643:40;8659:4;:23;;;8643:4;:11;;;:15;;:40;;;;:::i;:71::-;8625:89;-1:-1:-1;8731:11:16;;8728:89;;8762:40;8782:10;8794:7;8762:19;:40::i;:::-;8590:237;;8839:11;;8836:167;;8866:12;;:74;;-1:-1:-1;;;;;8866:12:16;8904:10;8925:4;8932:7;8866:29;:74::i;:::-;8968:11;;:24;;8984:7;8968:15;:24::i;:::-;8954:38;;8836:167;9046:23;;;;9030:11;;:50;;9075:4;;9030:40;;:15;:40::i;:50::-;9012:15;;;:68;9095:34;;;;;;;;9115:4;;9103:10;;9095:34;;;;;;;;;8391:745;;;;:::o;10479:292::-;10578:7;;:32;;;-1:-1:-1;;;10578:32:16;;10604:4;10578:32;;;;;;10557:18;;-1:-1:-1;;;;;10578:7:16;;:17;;:32;;;;;;;;;;;;;;:7;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10578:32:16;;-1:-1:-1;10624:20:16;;;10620:145;;;10660:7;;:33;;;-1:-1:-1;;;10660:33:16;;-1:-1:-1;;;;;10660:33:16;;;;;;;;;;;;;;;:7;;;;;:16;;:33;;;;;;;;;;;;;;:7;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10620:145:16;;-1:-1:-1;10620:145:16;;10724:7;;:30;;;-1:-1:-1;;;10724:30:16;;-1:-1:-1;;;;;10724:30:16;;;;;;;;;;;;;;;:7;;;;;:16;;:30;;;;;;;;;;;;;;:7;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10620:145:16;10479:292;;;:::o;2180:459:3:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:3;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:1;2180:459;-1:-1:-1;;;2180:459:3:o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;1321:134::-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;696:175:5:-;805:58;;;-1:-1:-1;;;;;805:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;805:58:5;-1:-1:-1;;;805:58:5;;;778:86;;798:5;;778:19;:86::i;874:176:3:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;877:203:5;1004:68;;;-1:-1:-1;;;;;1004:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1004:68:5;-1:-1:-1;;;1004:68:5;;;977:96;;997:5;;977:19;:96::i;:::-;877:203;;;;:::o;3713:272:3:-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:3:o;1746:187::-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:3;;;1746:187::o;2959:751:5:-;3378:23;3404:69;3432:4;3404:69;;;;;;;;;;;;;;;;;3412:5;-1:-1:-1;;;;;3404:27:5;;;:69;;;;;:::i;:::-;3487:17;;3378:95;;-1:-1:-1;3487:21:5;3483:221;;3627:10;3616:30;;;;;;;;;;;;;;;-1:-1:-1;3616:30:5;3608:85;;;;-1:-1:-1;;;3608:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3573:194:6;3676:12;3707:53;3730:6;3738:4;3744:1;3747:12;3707:22;:53::i;:::-;3700:60;3573:194;-1:-1:-1;;;;3573:194:6:o;4920:958::-;5050:12;5082:18;5093:6;5082:10;:18::i;:::-;5074:60;;;;;-1:-1:-1;;;5074:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;5205:12;5219:23;5246:6;-1:-1:-1;;;;;5246:11:6;5266:8;5277:4;5246:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5246:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5204:78;;;;5296:7;5292:580;;;5326:10;-1:-1:-1;5319:17:6;;-1:-1:-1;5319:17:6;5292:580;5437:17;;:21;5433:429;;5695:10;5689:17;5755:15;5742:10;5738:2;5734:19;5727:44;5644:145;5827:20;;-1:-1:-1;;;5827:20:6;;;;;;;;;;;;;;;;;5834:12;;5827:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:413;1078:20;1116:8;;;718:413::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    950,
    11580
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x630B5BA1 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA8B973A1 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD18DF53C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD18DF53C EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xD69DE7E7 EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x49B JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xA8B973A1 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xC3A43824 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xD0863580 EQ PUSH2 0x42B JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x8D88A90E GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8D88A90E EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x9EC5A894 EQ PUSH2 0x413 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x748365EF EQ PUSH2 0x361 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x2C77F656 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x5BEFDBCA EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x5EEB6710 EQ PUSH2 0x326 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x2C77F656 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x2A0 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x1A4E1E78 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x26D JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x37C99B0 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6AF3DFD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1F6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x57B JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH2 0x674 JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x67A JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x680 JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x686 JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x68B JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x953 JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x9EF JUMP JUMPDEST PUSH2 0x1FE PUSH2 0xA5C JUMP JUMPDEST PUSH2 0x1EC PUSH2 0xA62 JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x369 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC2C JUMP JUMPDEST PUSH2 0x3FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH2 0xCBF JUMP JUMPDEST PUSH2 0x1FE PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x1FE PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0x1FE PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD7F JUMP JUMPDEST PUSH2 0x369 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC395FCB3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC395FCB3 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x190E PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5C6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6465763A207775743F PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT PUSH2 0x60A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6465763A2062726F6B65 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH2 0x629 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x1255 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x640 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x69A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x70D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x716 DUP5 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x750 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x74A PUSH5 0xE8D4A51000 PUSH2 0x744 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x13E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1446 JUMP JUMPDEST SWAP1 PUSH2 0x1488 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x762 JUMPI PUSH2 0x762 CALLER DUP3 PUSH2 0x1255 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x78C JUMPI DUP2 SLOAD PUSH2 0x774 SWAP1 DUP6 PUSH2 0x1488 JUMP JUMPDEST DUP3 SSTORE DUP3 SLOAD PUSH2 0x78C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP3 SLOAD PUSH2 0x7A7 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x744 SWAP2 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7FF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x820 JUMPI POP PUSH2 0x629 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x87E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x8AA JUMPI POP NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH2 0x629 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BA DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xC2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8E7 PUSH1 0xB SLOAD PUSH2 0x744 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x8E1 PUSH1 0x6 SLOAD DUP8 PUSH2 0x13E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x91D JUMPI PUSH2 0x919 PUSH2 0x910 PUSH2 0x3E8 PUSH2 0x744 PUSH1 0x3 SLOAD DUP6 PUSH2 0x13E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH2 0x93E PUSH2 0x933 DUP5 PUSH2 0x744 DUP5 PUSH5 0xE8D4A51000 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE POP POP NUMBER PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x962 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x4 SWAP1 SWAP4 MUL ADD DUP1 SLOAD SWAP1 SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH2 0x9B2 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR DUP3 SSTORE PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x6 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0xC SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD DUP6 AND SWAP3 DUP7 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA81 JUMPI PUSH2 0xA79 DUP2 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xA68 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7E271F05 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xFC4E3E0A SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xB37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x197D PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xB45 JUMPI PUSH2 0xB45 PUSH2 0xA62 JUMP JUMPDEST PUSH2 0xB82 DUP3 PUSH2 0xB7C PUSH1 0x9 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xB59 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0xB SLOAD PUSH2 0x1488 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB96 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC0A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6465763A207775743F PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP3 GT PUSH2 0xC4F JUMPI PUSH1 0x7 SLOAD PUSH2 0xC48 SWAP1 PUSH2 0x8E1 DUP5 DUP7 PUSH2 0x1488 JUMP JUMPDEST SWAP1 POP PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP4 LT PUSH2 0xC62 JUMPI PUSH2 0xC48 DUP3 DUP5 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0xC48 PUSH2 0xC7A PUSH1 0x5 SLOAD DUP5 PUSH2 0x1488 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB7C PUSH1 0x7 SLOAD PUSH2 0x8E1 DUP8 PUSH1 0x5 SLOAD PUSH2 0x1488 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD75 JUMPI PUSH1 0x6 SLOAD DUP2 DUP2 PUSH2 0xD6C JUMPI INVALID JUMPDEST DIV SWAP2 POP POP PUSH2 0x630 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x630 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD8F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP8 MSTORE SWAP1 DUP5 MSTORE DUP2 DUP7 KECCAK256 PUSH1 0x4 SWAP6 DUP7 MUL SWAP1 SWAP4 ADD PUSH1 0x3 DUP2 ADD SLOAD DUP2 SLOAD DUP5 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP9 DUP2 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP4 MLOAD SWAP2 SWAP9 POP SWAP4 SWAP7 SWAP4 SWAP6 SWAP4 SWAP5 SWAP3 SWAP1 SWAP2 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 DUP6 ADD SLOAD SWAP1 SWAP2 POP NUMBER GT DUP1 ISZERO PUSH2 0xE4E JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xEAE JUMPI PUSH1 0x0 PUSH2 0xE63 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xC2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE8A PUSH1 0xB SLOAD PUSH2 0x744 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x8E1 PUSH1 0x6 SLOAD DUP8 PUSH2 0x13E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xEA9 PUSH2 0xEA2 DUP5 PUSH2 0x744 DUP5 PUSH5 0xE8D4A51000 PUSH2 0x13E6 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x151C JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xED6 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x74A PUSH5 0xE8D4A51000 PUSH2 0x744 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x13E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC395FCB3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC395FCB3 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP1 PUSH2 0xFE5 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x89D8559 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x113B0AB2 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFCC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1020 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x190E PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x102E JUMPI PUSH2 0x102E PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD NUMBER GT PUSH2 0x1041 JUMPI PUSH1 0xC SLOAD PUSH2 0x1043 JUMP JUMPDEST NUMBER JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x1053 SWAP1 DUP6 PUSH2 0x151C JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 DUP7 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE SWAP2 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF PUSH1 0x4 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP4 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0 DUP5 ADD SSTORE MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1 DUP4 ADD SSTORE POP SWAP1 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B2 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1152 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x1183 DUP5 PUSH2 0x7F0 JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x11CC JUMPI PUSH1 0x0 PUSH2 0x11B8 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x74A PUSH5 0xE8D4A51000 PUSH2 0x744 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x13E6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x11CA JUMPI PUSH2 0x11CA CALLER DUP3 PUSH2 0x1255 JUMP JUMPDEST POP JUMPDEST DUP3 ISZERO PUSH2 0x11F8 JUMPI DUP2 SLOAD PUSH2 0x11E9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x1576 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x11F5 SWAP1 DUP5 PUSH2 0x151C JUMP JUMPDEST DUP2 SSTORE JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH2 0x1213 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x744 SWAP2 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x135E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x132C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E1 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13F5 JUMPI POP PUSH1 0x0 PUSH2 0xC95 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1402 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x143F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1932 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x13E1 SWAP1 DUP5 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x143F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x15D0 SWAP1 DUP6 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1627 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x160F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1654 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x166E JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x16CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1627 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x160F JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1727 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1783 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x13E1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x13E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1953 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1792 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x179A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17A5 DUP6 PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x17F6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1835 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1897 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x189C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x18B0 JUMPI SWAP2 POP PUSH2 0x1792 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x18C0 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1627 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x160F JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID 0x4D PUSH2 0x7374 PUSH6 0x72436865662E PUSH2 0x6464 GASPRICE KECCAK256 MSTORE8 PUSH6 0x6E646572206D PUSH22 0x73742062652061646D696E536166654D6174683A206D PUSH22 0x6C7469706C69636174696F6E206F766572666C6F7753 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565644D6173746572436865662E736574 GASPRICE KECCAK256 MSTORE8 PUSH6 0x6E646572206D PUSH22 0x7374206265206F70657261746F72A264697066735822 SLT KECCAK256 0xD1 0x27 ADD CREATE2 0x1F 0x5D PUSH23 0x7B2426FDDED998B86C7530675B981150C1B93B0698DB88 PUSH10 0x9764736F6C634300060C STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        950,
        11580
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "12": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "REVERT",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "17": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "POP",
      "path": "16"
    },
    "18": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "LT",
      "path": "16"
    },
    "22": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C4"
    },
    "25": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "29": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "SHR",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x630B5BA1"
    },
    "38": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "GT",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "43": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA8B973A1"
    },
    "49": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "GT",
      "path": "16"
    },
    "50": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "54": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "55": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD18DF53C"
    },
    "60": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "GT",
      "path": "16"
    },
    "61": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "65": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "66": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD18DF53C"
    },
    "71": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "72": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x433"
    },
    "75": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "76": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "77": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD49E77CD"
    },
    "82": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "83": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x45F"
    },
    "86": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "87": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "88": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD69DE7E7"
    },
    "93": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "94": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x467"
    },
    "97": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "98": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "99": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE2BBB158"
    },
    "104": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "105": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49B"
    },
    "108": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "109": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C4"
    },
    "112": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMP",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "114": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "115": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA8B973A1"
    },
    "120": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "121": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x41B"
    },
    "124": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "125": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "126": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3A43824"
    },
    "131": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "132": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x423"
    },
    "135": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "136": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "137": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD0863580"
    },
    "142": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "143": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "146": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "147": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C4"
    },
    "150": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMP",
      "path": "16"
    },
    "151": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "153": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8D88A90E"
    },
    "158": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "GT",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "163": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "164": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8D88A90E"
    },
    "169": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "170": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x385"
    },
    "173": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "174": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "175": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DBB1E3A"
    },
    "180": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "181": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3AB"
    },
    "184": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "185": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "186": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x93F1A40B"
    },
    "191": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "192": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3CE"
    },
    "195": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "196": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "197": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9EC5A894"
    },
    "202": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "203": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x413"
    },
    "206": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "207": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C4"
    },
    "210": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMP",
      "path": "16"
    },
    "211": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "212": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "213": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x630B5BA1"
    },
    "218": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "219": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32E"
    },
    "222": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "223": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "224": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x64482F79"
    },
    "229": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "230": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x336"
    },
    "233": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "234": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "235": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x748365EF"
    },
    "240": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "241": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x361"
    },
    "244": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "245": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C4"
    },
    "248": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMP",
      "path": "16"
    },
    "249": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "250": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "251": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2C77F656"
    },
    "256": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "GT",
      "path": "16"
    },
    "257": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "261": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "262": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x51EB05A6"
    },
    "267": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "GT",
      "path": "16"
    },
    "268": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "272": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "273": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x51EB05A6"
    },
    "278": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "279": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A8"
    },
    "282": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "283": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "284": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5312EA8E"
    },
    "289": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "290": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C5"
    },
    "293": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "294": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "295": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5BEFDBCA"
    },
    "300": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "301": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E2"
    },
    "304": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "305": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "306": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5EEB6710"
    },
    "311": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "312": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x326"
    },
    "315": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "316": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C4"
    },
    "319": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMP",
      "path": "16"
    },
    "320": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "321": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "322": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2C77F656"
    },
    "327": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "328": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x275"
    },
    "331": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "332": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "333": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x441A3E70"
    },
    "338": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "339": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x27D"
    },
    "342": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "343": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "344": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x48CD4CB1"
    },
    "349": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "350": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A0"
    },
    "353": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "354": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C4"
    },
    "357": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMP",
      "path": "16"
    },
    "358": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "359": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "360": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1526FE27"
    },
    "365": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "GT",
      "path": "16"
    },
    "366": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A2"
    },
    "369": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "370": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "371": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1526FE27"
    },
    "376": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "377": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x210"
    },
    "380": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "381": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "382": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x17CAF6F1"
    },
    "387": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "388": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25D"
    },
    "391": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "392": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "393": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1A4E1E78"
    },
    "398": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "399": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x265"
    },
    "402": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "403": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "404": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1AED6553"
    },
    "409": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "410": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26D"
    },
    "413": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "414": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C4"
    },
    "417": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMP",
      "path": "16"
    },
    "418": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "419": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "420": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x37C99B0"
    },
    "425": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "426": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C9"
    },
    "429": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "430": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "431": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6AF3DFD"
    },
    "436": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "437": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EE"
    },
    "440": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "441": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "442": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81E3EDA"
    },
    "447": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "EQ",
      "path": "16"
    },
    "448": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F6"
    },
    "451": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "452": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "453": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "DUP1",
      "path": "16"
    },
    "456": {
      "first_revert": true,
      "fn": null,
      "offset": [
        950,
        11580
      ],
      "op": "REVERT",
      "path": "16"
    },
    "457": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "458": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC"
    },
    "461": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "463": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "464": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "465": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "SUB",
      "path": "16"
    },
    "466": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "468": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "DUP2",
      "path": "16"
    },
    "469": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "LT",
      "path": "16"
    },
    "470": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "471": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DF"
    },
    "474": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "475": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "477": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "478": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "REVERT",
      "path": "16"
    },
    "479": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "480": {
      "op": "POP"
    },
    "481": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "DUP1",
      "path": "16"
    },
    "482": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "483": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "484": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "486": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "ADD",
      "path": "16"
    },
    "487": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "488": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4BE"
    },
    "491": {
      "fn": "MasterChef.setBonus",
      "jump": "i",
      "offset": [
        4084,
        4405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "492": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "493": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "STOP",
      "path": "16"
    },
    "494": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11169,
        11399
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "495": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11169,
        11399
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC"
    },
    "498": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11169,
        11399
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x57B"
    },
    "501": {
      "fn": "MasterChef.claimTips",
      "jump": "i",
      "offset": [
        11169,
        11399
      ],
      "op": "JUMP",
      "path": "16"
    },
    "502": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "503": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "506": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x62C"
    },
    "509": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        4411,
        4504
      ],
      "op": "JUMP",
      "path": "16"
    },
    "510": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "511": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "513": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "DUP1",
      "path": "16"
    },
    "514": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "515": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "516": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "DUP3",
      "path": "16"
    },
    "517": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "518": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "519": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "520": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "DUP2",
      "path": "16"
    },
    "521": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "522": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "SUB",
      "path": "16"
    },
    "523": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "525": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "ADD",
      "path": "16"
    },
    "526": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "527": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "RETURN",
      "path": "16"
    },
    "528": {
      "offset": [
        2986,
        3012
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "529": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22D"
    },
    "532": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "534": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP1",
      "path": "16"
    },
    "535": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "536": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SUB",
      "path": "16"
    },
    "537": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "539": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP2",
      "path": "16"
    },
    "540": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "LT",
      "path": "16"
    },
    "541": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "542": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x226"
    },
    "545": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "546": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "548": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP1",
      "path": "16"
    },
    "549": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "REVERT",
      "path": "16"
    },
    "550": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "551": {
      "op": "POP"
    },
    "552": {
      "offset": [
        2986,
        3012
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "553": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x633"
    },
    "556": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        2986,
        3012
      ],
      "op": "JUMP",
      "path": "16"
    },
    "557": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "558": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "560": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP1",
      "path": "16"
    },
    "561": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "568": {
      "op": "SHL"
    },
    "569": {
      "op": "SUB"
    },
    "570": {
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "571": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "572": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "AND",
      "path": "16"
    },
    "573": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP6",
      "path": "16"
    },
    "574": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "575": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "577": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP6",
      "path": "16"
    },
    "578": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "ADD",
      "path": "16"
    },
    "579": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "580": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "581": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "582": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "583": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP4",
      "path": "16"
    },
    "584": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP4",
      "path": "16"
    },
    "585": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "ADD",
      "path": "16"
    },
    "586": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "587": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "588": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "589": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "590": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "592": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP4",
      "path": "16"
    },
    "593": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "ADD",
      "path": "16"
    },
    "594": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "595": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "596": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "597": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP2",
      "path": "16"
    },
    "598": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "599": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SUB",
      "path": "16"
    },
    "600": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "602": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "ADD",
      "path": "16"
    },
    "603": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "604": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "RETURN",
      "path": "16"
    },
    "605": {
      "offset": [
        3225,
        3255
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "606": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3225,
        3255
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "609": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3225,
        3255
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x674"
    },
    "612": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        3225,
        3255
      ],
      "op": "JUMP",
      "path": "16"
    },
    "613": {
      "offset": [
        2551,
        2570
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "614": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2551,
        2570
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "617": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2551,
        2570
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x67A"
    },
    "620": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        2551,
        2570
      ],
      "op": "JUMP",
      "path": "16"
    },
    "621": {
      "offset": [
        2628,
        2656
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "622": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2628,
        2656
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "625": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2628,
        2656
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x680"
    },
    "628": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        2628,
        2656
      ],
      "op": "JUMP",
      "path": "16"
    },
    "629": {
      "offset": [
        2858,
        2898
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "630": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2858,
        2898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "633": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2858,
        2898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x686"
    },
    "636": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        2858,
        2898
      ],
      "op": "JUMP",
      "path": "16"
    },
    "637": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "638": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC"
    },
    "641": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "643": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "DUP1",
      "path": "16"
    },
    "644": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "645": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "SUB",
      "path": "16"
    },
    "646": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "648": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "DUP2",
      "path": "16"
    },
    "649": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "LT",
      "path": "16"
    },
    "650": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "651": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x293"
    },
    "654": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "655": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "657": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "DUP1",
      "path": "16"
    },
    "658": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "REVERT",
      "path": "16"
    },
    "659": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "660": {
      "op": "POP"
    },
    "661": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "DUP1",
      "path": "16"
    },
    "662": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "663": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "664": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "666": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "ADD",
      "path": "16"
    },
    "667": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "668": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x68B"
    },
    "671": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9185,
        9919
      ],
      "op": "JUMP",
      "path": "16"
    },
    "672": {
      "offset": [
        3313,
        3338
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "673": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3313,
        3338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "676": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3313,
        3338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7EA"
    },
    "679": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        3313,
        3338
      ],
      "op": "JUMP",
      "path": "16"
    },
    "680": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "681": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC"
    },
    "684": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "686": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "DUP1",
      "path": "16"
    },
    "687": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "688": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "SUB",
      "path": "16"
    },
    "689": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "691": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "DUP2",
      "path": "16"
    },
    "692": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "LT",
      "path": "16"
    },
    "693": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "694": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BE"
    },
    "697": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "698": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "700": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "DUP1",
      "path": "16"
    },
    "701": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "REVERT",
      "path": "16"
    },
    "702": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "703": {
      "op": "POP"
    },
    "704": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "705": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F0"
    },
    "708": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        7523,
        8322
      ],
      "op": "JUMP",
      "path": "16"
    },
    "709": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "710": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC"
    },
    "713": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "715": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "DUP1",
      "path": "16"
    },
    "716": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "717": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "SUB",
      "path": "16"
    },
    "718": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "720": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "DUP2",
      "path": "16"
    },
    "721": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "LT",
      "path": "16"
    },
    "722": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "723": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2DB"
    },
    "726": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "727": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "729": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "DUP1",
      "path": "16"
    },
    "730": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "REVERT",
      "path": "16"
    },
    "731": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "732": {
      "op": "POP"
    },
    "733": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "734": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x953"
    },
    "737": {
      "fn": "MasterChef.emergencyWithdraw",
      "jump": "i",
      "offset": [
        9987,
        10364
      ],
      "op": "JUMP",
      "path": "16"
    },
    "738": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "739": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC"
    },
    "742": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "744": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "DUP1",
      "path": "16"
    },
    "745": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "746": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "SUB",
      "path": "16"
    },
    "747": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA0"
    },
    "749": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "DUP2",
      "path": "16"
    },
    "750": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "LT",
      "path": "16"
    },
    "751": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "752": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F8"
    },
    "755": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "756": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "758": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "DUP1",
      "path": "16"
    },
    "759": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "REVERT",
      "path": "16"
    },
    "760": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "761": {
      "op": "POP"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "SUB"
    },
    "770": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "DUP2",
      "path": "16"
    },
    "771": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "772": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "DUP2",
      "path": "16"
    },
    "773": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "AND",
      "path": "16"
    },
    "774": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "775": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "777": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "DUP2",
      "path": "16"
    },
    "778": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "ADD",
      "path": "16"
    },
    "779": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "780": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "781": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "783": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "DUP3",
      "path": "16"
    },
    "784": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "ADD",
      "path": "16"
    },
    "785": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "786": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "787": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "789": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "DUP2",
      "path": "16"
    },
    "790": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "ADD",
      "path": "16"
    },
    "791": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "792": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "DUP3",
      "path": "16"
    },
    "793": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "AND",
      "path": "16"
    },
    "794": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "795": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "797": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "798": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "799": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "ADD",
      "path": "16"
    },
    "800": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "801": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "AND",
      "path": "16"
    },
    "802": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9EF"
    },
    "805": {
      "fn": "MasterChef.initFarm",
      "jump": "i",
      "offset": [
        3591,
        4078
      ],
      "op": "JUMP",
      "path": "16"
    },
    "806": {
      "offset": [
        2702,
        2732
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "807": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2702,
        2732
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "810": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2702,
        2732
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA5C"
    },
    "813": {
      "fn": "MasterChef.initFarm",
      "jump": "i",
      "offset": [
        2702,
        2732
      ],
      "op": "JUMP",
      "path": "16"
    },
    "814": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7275,
        7450
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "815": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7275,
        7450
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC"
    },
    "818": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7275,
        7450
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA62"
    },
    "821": {
      "fn": "MasterChef.massUpdatePools",
      "jump": "i",
      "offset": [
        7275,
        7450
      ],
      "op": "JUMP",
      "path": "16"
    },
    "822": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "823": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC"
    },
    "826": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "828": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "DUP1",
      "path": "16"
    },
    "829": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "830": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "SUB",
      "path": "16"
    },
    "831": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "833": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "DUP2",
      "path": "16"
    },
    "834": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "LT",
      "path": "16"
    },
    "835": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "836": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34C"
    },
    "839": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "840": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "842": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "DUP1",
      "path": "16"
    },
    "843": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "REVERT",
      "path": "16"
    },
    "844": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "845": {
      "op": "POP"
    },
    "846": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "DUP1",
      "path": "16"
    },
    "847": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "848": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "849": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "851": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "DUP2",
      "path": "16"
    },
    "852": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "ADD",
      "path": "16"
    },
    "853": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "854": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "855": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "857": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "ADD",
      "path": "16"
    },
    "858": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "859": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "860": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "861": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA85"
    },
    "864": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        5448,
        5875
      ],
      "op": "JUMP",
      "path": "16"
    },
    "865": {
      "offset": [
        1054,
        1094
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "866": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x369"
    },
    "869": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBB0"
    },
    "872": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        1054,
        1094
      ],
      "op": "JUMP",
      "path": "16"
    },
    "873": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "874": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "876": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "DUP1",
      "path": "16"
    },
    "877": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "884": {
      "op": "SHL"
    },
    "885": {
      "op": "SUB"
    },
    "886": {
      "offset": [
        1054,
        1094
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "887": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "888": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "AND",
      "path": "16"
    },
    "889": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "DUP3",
      "path": "16"
    },
    "890": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "891": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "892": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "893": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "DUP2",
      "path": "16"
    },
    "894": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "895": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "SUB",
      "path": "16"
    },
    "896": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "898": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "ADD",
      "path": "16"
    },
    "899": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "900": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "RETURN",
      "path": "16"
    },
    "901": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "902": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC"
    },
    "905": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "907": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "DUP1",
      "path": "16"
    },
    "908": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "909": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "SUB",
      "path": "16"
    },
    "910": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "912": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "DUP2",
      "path": "16"
    },
    "913": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "LT",
      "path": "16"
    },
    "914": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "915": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39B"
    },
    "918": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "919": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "921": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "DUP1",
      "path": "16"
    },
    "922": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "REVERT",
      "path": "16"
    },
    "923": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "924": {
      "op": "POP"
    },
    "925": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "932": {
      "op": "SHL"
    },
    "933": {
      "op": "SUB"
    },
    "934": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "AND",
      "path": "16"
    },
    "935": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBBF"
    },
    "938": {
      "fn": "MasterChef.dev",
      "jump": "i",
      "offset": [
        11452,
        11578
      ],
      "op": "JUMP",
      "path": "16"
    },
    "939": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "940": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "943": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "945": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "DUP1",
      "path": "16"
    },
    "946": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "947": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "SUB",
      "path": "16"
    },
    "948": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "950": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "DUP2",
      "path": "16"
    },
    "951": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "LT",
      "path": "16"
    },
    "952": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "953": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C1"
    },
    "956": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "957": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "959": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "DUP1",
      "path": "16"
    },
    "960": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "REVERT",
      "path": "16"
    },
    "961": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "DUP1",
      "path": "16"
    },
    "964": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "965": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "966": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "968": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "ADD",
      "path": "16"
    },
    "969": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "970": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC2C"
    },
    "973": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        5949,
        6360
      ],
      "op": "JUMP",
      "path": "16"
    },
    "974": {
      "offset": [
        3066,
        3132
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "975": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3FA"
    },
    "978": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "980": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP1",
      "path": "16"
    },
    "981": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "982": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SUB",
      "path": "16"
    },
    "983": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "985": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP2",
      "path": "16"
    },
    "986": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "LT",
      "path": "16"
    },
    "987": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "988": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E4"
    },
    "991": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "992": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "994": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP1",
      "path": "16"
    },
    "995": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "REVERT",
      "path": "16"
    },
    "996": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "997": {
      "op": "POP"
    },
    "998": {
      "offset": [
        3066,
        3132
      ],
      "op": "DUP1",
      "path": "16"
    },
    "999": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1000": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1001": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1003": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "ADD",
      "path": "16"
    },
    "1004": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "op": "SUB"
    },
    "1013": {
      "offset": [
        3066,
        3132
      ],
      "op": "AND",
      "path": "16"
    },
    "1014": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC9B"
    },
    "1017": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        3066,
        3132
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1018": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1019": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1021": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1022": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1023": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1024": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1025": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1026": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1028": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1029": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "ADD",
      "path": "16"
    },
    "1030": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1031": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1032": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1033": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1034": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1035": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1036": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1037": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1038": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1039": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SUB",
      "path": "16"
    },
    "1040": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "ADD",
      "path": "16"
    },
    "1041": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1042": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "RETURN",
      "path": "16"
    },
    "1043": {
      "offset": [
        2364,
        2385
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1044": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2364,
        2385
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x369"
    },
    "1047": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2364,
        2385
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCBF"
    },
    "1050": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        2364,
        2385
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1051": {
      "offset": [
        2787,
        2817
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1052": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2787,
        2817
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "1055": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2787,
        2817
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCCE"
    },
    "1058": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        2787,
        2817
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1059": {
      "offset": [
        2486,
        2514
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1060": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2486,
        2514
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "1063": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2486,
        2514
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCD4"
    },
    "1066": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        2486,
        2514
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1067": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10856,
        11110
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1068": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10856,
        11110
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "1071": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10856,
        11110
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCDA"
    },
    "1074": {
      "fn": "MasterChef.blocksRemaining",
      "jump": "i",
      "offset": [
        10856,
        11110
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1075": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1076": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE"
    },
    "1079": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1081": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1082": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1083": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "SUB",
      "path": "16"
    },
    "1084": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1086": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1087": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "LT",
      "path": "16"
    },
    "1088": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1089": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x449"
    },
    "1092": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1093": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1095": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1096": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1097": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1098": {
      "op": "POP"
    },
    "1099": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1100": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1101": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1102": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1104": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "ADD",
      "path": "16"
    },
    "1105": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1112": {
      "op": "SHL"
    },
    "1113": {
      "op": "SUB"
    },
    "1114": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "AND",
      "path": "16"
    },
    "1115": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD7F"
    },
    "1118": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        6422,
        7195
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1119": {
      "offset": [
        2411,
        2433
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1120": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2411,
        2433
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x369"
    },
    "1123": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2411,
        2433
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEE1"
    },
    "1126": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        2411,
        2433
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1127": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1128": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC"
    },
    "1131": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1133": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1134": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1135": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "SUB",
      "path": "16"
    },
    "1136": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1138": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1139": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "LT",
      "path": "16"
    },
    "1140": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1141": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47D"
    },
    "1144": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1145": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1147": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1148": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1149": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1150": {
      "op": "POP"
    },
    "1151": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1152": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1153": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1160": {
      "op": "SHL"
    },
    "1161": {
      "op": "SUB"
    },
    "1162": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1164": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1165": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "ADD",
      "path": "16"
    },
    "1166": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1167": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "AND",
      "path": "16"
    },
    "1168": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1169": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1171": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "ADD",
      "path": "16"
    },
    "1172": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1173": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1174": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1175": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEF0"
    },
    "1178": {
      "fn": "MasterChef.addToken",
      "jump": "i",
      "offset": [
        4669,
        5352
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1179": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1180": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EC"
    },
    "1183": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1185": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1186": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1187": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "SUB",
      "path": "16"
    },
    "1188": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1190": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1191": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "LT",
      "path": "16"
    },
    "1192": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1193": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B1"
    },
    "1196": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1197": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1199": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1200": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1201": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1204": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1205": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1206": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1208": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "ADD",
      "path": "16"
    },
    "1209": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "1210": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1143"
    },
    "1213": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8391,
        9136
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1214": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4084,
        4405
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1215": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4226
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 0,
      "value": "0x0"
    },
    "1217": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4226
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1218": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1220": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1221": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1222": {
      "op": "PUSH4",
      "value": "0xC395FCB3"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1231": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1232": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4240,
        4250
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1233": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1235": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1236": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "ADD",
      "path": "16"
    },
    "1237": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1238": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1239": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1246": {
      "op": "SHL"
    },
    "1247": {
      "op": "SUB"
    },
    "1248": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4226
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1249": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4226
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1250": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4226
      ],
      "op": "AND",
      "path": "16"
    },
    "1251": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4226
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1252": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4239
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC395FCB3"
    },
    "1257": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4239
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1258": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1260": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1261": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1262": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "ADD",
      "path": "16"
    },
    "1263": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1264": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1266": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1267": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1268": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1269": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1270": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1271": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1272": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "SUB",
      "path": "16"
    },
    "1273": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "ADD",
      "path": "16"
    },
    "1274": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1275": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4226
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1276": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1277": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "1278": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1279": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1280": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1281": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x509"
    },
    "1284": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1285": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1287": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1288": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1289": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1290": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "POP",
      "path": "16"
    },
    "1291": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "GAS",
      "path": "16"
    },
    "1292": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "1293": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1294": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1295": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1296": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x51D"
    },
    "1299": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1300": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1301": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1303": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1304": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "1305": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1306": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1308": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1309": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1310": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "POP",
      "path": "16"
    },
    "1311": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "POP",
      "path": "16"
    },
    "1312": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "POP",
      "path": "16"
    },
    "1313": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "POP",
      "path": "16"
    },
    "1314": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1316": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1317": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1318": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1320": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1321": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "LT",
      "path": "16"
    },
    "1322": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1323": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x533"
    },
    "1326": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1327": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1329": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1330": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1331": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1332": {
      "op": "POP"
    },
    "1333": {
      "branch": 76,
      "fn": "MasterChef.setBonus",
      "offset": [
        4212,
        4251
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1334": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x570"
    },
    "1337": {
      "branch": 76,
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1338": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1340": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1341": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1347": {
      "op": "SHL"
    },
    "1348": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1349": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1350": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1352": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "ADD",
      "path": "16"
    },
    "1353": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1354": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1355": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1357": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "ADD",
      "path": "16"
    },
    "1358": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1359": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1360": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "SUB",
      "path": "16"
    },
    "1361": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1362": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1363": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1365": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1366": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1367": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1369": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "ADD",
      "path": "16"
    },
    "1370": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1371": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x190E"
    },
    "1374": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1376": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1377": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "CODECOPY",
      "path": "16"
    },
    "1378": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1380": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "ADD",
      "path": "16"
    },
    "1381": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1382": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "POP",
      "path": "16"
    },
    "1383": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "POP",
      "path": "16"
    },
    "1384": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1386": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1387": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1388": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1389": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "SUB",
      "path": "16"
    },
    "1390": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1391": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1392": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4191,
        4313
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1393": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4324,
        4337
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 1,
      "value": "0x5"
    },
    "1395": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4324,
        4354
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1396": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4324,
        4354
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1397": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4324,
        4354
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1398": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4324,
        4354
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1399": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4364,
        4379
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 2,
      "value": "0x7"
    },
    "1401": {
      "fn": "MasterChef.setBonus",
      "offset": [
        4364,
        4398
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1402": {
      "fn": "MasterChef.setBonus",
      "jump": "o",
      "offset": [
        4084,
        4405
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1403": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11169,
        11399
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1404": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11229,
        11236
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 3,
      "value": "0x2"
    },
    "1406": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11229,
        11236
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1413": {
      "op": "SHL"
    },
    "1414": {
      "op": "SUB"
    },
    "1415": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11229,
        11236
      ],
      "op": "AND",
      "path": "16"
    },
    "1416": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11215,
        11225
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1417": {
      "branch": 77,
      "fn": "MasterChef.claimTips",
      "offset": [
        11215,
        11236
      ],
      "op": "EQ",
      "path": "16"
    },
    "1418": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5C6"
    },
    "1421": {
      "branch": 77,
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1422": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1424": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1425": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1426": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1432": {
      "op": "SHL"
    },
    "1433": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1434": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1435": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1437": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1439": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1440": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "ADD",
      "path": "16"
    },
    "1441": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1442": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "1444": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1446": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1447": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "ADD",
      "path": "16"
    },
    "1448": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1449": {
      "op": "PUSH9",
      "value": "0x6465763A207775743F"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "1464": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1465": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "ADD",
      "path": "16"
    },
    "1466": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1467": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1468": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1469": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1470": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1471": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1472": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "SUB",
      "path": "16"
    },
    "1473": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "1475": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "ADD",
      "path": "16"
    },
    "1476": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1477": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1478": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11207,
        11250
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1479": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11275,
        11276
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 4,
      "value": "0x0"
    },
    "1481": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11268,
        11272
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1483": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11268,
        11272
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1484": {
      "branch": 78,
      "fn": "MasterChef.claimTips",
      "offset": [
        11268,
        11276
      ],
      "op": "GT",
      "path": "16"
    },
    "1485": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x60A"
    },
    "1488": {
      "branch": 78,
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1489": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1491": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1492": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1493": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1499": {
      "op": "SHL"
    },
    "1500": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1501": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1502": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1504": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1506": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1507": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "ADD",
      "path": "16"
    },
    "1508": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1509": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "1511": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1513": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1514": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "ADD",
      "path": "16"
    },
    "1515": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1516": {
      "op": "PUSH10",
      "value": "0x6465763A2062726F6B65"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1529": {
      "op": "SHL"
    },
    "1530": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "1532": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1533": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "ADD",
      "path": "16"
    },
    "1534": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1535": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1536": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1537": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1538": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1539": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1540": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "SUB",
      "path": "16"
    },
    "1541": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "1543": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "ADD",
      "path": "16"
    },
    "1544": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1545": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1546": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11260,
        11291
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1547": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11321,
        11325
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1549": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11321,
        11325
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1550": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11321,
        11325
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1551": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11301,
        11318
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1553": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11335,
        11343
      ],
      "op": "SWAP1",
      "path": "16",
      "statement": 5
    },
    "1554": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11335,
        11343
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1555": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11335,
        11343
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1556": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11373,
        11380
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 6,
      "value": "0x2"
    },
    "1558": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11373,
        11380
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1559": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11353,
        11392
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x629"
    },
    "1562": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11353,
        11392
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1569": {
      "op": "SHL"
    },
    "1570": {
      "op": "SUB"
    },
    "1571": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11373,
        11380
      ],
      "op": "AND",
      "path": "16"
    },
    "1572": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11321,
        11325
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1573": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11353,
        11372
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1255"
    },
    "1576": {
      "fn": "MasterChef.claimTips",
      "jump": "i",
      "offset": [
        11353,
        11392
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1577": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11353,
        11392
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1578": {
      "fn": "MasterChef.claimTips",
      "offset": [
        11169,
        11399
      ],
      "op": "POP",
      "path": "16"
    },
    "1579": {
      "fn": "MasterChef.claimTips",
      "jump": "o",
      "offset": [
        11169,
        11399
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1580": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1581": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4482,
        4490
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 7,
      "value": "0x9"
    },
    "1583": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4482,
        4497
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1584": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1585": {
      "fn": "MasterChef.poolLength",
      "offset": [
        4411,
        4504
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1586": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        4411,
        4504
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1587": {
      "offset": [
        2986,
        3012
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1588": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "1590": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1591": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1592": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1593": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1594": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "LT",
      "path": "16"
    },
    "1595": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x640"
    },
    "1598": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1599": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "INVALID",
      "path": "16"
    },
    "1600": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1601": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1603": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1604": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1605": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1606": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1608": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1609": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1610": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1611": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1613": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1614": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1615": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "MUL",
      "path": "16"
    },
    "1616": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "ADD",
      "path": "16"
    },
    "1617": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1618": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1619": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1621": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1622": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "ADD",
      "path": "16"
    },
    "1623": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1624": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1626": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1627": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "ADD",
      "path": "16"
    },
    "1628": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1629": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "1631": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1632": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1633": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "ADD",
      "path": "16"
    },
    "1634": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "op": "SUB"
    },
    "1643": {
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1644": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1645": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "AND",
      "path": "16"
    },
    "1646": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1647": {
      "op": "POP"
    },
    "1648": {
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1649": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1650": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2986,
        3012
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1651": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        2986,
        3012
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1652": {
      "offset": [
        3225,
        3255
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1653": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3225,
        3255
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "1655": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3225,
        3255
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1656": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3225,
        3255
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1657": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        3225,
        3255
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1658": {
      "offset": [
        2551,
        2570
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1659": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2551,
        2570
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1661": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2551,
        2570
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1662": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2551,
        2570
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1663": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        2551,
        2570
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1664": {
      "offset": [
        2628,
        2656
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1665": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2628,
        2656
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "1667": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2628,
        2656
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1668": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2628,
        2656
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1669": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        2628,
        2656
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1670": {
      "offset": [
        2858,
        2898
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1671": {
      "offset": [
        2897,
        2898
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1673": {
      "offset": [
        2858,
        2898
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1674": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        2858,
        2898
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1675": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1676": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9251,
        9272
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1678": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9283
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "1680": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9284,
        9288
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1681": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1682": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1683": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1684": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "LT",
      "path": "16"
    },
    "1685": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x69A"
    },
    "1688": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1689": {
      "dev": "Index out of range",
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "INVALID",
      "path": "16"
    },
    "1690": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1691": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1693": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1694": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1695": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1696": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1698": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1699": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1700": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1701": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9337
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1702": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9337
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1703": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9337
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1704": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9331
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "1706": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9337
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1707": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9337
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1708": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9337
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1710": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9337
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1711": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9337
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1712": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9337
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1713": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9338,
        9348
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1714": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9349
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1715": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9349
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1716": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9349
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1717": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9349
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1718": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9349
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1719": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9349
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1720": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9323,
        9349
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1721": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9367,
        9378
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 8
    },
    "1722": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9367,
        9378
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1723": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1725": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1726": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1727": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "MUL",
      "path": "16"
    },
    "1728": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1729": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1730": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "ADD",
      "path": "16"
    },
    "1731": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9275,
        9289
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1732": {
      "op": "POP"
    },
    "1733": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9367,
        9389
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1734": {
      "op": "GT"
    },
    "1735": {
      "branch": 79,
      "fn": "MasterChef.withdraw",
      "offset": [
        9367,
        9389
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1736": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x70D"
    },
    "1739": {
      "branch": 79,
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1740": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1742": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1743": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1744": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1750": {
      "op": "SHL"
    },
    "1751": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1752": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1753": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1755": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1757": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1758": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "ADD",
      "path": "16"
    },
    "1759": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1760": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "1762": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "1764": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1765": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "ADD",
      "path": "16"
    },
    "1766": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1767": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1788": {
      "op": "SHL"
    },
    "1789": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "1791": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1792": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "ADD",
      "path": "16"
    },
    "1793": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1794": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1795": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1796": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1797": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1798": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1799": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "SUB",
      "path": "16"
    },
    "1800": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "1802": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "ADD",
      "path": "16"
    },
    "1803": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1804": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1805": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9359,
        9412
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1806": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9422,
        9438
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 9,
      "value": "0x716"
    },
    "1809": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9433,
        9437
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1810": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9422,
        9432
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F0"
    },
    "1813": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9422,
        9438
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1814": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9422,
        9438
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1815": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9448,
        9463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1817": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9537
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x750"
    },
    "1820": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9521,
        9525
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1821": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9521,
        9536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1823": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9521,
        9536
      ],
      "op": "ADD",
      "path": "16"
    },
    "1824": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9521,
        9536
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1825": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9516
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x74A"
    },
    "1828": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9511,
        9515
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0xE8D4A51000"
    },
    "1834": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9506
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x744"
    },
    "1837": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9482,
        9486
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1838": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9482,
        9505
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "1840": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9482,
        9505
      ],
      "op": "ADD",
      "path": "16"
    },
    "1841": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9482,
        9505
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1842": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9470
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1843": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9477
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1845": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9477
      ],
      "op": "ADD",
      "path": "16"
    },
    "1846": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9477
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1847": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9481
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E6"
    },
    "1850": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9481
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1851": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9506
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1852": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9506
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1853": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9506
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "1858": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9506
      ],
      "op": "AND",
      "path": "16"
    },
    "1859": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9466,
        9506
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1860": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9506
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1861": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9510
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1862": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9510
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1446"
    },
    "1865": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9466,
        9516
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1866": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9516
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1867": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9520
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1868": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9520
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1488"
    },
    "1871": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9466,
        9537
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1872": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9466,
        9537
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1873": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9448,
        9537
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9550,
        9561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1876": {
      "branch": 80,
      "fn": "MasterChef.withdraw",
      "offset": [
        9550,
        9561
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1877": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9547,
        9628
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x762"
    },
    "1880": {
      "branch": 80,
      "fn": "MasterChef.withdraw",
      "offset": [
        9547,
        9628
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1881": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9577,
        9617
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 10,
      "value": "0x762"
    },
    "1884": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9597,
        9607
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1885": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9609,
        9616
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1886": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9577,
        9596
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1255"
    },
    "1889": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9577,
        9617
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1890": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9577,
        9617
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1891": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9640,
        9651
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1892": {
      "branch": 81,
      "fn": "MasterChef.withdraw",
      "offset": [
        9640,
        9651
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1893": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9637,
        9785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x78C"
    },
    "1896": {
      "branch": 81,
      "fn": "MasterChef.withdraw",
      "offset": [
        9637,
        9785
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1897": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9681,
        9692
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 11
    },
    "1898": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9681,
        9692
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1899": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9681,
        9705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x774"
    },
    "1902": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9681,
        9705
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1903": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9697,
        9704
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1904": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9681,
        9696
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1488"
    },
    "1907": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9681,
        9705
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1908": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9681,
        9705
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1909": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9667,
        9705
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1910": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9667,
        9705
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1911": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9731
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 12
    },
    "1912": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9731
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1913": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x78C"
    },
    "1916": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1923": {
      "op": "SHL"
    },
    "1924": {
      "op": "SUB"
    },
    "1925": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9731
      ],
      "op": "AND",
      "path": "16"
    },
    "1926": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9753,
        9763
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1927": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9766,
        9773
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1928": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9744
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14CA"
    },
    "1931": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9719,
        9774
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1932": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9719,
        9774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1933": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9828,
        9851
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 13,
      "value": "0x3"
    },
    "1935": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9828,
        9851
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1936": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9828,
        9851
      ],
      "op": "ADD",
      "path": "16"
    },
    "1937": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9828,
        9851
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1938": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9812,
        9823
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1939": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9812,
        9823
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1940": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9812,
        9862
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A7"
    },
    "1943": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9812,
        9862
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1944": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9857,
        9861
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0xE8D4A51000"
    },
    "1950": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9857,
        9861
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1951": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9812,
        9852
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x744"
    },
    "1954": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9812,
        9852
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1955": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9812,
        9827
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E6"
    },
    "1958": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        9812,
        9852
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1959": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9812,
        9862
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1960": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9794,
        9809
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1962": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9794,
        9809
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1963": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9794,
        9809
      ],
      "op": "ADD",
      "path": "16"
    },
    "1964": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9794,
        9862
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1965": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0x40"
    },
    "1967": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1968": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1969": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1970": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1971": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1972": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1973": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1974": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9898,
        9902
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1975": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9898,
        9902
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1976": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9886,
        9896
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1977": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9886,
        9896
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1978": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
    },
    "2011": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2012": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2013": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2014": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "SUB",
      "path": "16"
    },
    "2015": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2017": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "ADD",
      "path": "16"
    },
    "2018": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2019": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9877,
        9912
      ],
      "op": "LOG3",
      "path": "16"
    },
    "2020": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "POP",
      "path": "16"
    },
    "2021": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "POP",
      "path": "16"
    },
    "2022": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "POP",
      "path": "16"
    },
    "2023": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "POP",
      "path": "16"
    },
    "2024": {
      "fn": "MasterChef.withdraw",
      "offset": [
        9185,
        9919
      ],
      "op": "POP",
      "path": "16"
    },
    "2025": {
      "fn": "MasterChef.withdraw",
      "jump": "o",
      "offset": [
        9185,
        9919
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2026": {
      "offset": [
        3313,
        3338
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2027": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3313,
        3338
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "2029": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3313,
        3338
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2030": {
      "fn": "MasterChef.withdraw",
      "offset": [
        3313,
        3338
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2031": {
      "fn": "MasterChef.withdraw",
      "jump": "o",
      "offset": [
        3313,
        3338
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2032": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2033": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7574,
        7595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2035": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7606
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "2037": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7607,
        7611
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2038": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2039": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2040": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2041": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "LT",
      "path": "16"
    },
    "2042": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7FF"
    },
    "2045": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2046": {
      "dev": "Index out of range",
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "INVALID",
      "path": "16"
    },
    "2047": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2048": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2049": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2051": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2052": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2054": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2056": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2057": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2058": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2060": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "MUL",
      "path": "16"
    },
    "2061": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7598,
        7612
      ],
      "op": "ADD",
      "path": "16"
    },
    "2062": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7574,
        7612
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2063": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7574,
        7612
      ],
      "op": "POP",
      "path": "16"
    },
    "2064": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7642,
        7646
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2065": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7642,
        7662
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "2067": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7642,
        7662
      ],
      "op": "ADD",
      "path": "16"
    },
    "2068": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7642,
        7662
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2069": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7626,
        7638
      ],
      "op": "NUMBER",
      "path": "16"
    },
    "2070": {
      "branch": 82,
      "fn": "MasterChef.updatePool",
      "offset": [
        7626,
        7662
      ],
      "op": "GT",
      "path": "16"
    },
    "2071": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7622,
        7695
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x820"
    },
    "2074": {
      "branch": 82,
      "fn": "MasterChef.updatePool",
      "offset": [
        7622,
        7695
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2075": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7678,
        7685
      ],
      "op": "POP",
      "path": "16",
      "statement": 15
    },
    "2076": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7678,
        7685
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x629"
    },
    "2079": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7678,
        7685
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2080": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7622,
        7695
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2081": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7735
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2082": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7735
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2083": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2085": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2086": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2087": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2094": {
      "op": "SHL"
    },
    "2095": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2096": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2097": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7754,
        7758
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "2098": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2100": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2101": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "ADD",
      "path": "16"
    },
    "2102": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2103": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2104": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2105": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7704,
        7720
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2107": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7704,
        7720
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2114": {
      "op": "SHL"
    },
    "2115": {
      "op": "SUB"
    },
    "2116": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7735
      ],
      "op": "AND",
      "path": "16"
    },
    "2117": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7735
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2118": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7745
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "2123": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7745
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2124": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2126": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2127": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2128": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "ADD",
      "path": "16"
    },
    "2129": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2130": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2132": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2133": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2134": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2135": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2136": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2137": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "SUB",
      "path": "16"
    },
    "2138": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "ADD",
      "path": "16"
    },
    "2139": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2140": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7735
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2141": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2142": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "2143": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2144": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2145": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2146": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86A"
    },
    "2149": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2150": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2152": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2153": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2154": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2155": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "POP",
      "path": "16"
    },
    "2156": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "GAS",
      "path": "16"
    },
    "2157": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "2158": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2159": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2160": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2161": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x87E"
    },
    "2164": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2165": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2166": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2168": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2169": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "2170": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2171": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2173": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2174": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2175": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "POP",
      "path": "16"
    },
    "2176": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "POP",
      "path": "16"
    },
    "2177": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "POP",
      "path": "16"
    },
    "2178": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "POP",
      "path": "16"
    },
    "2179": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2181": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2182": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2183": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2185": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2186": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "LT",
      "path": "16"
    },
    "2187": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2188": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x894"
    },
    "2191": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2192": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2194": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2195": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2196": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2197": {
      "op": "POP"
    },
    "2198": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2199": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7723,
        7760
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2200": {
      "op": "POP"
    },
    "2201": {
      "branch": 83,
      "fn": "MasterChef.updatePool",
      "offset": [
        7774,
        7787
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2202": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7770,
        7869
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8AA"
    },
    "2205": {
      "branch": 83,
      "fn": "MasterChef.updatePool",
      "offset": [
        7770,
        7869
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2206": {
      "op": "POP"
    },
    "2207": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7826,
        7838
      ],
      "op": "NUMBER",
      "path": "16",
      "statement": 16
    },
    "2208": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7803,
        7823
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "2210": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7803,
        7823
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2211": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7803,
        7823
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2212": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7803,
        7823
      ],
      "op": "ADD",
      "path": "16"
    },
    "2213": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7803,
        7838
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2214": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7852,
        7859
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 17,
      "value": "0x629"
    },
    "2217": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7852,
        7859
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2218": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7770,
        7869
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2219": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7878,
        7896
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2221": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7899,
        7948
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8BA"
    },
    "2224": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7913,
        7917
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2225": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7913,
        7933
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "2227": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7913,
        7933
      ],
      "op": "ADD",
      "path": "16"
    },
    "2228": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7913,
        7933
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2229": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7935,
        7947
      ],
      "op": "NUMBER",
      "path": "16"
    },
    "2230": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7899,
        7912
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC2C"
    },
    "2233": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        7899,
        7948
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2234": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7899,
        7948
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2235": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7878,
        7948
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2236": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7878,
        7948
      ],
      "op": "POP",
      "path": "16"
    },
    "2237": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7958,
        7978
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2239": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        8054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8E7"
    },
    "2242": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8038,
        8053
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "2244": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8038,
        8053
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2245": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        8033
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x744"
    },
    "2248": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8017,
        8021
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2249": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8017,
        8032
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2251": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8017,
        8032
      ],
      "op": "ADD",
      "path": "16"
    },
    "2252": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8017,
        8032
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2253": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        8012
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8E1"
    },
    "2256": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8011
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "2258": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7996,
        8011
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2259": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        7991
      ],
      "op": "DUP8",
      "path": "16"
    },
    "2260": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        7995
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E6"
    },
    "2263": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        7995
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2264": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        8012
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2265": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        8012
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2266": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        8012
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2271": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        8012
      ],
      "op": "AND",
      "path": "16"
    },
    "2272": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        7981,
        8012
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2273": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        8012
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2274": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        8016
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2275": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        8016
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E6"
    },
    "2278": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        7981,
        8033
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2279": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7981,
        8054
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2280": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8068,
        8081
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "2282": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8068,
        8081
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2283": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7958,
        8054
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2284": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7958,
        8054
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2285": {
      "op": "POP"
    },
    "2286": {
      "branch": 84,
      "fn": "MasterChef.updatePool",
      "offset": [
        8068,
        8085
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2287": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8064,
        8170
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x91D"
    },
    "2290": {
      "branch": 84,
      "fn": "MasterChef.updatePool",
      "offset": [
        8064,
        8170
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2291": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8108,
        8159
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 18,
      "value": "0x919"
    },
    "2294": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8117,
        8158
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x910"
    },
    "2297": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8153,
        8157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "2300": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8117,
        8148
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x744"
    },
    "2303": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8134,
        8147
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "2305": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8134,
        8147
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2306": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8117,
        8129
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2307": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8117,
        8133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E6"
    },
    "2310": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8117,
        8133
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2311": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8117,
        8148
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2312": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8117,
        8148
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2313": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8117,
        8148
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2318": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8117,
        8148
      ],
      "op": "AND",
      "path": "16"
    },
    "2319": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        8117,
        8148
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2320": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8117,
        8158
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2321": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8108,
        8112
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2323": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8108,
        8112
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2324": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8108,
        8112
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2325": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8108,
        8116
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x151C"
    },
    "2328": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        8108,
        8159
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2329": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8108,
        8159
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2330": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8101,
        8105
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2332": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8101,
        8159
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2333": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8064,
        8170
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2334": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8205,
        8270
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 19,
      "value": "0x93E"
    },
    "2337": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8233,
        8269
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x933"
    },
    "2340": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8260,
        8268
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2341": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8233,
        8255
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x744"
    },
    "2344": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8233,
        8245
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2345": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8250,
        8254
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0xE8D4A51000"
    },
    "2351": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8233,
        8249
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E6"
    },
    "2354": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        8233,
        8255
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2355": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8233,
        8269
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2356": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8205,
        8228
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "2358": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8205,
        8228
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2359": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8205,
        8228
      ],
      "op": "ADD",
      "path": "16"
    },
    "2360": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8205,
        8228
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2361": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8205,
        8228
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2362": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8205,
        8232
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x151C"
    },
    "2365": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        8205,
        8270
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2366": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8205,
        8270
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2367": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8179,
        8202
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "2369": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8179,
        8202
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2370": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8179,
        8202
      ],
      "op": "ADD",
      "path": "16"
    },
    "2371": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8179,
        8270
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2372": {
      "op": "POP"
    },
    "2373": {
      "op": "POP"
    },
    "2374": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8303,
        8315
      ],
      "op": "NUMBER",
      "path": "16",
      "statement": 20
    },
    "2375": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8280,
        8300
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "2377": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8280,
        8300
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2378": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8280,
        8300
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2379": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8280,
        8300
      ],
      "op": "ADD",
      "path": "16"
    },
    "2380": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8280,
        8315
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2381": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8280,
        8315
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2382": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8280,
        8315
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2383": {
      "fn": "MasterChef.updatePool",
      "offset": [
        8280,
        8315
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2384": {
      "op": "POP"
    },
    "2385": {
      "fn": "MasterChef.updatePool",
      "offset": [
        7523,
        8322
      ],
      "op": "POP",
      "path": "16"
    },
    "2386": {
      "fn": "MasterChef.updatePool",
      "jump": "o",
      "offset": [
        7523,
        8322
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2387": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2388": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10045,
        10066
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2390": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10077
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "2392": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10078,
        10082
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2393": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2394": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2395": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2396": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "LT",
      "path": "16"
    },
    "2397": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x962"
    },
    "2400": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2401": {
      "dev": "Index out of range",
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "INVALID",
      "path": "16"
    },
    "2402": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2403": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2405": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2406": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2407": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2408": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2410": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2411": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2412": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2413": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10131
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2414": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10131
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2415": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10131
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2416": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10125
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "2418": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10131
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2419": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10131
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2420": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10131
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2422": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10131
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2423": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10131
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2424": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10131
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2425": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10132,
        10142
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2426": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10143
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2427": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10143
      ],
      "op": "DUP8",
      "path": "16"
    },
    "2428": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10143
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2429": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10143
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2430": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10143
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2431": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10143
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2432": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10143
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2433": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10170,
        10181
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2434": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10170,
        10181
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2435": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10191,
        10206
      ],
      "op": "DUP6",
      "path": "16",
      "statement": 21
    },
    "2436": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10191,
        10206
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2437": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10191,
        10206
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10216,
        10231
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 22
    },
    "2441": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10216,
        10231
      ],
      "op": "ADD",
      "path": "16"
    },
    "2442": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10216,
        10235
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "2443": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10216,
        10235
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2444": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10216,
        10235
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "2445": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10216,
        10235
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2446": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2448": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2449": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2450": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "MUL",
      "path": "16"
    },
    "2451": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "ADD",
      "path": "16"
    },
    "2452": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10245,
        10257
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 23
    },
    "2453": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10245,
        10257
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2454": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2455": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10069,
        10083
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "2456": {
      "op": "POP"
    },
    "2457": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10143
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2458": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10117,
        10143
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2459": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10170,
        10181
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2460": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10245,
        10299
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9B2"
    },
    "2463": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10245,
        10299
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2470": {
      "op": "SHL"
    },
    "2471": {
      "op": "SUB"
    },
    "2472": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10245,
        10257
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2473": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10245,
        10257
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2474": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10245,
        10257
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2475": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10245,
        10257
      ],
      "op": "AND",
      "path": "16"
    },
    "2476": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10245,
        10257
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2477": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10170,
        10181
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2478": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10245,
        10270
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14CA"
    },
    "2481": {
      "fn": "MasterChef.emergencyWithdraw",
      "jump": "i",
      "offset": [
        10245,
        10299
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2482": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10245,
        10299
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2483": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 24,
      "value": "0x40"
    },
    "2485": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2486": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2487": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2488": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2489": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2490": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2491": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2492": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10344,
        10348
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2493": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10344,
        10348
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2494": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10332,
        10342
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2495": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10332,
        10342
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2496": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
    },
    "2529": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2530": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2531": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2532": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "SUB",
      "path": "16"
    },
    "2533": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2535": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "ADD",
      "path": "16"
    },
    "2536": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2537": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        10314,
        10357
      ],
      "op": "LOG3",
      "path": "16"
    },
    "2538": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "POP",
      "path": "16"
    },
    "2539": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "POP",
      "path": "16"
    },
    "2540": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "POP",
      "path": "16"
    },
    "2541": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        9987,
        10364
      ],
      "op": "POP",
      "path": "16"
    },
    "2542": {
      "fn": "MasterChef.emergencyWithdraw",
      "jump": "o",
      "offset": [
        9987,
        10364
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2543": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3591,
        4078
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2544": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3798,
        3809
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 25,
      "value": "0x8"
    },
    "2546": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3798,
        3809
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2547": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3798,
        3809
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2549": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3798,
        3809
      ],
      "op": "AND",
      "path": "16"
    },
    "2550": {
      "branch": 85,
      "fn": "MasterChef.initFarm",
      "offset": [
        3797,
        3809
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2551": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3789,
        3810
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9FF"
    },
    "2554": {
      "branch": 85,
      "fn": "MasterChef.initFarm",
      "offset": [
        3789,
        3810
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2555": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3789,
        3810
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2557": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3789,
        3810
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2558": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3789,
        3810
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2559": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3789,
        3810
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2560": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3820,
        3827
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 26,
      "value": "0x1"
    },
    "2562": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3820,
        3846
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2563": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3820,
        3846
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2570": {
      "op": "SHL"
    },
    "2571": {
      "op": "SUB"
    },
    "2572": {
      "op": "NOT"
    },
    "2573": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3820,
        3846
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2574": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3820,
        3846
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2575": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3820,
        3846
      ],
      "op": "AND",
      "path": "16"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2582": {
      "op": "SHL"
    },
    "2583": {
      "op": "SUB"
    },
    "2584": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3820,
        3846
      ],
      "op": "SWAP8",
      "path": "16"
    },
    "2585": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3820,
        3846
      ],
      "op": "DUP9",
      "path": "16"
    },
    "2586": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3820,
        3846
      ],
      "op": "AND",
      "path": "16"
    },
    "2587": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3820,
        3846
      ],
      "op": "OR",
      "path": "16"
    },
    "2588": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3820,
        3846
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2589": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3820,
        3846
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2592": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3856,
        3871
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 27,
      "value": "0xB"
    },
    "2594": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3856,
        3875
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2595": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3856,
        3875
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2596": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3856,
        3875
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2597": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3885,
        3896
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 28,
      "value": "0x8"
    },
    "2599": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3885,
        3903
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2600": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3885,
        3903
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2603": {
      "op": "NOT"
    },
    "2604": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3885,
        3903
      ],
      "op": "AND",
      "path": "16"
    },
    "2605": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3885,
        3903
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2606": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3885,
        3903
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2607": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3885,
        3903
      ],
      "op": "OR",
      "path": "16"
    },
    "2608": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3885,
        3903
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2609": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3885,
        3903
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2610": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3885,
        3903
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2611": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3913,
        3928
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 29,
      "value": "0x6"
    },
    "2613": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3913,
        3947
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "2614": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3913,
        3947
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2615": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3913,
        3947
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "2616": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3913,
        3947
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2617": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3957,
        3967
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 30,
      "value": "0xC"
    },
    "2619": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3957,
        3981
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2620": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3957,
        3981
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2621": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3957,
        3981
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2622": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3957,
        3981
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2625": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 31
    },
    "2626": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2627": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2628": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "AND",
      "path": "16"
    },
    "2629": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2630": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2631": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "AND",
      "path": "16"
    },
    "2632": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2633": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2634": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2635": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "OR",
      "path": "16"
    },
    "2636": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2637": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2638": {
      "fn": "MasterChef.initFarm",
      "offset": [
        3991,
        4009
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2639": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4019,
        4071
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 32
    },
    "2640": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4019,
        4071
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2641": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4019,
        4071
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2642": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4019,
        4071
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2643": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4019,
        4071
      ],
      "op": "AND",
      "path": "16"
    },
    "2644": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4019,
        4071
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2645": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4019,
        4071
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2646": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4019,
        4071
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2647": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4019,
        4071
      ],
      "op": "AND",
      "path": "16"
    },
    "2648": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4019,
        4071
      ],
      "op": "OR",
      "path": "16"
    },
    "2649": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4019,
        4071
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2650": {
      "fn": "MasterChef.initFarm",
      "offset": [
        4019,
        4071
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2651": {
      "fn": "MasterChef.initFarm",
      "jump": "o",
      "offset": [
        3591,
        4078
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2652": {
      "offset": [
        2702,
        2732
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2653": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2702,
        2732
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "2655": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2702,
        2732
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2656": {
      "fn": "MasterChef.initFarm",
      "offset": [
        2702,
        2732
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2657": {
      "fn": "MasterChef.initFarm",
      "jump": "o",
      "offset": [
        2702,
        2732
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2658": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7275,
        7450
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2659": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7336,
        7344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "2661": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7336,
        7351
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2662": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7319,
        7333
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2664": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7361,
        7444
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2665": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7389,
        7395
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2666": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7383,
        7386
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2667": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7383,
        7395
      ],
      "op": "LT",
      "path": "16"
    },
    "2668": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7361,
        7444
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2669": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7361,
        7444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA81"
    },
    "2672": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7361,
        7444
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2673": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7418,
        7433
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 33,
      "value": "0xA79"
    },
    "2676": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7429,
        7432
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2677": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7418,
        7428
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F0"
    },
    "2680": {
      "fn": "MasterChef.massUpdatePools",
      "jump": "i",
      "offset": [
        7418,
        7433
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2681": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7418,
        7433
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2682": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7397,
        7402
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 34,
      "value": "0x1"
    },
    "2684": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7397,
        7402
      ],
      "op": "ADD",
      "path": "16"
    },
    "2685": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7361,
        7444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA68"
    },
    "2688": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7361,
        7444
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2689": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7361,
        7444
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2690": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7361,
        7444
      ],
      "op": "POP",
      "path": "16"
    },
    "2691": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        7275,
        7450
      ],
      "op": "POP",
      "path": "16"
    },
    "2692": {
      "fn": "MasterChef.massUpdatePools",
      "jump": "o",
      "offset": [
        7275,
        7450
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2693": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2694": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5567
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 35,
      "value": "0x0"
    },
    "2696": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5567
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2697": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2699": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2700": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2701": {
      "op": "PUSH4",
      "value": "0x7E271F05"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2708": {
      "op": "SHL"
    },
    "2709": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2710": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2711": {
      "fn": "MasterChef.set",
      "offset": [
        5584,
        5594
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2712": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2714": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2715": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "ADD",
      "path": "16"
    },
    "2716": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2717": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2718": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2725": {
      "op": "SHL"
    },
    "2726": {
      "op": "SUB"
    },
    "2727": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5567
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2728": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5567
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2729": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5567
      ],
      "op": "AND",
      "path": "16"
    },
    "2730": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5567
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2731": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5583
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFC4E3E0A"
    },
    "2736": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5583
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2737": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "2739": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2740": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2741": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "ADD",
      "path": "16"
    },
    "2742": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2743": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2745": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2746": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2747": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2748": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2749": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2750": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2751": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "SUB",
      "path": "16"
    },
    "2752": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "ADD",
      "path": "16"
    },
    "2753": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2754": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5567
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2755": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2756": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "2757": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2758": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2759": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2760": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAD0"
    },
    "2763": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2764": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2766": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2767": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2768": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2769": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "POP",
      "path": "16"
    },
    "2770": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "GAS",
      "path": "16"
    },
    "2771": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "2772": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2773": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2774": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2775": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAE4"
    },
    "2778": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2779": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2780": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2782": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2783": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "2784": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2785": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2787": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2788": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2789": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "POP",
      "path": "16"
    },
    "2790": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "POP",
      "path": "16"
    },
    "2791": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "POP",
      "path": "16"
    },
    "2792": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "POP",
      "path": "16"
    },
    "2793": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2795": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2796": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2797": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2799": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2800": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "LT",
      "path": "16"
    },
    "2801": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2802": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAFA"
    },
    "2805": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2806": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2808": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2809": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2810": {
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2811": {
      "op": "POP"
    },
    "2812": {
      "branch": 86,
      "fn": "MasterChef.set",
      "offset": [
        5553,
        5595
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2813": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB37"
    },
    "2816": {
      "branch": 86,
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2817": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2819": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2826": {
      "op": "SHL"
    },
    "2827": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2828": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2829": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2831": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "ADD",
      "path": "16"
    },
    "2832": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2833": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2834": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2836": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "ADD",
      "path": "16"
    },
    "2837": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2838": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2839": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "SUB",
      "path": "16"
    },
    "2840": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2841": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2842": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x27"
    },
    "2844": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2845": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2846": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2848": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "ADD",
      "path": "16"
    },
    "2849": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2850": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x197D"
    },
    "2853": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x27"
    },
    "2855": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2856": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "CODECOPY",
      "path": "16"
    },
    "2857": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2859": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "ADD",
      "path": "16"
    },
    "2860": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2861": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "POP",
      "path": "16"
    },
    "2862": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "POP",
      "path": "16"
    },
    "2863": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2865": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2866": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2867": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2868": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "SUB",
      "path": "16"
    },
    "2869": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2870": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2871": {
      "fn": "MasterChef.set",
      "offset": [
        5532,
        5660
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2872": {
      "branch": 87,
      "fn": "MasterChef.set",
      "offset": [
        5674,
        5685
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2873": {
      "fn": "MasterChef.set",
      "offset": [
        5670,
        5729
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2874": {
      "fn": "MasterChef.set",
      "offset": [
        5670,
        5729
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB45"
    },
    "2877": {
      "branch": 87,
      "fn": "MasterChef.set",
      "offset": [
        5670,
        5729
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2878": {
      "fn": "MasterChef.set",
      "offset": [
        5701,
        5718
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 36,
      "value": "0xB45"
    },
    "2881": {
      "fn": "MasterChef.set",
      "offset": [
        5701,
        5716
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA62"
    },
    "2884": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        5701,
        5718
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2885": {
      "fn": "MasterChef.set",
      "offset": [
        5701,
        5718
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2886": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5819
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 37,
      "value": "0xB82"
    },
    "2889": {
      "fn": "MasterChef.set",
      "offset": [
        5807,
        5818
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2890": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5802
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7C"
    },
    "2893": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5784
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "2895": {
      "fn": "MasterChef.set",
      "offset": [
        5785,
        5789
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2896": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2897": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2898": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2899": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "LT",
      "path": "16"
    },
    "2900": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB59"
    },
    "2903": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2904": {
      "dev": "Index out of range",
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "INVALID",
      "path": "16"
    },
    "2905": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2906": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2907": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2909": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2910": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2912": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2914": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2915": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2916": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2918": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "MUL",
      "path": "16"
    },
    "2919": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5790
      ],
      "op": "ADD",
      "path": "16"
    },
    "2920": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5801
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2922": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5801
      ],
      "op": "ADD",
      "path": "16"
    },
    "2923": {
      "fn": "MasterChef.set",
      "offset": [
        5776,
        5801
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2924": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5771
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "2926": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5771
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2927": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5775
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1488"
    },
    "2930": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5775
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2931": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5802
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2932": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5802
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2933": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5802
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "2938": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5802
      ],
      "op": "AND",
      "path": "16"
    },
    "2939": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        5756,
        5802
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2940": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5802
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2941": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5806
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2942": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5806
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x151C"
    },
    "2945": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        5756,
        5819
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2946": {
      "fn": "MasterChef.set",
      "offset": [
        5756,
        5819
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2947": {
      "fn": "MasterChef.set",
      "offset": [
        5738,
        5753
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "2949": {
      "fn": "MasterChef.set",
      "offset": [
        5738,
        5819
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2950": {
      "fn": "MasterChef.set",
      "offset": [
        5738,
        5819
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2951": {
      "fn": "MasterChef.set",
      "offset": [
        5738,
        5819
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2952": {
      "fn": "MasterChef.set",
      "offset": [
        5738,
        5819
      ],
      "op": "POP",
      "path": "16"
    },
    "2953": {
      "fn": "MasterChef.set",
      "offset": [
        5857,
        5868
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 38
    },
    "2954": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5837
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "2956": {
      "fn": "MasterChef.set",
      "offset": [
        5838,
        5842
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2957": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2958": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2959": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2960": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "LT",
      "path": "16"
    },
    "2961": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB96"
    },
    "2964": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2965": {
      "dev": "Index out of range",
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "INVALID",
      "path": "16"
    },
    "2966": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2967": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2968": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2970": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2971": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2973": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2975": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2976": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2977": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2979": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "MUL",
      "path": "16"
    },
    "2980": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5843
      ],
      "op": "ADD",
      "path": "16"
    },
    "2981": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5854
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2983": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5854
      ],
      "op": "ADD",
      "path": "16"
    },
    "2984": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5868
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2985": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5868
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2986": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5868
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2987": {
      "fn": "MasterChef.set",
      "offset": [
        5829,
        5868
      ],
      "op": "POP",
      "path": "16"
    },
    "2988": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "POP",
      "path": "16"
    },
    "2989": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "POP",
      "path": "16"
    },
    "2990": {
      "fn": "MasterChef.set",
      "offset": [
        5448,
        5875
      ],
      "op": "POP",
      "path": "16"
    },
    "2991": {
      "fn": "MasterChef.set",
      "jump": "o",
      "offset": [
        5448,
        5875
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2992": {
      "offset": [
        1054,
        1094
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2993": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2995": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3002": {
      "op": "SHL"
    },
    "3003": {
      "op": "SUB"
    },
    "3004": {
      "offset": [
        1054,
        1094
      ],
      "op": "AND",
      "path": "16"
    },
    "3005": {
      "fn": "MasterChef.set",
      "offset": [
        1054,
        1094
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3006": {
      "fn": "MasterChef.set",
      "jump": "o",
      "offset": [
        1054,
        1094
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3007": {
      "fn": "MasterChef.dev",
      "offset": [
        11452,
        11578
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3008": {
      "fn": "MasterChef.dev",
      "offset": [
        11522,
        11529
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 39,
      "value": "0x2"
    },
    "3010": {
      "fn": "MasterChef.dev",
      "offset": [
        11522,
        11529
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3017": {
      "op": "SHL"
    },
    "3018": {
      "op": "SUB"
    },
    "3019": {
      "fn": "MasterChef.dev",
      "offset": [
        11522,
        11529
      ],
      "op": "AND",
      "path": "16"
    },
    "3020": {
      "fn": "MasterChef.dev",
      "offset": [
        11508,
        11518
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3021": {
      "branch": 88,
      "fn": "MasterChef.dev",
      "offset": [
        11508,
        11529
      ],
      "op": "EQ",
      "path": "16"
    },
    "3022": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC0A"
    },
    "3025": {
      "branch": 88,
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3026": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3028": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3029": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3030": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3036": {
      "op": "SHL"
    },
    "3037": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3038": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3039": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3041": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3043": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3044": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "ADD",
      "path": "16"
    },
    "3045": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3046": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "3048": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "3050": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3051": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "ADD",
      "path": "16"
    },
    "3052": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3053": {
      "op": "PUSH9",
      "value": "0x6465763A207775743F"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "3065": {
      "op": "SHL"
    },
    "3066": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "3068": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3069": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "ADD",
      "path": "16"
    },
    "3070": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3071": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3072": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3073": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3074": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3075": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3076": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "SUB",
      "path": "16"
    },
    "3077": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x64"
    },
    "3079": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "ADD",
      "path": "16"
    },
    "3080": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3081": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3082": {
      "fn": "MasterChef.dev",
      "offset": [
        11500,
        11543
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3083": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11560
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 40,
      "value": "0x2"
    },
    "3085": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3086": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3093": {
      "op": "SHL"
    },
    "3094": {
      "op": "SUB"
    },
    "3095": {
      "op": "NOT"
    },
    "3096": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "AND",
      "path": "16"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3103": {
      "op": "SHL"
    },
    "3104": {
      "op": "SUB"
    },
    "3105": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3106": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3107": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3108": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "AND",
      "path": "16"
    },
    "3109": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3110": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3111": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3112": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "OR",
      "path": "16"
    },
    "3113": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3114": {
      "fn": "MasterChef.dev",
      "offset": [
        11553,
        11571
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "3115": {
      "fn": "MasterChef.dev",
      "jump": "o",
      "offset": [
        11452,
        11578
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3116": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3117": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6021,
        6028
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3119": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6051,
        6064
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "3121": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6051,
        6064
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3122": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6044,
        6047
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3123": {
      "branch": 89,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6044,
        6064
      ],
      "op": "GT",
      "path": "16"
    },
    "3124": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6040,
        6354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC4F"
    },
    "3127": {
      "branch": 89,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6040,
        6354
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3128": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6106,
        6121
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 41,
      "value": "0x7"
    },
    "3130": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6106,
        6121
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3131": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6087,
        6122
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC48"
    },
    "3134": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6087,
        6122
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3135": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6087,
        6101
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8E1"
    },
    "3138": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6087,
        6090
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3139": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6095,
        6100
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3140": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6087,
        6094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1488"
    },
    "3143": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        6087,
        6101
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3144": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6087,
        6122
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3145": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6080,
        6122
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3146": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6080,
        6122
      ],
      "op": "POP",
      "path": "16"
    },
    "3147": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6080,
        6122
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC95"
    },
    "3150": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6080,
        6122
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3151": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6040,
        6354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3152": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6152,
        6165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "3154": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6152,
        6165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3155": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6143,
        6148
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3156": {
      "branch": 90,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6143,
        6165
      ],
      "op": "LT",
      "path": "16"
    },
    "3157": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6139,
        6354
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC62"
    },
    "3160": {
      "branch": 90,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6139,
        6354
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3161": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6188,
        6202
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 42,
      "value": "0xC48"
    },
    "3164": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6188,
        6191
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3165": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6196,
        6201
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3166": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6188,
        6195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1488"
    },
    "3169": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        6188,
        6202
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3170": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6139,
        6354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3171": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6240,
        6343
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 43,
      "value": "0xC48"
    },
    "3174": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6307,
        6329
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC7A"
    },
    "3177": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6315,
        6328
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "3179": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6315,
        6328
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3180": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6307,
        6310
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3181": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6307,
        6314
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1488"
    },
    "3184": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6307,
        6314
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3185": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6307,
        6329
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3186": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6307,
        6329
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3187": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6307,
        6329
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "3192": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6307,
        6329
      ],
      "op": "AND",
      "path": "16"
    },
    "3193": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        6307,
        6329
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3194": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6307,
        6329
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3195": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6240,
        6285
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7C"
    },
    "3198": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6269,
        6284
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "3200": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6269,
        6284
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3201": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6240,
        6264
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8E1"
    },
    "3204": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6258,
        6263
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3205": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6240,
        6253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x5"
    },
    "3207": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6240,
        6253
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3208": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6240,
        6257
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1488"
    },
    "3211": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6240,
        6257
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3212": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6240,
        6264
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3213": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6240,
        6264
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3214": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6240,
        6264
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "3219": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6240,
        6264
      ],
      "op": "AND",
      "path": "16"
    },
    "3220": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        6240,
        6264
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3221": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        6139,
        6354
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3222": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3223": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3224": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "POP",
      "path": "16"
    },
    "3225": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5949,
        6360
      ],
      "op": "POP",
      "path": "16"
    },
    "3226": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        5949,
        6360
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3227": {
      "offset": [
        3066,
        3132
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3228": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "3230": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3232": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3233": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3234": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3235": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3237": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3238": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3239": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3240": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3242": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3243": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3244": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3245": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3246": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3247": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3248": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3249": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3250": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3251": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3252": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3253": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3254": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3255": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3257": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3258": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3259": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "ADD",
      "path": "16"
    },
    "3260": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3261": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        3066,
        3132
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3262": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        3066,
        3132
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3263": {
      "offset": [
        2364,
        2385
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3264": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2364,
        2385
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3266": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2364,
        2385
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3273": {
      "op": "SHL"
    },
    "3274": {
      "op": "SUB"
    },
    "3275": {
      "offset": [
        2364,
        2385
      ],
      "op": "AND",
      "path": "16"
    },
    "3276": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2364,
        2385
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3277": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        2364,
        2385
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3278": {
      "offset": [
        2787,
        2817
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3279": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2787,
        2817
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "3281": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2787,
        2817
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3282": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2787,
        2817
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3283": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        2787,
        2817
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3284": {
      "offset": [
        2486,
        2514
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3285": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2486,
        2514
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "3287": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2486,
        2514
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3288": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2486,
        2514
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3289": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        2486,
        2514
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3290": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10856,
        11110
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3291": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3293": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10945
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3294": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3296": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3297": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3298": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3305": {
      "op": "SHL"
    },
    "3306": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3307": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3308": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10964,
        10968
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3309": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3311": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3312": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "ADD",
      "path": "16"
    },
    "3313": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3314": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3315": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3316": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10899,
        10906
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3318": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10899,
        10906
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3319": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10899,
        10906
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3320": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10899,
        10906
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3327": {
      "op": "SHL"
    },
    "3328": {
      "op": "SUB"
    },
    "3329": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10945
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3330": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10945
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3331": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10945
      ],
      "op": "AND",
      "path": "16"
    },
    "3332": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10945
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3333": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10955
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "3338": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10955
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3339": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "3341": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3342": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3343": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "ADD",
      "path": "16"
    },
    "3344": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3345": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3347": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3348": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3349": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3350": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3351": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3352": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3353": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "SUB",
      "path": "16"
    },
    "3354": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "ADD",
      "path": "16"
    },
    "3355": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3356": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10945
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3357": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3358": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3359": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3360": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3361": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3362": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD2A"
    },
    "3365": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3366": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3368": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3369": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3370": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3371": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "POP",
      "path": "16"
    },
    "3372": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "GAS",
      "path": "16"
    },
    "3373": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "3374": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3375": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3376": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3377": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD3E"
    },
    "3380": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3381": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3382": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3384": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3385": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3386": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3387": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3389": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3390": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3391": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "POP",
      "path": "16"
    },
    "3392": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "POP",
      "path": "16"
    },
    "3393": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "POP",
      "path": "16"
    },
    "3394": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "POP",
      "path": "16"
    },
    "3395": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3397": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3398": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3399": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3401": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3402": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "LT",
      "path": "16"
    },
    "3403": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3404": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD54"
    },
    "3407": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3408": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3410": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3411": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3412": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3413": {
      "op": "POP"
    },
    "3414": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3415": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10984,
        10999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "3417": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10984,
        10999
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3418": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3419": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10938,
        10970
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3420": {
      "op": "POP"
    },
    "3421": {
      "branch": 91,
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10984,
        11003
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3422": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10980,
        11104
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD75"
    },
    "3425": {
      "branch": 91,
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10980,
        11104
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3426": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11039,
        11054
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 44,
      "value": "0x6"
    },
    "3428": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11039,
        11054
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3429": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11026,
        11036
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3430": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11026,
        11054
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3431": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11026,
        11054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD6C"
    },
    "3434": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11026,
        11054
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3435": {
      "dev": "Division by zero",
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11026,
        11054
      ],
      "op": "INVALID",
      "path": "16"
    },
    "3436": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11026,
        11054
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3437": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11026,
        11054
      ],
      "op": "DIV",
      "path": "16"
    },
    "3438": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11019,
        11054
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3439": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11019,
        11054
      ],
      "op": "POP",
      "path": "16"
    },
    "3440": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11019,
        11054
      ],
      "op": "POP",
      "path": "16"
    },
    "3441": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11019,
        11054
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x630"
    },
    "3444": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11019,
        11054
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3445": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        10980,
        11104
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3446": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11092,
        11093
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 45,
      "value": "0x0"
    },
    "3448": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11085,
        11093
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3449": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11085,
        11093
      ],
      "op": "POP",
      "path": "16"
    },
    "3450": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11085,
        11093
      ],
      "op": "POP",
      "path": "16"
    },
    "3451": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11085,
        11093
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x630"
    },
    "3454": {
      "fn": "MasterChef.blocksRemaining",
      "offset": [
        11085,
        11093
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3455": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3456": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6498,
        6505
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3458": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6517,
        6538
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3459": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6549
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "3461": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6550,
        6554
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3462": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3463": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3464": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3465": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "LT",
      "path": "16"
    },
    "3466": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD8F"
    },
    "3469": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3470": {
      "dev": "Index out of range",
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "INVALID",
      "path": "16"
    },
    "3471": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3472": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3474": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3475": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3476": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3477": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3479": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3480": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3481": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3482": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6603
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3483": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6603
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3484": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6603
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3485": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6597
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "3487": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6603
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3488": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6603
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3489": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6603
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3491": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6603
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3492": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6603
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3493": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6603
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3500": {
      "op": "SHL"
    },
    "3501": {
      "op": "SUB"
    },
    "3502": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "DUP10",
      "path": "16"
    },
    "3503": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3504": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "AND",
      "path": "16"
    },
    "3505": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3506": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3507": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3508": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3509": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3510": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3511": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3512": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3513": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3515": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "3516": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3517": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "MUL",
      "path": "16"
    },
    "3518": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3519": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3520": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "ADD",
      "path": "16"
    },
    "3521": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6649,
        6672
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "3523": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6649,
        6672
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3524": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6649,
        6672
      ],
      "op": "ADD",
      "path": "16"
    },
    "3525": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6649,
        6672
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3526": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6713
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3527": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6713
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3528": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3529": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3530": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3537": {
      "op": "SHL"
    },
    "3538": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3539": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3540": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6732,
        6736
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3541": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "SWAP9",
      "path": "16"
    },
    "3542": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3543": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "ADD",
      "path": "16"
    },
    "3544": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "SWAP9",
      "path": "16"
    },
    "3545": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3546": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "SWAP9",
      "path": "16"
    },
    "3547": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3548": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3549": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3550": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3551": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "SWAP9",
      "path": "16"
    },
    "3552": {
      "op": "POP"
    },
    "3553": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3554": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6589,
        6610
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "3555": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6649,
        6672
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3556": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6649,
        6672
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "3557": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3558": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "3559": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6713
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3560": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6713
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3561": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6713
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3562": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6713
      ],
      "op": "AND",
      "path": "16"
    },
    "3563": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6713
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3564": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6723
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "3569": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6723
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3570": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "3572": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3573": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3574": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "ADD",
      "path": "16"
    },
    "3575": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3576": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3577": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6541,
        6555
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3578": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3579": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3580": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "SUB",
      "path": "16"
    },
    "3581": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "ADD",
      "path": "16"
    },
    "3582": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3583": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6713
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3584": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3585": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3586": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3587": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3588": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3589": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE0D"
    },
    "3592": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3593": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3595": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3596": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3597": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3598": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "POP",
      "path": "16"
    },
    "3599": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "GAS",
      "path": "16"
    },
    "3600": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "3601": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3602": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3603": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3604": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE21"
    },
    "3607": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3608": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3609": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3611": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3612": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3613": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3614": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3616": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3617": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3618": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "POP",
      "path": "16"
    },
    "3619": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "POP",
      "path": "16"
    },
    "3620": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "POP",
      "path": "16"
    },
    "3621": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "POP",
      "path": "16"
    },
    "3622": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3624": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3625": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3626": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3628": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3629": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "LT",
      "path": "16"
    },
    "3630": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3631": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE37"
    },
    "3634": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3635": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3637": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3638": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3639": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3640": {
      "op": "POP"
    },
    "3641": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3642": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6767,
        6787
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "3644": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6767,
        6787
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3645": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6767,
        6787
      ],
      "op": "ADD",
      "path": "16"
    },
    "3646": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6767,
        6787
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3647": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3648": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6701,
        6738
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3649": {
      "op": "POP"
    },
    "3650": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6752,
        6764
      ],
      "op": "NUMBER",
      "path": "16"
    },
    "3651": {
      "branch": 92,
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6752,
        6787
      ],
      "op": "GT",
      "path": "16"
    },
    "3652": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6752,
        6804
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3653": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6752,
        6804
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3654": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6752,
        6804
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4E"
    },
    "3657": {
      "branch": 92,
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6752,
        6804
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3658": {
      "op": "POP"
    },
    "3659": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3660": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6791,
        6804
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3661": {
      "branch": 93,
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6791,
        6804
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3662": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6752,
        6804
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3663": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6748,
        7106
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3664": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6748,
        7106
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEAE"
    },
    "3667": {
      "branch": 93,
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6748,
        7106
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3668": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6820,
        6838
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3670": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6841,
        6890
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE63"
    },
    "3673": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6855,
        6859
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3674": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6855,
        6875
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "3676": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6855,
        6875
      ],
      "op": "ADD",
      "path": "16"
    },
    "3677": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6855,
        6875
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3678": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6877,
        6889
      ],
      "op": "NUMBER",
      "path": "16"
    },
    "3679": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6841,
        6854
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC2C"
    },
    "3682": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        6841,
        6890
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3683": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6841,
        6890
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3684": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6820,
        6890
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3685": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6820,
        6890
      ],
      "op": "POP",
      "path": "16"
    },
    "3686": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6904,
        6924
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3688": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6927,
        7000
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE8A"
    },
    "3691": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6984,
        6999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "3693": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6984,
        6999
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3694": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6927,
        6979
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x744"
    },
    "3697": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6963,
        6967
      ],
      "op": "DUP9",
      "path": "16"
    },
    "3698": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6963,
        6978
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3700": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6963,
        6978
      ],
      "op": "ADD",
      "path": "16"
    },
    "3701": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6963,
        6978
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3702": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6927,
        6958
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8E1"
    },
    "3705": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6957
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "3707": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6942,
        6957
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3708": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6927,
        6937
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3709": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6927,
        6941
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E6"
    },
    "3712": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6927,
        6941
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3713": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6927,
        6958
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3714": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6927,
        6958
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3715": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6927,
        6958
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "3720": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6927,
        6958
      ],
      "op": "AND",
      "path": "16"
    },
    "3721": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        6927,
        6958
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3722": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6927,
        7000
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3723": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6904,
        7000
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3724": {
      "op": "POP"
    },
    "3725": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7035,
        7095
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 46,
      "value": "0xEA9"
    },
    "3728": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7058,
        7094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEA2"
    },
    "3731": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7085,
        7093
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3732": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7058,
        7080
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x744"
    },
    "3735": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6904,
        7000
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3736": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7075,
        7079
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0xE8D4A51000"
    },
    "3742": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7058,
        7074
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E6"
    },
    "3745": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        7058,
        7080
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3746": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7058,
        7094
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3747": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7035,
        7053
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3748": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7035,
        7053
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3749": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7035,
        7057
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x151C"
    },
    "3752": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        7035,
        7095
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3753": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7035,
        7095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3754": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7014,
        7095
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3755": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7014,
        7095
      ],
      "op": "POP",
      "path": "16"
    },
    "3756": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6748,
        7106
      ],
      "op": "POP",
      "path": "16"
    },
    "3757": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6748,
        7106
      ],
      "op": "POP",
      "path": "16"
    },
    "3758": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6748,
        7106
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3759": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7188
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 47,
      "value": "0xED6"
    },
    "3762": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7172,
        7176
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3763": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7172,
        7187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3765": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7172,
        7187
      ],
      "op": "ADD",
      "path": "16"
    },
    "3766": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7172,
        7187
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3767": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x74A"
    },
    "3770": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7162,
        7166
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0xE8D4A51000"
    },
    "3776": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x744"
    },
    "3779": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7138,
        7156
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3780": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7126
      ],
      "op": "DUP9",
      "path": "16"
    },
    "3781": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3783": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7133
      ],
      "op": "ADD",
      "path": "16"
    },
    "3784": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7133
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3785": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7137
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E6"
    },
    "3788": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7137
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3789": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7157
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3790": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7157
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3791": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7157
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "3796": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7157
      ],
      "op": "AND",
      "path": "16"
    },
    "3797": {
      "fn": "MasterChef.pendingRewards",
      "jump": "i",
      "offset": [
        7122,
        7157
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3798": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7122,
        7188
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3799": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        7115,
        7188
      ],
      "op": "SWAP8",
      "path": "16"
    },
    "3800": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        6422,
        7195
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "op": "POP"
    },
    "3803": {
      "op": "POP"
    },
    "3804": {
      "op": "POP"
    },
    "3805": {
      "op": "POP"
    },
    "3806": {
      "op": "POP"
    },
    "3807": {
      "op": "POP"
    },
    "3808": {
      "fn": "MasterChef.pendingRewards",
      "jump": "o",
      "offset": [
        6422,
        7195
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3809": {
      "offset": [
        2411,
        2433
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3810": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2411,
        2433
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "3812": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2411,
        2433
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3819": {
      "op": "SHL"
    },
    "3820": {
      "op": "SUB"
    },
    "3821": {
      "offset": [
        2411,
        2433
      ],
      "op": "AND",
      "path": "16"
    },
    "3822": {
      "fn": "MasterChef.pendingRewards",
      "offset": [
        2411,
        2433
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3823": {
      "fn": "MasterChef.pendingRewards",
      "jump": "o",
      "offset": [
        2411,
        2433
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3824": {
      "fn": "MasterChef.addToken",
      "offset": [
        4669,
        5352
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3825": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4796
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 48,
      "value": "0x0"
    },
    "3827": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4796
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3828": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3830": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3831": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3832": {
      "op": "PUSH4",
      "value": "0xC395FCB3"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3839": {
      "op": "SHL"
    },
    "3840": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3841": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3842": {
      "fn": "MasterChef.addToken",
      "offset": [
        4810,
        4820
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3843": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3845": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3846": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "ADD",
      "path": "16"
    },
    "3847": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3848": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3849": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3856": {
      "op": "SHL"
    },
    "3857": {
      "op": "SUB"
    },
    "3858": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4796
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3859": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4796
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3860": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4796
      ],
      "op": "AND",
      "path": "16"
    },
    "3861": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4796
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3862": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4809
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC395FCB3"
    },
    "3867": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4809
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3868": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "3870": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3871": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3872": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "ADD",
      "path": "16"
    },
    "3873": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3874": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3876": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3877": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3878": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3879": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3880": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3881": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3882": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "SUB",
      "path": "16"
    },
    "3883": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "ADD",
      "path": "16"
    },
    "3884": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3885": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4796
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3886": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3887": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3888": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3889": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3890": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3891": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF3B"
    },
    "3894": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3895": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3897": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3898": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3899": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3900": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "POP",
      "path": "16"
    },
    "3901": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "GAS",
      "path": "16"
    },
    "3902": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "3903": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3904": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3905": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3906": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF4F"
    },
    "3909": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3910": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3911": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3913": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3914": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3915": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3916": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3918": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3919": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3920": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "POP",
      "path": "16"
    },
    "3921": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "POP",
      "path": "16"
    },
    "3922": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "POP",
      "path": "16"
    },
    "3923": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "POP",
      "path": "16"
    },
    "3924": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3926": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3927": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3928": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3930": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3931": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "LT",
      "path": "16"
    },
    "3932": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3933": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF65"
    },
    "3936": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3937": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3939": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3940": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3941": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3942": {
      "op": "POP"
    },
    "3943": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3944": {
      "branch": 94,
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4821
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3945": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4872
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFE5"
    },
    "3948": {
      "branch": 94,
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4872
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3949": {
      "op": "POP"
    },
    "3950": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4839
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3952": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4839
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3953": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3955": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3956": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3957": {
      "op": "PUSH4",
      "value": "0x89D8559"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3964": {
      "op": "SHL"
    },
    "3965": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3966": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3967": {
      "fn": "MasterChef.addToken",
      "offset": [
        4861,
        4871
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3968": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3970": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3971": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "ADD",
      "path": "16"
    },
    "3972": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3973": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3974": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3981": {
      "op": "SHL"
    },
    "3982": {
      "op": "SUB"
    },
    "3983": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4839
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3984": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4839
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3985": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4839
      ],
      "op": "AND",
      "path": "16"
    },
    "3986": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4839
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3987": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4860
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x113B0AB2"
    },
    "3992": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4860
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3993": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "3995": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3996": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3997": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "ADD",
      "path": "16"
    },
    "3998": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3999": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4001": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4002": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4003": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4004": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4005": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4006": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4007": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "SUB",
      "path": "16"
    },
    "4008": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "ADD",
      "path": "16"
    },
    "4009": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4010": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4839
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4011": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4012": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "4013": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4014": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4015": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4016": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFB8"
    },
    "4019": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4020": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4022": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4023": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4024": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4025": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "POP",
      "path": "16"
    },
    "4026": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "GAS",
      "path": "16"
    },
    "4027": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "4028": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4029": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4030": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4031": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFCC"
    },
    "4034": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4035": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4036": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4038": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4039": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4040": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4041": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4043": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4044": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4045": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "POP",
      "path": "16"
    },
    "4046": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "POP",
      "path": "16"
    },
    "4047": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "POP",
      "path": "16"
    },
    "4048": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "POP",
      "path": "16"
    },
    "4049": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4051": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4052": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4053": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4055": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4056": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "LT",
      "path": "16"
    },
    "4057": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4058": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFE2"
    },
    "4061": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4062": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4064": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4065": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4066": {
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4067": {
      "op": "POP"
    },
    "4068": {
      "branch": 95,
      "fn": "MasterChef.addToken",
      "offset": [
        4825,
        4872
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4069": {
      "fn": "MasterChef.addToken",
      "offset": [
        4782,
        4872
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4070": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1020"
    },
    "4073": {
      "branch": 95,
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4074": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4076": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4077": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4083": {
      "op": "SHL"
    },
    "4084": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4085": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4086": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4088": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "ADD",
      "path": "16"
    },
    "4089": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4090": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4091": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4093": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "ADD",
      "path": "16"
    },
    "4094": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4095": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4096": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "SUB",
      "path": "16"
    },
    "4097": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4098": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4099": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4101": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4102": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4103": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4105": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "ADD",
      "path": "16"
    },
    "4106": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4107": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x190E"
    },
    "4110": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4112": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4113": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "CODECOPY",
      "path": "16"
    },
    "4114": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4116": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "ADD",
      "path": "16"
    },
    "4117": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4118": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "POP",
      "path": "16"
    },
    "4119": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "POP",
      "path": "16"
    },
    "4120": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4122": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4123": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4124": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4125": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "SUB",
      "path": "16"
    },
    "4126": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4127": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4128": {
      "fn": "MasterChef.addToken",
      "offset": [
        4761,
        4934
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4129": {
      "branch": 96,
      "fn": "MasterChef.addToken",
      "offset": [
        4948,
        4959
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4130": {
      "fn": "MasterChef.addToken",
      "offset": [
        4944,
        5003
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4131": {
      "fn": "MasterChef.addToken",
      "offset": [
        4944,
        5003
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x102E"
    },
    "4134": {
      "branch": 96,
      "fn": "MasterChef.addToken",
      "offset": [
        4944,
        5003
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4135": {
      "fn": "MasterChef.addToken",
      "offset": [
        4975,
        4992
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 49,
      "value": "0x102E"
    },
    "4138": {
      "fn": "MasterChef.addToken",
      "offset": [
        4975,
        4990
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA62"
    },
    "4141": {
      "fn": "MasterChef.addToken",
      "jump": "i",
      "offset": [
        4975,
        4992
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4142": {
      "fn": "MasterChef.addToken",
      "offset": [
        4975,
        4992
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4143": {
      "fn": "MasterChef.addToken",
      "offset": [
        5012,
        5035
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4145": {
      "fn": "MasterChef.addToken",
      "offset": [
        5053,
        5063
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4147": {
      "fn": "MasterChef.addToken",
      "offset": [
        5053,
        5063
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4148": {
      "fn": "MasterChef.addToken",
      "offset": [
        5038,
        5050
      ],
      "op": "NUMBER",
      "path": "16"
    },
    "4149": {
      "branch": 97,
      "fn": "MasterChef.addToken",
      "offset": [
        5038,
        5063
      ],
      "op": "GT",
      "path": "16"
    },
    "4150": {
      "fn": "MasterChef.addToken",
      "offset": [
        5038,
        5091
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1041"
    },
    "4153": {
      "branch": 97,
      "fn": "MasterChef.addToken",
      "offset": [
        5038,
        5091
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4154": {
      "fn": "MasterChef.addToken",
      "offset": [
        5081,
        5091
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4156": {
      "fn": "MasterChef.addToken",
      "offset": [
        5081,
        5091
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4157": {
      "fn": "MasterChef.addToken",
      "offset": [
        5038,
        5091
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1043"
    },
    "4160": {
      "fn": "MasterChef.addToken",
      "offset": [
        5038,
        5091
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4161": {
      "fn": "MasterChef.addToken",
      "offset": [
        5038,
        5091
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4162": {
      "fn": "MasterChef.addToken",
      "offset": [
        5066,
        5078
      ],
      "op": "NUMBER",
      "path": "16"
    },
    "4163": {
      "fn": "MasterChef.addToken",
      "offset": [
        5038,
        5091
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4164": {
      "fn": "MasterChef.addToken",
      "offset": [
        5119,
        5134
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 50,
      "value": "0xB"
    },
    "4166": {
      "fn": "MasterChef.addToken",
      "offset": [
        5119,
        5134
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4167": {
      "fn": "MasterChef.addToken",
      "offset": [
        5012,
        5091
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4168": {
      "fn": "MasterChef.addToken",
      "offset": [
        5012,
        5091
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4169": {
      "op": "POP"
    },
    "4170": {
      "fn": "MasterChef.addToken",
      "offset": [
        5119,
        5151
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1053"
    },
    "4173": {
      "fn": "MasterChef.addToken",
      "offset": [
        5119,
        5151
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4174": {
      "fn": "MasterChef.addToken",
      "offset": [
        5139,
        5150
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4175": {
      "fn": "MasterChef.addToken",
      "offset": [
        5119,
        5138
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x151C"
    },
    "4178": {
      "fn": "MasterChef.addToken",
      "jump": "i",
      "offset": [
        5119,
        5151
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4179": {
      "fn": "MasterChef.addToken",
      "offset": [
        5119,
        5151
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4180": {
      "fn": "MasterChef.addToken",
      "offset": [
        5101,
        5116
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "4182": {
      "fn": "MasterChef.addToken",
      "offset": [
        5101,
        5151
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4183": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 51,
      "value": "0x40"
    },
    "4185": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4186": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4187": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "4189": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4190": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "ADD",
      "path": "16"
    },
    "4191": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4192": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4199": {
      "op": "SHL"
    },
    "4200": {
      "op": "SUB"
    },
    "4201": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4202": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4203": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "AND",
      "path": "16"
    },
    "4204": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4205": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4206": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4208": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4209": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "ADD",
      "path": "16"
    },
    "4210": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "4211": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4212": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4213": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4214": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4215": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "ADD",
      "path": "16"
    },
    "4216": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4217": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4218": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4221": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4223": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4224": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "ADD",
      "path": "16"
    },
    "4225": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4226": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4227": {
      "fn": "MasterChef.addToken",
      "offset": [
        5175,
        5344
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4228": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5169
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "4230": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4231": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4232": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4234": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4235": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "ADD",
      "path": "16"
    },
    "4236": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4237": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4238": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4239": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4240": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4241": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4242": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
    },
    "4275": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4277": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4278": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4279": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "MUL",
      "path": "16"
    },
    "4280": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4281": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4282": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "ADD",
      "path": "16"
    },
    "4283": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4284": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4291": {
      "op": "SHL"
    },
    "4292": {
      "op": "SUB"
    },
    "4293": {
      "op": "NOT"
    },
    "4294": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "AND",
      "path": "16"
    },
    "4295": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4296": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4297": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "4298": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "AND",
      "path": "16"
    },
    "4299": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "OR",
      "path": "16"
    },
    "4300": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4301": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4302": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4303": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4304": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4305": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0"
    },
    "4338": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4339": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "ADD",
      "path": "16"
    },
    "4340": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4341": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4342": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1"
    },
    "4375": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4376": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "ADD",
      "path": "16"
    },
    "4377": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4378": {
      "op": "POP"
    },
    "4379": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4380": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4381": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B2"
    },
    "4414": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4415": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4416": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "ADD",
      "path": "16"
    },
    "4417": {
      "fn": "MasterChef.addToken",
      "offset": [
        5161,
        5345
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4418": {
      "fn": "MasterChef.addToken",
      "jump": "o",
      "offset": [
        4669,
        5352
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4419": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4420": {
      "fn": "MasterChef.deposit",
      "offset": [
        8456,
        8477
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4422": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8488
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "4424": {
      "fn": "MasterChef.deposit",
      "offset": [
        8489,
        8493
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4425": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4426": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4427": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4428": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "LT",
      "path": "16"
    },
    "4429": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1152"
    },
    "4432": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4433": {
      "dev": "Index out of range",
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "INVALID",
      "path": "16"
    },
    "4434": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4435": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4437": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4438": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4439": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4440": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4442": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4443": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4444": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4445": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8542
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4446": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8542
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4447": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8542
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4448": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "4450": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8542
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4451": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8542
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4452": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8542
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4454": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8542
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4455": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8542
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4456": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8542
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4457": {
      "fn": "MasterChef.deposit",
      "offset": [
        8543,
        8553
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4458": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8554
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4459": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8554
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4460": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8554
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4461": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8554
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4462": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8554
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4463": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8554
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4464": {
      "fn": "MasterChef.deposit",
      "offset": [
        8528,
        8554
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4465": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4467": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4468": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4469": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "MUL",
      "path": "16"
    },
    "4470": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4471": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4472": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "ADD",
      "path": "16"
    },
    "4473": {
      "fn": "MasterChef.deposit",
      "offset": [
        8480,
        8494
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4474": {
      "op": "POP"
    },
    "4475": {
      "fn": "MasterChef.deposit",
      "offset": [
        8564,
        8580
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 52,
      "value": "0x1183"
    },
    "4478": {
      "fn": "MasterChef.deposit",
      "offset": [
        8537,
        8541
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4479": {
      "fn": "MasterChef.deposit",
      "offset": [
        8564,
        8574
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F0"
    },
    "4482": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8564,
        8580
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4483": {
      "fn": "MasterChef.deposit",
      "offset": [
        8564,
        8580
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4484": {
      "fn": "MasterChef.deposit",
      "offset": [
        8594,
        8605
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4485": {
      "fn": "MasterChef.deposit",
      "offset": [
        8594,
        8605
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4486": {
      "branch": 98,
      "fn": "MasterChef.deposit",
      "offset": [
        8594,
        8609
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4487": {
      "fn": "MasterChef.deposit",
      "offset": [
        8590,
        8827
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11CC"
    },
    "4490": {
      "branch": 98,
      "fn": "MasterChef.deposit",
      "offset": [
        8590,
        8827
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4491": {
      "fn": "MasterChef.deposit",
      "offset": [
        8625,
        8640
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4493": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8714
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11B8"
    },
    "4496": {
      "fn": "MasterChef.deposit",
      "offset": [
        8698,
        8702
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4497": {
      "fn": "MasterChef.deposit",
      "offset": [
        8698,
        8713
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4499": {
      "fn": "MasterChef.deposit",
      "offset": [
        8698,
        8713
      ],
      "op": "ADD",
      "path": "16"
    },
    "4500": {
      "fn": "MasterChef.deposit",
      "offset": [
        8698,
        8713
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4501": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8693
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x74A"
    },
    "4504": {
      "fn": "MasterChef.deposit",
      "offset": [
        8688,
        8692
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0xE8D4A51000"
    },
    "4510": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8683
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x744"
    },
    "4513": {
      "fn": "MasterChef.deposit",
      "offset": [
        8659,
        8663
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4514": {
      "fn": "MasterChef.deposit",
      "offset": [
        8659,
        8682
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "4516": {
      "fn": "MasterChef.deposit",
      "offset": [
        8659,
        8682
      ],
      "op": "ADD",
      "path": "16"
    },
    "4517": {
      "fn": "MasterChef.deposit",
      "offset": [
        8659,
        8682
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4518": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8647
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4519": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4521": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8654
      ],
      "op": "ADD",
      "path": "16"
    },
    "4522": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8654
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4523": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8658
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E6"
    },
    "4526": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8658
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4527": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8683
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4528": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8683
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4529": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8683
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFFFFFFF"
    },
    "4534": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8683
      ],
      "op": "AND",
      "path": "16"
    },
    "4535": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8643,
        8683
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4536": {
      "fn": "MasterChef.deposit",
      "offset": [
        8643,
        8714
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4537": {
      "fn": "MasterChef.deposit",
      "offset": [
        8625,
        8714
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4538": {
      "op": "POP"
    },
    "4539": {
      "fn": "MasterChef.deposit",
      "offset": [
        8731,
        8742
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4540": {
      "branch": 99,
      "fn": "MasterChef.deposit",
      "offset": [
        8731,
        8742
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4541": {
      "fn": "MasterChef.deposit",
      "offset": [
        8728,
        8817
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11CA"
    },
    "4544": {
      "branch": 99,
      "fn": "MasterChef.deposit",
      "offset": [
        8728,
        8817
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4545": {
      "fn": "MasterChef.deposit",
      "offset": [
        8762,
        8802
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 53,
      "value": "0x11CA"
    },
    "4548": {
      "fn": "MasterChef.deposit",
      "offset": [
        8782,
        8792
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4549": {
      "fn": "MasterChef.deposit",
      "offset": [
        8794,
        8801
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4550": {
      "fn": "MasterChef.deposit",
      "offset": [
        8762,
        8781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1255"
    },
    "4553": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8762,
        8802
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4554": {
      "fn": "MasterChef.deposit",
      "offset": [
        8762,
        8802
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4555": {
      "fn": "MasterChef.deposit",
      "offset": [
        8590,
        8827
      ],
      "op": "POP",
      "path": "16"
    },
    "4556": {
      "fn": "MasterChef.deposit",
      "offset": [
        8590,
        8827
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4557": {
      "fn": "MasterChef.deposit",
      "offset": [
        8839,
        8850
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4558": {
      "branch": 100,
      "fn": "MasterChef.deposit",
      "offset": [
        8839,
        8850
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4559": {
      "fn": "MasterChef.deposit",
      "offset": [
        8836,
        9003
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11F8"
    },
    "4562": {
      "branch": 100,
      "fn": "MasterChef.deposit",
      "offset": [
        8836,
        9003
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4563": {
      "fn": "MasterChef.deposit",
      "offset": [
        8866,
        8878
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 54
    },
    "4564": {
      "fn": "MasterChef.deposit",
      "offset": [
        8866,
        8878
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4565": {
      "fn": "MasterChef.deposit",
      "offset": [
        8866,
        8940
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11E9"
    },
    "4568": {
      "fn": "MasterChef.deposit",
      "offset": [
        8866,
        8940
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4575": {
      "op": "SHL"
    },
    "4576": {
      "op": "SUB"
    },
    "4577": {
      "fn": "MasterChef.deposit",
      "offset": [
        8866,
        8878
      ],
      "op": "AND",
      "path": "16"
    },
    "4578": {
      "fn": "MasterChef.deposit",
      "offset": [
        8904,
        8914
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4579": {
      "fn": "MasterChef.deposit",
      "offset": [
        8925,
        8929
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "4580": {
      "fn": "MasterChef.deposit",
      "offset": [
        8932,
        8939
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4581": {
      "fn": "MasterChef.deposit",
      "offset": [
        8866,
        8895
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1576"
    },
    "4584": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8866,
        8940
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4585": {
      "fn": "MasterChef.deposit",
      "offset": [
        8866,
        8940
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4586": {
      "fn": "MasterChef.deposit",
      "offset": [
        8968,
        8979
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 55
    },
    "4587": {
      "fn": "MasterChef.deposit",
      "offset": [
        8968,
        8979
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4588": {
      "fn": "MasterChef.deposit",
      "offset": [
        8968,
        8992
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11F5"
    },
    "4591": {
      "fn": "MasterChef.deposit",
      "offset": [
        8968,
        8992
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4592": {
      "fn": "MasterChef.deposit",
      "offset": [
        8984,
        8991
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4593": {
      "fn": "MasterChef.deposit",
      "offset": [
        8968,
        8983
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x151C"
    },
    "4596": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        8968,
        8992
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4597": {
      "fn": "MasterChef.deposit",
      "offset": [
        8968,
        8992
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4598": {
      "fn": "MasterChef.deposit",
      "offset": [
        8954,
        8992
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4599": {
      "fn": "MasterChef.deposit",
      "offset": [
        8954,
        8992
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4600": {
      "fn": "MasterChef.deposit",
      "offset": [
        8836,
        9003
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4601": {
      "fn": "MasterChef.deposit",
      "offset": [
        9046,
        9069
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 56,
      "value": "0x3"
    },
    "4603": {
      "fn": "MasterChef.deposit",
      "offset": [
        9046,
        9069
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4604": {
      "fn": "MasterChef.deposit",
      "offset": [
        9046,
        9069
      ],
      "op": "ADD",
      "path": "16"
    },
    "4605": {
      "fn": "MasterChef.deposit",
      "offset": [
        9046,
        9069
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4606": {
      "fn": "MasterChef.deposit",
      "offset": [
        9030,
        9041
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4607": {
      "fn": "MasterChef.deposit",
      "offset": [
        9030,
        9041
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4608": {
      "fn": "MasterChef.deposit",
      "offset": [
        9030,
        9080
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1213"
    },
    "4611": {
      "fn": "MasterChef.deposit",
      "offset": [
        9030,
        9080
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4612": {
      "fn": "MasterChef.deposit",
      "offset": [
        9075,
        9079
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0xE8D4A51000"
    },
    "4618": {
      "fn": "MasterChef.deposit",
      "offset": [
        9075,
        9079
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4619": {
      "fn": "MasterChef.deposit",
      "offset": [
        9030,
        9070
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x744"
    },
    "4622": {
      "fn": "MasterChef.deposit",
      "offset": [
        9030,
        9070
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4623": {
      "fn": "MasterChef.deposit",
      "offset": [
        9030,
        9045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E6"
    },
    "4626": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        9030,
        9070
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4627": {
      "fn": "MasterChef.deposit",
      "offset": [
        9030,
        9080
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4628": {
      "fn": "MasterChef.deposit",
      "offset": [
        9012,
        9027
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4630": {
      "fn": "MasterChef.deposit",
      "offset": [
        9012,
        9027
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4631": {
      "fn": "MasterChef.deposit",
      "offset": [
        9012,
        9027
      ],
      "op": "ADD",
      "path": "16"
    },
    "4632": {
      "fn": "MasterChef.deposit",
      "offset": [
        9012,
        9080
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4633": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 57,
      "value": "0x40"
    },
    "4635": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4636": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4637": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4638": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4639": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4640": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4641": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4642": {
      "fn": "MasterChef.deposit",
      "offset": [
        9115,
        9119
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4643": {
      "fn": "MasterChef.deposit",
      "offset": [
        9115,
        9119
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4644": {
      "fn": "MasterChef.deposit",
      "offset": [
        9103,
        9113
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4645": {
      "fn": "MasterChef.deposit",
      "offset": [
        9103,
        9113
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4646": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
    },
    "4679": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4680": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4681": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4682": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "SUB",
      "path": "16"
    },
    "4683": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4685": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "ADD",
      "path": "16"
    },
    "4686": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4687": {
      "fn": "MasterChef.deposit",
      "offset": [
        9095,
        9129
      ],
      "op": "LOG3",
      "path": "16"
    },
    "4688": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "POP",
      "path": "16"
    },
    "4689": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "POP",
      "path": "16"
    },
    "4690": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "POP",
      "path": "16"
    },
    "4691": {
      "fn": "MasterChef.deposit",
      "offset": [
        8391,
        9136
      ],
      "op": "POP",
      "path": "16"
    },
    "4692": {
      "fn": "MasterChef.deposit",
      "jump": "o",
      "offset": [
        8391,
        9136
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4693": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10479,
        10771
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4694": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4696": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10585
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4697": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4699": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4700": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4701": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4708": {
      "op": "SHL"
    },
    "4709": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4710": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4711": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10604,
        10608
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "4712": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4714": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4715": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "ADD",
      "path": "16"
    },
    "4716": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4717": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4718": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4719": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10557,
        10575
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4721": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10557,
        10575
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4728": {
      "op": "SHL"
    },
    "4729": {
      "op": "SUB"
    },
    "4730": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10585
      ],
      "op": "AND",
      "path": "16"
    },
    "4731": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10585
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4732": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10595
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "4737": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10595
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4738": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4740": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4741": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4742": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "ADD",
      "path": "16"
    },
    "4743": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4744": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4746": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4747": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4748": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4749": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4750": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4751": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "SUB",
      "path": "16"
    },
    "4752": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "ADD",
      "path": "16"
    },
    "4753": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4754": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10585
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4755": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4756": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "4757": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4758": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4759": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4760": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12A0"
    },
    "4763": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4764": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4766": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4767": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4768": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4769": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "POP",
      "path": "16"
    },
    "4770": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "GAS",
      "path": "16"
    },
    "4771": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "4772": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4773": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4774": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4775": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12B4"
    },
    "4778": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4779": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4780": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4782": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4783": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4784": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4785": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4787": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4788": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4789": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "POP",
      "path": "16"
    },
    "4790": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "POP",
      "path": "16"
    },
    "4791": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "POP",
      "path": "16"
    },
    "4792": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "POP",
      "path": "16"
    },
    "4793": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4795": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4796": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4797": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4799": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4800": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "LT",
      "path": "16"
    },
    "4801": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4802": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12CA"
    },
    "4805": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4806": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4808": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4809": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4810": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4811": {
      "op": "POP"
    },
    "4812": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4813": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10578,
        10610
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4814": {
      "op": "POP"
    },
    "4815": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10624,
        10644
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4816": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10624,
        10644
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4817": {
      "branch": 101,
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10624,
        10644
      ],
      "op": "GT",
      "path": "16"
    },
    "4818": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10620,
        10765
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4819": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10620,
        10765
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x135E"
    },
    "4822": {
      "branch": 101,
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10620,
        10765
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4823": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10667
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 58,
      "value": "0x1"
    },
    "4825": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10667
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4826": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4828": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4829": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4830": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4837": {
      "op": "SHL"
    },
    "4838": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4839": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4846": {
      "op": "SHL"
    },
    "4847": {
      "op": "SUB"
    },
    "4848": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4849": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4850": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "AND",
      "path": "16"
    },
    "4851": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4853": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4854": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "ADD",
      "path": "16"
    },
    "4855": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4856": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4858": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4859": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "ADD",
      "path": "16"
    },
    "4860": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4861": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4862": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4863": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4864": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4865": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10667
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4866": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10667
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4867": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10667
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4868": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10667
      ],
      "op": "AND",
      "path": "16"
    },
    "4869": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10667
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4870": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10676
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA9059CBB"
    },
    "4875": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10676
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4876": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "4878": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4879": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4880": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "ADD",
      "path": "16"
    },
    "4881": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4882": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4884": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4885": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4886": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4887": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4888": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4889": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "SUB",
      "path": "16"
    },
    "4890": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "ADD",
      "path": "16"
    },
    "4891": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4892": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10667
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4894": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10667
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4895": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4896": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "4897": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4898": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4899": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4900": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x132C"
    },
    "4903": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4904": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4906": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4907": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4908": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4909": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "POP",
      "path": "16"
    },
    "4910": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "GAS",
      "path": "16"
    },
    "4911": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "CALL",
      "path": "16"
    },
    "4912": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4913": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4914": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4915": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1340"
    },
    "4918": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4919": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4920": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4922": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4923": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4924": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4925": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4927": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4928": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4929": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "POP",
      "path": "16"
    },
    "4930": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "POP",
      "path": "16"
    },
    "4931": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "POP",
      "path": "16"
    },
    "4932": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "POP",
      "path": "16"
    },
    "4933": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4935": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4936": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4937": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4939": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4940": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "LT",
      "path": "16"
    },
    "4941": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4942": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1356"
    },
    "4945": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4946": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4948": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4949": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4950": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10660,
        10693
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4951": {
      "op": "POP"
    },
    "4952": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10620,
        10765
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13E1"
    },
    "4955": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10620,
        10765
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4956": {
      "op": "POP"
    },
    "4957": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10620,
        10765
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4958": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10620,
        10765
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4959": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10731
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 59,
      "value": "0x1"
    },
    "4961": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10731
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4962": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4964": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4965": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4966": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4973": {
      "op": "SHL"
    },
    "4974": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4975": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4982": {
      "op": "SHL"
    },
    "4983": {
      "op": "SUB"
    },
    "4984": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4985": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4986": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "AND",
      "path": "16"
    },
    "4987": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4989": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4990": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "ADD",
      "path": "16"
    },
    "4991": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4992": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x24"
    },
    "4994": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4995": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "ADD",
      "path": "16"
    },
    "4996": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP7",
      "path": "16"
    },
    "4997": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4998": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4999": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5000": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5001": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10731
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5002": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10731
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5003": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10731
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5004": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10731
      ],
      "op": "AND",
      "path": "16"
    },
    "5005": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10731
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5006": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10740
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA9059CBB"
    },
    "5011": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10740
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5012": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "5014": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5015": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5016": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "ADD",
      "path": "16"
    },
    "5017": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5018": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5020": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5021": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5022": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5023": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5024": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5025": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "SUB",
      "path": "16"
    },
    "5026": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "ADD",
      "path": "16"
    },
    "5027": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5028": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10731
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5030": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10731
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5031": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5032": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "5033": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5034": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5035": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5036": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13B4"
    },
    "5039": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5040": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5042": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5043": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5044": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5045": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "POP",
      "path": "16"
    },
    "5046": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "GAS",
      "path": "16"
    },
    "5047": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "CALL",
      "path": "16"
    },
    "5048": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5049": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5050": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5051": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13C8"
    },
    "5054": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5055": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5056": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5058": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5059": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "5060": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5061": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5063": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5064": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5065": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "POP",
      "path": "16"
    },
    "5066": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "POP",
      "path": "16"
    },
    "5067": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "POP",
      "path": "16"
    },
    "5068": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "POP",
      "path": "16"
    },
    "5069": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5071": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5072": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5073": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5075": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5076": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "LT",
      "path": "16"
    },
    "5077": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5078": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13DE"
    },
    "5081": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5082": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5084": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5085": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "REVERT",
      "path": "16"
    },
    "5086": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10724,
        10754
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5087": {
      "op": "POP"
    },
    "5088": {
      "op": "POP"
    },
    "5089": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10620,
        10765
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5090": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10479,
        10771
      ],
      "op": "POP",
      "path": "16"
    },
    "5091": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10479,
        10771
      ],
      "op": "POP",
      "path": "16"
    },
    "5092": {
      "fn": "MasterChef.safeRewardsTransfer",
      "offset": [
        10479,
        10771
      ],
      "op": "POP",
      "path": "16"
    },
    "5093": {
      "fn": "MasterChef.safeRewardsTransfer",
      "jump": "o",
      "offset": [
        10479,
        10771
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5094": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5095": {
      "fn": "SafeMath.mul",
      "offset": [
        2238,
        2245
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5097": {
      "branch": 107,
      "fn": "SafeMath.mul",
      "offset": [
        2479,
        2485
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5098": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13F5"
    },
    "5101": {
      "branch": 107,
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5102": {
      "op": "POP"
    },
    "5103": {
      "fn": "SafeMath.mul",
      "offset": [
        2508,
        2509
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 60,
      "value": "0x0"
    },
    "5105": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC95"
    },
    "5108": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5109": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5110": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5111": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5112": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "MUL",
      "path": "3"
    },
    "5113": {
      "fn": "SafeMath.mul",
      "offset": [
        2546,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5114": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5115": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5116": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5117": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 61,
      "value": "0x1402"
    },
    "5120": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5121": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "INVALID",
      "path": "3"
    },
    "5122": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5123": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "DIV",
      "path": "3"
    },
    "5124": {
      "branch": 108,
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2575
      ],
      "op": "EQ",
      "path": "3"
    },
    "5125": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143F"
    },
    "5128": {
      "branch": 108,
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5129": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5131": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5132": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5138": {
      "op": "SHL"
    },
    "5139": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5140": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5141": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5143": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "5144": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5145": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5146": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5148": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "5149": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5150": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5151": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SUB",
      "path": "3"
    },
    "5152": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5153": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5154": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "5156": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5157": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5158": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5160": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "5161": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5162": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1932"
    },
    "5165": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "5167": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5168": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "5169": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5171": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "5172": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5173": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "POP",
      "path": "3"
    },
    "5174": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "POP",
      "path": "3"
    },
    "5175": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5177": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5178": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5179": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5180": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SUB",
      "path": "3"
    },
    "5181": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5182": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5183": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5184": {
      "fn": "SafeMath.mul",
      "offset": [
        2631,
        2632
      ],
      "op": "SWAP4",
      "path": "3",
      "statement": 62
    },
    "5185": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5186": {
      "op": "POP"
    },
    "5187": {
      "op": "POP"
    },
    "5188": {
      "op": "POP"
    },
    "5189": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5190": {
      "fn": "SafeMath.div",
      "offset": [
        3101,
        3231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5191": {
      "fn": "SafeMath.div",
      "offset": [
        3159,
        3166
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5193": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 63,
      "value": "0x143F"
    },
    "5196": {
      "fn": "SafeMath.div",
      "offset": [
        3189,
        3190
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5197": {
      "fn": "SafeMath.div",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5198": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5200": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5201": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5202": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5204": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "3"
    },
    "5205": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5207": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5208": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5209": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "5211": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5212": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5213": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5215": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "3"
    },
    "5216": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "5249": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5250": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5251": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "POP",
      "path": "3"
    },
    "5252": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3188
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15D6"
    },
    "5255": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3185,
        3224
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5256": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5257": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5259": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 64,
      "value": "0x143F"
    },
    "5262": {
      "fn": "SafeMath.sub",
      "offset": [
        1409,
        1410
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5263": {
      "fn": "SafeMath.sub",
      "offset": [
        1412,
        1413
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5264": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5266": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5267": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5268": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5270": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "5271": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5273": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5274": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5275": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "5277": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5278": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5279": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5281": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "5282": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "5315": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5316": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5317": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "POP",
      "path": "3"
    },
    "5318": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1678"
    },
    "5321": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1405,
        1448
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5322": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        696,
        871
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5323": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 65,
      "value": "0x40"
    },
    "5325": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5326": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5333": {
      "op": "SHL"
    },
    "5334": {
      "op": "SUB"
    },
    "5335": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5336": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "AND",
      "path": "5"
    },
    "5337": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5339": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5340": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "5341": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5342": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "5344": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5345": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5346": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "5347": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5348": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5349": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5350": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5351": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5352": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5353": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5354": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SUB",
      "path": "5"
    },
    "5355": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5356": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5357": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "5358": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5359": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5360": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "5362": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5363": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5364": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "5365": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5366": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5367": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5368": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5370": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5371": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "5372": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5373": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5380": {
      "op": "SHL"
    },
    "5381": {
      "op": "SUB"
    },
    "5382": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "AND",
      "path": "5"
    },
    "5383": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5390": {
      "op": "SHL"
    },
    "5391": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "OR",
      "path": "5"
    },
    "5392": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5393": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5394": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13E1"
    },
    "5397": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        864
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5398": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        798,
        803
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5399": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        798,
        803
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5400": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        797
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16D2"
    },
    "5403": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        778,
        864
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5404": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5405": {
      "fn": "SafeMath.add",
      "offset": [
        932,
        939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5407": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5408": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5409": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "ADD",
      "path": "3"
    },
    "5410": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 66
    },
    "5411": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5412": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "LT",
      "path": "3"
    },
    "5413": {
      "branch": 109,
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5414": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143F"
    },
    "5417": {
      "branch": 109,
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5418": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5420": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5421": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5422": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5428": {
      "op": "SHL"
    },
    "5429": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5430": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5431": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5433": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5435": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5436": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5437": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5438": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "5440": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5442": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5443": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5444": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5445": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "5478": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "5480": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5481": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5482": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5483": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5484": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5485": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5486": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5487": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5488": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SUB",
      "path": "3"
    },
    "5489": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5491": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5492": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5493": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5494": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5495": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 67,
      "value": "0x40"
    },
    "5497": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5498": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5505": {
      "op": "SHL"
    },
    "5506": {
      "op": "SUB"
    },
    "5507": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5508": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5509": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "5"
    },
    "5510": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5512": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5513": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "5514": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5515": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5516": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "5"
    },
    "5517": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "5519": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5520": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "5521": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5522": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "5524": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5525": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5526": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "5527": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5528": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5529": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5530": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5531": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5532": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5533": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5534": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SUB",
      "path": "5"
    },
    "5535": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5536": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5537": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "5538": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5539": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5540": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x84"
    },
    "5542": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5543": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5544": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "5545": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5546": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5547": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5548": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5550": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5551": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "5552": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5553": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5558": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5560": {
      "op": "SHL"
    },
    "5561": {
      "op": "SUB"
    },
    "5562": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "5"
    },
    "5563": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5570": {
      "op": "SHL"
    },
    "5571": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "OR",
      "path": "5"
    },
    "5572": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5573": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5574": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15D0"
    },
    "5577": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5578": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        997,
        1002
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5579": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        997,
        1002
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5580": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16D2"
    },
    "5583": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        977,
        1073
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5584": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5585": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "5586": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "5587": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "5588": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "5589": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        877,
        1080
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5590": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5591": {
      "fn": "SafeMath.div",
      "offset": [
        3799,
        3806
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5593": {
      "fn": "SafeMath.div",
      "offset": [
        3833,
        3845
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 68
    },
    "5594": {
      "branch": 110,
      "fn": "SafeMath.div",
      "offset": [
        3826,
        3831
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5595": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1662"
    },
    "5598": {
      "branch": 110,
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5599": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5601": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5602": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5608": {
      "op": "SHL"
    },
    "5609": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5610": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5611": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5613": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5614": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5615": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5616": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5618": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5619": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5620": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5621": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5622": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5623": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5624": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5625": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5626": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5627": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5628": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5629": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5630": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5632": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5633": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5634": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5635": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5636": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5637": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5638": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5640": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5641": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5642": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5643": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5644": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5645": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5647": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5648": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5649": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5650": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "LT",
      "path": "3"
    },
    "5651": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5652": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1627"
    },
    "5655": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5656": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5657": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5658": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5659": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5660": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5661": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5662": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5663": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5664": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5666": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5667": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x160F"
    },
    "5670": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5671": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5672": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5673": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5674": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5675": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5676": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5677": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5678": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5679": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5680": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5681": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5682": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5684": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "AND",
      "path": "3"
    },
    "5685": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5686": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5687": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1654"
    },
    "5690": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5691": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5692": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5693": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5694": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5695": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5696": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5698": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5699": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5701": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5702": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5705": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "EXP",
      "path": "3"
    },
    "5706": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5707": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "NOT",
      "path": "3"
    },
    "5708": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "AND",
      "path": "3"
    },
    "5709": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5710": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5711": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5713": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5714": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5715": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5716": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5717": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5718": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5719": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5720": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5721": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5722": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5724": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5725": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5726": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5727": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5728": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5729": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5730": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5731": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5732": {
      "fn": "SafeMath.div",
      "offset": [
        3856,
        3865
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5734": {
      "fn": "SafeMath.div",
      "offset": [
        3872,
        3873
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5735": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3869
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5736": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5737": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x166E"
    },
    "5740": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5741": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "INVALID",
      "path": "3"
    },
    "5742": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5743": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DIV",
      "path": "3"
    },
    "5744": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "5745": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5746": {
      "op": "POP"
    },
    "5747": {
      "op": "POP"
    },
    "5748": {
      "op": "POP"
    },
    "5749": {
      "op": "POP"
    },
    "5750": {
      "op": "POP"
    },
    "5751": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5752": {
      "fn": "SafeMath.sub",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5753": {
      "fn": "SafeMath.sub",
      "offset": [
        1832,
        1839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5755": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1879
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 69
    },
    "5756": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5757": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5758": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "GT",
      "path": "3"
    },
    "5759": {
      "branch": 111,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5760": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16CA"
    },
    "5763": {
      "branch": 111,
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5764": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5766": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5767": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5771": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5773": {
      "op": "SHL"
    },
    "5774": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5775": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5776": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5778": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5780": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5781": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5782": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5783": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5784": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5785": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5786": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5787": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5789": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5790": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5791": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5792": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5793": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5794": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5795": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5796": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5797": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5798": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "5800": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5801": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5802": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5803": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5804": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5805": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5806": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5807": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5808": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5809": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5810": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5811": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5813": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5814": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5815": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1627"
    },
    "5818": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5819": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5820": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5821": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5822": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5823": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5824": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5825": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5826": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5827": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5829": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5830": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x160F"
    },
    "5833": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5834": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5835": {
      "op": "POP"
    },
    "5836": {
      "op": "POP"
    },
    "5837": {
      "op": "POP"
    },
    "5838": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5839": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SUB",
      "path": "3"
    },
    "5840": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5841": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5842": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2959,
        3710
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5843": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3401
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5845": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1727"
    },
    "5848": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3432,
        3436
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5849": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5851": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5852": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5853": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5855": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "5856": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5858": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5859": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5860": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5862": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5863": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5864": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5866": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "5867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "5900": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5901": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "POP",
      "path": "5"
    },
    "5903": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3417
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5910": {
      "op": "SHL"
    },
    "5911": {
      "op": "SUB"
    },
    "5912": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "AND",
      "path": "5"
    },
    "5913": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1783"
    },
    "5916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5917": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5918": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5919": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5920": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "5925": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "AND",
      "path": "5"
    },
    "5926": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3404,
        3473
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5927": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5928": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3504
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5929": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3504
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5930": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5931": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5932": {
      "op": "POP"
    },
    "5933": {
      "branch": 105,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3508
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5934": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3483,
        3704
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13E1"
    },
    "5937": {
      "branch": 105,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3483,
        3704
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5938": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3627,
        3637
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 70
    },
    "5939": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5940": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5942": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "ADD",
      "path": "5"
    },
    "5943": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5944": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5945": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5947": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5948": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "LT",
      "path": "5"
    },
    "5949": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5950": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1746"
    },
    "5953": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5954": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5957": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5958": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5959": {
      "op": "POP"
    },
    "5960": {
      "branch": 106,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5961": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13E1"
    },
    "5964": {
      "branch": 106,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5965": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5967": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5968": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5974": {
      "op": "SHL"
    },
    "5975": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5976": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5977": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5979": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "5980": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5981": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5982": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5984": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "5985": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5986": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5987": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SUB",
      "path": "5"
    },
    "5988": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5989": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5990": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "5992": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5993": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5994": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5996": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "5997": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5998": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1953"
    },
    "6001": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "6003": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6004": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6005": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6007": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "6008": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6009": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "POP",
      "path": "5"
    },
    "6010": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "POP",
      "path": "5"
    },
    "6011": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6013": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6014": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6015": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6016": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SUB",
      "path": "5"
    },
    "6017": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6018": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6019": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3767
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6020": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6022": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3760
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 71,
      "value": "0x1792"
    },
    "6025": {
      "fn": "Address.functionCall",
      "offset": [
        3730,
        3736
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6026": {
      "fn": "Address.functionCall",
      "offset": [
        3738,
        3742
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6027": {
      "fn": "Address.functionCall",
      "offset": [
        3744,
        3745
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6029": {
      "fn": "Address.functionCall",
      "offset": [
        3747,
        3759
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6030": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3729
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x179A"
    },
    "6033": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3707,
        3760
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6034": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3760
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6035": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3760
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "6036": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3767
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "6037": {
      "op": "POP"
    },
    "6038": {
      "op": "POP"
    },
    "6039": {
      "op": "POP"
    },
    "6040": {
      "op": "POP"
    },
    "6041": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3573,
        3767
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6042": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        4920,
        5878
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6043": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5050,
        5062
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6045": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5082,
        5100
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 72,
      "value": "0x17A5"
    },
    "6048": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5093,
        5099
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6049": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5082,
        5092
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1907"
    },
    "6052": {
      "fn": "Address._functionCallWithValue",
      "jump": "i",
      "offset": [
        5082,
        5100
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6053": {
      "branch": 102,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5082,
        5100
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6054": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F6"
    },
    "6057": {
      "branch": 102,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6058": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6060": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6061": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6062": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6068": {
      "op": "SHL"
    },
    "6069": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6070": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6071": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6073": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6075": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6076": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "6077": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6078": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1D"
    },
    "6080": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "6082": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6083": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "6084": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6085": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "6118": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "6120": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6121": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "6122": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6123": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6124": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6125": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6126": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6127": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6128": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SUB",
      "path": "6"
    },
    "6129": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "6131": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "6132": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6133": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6134": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6135": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5205,
        5217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6137": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5219,
        5242
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6139": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5252
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6146": {
      "op": "SHL"
    },
    "6147": {
      "op": "SUB"
    },
    "6148": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5257
      ],
      "op": "AND",
      "path": "6"
    },
    "6149": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5266,
        5274
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6150": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5277,
        5281
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6151": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6153": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6154": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6155": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6156": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6157": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6158": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6159": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6161": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6162": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6163": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6164": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6165": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6166": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6167": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6169": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6170": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "LT",
      "path": "6"
    },
    "6171": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1835"
    },
    "6174": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6175": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6176": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6177": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6178": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6179": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6181": {
      "op": "NOT"
    },
    "6182": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6183": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6184": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6185": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6186": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6188": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6189": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6190": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6191": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6192": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6193": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1816"
    },
    "6196": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6197": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6198": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6200": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6201": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6203": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SUB",
      "path": "6"
    },
    "6204": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "6207": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "EXP",
      "path": "6"
    },
    "6208": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SUB",
      "path": "6"
    },
    "6209": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6210": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "NOT",
      "path": "6"
    },
    "6211": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6212": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6213": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "AND",
      "path": "6"
    },
    "6214": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6215": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6216": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6217": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "AND",
      "path": "6"
    },
    "6218": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6219": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6220": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "OR",
      "path": "6"
    },
    "6221": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6222": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6223": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6224": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6225": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6226": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6227": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6228": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6229": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6230": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6231": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6232": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6233": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6234": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6235": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6237": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6239": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6240": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6241": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6242": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SUB",
      "path": "6"
    },
    "6243": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6244": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6245": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6246": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "GAS",
      "path": "6"
    },
    "6247": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "CALL",
      "path": "6"
    },
    "6248": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6249": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6250": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6251": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6252": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6253": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6254": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6256": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6257": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "EQ",
      "path": "6"
    },
    "6258": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1897"
    },
    "6261": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6262": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6264": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6265": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6266": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6267": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "6269": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "NOT",
      "path": "6"
    },
    "6270": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "6272": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6273": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6274": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "AND",
      "path": "6"
    },
    "6275": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6276": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6277": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6279": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6280": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6281": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6282": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6283": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6284": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6286": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6288": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6289": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "6290": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "6291": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x189C"
    },
    "6294": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6295": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6296": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6298": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6299": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6300": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6301": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6302": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6303": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6304": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6305": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "6306": {
      "branch": 103,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5296,
        5303
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6307": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6308": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18B0"
    },
    "6311": {
      "branch": 103,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6312": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5326,
        5336
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 73
    },
    "6313": {
      "op": "POP"
    },
    "6314": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5319,
        5336
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1792"
    },
    "6317": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5319,
        5336
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6318": {
      "op": "POP"
    },
    "6319": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5319,
        5336
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6320": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6321": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5437,
        5454
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6322": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5437,
        5454
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6323": {
      "branch": 104,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5437,
        5458
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6324": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5433,
        5862
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18C0"
    },
    "6327": {
      "branch": 104,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5433,
        5862
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6328": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5695,
        5705
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6329": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5689,
        5706
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6330": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5755,
        5770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6331": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5742,
        5752
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6332": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5738,
        5740
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6334": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5734,
        5753
      ],
      "op": "ADD",
      "path": "6"
    },
    "6335": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5727,
        5771
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6336": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5644,
        5789
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6337": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 74,
      "value": "0x40"
    },
    "6339": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6340": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6344": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6346": {
      "op": "SHL"
    },
    "6347": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6348": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6349": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6351": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6353": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6354": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6355": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6356": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6357": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6358": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6359": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6360": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "6362": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6363": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6364": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6365": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6366": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6367": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5834,
        5846
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6368": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5834,
        5846
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "6369": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6370": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6371": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6372": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6373": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "6375": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6376": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6377": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6378": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6379": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6380": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6381": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6382": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6383": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6384": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6386": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6387": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6388": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1627"
    },
    "6391": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6392": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6393": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6394": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6395": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6396": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6397": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6398": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6399": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6400": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6402": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "6403": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x160F"
    },
    "6406": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6407": {
      "fn": "Address.isContract",
      "offset": [
        718,
        1131
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6408": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "6409": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "6",
      "statement": 75
    },
    "6410": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6411": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6412": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        718,
        1131
      ],
      "op": "JUMP",
      "path": "6"
    }
  },
  "sha1": "2091d74efcdbddb15c7d5e012412ce1aecb5c838",
  "source": "pragma solidity 0.6.12;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"../Access/MISOAccessControls.sol\";\nimport \"../../interfaces/IMisoFarm.sol\";\n\n\n// MasterChef is the master of Rewards. He can make Rewards and he is a fair guy.\n//\n// Note that its ownable and the owner wields tremendous power. The ownership\n// will be transferred to a governance smart contract once tokens are sufficiently\n// distributed and the community can show to govern itself.\n//\n// Have fun reading it. Hopefully its bug-free. God bless.\n//\n// MISO Update - Removed LP migrator\n// MISO Update - Removed minter - Contract holds token\n// MISO Update - Dev tips parameterised\n// MISO Update - Replaced owner with access controls\n\ncontract MasterChef is IMisoFarm {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    MISOAccessControls public accessControls;\n\n\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount;     // How many LP tokens the user has provided.\n        uint256 rewardDebt; // Reward debt. See explanation below.\n        //\n        // We do some fancy math here. Basically, any point in time, the amount of tokens\n        // entitled to a user but is pending to be distributed is:\n        //\n        //   pending reward = (user.amount * pool.accRewardsPerShare) - user.rewardDebt\n        //\n        // Whenever a user deposits or withdraws LP tokens to a pool. Heres what happens:\n        //   1. The pools `accRewardsPerShare` (and `lastRewardBlock`) gets updated.\n        //   2. User receives the pending reward sent to his/her address.\n        //   3. Users `amount` gets updated.\n        //   4. Users `rewardDebt` gets updated.\n    }\n\n    // Info of each pool.\n    struct PoolInfo {\n        IERC20 lpToken;           // Address of LP token contract.\n        uint256 allocPoint;       // How many allocation points assigned to this pool. tokens to distribute per block.\n        uint256 lastRewardBlock;  // Last block number that tokens distribution occurs.\n        uint256 accRewardsPerShare; // Accumulated tokens per share, times 1e12. See below.\n    }\n\n    // The rewards token\n    IERC20 public rewards;\n    // Dev address.\n    address public devaddr;\n    // Percentage amount to be tipped to devs.\n    uint256 public devPercentage;\n    // Tips owed to develpers.\n    uint256 public tips;\n\n    // Block number when bonus tokens period ends.\n    uint256 public bonusEndBlock;\n    // Reward tokens created per block.\n    uint256 public rewardsPerBlock;\n    // Bonus muliplier for early rewards makers.\n    uint256 public bonusMultiplier;\n    // MISOFarmFactory template id\n    uint256 public constant farmTemplate = 1;\n    // For initial setup\n    bool private initialised;\n\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n    // Info of each user that stakes LP tokens.\n    mapping (uint256 => mapping (address => UserInfo)) public userInfo;\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\n    uint256 public totalAllocPoint;\n    // The block number when rewards mining starts.\n    uint256 public startBlock;\n\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\n\n    function initFarm(\n        address _rewards,\n        uint256 _rewardsPerBlock,\n        uint256 _startBlock,\n        address _devaddr,\n        address _accessControls\n    ) public override {\n        require(!initialised);\n        rewards = IERC20(_rewards);\n        totalAllocPoint = 0;\n        initialised = true;\n        rewardsPerBlock = _rewardsPerBlock;\n        startBlock = _startBlock;\n        devaddr = _devaddr;\n        accessControls = MISOAccessControls(_accessControls);\n    }\n\n    function setBonus(\n        uint256 _bonusEndBlock,\n        uint256 _bonusMultiplier\n    ) public {\n        require(\n            accessControls.hasAdminRole(msg.sender),\n            \"MasterChef.add: Sender must be admin\"\n        );\n\n        bonusEndBlock = _bonusEndBlock;\n        bonusMultiplier = _bonusMultiplier;\n    }\n\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    // Add a new lp to the pool. Can only be called by the owner.\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    function addToken(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public  {\n        require(\n            accessControls.hasAdminRole(msg.sender) || accessControls.hasSmartContractRole(msg.sender),\n            \"MasterChef.add: Sender must be admin\"\n        );\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n        poolInfo.push(PoolInfo({\n            lpToken: _lpToken,\n            allocPoint: _allocPoint,\n            lastRewardBlock: lastRewardBlock,\n            accRewardsPerShare: 0\n        }));\n    }\n\n    // Update the given pools token allocation point. Can only be called by the operator.\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public  {\n        require(\n            accessControls.hasOperatorRole(msg.sender),\n            \"MasterChef.set: Sender must be operator\"\n        );\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\n        poolInfo[_pid].allocPoint = _allocPoint;\n    }\n\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\n        if (_to <= bonusEndBlock) {\n            return _to.sub(_from).mul(bonusMultiplier);\n        } else if (_from >= bonusEndBlock) {\n            return _to.sub(_from);\n        } else {\n            return bonusEndBlock.sub(_from).mul(bonusMultiplier).add(\n                _to.sub(bonusEndBlock)\n            );\n        }\n    }\n\n    // View function to see pending tokens on frontend.\n    function pendingRewards(uint256 _pid, address _user) external view returns (uint256) {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accRewardsPerShare = pool.accRewardsPerShare;\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n            uint256 rewardsAccum = multiplier.mul(rewardsPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\n            accRewardsPerShare = accRewardsPerShare.add(rewardsAccum.mul(1e12).div(lpSupply));\n        }\n        return user.amount.mul(accRewardsPerShare).div(1e12).sub(user.rewardDebt);\n    }\n\n    // Update reward vairables for all pools. Be careful of gas spending!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        if (block.number <= pool.lastRewardBlock) {\n            return;\n        }\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (lpSupply == 0) {\n            pool.lastRewardBlock = block.number;\n            return;\n        }\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n        uint256 rewardsAccum = multiplier.mul(rewardsPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\n        if (devPercentage > 0) {\n            tips = tips.add(rewardsAccum.mul(devPercentage).div(1000));\n        }\n        pool.accRewardsPerShare = pool.accRewardsPerShare.add(rewardsAccum.mul(1e12).div(lpSupply));\n        pool.lastRewardBlock = block.number;\n    }\n\n    // Deposit LP tokens to MasterChef for rewards allocation.\n    function deposit(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        updatePool(_pid);\n        if (user.amount > 0) {\n            uint256 pending = user.amount.mul(pool.accRewardsPerShare).div(1e12).sub(user.rewardDebt);\n            if(pending > 0) {\n                safeRewardsTransfer(msg.sender, pending);\n            }\n        }\n        if(_amount > 0) {\n            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\n            user.amount = user.amount.add(_amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accRewardsPerShare).div(1e12);\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw LP tokens from MasterChef.\n    function withdraw(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        require(user.amount >= _amount, \"withdraw: not good\");\n        updatePool(_pid);\n        uint256 pending = user.amount.mul(pool.accRewardsPerShare).div(1e12).sub(user.rewardDebt);\n        if(pending > 0) {\n            safeRewardsTransfer(msg.sender, pending);\n        }\n        if(_amount > 0) {\n            user.amount = user.amount.sub(_amount);\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accRewardsPerShare).div(1e12);\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        uint256 amount = user.amount;\n        user.amount = 0;\n        user.rewardDebt = 0;\n        pool.lpToken.safeTransfer(address(msg.sender), amount);\n        emit EmergencyWithdraw(msg.sender, _pid, amount);\n    }\n\n    // Safe rewards transfer function, just in case if rounding error causes pool to not have enough tokens.\n    function safeRewardsTransfer(address _to, uint256 _amount) internal {\n        uint256 rewardsBal = rewards.balanceOf(address(this));\n        if (_amount > rewardsBal) {\n            rewards.transfer(_to, rewardsBal);\n        } else {\n            rewards.transfer(_to, _amount);\n        }\n    }\n\n    // Returns the number of blocks remaining with the current rewards balance\n    function blocksRemaining() public returns (uint256){\n        uint256 rewardsBal = rewards.balanceOf(address(this));\n        if (rewardsPerBlock > 0) {\n            return rewardsBal / rewardsPerBlock;\n        } else {\n            return 0;\n        }\n    }\n\n    // Claims any rewards for the developers, if set\n    function claimTips() public {\n        require(msg.sender == devaddr, \"dev: wut?\");\n        require(tips > 0, \"dev: broke\");\n        uint256 claimable = tips;\n        tips = 0;\n        safeRewardsTransfer(devaddr, claimable);\n    }\n\n    // Update dev address by the previous dev.\n    function dev(address _devaddr) public {\n        require(msg.sender == devaddr, \"dev: wut?\");\n        devaddr = _devaddr;\n    }\n}",
  "sourceMap": "950:10630:16:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Farms/MasterChef.sol",
  "type": "contract"
}