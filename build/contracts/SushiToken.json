{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "name": "initToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/GSN/Context.sol",
    "1": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/access/AccessControl.sol",
    "3": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
    "32": "contracts/Tokens/ERC20.sol",
    "37": "contracts/Tokens/SushiToken.sol",
    "6": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/Address.sol",
    "63": "interfaces/IERC20.sol",
    "7": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/EnumerableSet.sol",
    "70": "interfaces/IMisoToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/Tokens/SushiToken.sol",
    "exportedSymbols": {
      "SushiToken": [
        11121
      ]
    },
    "id": 11122,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10437,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:37"
      },
      {
        "absolutePath": "contracts/Tokens/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 10438,
        "nodeType": "ImportDirective",
        "scope": 11122,
        "sourceUnit": 10170,
        "src": "26:21:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMisoToken.sol",
        "file": "../../interfaces/IMisoToken.sol",
        "id": 10439,
        "nodeType": "ImportDirective",
        "scope": 11122,
        "sourceUnit": 20762,
        "src": "48:41:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 10440,
        "nodeType": "ImportDirective",
        "scope": 11122,
        "sourceUnit": 19505,
        "src": "90:58:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10441,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19504,
              "src": "291:13:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$19504",
                "typeString": "contract AccessControl"
              }
            },
            "id": 10442,
            "nodeType": "InheritanceSpecifier",
            "src": "291:13:37"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10443,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10169,
              "src": "306:5:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$10169",
                "typeString": "contract ERC20"
              }
            },
            "id": 10444,
            "nodeType": "InheritanceSpecifier",
            "src": "306:5:37"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10445,
              "name": "IMisoToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20761,
              "src": "313:10:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMisoToken_$20761",
                "typeString": "contract IMisoToken"
              }
            },
            "id": 10446,
            "nodeType": "InheritanceSpecifier",
            "src": "313:10:37"
          }
        ],
        "contractDependencies": [
          10169,
          19504,
          19811,
          19852,
          20761
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11121,
        "linearizedBaseContracts": [
          11121,
          20761,
          10169,
          19504,
          19852,
          19811
        ],
        "name": "SushiToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 10451,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 11121,
            "src": "331:62:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 10447,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "331:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 10449,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "379:13:37",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 10448,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "369:9:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 10450,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "369:24:37",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20760
            ],
            "body": {
              "id": 10484,
              "nodeType": "Block",
              "src": "521:176:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10464,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19247,
                        "src": "542:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10465,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10457,
                        "src": "562:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10463,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19430,
                      "src": "531:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 10466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "531:38:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10467,
                  "nodeType": "ExpressionStatement",
                  "src": "531:38:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10469,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10451,
                        "src": "590:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10470,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10457,
                        "src": "603:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10468,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19430,
                      "src": "579:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 10471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "579:31:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10472,
                  "nodeType": "ExpressionStatement",
                  "src": "579:31:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10474,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10453,
                        "src": "631:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10475,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10455,
                        "src": "638:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 10473,
                      "name": "_initERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9715,
                      "src": "620:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 10476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:26:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10477,
                  "nodeType": "ExpressionStatement",
                  "src": "620:26:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10479,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "662:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "662:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10481,
                        "name": "_initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10459,
                        "src": "674:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10478,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10045,
                      "src": "656:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "656:33:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10483,
                  "nodeType": "ExpressionStatement",
                  "src": "656:33:37"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8dc7df72",
            "id": 10485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10461,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "512:8:37"
            },
            "parameters": {
              "id": 10460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10453,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10485,
                  "src": "419:19:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10452,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10455,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10485,
                  "src": "440:21:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10454,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10457,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10485,
                  "src": "463:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10459,
                  "mutability": "mutable",
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10485,
                  "src": "479:22:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:84:37"
            },
            "returnParameters": {
              "id": 10462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:0:37"
            },
            "scope": 11121,
            "src": "400:297:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10518,
              "nodeType": "Block",
              "src": "852:196:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10495,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10451,
                            "src": "878:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10496,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19840,
                              "src": "891:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 10497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "891:12:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 10494,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19293,
                          "src": "870:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 10498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "870:34:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5375736869546f6b656e3a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 10499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "906:43:37",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_107cc1b72aae962f1e0b8ce6f649893c853f4b25ee76f2379c5935bd199edb1d",
                          "typeString": "literal_string \"SushiToken: must have minter role to mint\""
                        },
                        "value": "SushiToken: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_107cc1b72aae962f1e0b8ce6f649893c853f4b25ee76f2379c5935bd199edb1d",
                          "typeString": "literal_string \"SushiToken: must have minter role to mint\""
                        }
                      ],
                      "id": 10493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "862:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:88:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10501,
                  "nodeType": "ExpressionStatement",
                  "src": "862:88:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10503,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10488,
                        "src": "966:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10504,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10490,
                        "src": "971:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10502,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10045,
                      "src": "960:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "960:19:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10506,
                  "nodeType": "ExpressionStatement",
                  "src": "960:19:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1012:1:37",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1004:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10508,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1004:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 10511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1004:10:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 10512,
                          "name": "_delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10524,
                          "src": "1016:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 10514,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 10513,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10488,
                          "src": "1027:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1016:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10515,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10490,
                        "src": "1033:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10507,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11011,
                      "src": "989:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:52:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10517,
                  "nodeType": "ExpressionStatement",
                  "src": "989:52:37"
                }
              ]
            },
            "documentation": {
              "id": 10486,
              "nodeType": "StructuredDocumentation",
              "src": "703:92:37",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
            },
            "functionSelector": "40c10f19",
            "id": 10519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10488,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10519,
                  "src": "814:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10490,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10519,
                  "src": "827:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "813:30:37"
            },
            "returnParameters": {
              "id": 10492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "852:0:37"
            },
            "scope": 11121,
            "src": "800:248:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10520,
              "nodeType": "StructuredDocumentation",
              "src": "1452:46:37",
              "text": "@notice A record of each accounts delegate"
            },
            "id": 10524,
            "mutability": "mutable",
            "name": "_delegates",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 11121,
            "src": "1503:48:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 10523,
              "keyType": {
                "id": 10521,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1512:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1503:28:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 10522,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1523:7:37",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "SushiToken.Checkpoint",
            "id": 10529,
            "members": [
              {
                "constant": false,
                "id": 10526,
                "mutability": "mutable",
                "name": "fromBlock",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 10529,
                "src": "1662:16:37",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 10525,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1662:6:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10528,
                "mutability": "mutable",
                "name": "votes",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 10529,
                "src": "1688:13:37",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10527,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1688:7:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Checkpoint",
            "nodeType": "StructDefinition",
            "scope": 11121,
            "src": "1634:74:37",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10530,
              "nodeType": "StructuredDocumentation",
              "src": "1714:68:37",
              "text": "@notice A record of votes checkpoints for each account, by index"
            },
            "functionSelector": "f1127ed8",
            "id": 10536,
            "mutability": "mutable",
            "name": "checkpoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 11121,
            "src": "1787:70:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))"
            },
            "typeName": {
              "id": 10535,
              "keyType": {
                "id": 10531,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1796:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1787:51:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
                "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))"
              },
              "valueType": {
                "id": 10534,
                "keyType": {
                  "id": 10532,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1816:6:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1807:30:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$",
                  "typeString": "mapping(uint32 => struct SushiToken.Checkpoint)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 10533,
                  "name": "Checkpoint",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 10529,
                  "src": "1826:10:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$10529_storage_ptr",
                    "typeString": "struct SushiToken.Checkpoint"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10537,
              "nodeType": "StructuredDocumentation",
              "src": "1864:54:37",
              "text": "@notice The number of checkpoints for each account"
            },
            "functionSelector": "6fcfff45",
            "id": 10541,
            "mutability": "mutable",
            "name": "numCheckpoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 11121,
            "src": "1923:49:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
              "typeString": "mapping(address => uint32)"
            },
            "typeName": {
              "id": 10540,
              "keyType": {
                "id": 10538,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1932:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1923:27:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                "typeString": "mapping(address => uint32)"
              },
              "valueType": {
                "id": 10539,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1943:6:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 10542,
              "nodeType": "StructuredDocumentation",
              "src": "1979:58:37",
              "text": "@notice The EIP-712 typehash for the contract's domain"
            },
            "functionSelector": "20606b70",
            "id": 10547,
            "mutability": "constant",
            "name": "DOMAIN_TYPEHASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 11121,
            "src": "2042:122:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 10543,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2042:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                  "id": 10545,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2094:69:37",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                    "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                  },
                  "value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                    "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                  }
                ],
                "id": 10544,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2084:9:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 10546,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2084:80:37",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 10548,
              "nodeType": "StructuredDocumentation",
              "src": "2171:79:37",
              "text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
            },
            "functionSelector": "e7a324dc",
            "id": 10553,
            "mutability": "constant",
            "name": "DELEGATION_TYPEHASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 11121,
            "src": "2255:117:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 10549,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2255:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
                  "id": 10551,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2311:60:37",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  },
                  "value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  }
                ],
                "id": 10550,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2301:9:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 10552,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2301:71:37",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10554,
              "nodeType": "StructuredDocumentation",
              "src": "2379:66:37",
              "text": "@notice A record of states for signing / validating signatures"
            },
            "functionSelector": "7ecebe00",
            "id": 10558,
            "mutability": "mutable",
            "name": "nonces",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 11121,
            "src": "2450:39:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 10557,
              "keyType": {
                "id": 10555,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2459:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2450:25:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 10556,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2470:4:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 10559,
              "nodeType": "StructuredDocumentation",
              "src": "2498:71:37",
              "text": "@notice An event thats emitted when an account changes its delegate"
            },
            "id": 10567,
            "name": "DelegateChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10561,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10567,
                  "src": "2596:25:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10563,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromDelegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10567,
                  "src": "2623:28:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10565,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "toDelegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10567,
                  "src": "2653:26:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2653:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2595:85:37"
            },
            "src": "2574:107:37"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 10568,
              "nodeType": "StructuredDocumentation",
              "src": "2687:81:37",
              "text": "@notice An event thats emitted when a delegate account's vote balance changes"
            },
            "id": 10576,
            "name": "DelegateVotesChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10570,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10576,
                  "src": "2800:24:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2800:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10572,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10576,
                  "src": "2826:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10571,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10574,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10576,
                  "src": "2848:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10573,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2848:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2799:65:37"
            },
            "src": "2773:92:37"
          },
          {
            "body": {
              "id": 10588,
              "nodeType": "Block",
              "src": "3105:45:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 10584,
                      "name": "_delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10524,
                      "src": "3122:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 10586,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 10585,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10579,
                      "src": "3133:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3122:21:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 10583,
                  "id": 10587,
                  "nodeType": "Return",
                  "src": "3115:28:37"
                }
              ]
            },
            "documentation": {
              "id": 10577,
              "nodeType": "StructuredDocumentation",
              "src": "2871:131:37",
              "text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegator The address to get delegatee for"
            },
            "functionSelector": "587cde1e",
            "id": 10589,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegates",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10579,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10589,
                  "src": "3026:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3026:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3025:19:37"
            },
            "returnParameters": {
              "id": 10583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10582,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10589,
                  "src": "3092:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3092:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3091:9:37"
            },
            "scope": 11121,
            "src": "3007:143:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10601,
              "nodeType": "Block",
              "src": "3334:56:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10596,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3361:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3361:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10598,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10592,
                        "src": "3373:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10595,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10904,
                      "src": "3351:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 10594,
                  "id": 10600,
                  "nodeType": "Return",
                  "src": "3344:39:37"
                }
              ]
            },
            "documentation": {
              "id": 10590,
              "nodeType": "StructuredDocumentation",
              "src": "3155:128:37",
              "text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
            },
            "functionSelector": "5c19a95c",
            "id": 10602,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10592,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10602,
                  "src": "3306:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3305:19:37"
            },
            "returnParameters": {
              "id": 10594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3334:0:37"
            },
            "scope": 11121,
            "src": "3288:102:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10704,
              "nodeType": "Block",
              "src": "3986:967:37",
              "statements": [
                {
                  "assignments": [
                    10619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10619,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10704,
                      "src": "3996:23:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10618,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3996:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10639,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10623,
                            "name": "DOMAIN_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10547,
                            "src": "4073:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 10627,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9725,
                                      "src": "4122:4:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () view returns (string memory)"
                                      }
                                    },
                                    "id": 10628,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4122:6:37",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 10626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4116:5:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 10625,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4116:5:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 10629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4116:13:37",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 10624,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "4106:9:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 10630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4106:24:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10631,
                              "name": "getChainId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11120,
                              "src": "4148:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 10632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4148:12:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10635,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4186:4:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiToken_$11121",
                                  "typeString": "contract SushiToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SushiToken_$11121",
                                  "typeString": "contract SushiToken"
                                }
                              ],
                              "id": 10634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4178:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10633,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4178:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 10636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4178:13:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10621,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4045:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4045:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4045:160:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10620,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4022:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 10638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4022:193:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3996:219:37"
                },
                {
                  "assignments": [
                    10641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10641,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10704,
                      "src": "4226:18:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10640,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4226:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10651,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10645,
                            "name": "DELEGATION_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10553,
                            "src": "4298:19:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 10646,
                            "name": "delegatee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10605,
                            "src": "4335:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 10647,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10607,
                            "src": "4362:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 10648,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10609,
                            "src": "4385:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10643,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4270:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4270:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4270:135:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10642,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4247:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 10650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4247:168:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4226:189:37"
                },
                {
                  "assignments": [
                    10653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10653,
                      "mutability": "mutable",
                      "name": "digest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10704,
                      "src": "4426:14:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10652,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4426:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10662,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "1901",
                            "id": 10657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4500:10:37",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string \"\u0019\u0001\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "argumentTypes": null,
                            "id": 10658,
                            "name": "domainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10619,
                            "src": "4528:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 10659,
                            "name": "structHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10641,
                            "src": "4561:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string \"\u0019\u0001\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10655,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4466:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4466:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4466:119:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10654,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4443:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 10661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4443:152:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4426:169:37"
                },
                {
                  "assignments": [
                    10664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10664,
                      "mutability": "mutable",
                      "name": "signatory",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10704,
                      "src": "4606:17:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10663,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4606:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10671,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10666,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10653,
                        "src": "4636:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10667,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10611,
                        "src": "4644:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10668,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10613,
                        "src": "4647:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10669,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10615,
                        "src": "4650:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 10665,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "4626:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 10670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4626:26:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4606:46:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10673,
                          "name": "signatory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10664,
                          "src": "4670:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4691:1:37",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4683:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10674,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4683:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 10677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4683:10:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4670:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
                        "id": 10679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4695:41:37",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid signature\""
                        },
                        "value": "SUSHI::delegateBySig: invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid signature\""
                        }
                      ],
                      "id": 10672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4662:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4662:75:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10681,
                  "nodeType": "ExpressionStatement",
                  "src": "4662:75:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10683,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10607,
                          "src": "4755:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 10687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4764:19:37",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 10684,
                              "name": "nonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10558,
                              "src": "4764:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 10686,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 10685,
                              "name": "signatory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10664,
                              "src": "4771:9:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4764:17:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4755:28:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
                        "id": 10689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4785:37:37",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid nonce\""
                        },
                        "value": "SUSHI::delegateBySig: invalid nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid nonce\""
                        }
                      ],
                      "id": 10682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4747:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4747:76:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10691,
                  "nodeType": "ExpressionStatement",
                  "src": "4747:76:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10693,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "4841:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 10694,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10609,
                          "src": "4848:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4841:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a64656c656761746542795369673a207369676e61747572652065787069726564",
                        "id": 10696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4856:41:37",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c",
                          "typeString": "literal_string \"SUSHI::delegateBySig: signature expired\""
                        },
                        "value": "SUSHI::delegateBySig: signature expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c",
                          "typeString": "literal_string \"SUSHI::delegateBySig: signature expired\""
                        }
                      ],
                      "id": 10692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4833:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4833:65:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10698,
                  "nodeType": "ExpressionStatement",
                  "src": "4833:65:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10700,
                        "name": "signatory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10664,
                        "src": "4925:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10701,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10605,
                        "src": "4936:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10699,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10904,
                      "src": "4915:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4915:31:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 10617,
                  "id": 10703,
                  "nodeType": "Return",
                  "src": "4908:38:37"
                }
              ]
            },
            "documentation": {
              "id": 10603,
              "nodeType": "StructuredDocumentation",
              "src": "3396:412:37",
              "text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
            },
            "functionSelector": "c3cda520",
            "id": 10705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateBySig",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10605,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10705,
                  "src": "3845:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3845:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10607,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10705,
                  "src": "3872:10:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10606,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3872:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10609,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10705,
                  "src": "3892:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10608,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3892:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10611,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10705,
                  "src": "3913:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10610,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10613,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10705,
                  "src": "3930:9:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10612,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10615,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10705,
                  "src": "3949:9:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10614,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3949:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3835:129:37"
            },
            "returnParameters": {
              "id": 10617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3986:0:37"
            },
            "scope": 11121,
            "src": "3813:1140:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10733,
              "nodeType": "Block",
              "src": "5249:146:37",
              "statements": [
                {
                  "assignments": [
                    10714
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10714,
                      "mutability": "mutable",
                      "name": "nCheckpoints",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10733,
                      "src": "5259:19:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 10713,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5259:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10718,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 10715,
                      "name": "numCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10541,
                      "src": "5281:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 10717,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 10716,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10708,
                      "src": "5296:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5281:23:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5259:45:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 10721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 10719,
                        "name": "nCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10714,
                        "src": "5321:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 10720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5336:1:37",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5321:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5387:1:37",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 10731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5321:67:37",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 10722,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10536,
                            "src": "5340:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 10724,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 10723,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10708,
                            "src": "5352:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5340:20:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$",
                            "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 10728,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 10727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10725,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10714,
                            "src": "5361:12:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 10726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5376:1:37",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5361:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5340:38:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$10529_storage",
                          "typeString": "struct SushiToken.Checkpoint storage ref"
                        }
                      },
                      "id": 10729,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "votes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10528,
                      "src": "5340:44:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10712,
                  "id": 10732,
                  "nodeType": "Return",
                  "src": "5314:74:37"
                }
              ]
            },
            "documentation": {
              "id": 10706,
              "nodeType": "StructuredDocumentation",
              "src": "4959:183:37",
              "text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
            },
            "functionSelector": "b4b5ea57",
            "id": 10734,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentVotes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10708,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10734,
                  "src": "5172:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5172:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5171:17:37"
            },
            "returnParameters": {
              "id": 10712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10711,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10734,
                  "src": "5236:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5236:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5235:9:37"
            },
            "scope": 11121,
            "src": "5147:248:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10865,
              "nodeType": "Block",
              "src": "5935:1100:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 10745,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10739,
                          "src": "5953:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10746,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5967:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 10747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5967:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5953:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
                        "id": 10749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5981:42:37",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33",
                          "typeString": "literal_string \"SUSHI::getPriorVotes: not yet determined\""
                        },
                        "value": "SUSHI::getPriorVotes: not yet determined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33",
                          "typeString": "literal_string \"SUSHI::getPriorVotes: not yet determined\""
                        }
                      ],
                      "id": 10744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5945:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5945:79:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10751,
                  "nodeType": "ExpressionStatement",
                  "src": "5945:79:37"
                },
                {
                  "assignments": [
                    10753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10753,
                      "mutability": "mutable",
                      "name": "nCheckpoints",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10865,
                      "src": "6035:19:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 10752,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6035:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10757,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 10754,
                      "name": "numCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10541,
                      "src": "6057:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 10756,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 10755,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10737,
                      "src": "6072:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6057:23:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6035:45:37"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 10760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10758,
                      "name": "nCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10753,
                      "src": "6094:12:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6110:1:37",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6094:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10764,
                  "nodeType": "IfStatement",
                  "src": "6090:56:37",
                  "trueBody": {
                    "id": 10763,
                    "nodeType": "Block",
                    "src": "6113:33:37",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 10761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6134:1:37",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 10743,
                        "id": 10762,
                        "nodeType": "Return",
                        "src": "6127:8:37"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 10765,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10536,
                            "src": "6203:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 10767,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 10766,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10737,
                            "src": "6215:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6203:20:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$",
                            "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 10771,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 10770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10768,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10753,
                            "src": "6224:12:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 10769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6239:1:37",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6224:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6203:38:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$10529_storage",
                          "typeString": "struct SushiToken.Checkpoint storage ref"
                        }
                      },
                      "id": 10772,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10526,
                      "src": "6203:48:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 10773,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10739,
                      "src": "6255:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6203:63:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10785,
                  "nodeType": "IfStatement",
                  "src": "6199:145:37",
                  "trueBody": {
                    "id": 10784,
                    "nodeType": "Block",
                    "src": "6268:76:37",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 10775,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10536,
                                "src": "6289:11:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                }
                              },
                              "id": 10777,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 10776,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10737,
                                "src": "6301:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6289:20:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$",
                                "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                              }
                            },
                            "id": 10781,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 10780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 10778,
                                "name": "nCheckpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10753,
                                "src": "6310:12:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 10779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6325:1:37",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6310:16:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6289:38:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$10529_storage",
                              "typeString": "struct SushiToken.Checkpoint storage ref"
                            }
                          },
                          "id": 10782,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10528,
                          "src": "6289:44:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 10743,
                        "id": 10783,
                        "nodeType": "Return",
                        "src": "6282:51:37"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 10786,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10536,
                            "src": "6402:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 10788,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 10787,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10737,
                            "src": "6414:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6402:20:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$",
                            "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 10790,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 10789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6423:1:37",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6402:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$10529_storage",
                          "typeString": "struct SushiToken.Checkpoint storage ref"
                        }
                      },
                      "id": 10791,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10526,
                      "src": "6402:33:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 10792,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10739,
                      "src": "6438:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6402:47:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10797,
                  "nodeType": "IfStatement",
                  "src": "6398:86:37",
                  "trueBody": {
                    "id": 10796,
                    "nodeType": "Block",
                    "src": "6451:33:37",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 10794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6472:1:37",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 10743,
                        "id": 10795,
                        "nodeType": "Return",
                        "src": "6465:8:37"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10799,
                      "mutability": "mutable",
                      "name": "lower",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10865,
                      "src": "6494:12:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 10798,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6494:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10801,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 10800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6509:1:37",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6494:16:37"
                },
                {
                  "assignments": [
                    10803
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10803,
                      "mutability": "mutable",
                      "name": "upper",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10865,
                      "src": "6520:12:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 10802,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6520:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10807,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 10806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10804,
                      "name": "nCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10753,
                      "src": "6535:12:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 10805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6550:1:37",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6535:16:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6520:31:37"
                },
                {
                  "body": {
                    "id": 10856,
                    "nodeType": "Block",
                    "src": "6583:396:37",
                    "statements": [
                      {
                        "assignments": [
                          10812
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10812,
                            "mutability": "mutable",
                            "name": "center",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 10856,
                            "src": "6597:13:37",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 10811,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6597:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 10821,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 10820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10813,
                            "name": "upper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10803,
                            "src": "6613:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 10819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 10816,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 10814,
                                    "name": "upper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10803,
                                    "src": "6622:5:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 10815,
                                    "name": "lower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10799,
                                    "src": "6630:5:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "6622:13:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "id": 10817,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6621:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 10818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6639:1:37",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "6621:19:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "6613:27:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6597:43:37"
                      },
                      {
                        "assignments": [
                          10823
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10823,
                            "mutability": "mutable",
                            "name": "cp",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 10856,
                            "src": "6681:20:37",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$10529_memory_ptr",
                              "typeString": "struct SushiToken.Checkpoint"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 10822,
                              "name": "Checkpoint",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 10529,
                              "src": "6681:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$10529_storage_ptr",
                                "typeString": "struct SushiToken.Checkpoint"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 10829,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 10824,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10536,
                              "src": "6704:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
                                "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                              }
                            },
                            "id": 10826,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 10825,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10737,
                              "src": "6716:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6704:20:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$",
                              "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                            }
                          },
                          "id": 10828,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 10827,
                            "name": "center",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10812,
                            "src": "6725:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6704:28:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$10529_storage",
                            "typeString": "struct SushiToken.Checkpoint storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6681:51:37"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10830,
                              "name": "cp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10823,
                              "src": "6750:2:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$10529_memory_ptr",
                                "typeString": "struct SushiToken.Checkpoint memory"
                              }
                            },
                            "id": 10831,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10526,
                            "src": "6750:12:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 10832,
                            "name": "blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10739,
                            "src": "6766:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6750:27:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 10838,
                                "name": "cp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10823,
                                "src": "6837:2:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Checkpoint_$10529_memory_ptr",
                                  "typeString": "struct SushiToken.Checkpoint memory"
                                }
                              },
                              "id": 10839,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fromBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10526,
                              "src": "6837:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 10840,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10739,
                              "src": "6852:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6837:26:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 10853,
                            "nodeType": "Block",
                            "src": "6918:51:37",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 10851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "argumentTypes": null,
                                    "id": 10847,
                                    "name": "upper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10803,
                                    "src": "6936:5:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 10850,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 10848,
                                      "name": "center",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10812,
                                      "src": "6944:6:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 10849,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6953:1:37",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "6944:10:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "6936:18:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 10852,
                                "nodeType": "ExpressionStatement",
                                "src": "6936:18:37"
                              }
                            ]
                          },
                          "id": 10854,
                          "nodeType": "IfStatement",
                          "src": "6833:136:37",
                          "trueBody": {
                            "id": 10846,
                            "nodeType": "Block",
                            "src": "6865:47:37",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 10844,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "argumentTypes": null,
                                    "id": 10842,
                                    "name": "lower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10799,
                                    "src": "6883:5:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "argumentTypes": null,
                                    "id": 10843,
                                    "name": "center",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10812,
                                    "src": "6891:6:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "6883:14:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 10845,
                                "nodeType": "ExpressionStatement",
                                "src": "6883:14:37"
                              }
                            ]
                          }
                        },
                        "id": 10855,
                        "nodeType": "IfStatement",
                        "src": "6746:223:37",
                        "trueBody": {
                          "id": 10837,
                          "nodeType": "Block",
                          "src": "6779:48:37",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 10834,
                                  "name": "cp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10823,
                                  "src": "6804:2:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checkpoint_$10529_memory_ptr",
                                    "typeString": "struct SushiToken.Checkpoint memory"
                                  }
                                },
                                "id": 10835,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10528,
                                "src": "6804:8:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 10743,
                              "id": 10836,
                              "nodeType": "Return",
                              "src": "6797:15:37"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 10810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10808,
                      "name": "upper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10803,
                      "src": "6568:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 10809,
                      "name": "lower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10799,
                      "src": "6576:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6568:13:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10857,
                  "nodeType": "WhileStatement",
                  "src": "6561:418:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 10858,
                          "name": "checkpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10536,
                          "src": "6995:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
                            "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                          }
                        },
                        "id": 10860,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 10859,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10737,
                          "src": "7007:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6995:20:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$",
                          "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                        }
                      },
                      "id": 10862,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 10861,
                        "name": "lower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10799,
                        "src": "7016:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6995:27:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$10529_storage",
                        "typeString": "struct SushiToken.Checkpoint storage ref"
                      }
                    },
                    "id": 10863,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "votes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10528,
                    "src": "6995:33:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10743,
                  "id": 10864,
                  "nodeType": "Return",
                  "src": "6988:40:37"
                }
              ]
            },
            "documentation": {
              "id": 10735,
              "nodeType": "StructuredDocumentation",
              "src": "5401:411:37",
              "text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
            },
            "functionSelector": "782d6fe1",
            "id": 10866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVotes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10737,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10866,
                  "src": "5840:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5840:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10739,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10866,
                  "src": "5857:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10738,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5857:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5839:35:37"
            },
            "returnParameters": {
              "id": 10743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10742,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10866,
                  "src": "5922:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5922:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5921:9:37"
            },
            "scope": 11121,
            "src": "5817:1218:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10903,
              "nodeType": "Block",
              "src": "7119:351:37",
              "statements": [
                {
                  "assignments": [
                    10874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10874,
                      "mutability": "mutable",
                      "name": "currentDelegate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10903,
                      "src": "7129:23:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10873,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7129:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10878,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 10875,
                      "name": "_delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10524,
                      "src": "7155:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 10877,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 10876,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10868,
                      "src": "7166:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7155:21:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7129:47:37"
                },
                {
                  "assignments": [
                    10880
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10880,
                      "mutability": "mutable",
                      "name": "delegatorBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 10903,
                      "src": "7186:24:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10879,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7186:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10884,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10882,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10868,
                        "src": "7223:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10881,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9769,
                      "src": "7213:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 10883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7213:20:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7186:47:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 10885,
                        "name": "_delegates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10524,
                        "src": "7289:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 10887,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 10886,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10868,
                        "src": "7300:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7289:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10888,
                      "name": "delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10870,
                      "src": "7313:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7289:33:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10890,
                  "nodeType": "ExpressionStatement",
                  "src": "7289:33:37"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10892,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10868,
                        "src": "7354:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10893,
                        "name": "currentDelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10874,
                        "src": "7365:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10894,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10870,
                        "src": "7382:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10891,
                      "name": "DelegateChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10567,
                      "src": "7338:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 10895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7338:54:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10896,
                  "nodeType": "EmitStatement",
                  "src": "7333:59:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10898,
                        "name": "currentDelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10874,
                        "src": "7418:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10899,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10870,
                        "src": "7435:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10900,
                        "name": "delegatorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10880,
                        "src": "7446:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10897,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11011,
                      "src": "7403:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7403:60:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10902,
                  "nodeType": "ExpressionStatement",
                  "src": "7403:60:37"
                }
              ]
            },
            "documentation": null,
            "id": 10904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10868,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10904,
                  "src": "7060:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7060:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10870,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10904,
                  "src": "7079:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7079:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7059:38:37"
            },
            "returnParameters": {
              "id": 10872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7119:0:37"
            },
            "scope": 11121,
            "src": "7041:429:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11010,
              "nodeType": "Block",
              "src": "7557:848:37",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 10915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 10913,
                        "name": "srcRep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10906,
                        "src": "7571:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 10914,
                        "name": "dstRep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10908,
                        "src": "7581:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7571:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 10916,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10910,
                        "src": "7591:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 10917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7600:1:37",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7591:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7571:30:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 11009,
                  "nodeType": "IfStatement",
                  "src": "7567:832:37",
                  "trueBody": {
                    "id": 11008,
                    "nodeType": "Block",
                    "src": "7603:796:37",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10920,
                            "name": "srcRep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10906,
                            "src": "7621:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 10923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7639:1:37",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 10922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7631:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10921,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7631:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 10924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7631:10:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7621:20:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 10963,
                        "nodeType": "IfStatement",
                        "src": "7617:379:37",
                        "trueBody": {
                          "id": 10962,
                          "nodeType": "Block",
                          "src": "7643:353:37",
                          "statements": [
                            {
                              "assignments": [
                                10927
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10927,
                                  "mutability": "mutable",
                                  "name": "srcRepNum",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 10962,
                                  "src": "7708:16:37",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 10926,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7708:6:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 10931,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 10928,
                                  "name": "numCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10541,
                                  "src": "7727:14:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                    "typeString": "mapping(address => uint32)"
                                  }
                                },
                                "id": 10930,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 10929,
                                  "name": "srcRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10906,
                                  "src": "7742:6:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7727:22:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7708:41:37"
                            },
                            {
                              "assignments": [
                                10933
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10933,
                                  "mutability": "mutable",
                                  "name": "srcRepOld",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 10962,
                                  "src": "7767:17:37",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 10932,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7767:7:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 10947,
                              "initialValue": {
                                "argumentTypes": null,
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 10936,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 10934,
                                    "name": "srcRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10927,
                                    "src": "7787:9:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 10935,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7799:1:37",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "7787:13:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 10945,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7846:1:37",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 10946,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "7787:60:37",
                                "trueExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 10937,
                                        "name": "checkpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10536,
                                        "src": "7803:11:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 10939,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 10938,
                                        "name": "srcRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10906,
                                        "src": "7815:6:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7803:19:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$",
                                        "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 10943,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 10942,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 10940,
                                        "name": "srcRepNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10927,
                                        "src": "7823:9:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 10941,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7835:1:37",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "7823:13:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7803:34:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$10529_storage",
                                      "typeString": "struct SushiToken.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 10944,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10528,
                                  "src": "7803:40:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7767:80:37"
                            },
                            {
                              "assignments": [
                                10949
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10949,
                                  "mutability": "mutable",
                                  "name": "srcRepNew",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 10962,
                                  "src": "7865:17:37",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 10948,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7865:7:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 10954,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 10952,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10910,
                                    "src": "7899:6:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 10950,
                                    "name": "srcRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10933,
                                    "src": "7885:9:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 10951,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19550,
                                  "src": "7885:13:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 10953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7885:21:37",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7865:41:37"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 10956,
                                    "name": "srcRep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10906,
                                    "src": "7941:6:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 10957,
                                    "name": "srcRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10927,
                                    "src": "7949:9:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 10958,
                                    "name": "srcRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10933,
                                    "src": "7960:9:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 10959,
                                    "name": "srcRepNew",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10949,
                                    "src": "7971:9:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 10955,
                                  "name": "_writeCheckpoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11084,
                                  "src": "7924:16:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint32,uint256,uint256)"
                                  }
                                },
                                "id": 10960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7924:57:37",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 10961,
                              "nodeType": "ExpressionStatement",
                              "src": "7924:57:37"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10964,
                            "name": "dstRep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10908,
                            "src": "8014:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 10967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8032:1:37",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 10966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8024:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10965,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8024:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 10968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8024:10:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "8014:20:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 11007,
                        "nodeType": "IfStatement",
                        "src": "8010:379:37",
                        "trueBody": {
                          "id": 11006,
                          "nodeType": "Block",
                          "src": "8036:353:37",
                          "statements": [
                            {
                              "assignments": [
                                10971
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10971,
                                  "mutability": "mutable",
                                  "name": "dstRepNum",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 11006,
                                  "src": "8101:16:37",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 10970,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8101:6:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 10975,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 10972,
                                  "name": "numCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10541,
                                  "src": "8120:14:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                    "typeString": "mapping(address => uint32)"
                                  }
                                },
                                "id": 10974,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 10973,
                                  "name": "dstRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10908,
                                  "src": "8135:6:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8120:22:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8101:41:37"
                            },
                            {
                              "assignments": [
                                10977
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10977,
                                  "mutability": "mutable",
                                  "name": "dstRepOld",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 11006,
                                  "src": "8160:17:37",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 10976,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8160:7:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 10991,
                              "initialValue": {
                                "argumentTypes": null,
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 10980,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 10978,
                                    "name": "dstRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10971,
                                    "src": "8180:9:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 10979,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8192:1:37",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "8180:13:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 10989,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8239:1:37",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 10990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "8180:60:37",
                                "trueExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 10981,
                                        "name": "checkpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10536,
                                        "src": "8196:11:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 10983,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 10982,
                                        "name": "dstRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10908,
                                        "src": "8208:6:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8196:19:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$",
                                        "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 10987,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 10986,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 10984,
                                        "name": "dstRepNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10971,
                                        "src": "8216:9:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 10985,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8228:1:37",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "8216:13:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8196:34:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$10529_storage",
                                      "typeString": "struct SushiToken.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 10988,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10528,
                                  "src": "8196:40:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8160:80:37"
                            },
                            {
                              "assignments": [
                                10993
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10993,
                                  "mutability": "mutable",
                                  "name": "dstRepNew",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 11006,
                                  "src": "8258:17:37",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 10992,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8258:7:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 10998,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 10996,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10910,
                                    "src": "8292:6:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 10994,
                                    "name": "dstRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10977,
                                    "src": "8278:9:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 10995,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19533,
                                  "src": "8278:13:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 10997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8278:21:37",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8258:41:37"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 11000,
                                    "name": "dstRep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10908,
                                    "src": "8334:6:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 11001,
                                    "name": "dstRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10971,
                                    "src": "8342:9:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 11002,
                                    "name": "dstRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10977,
                                    "src": "8353:9:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 11003,
                                    "name": "dstRepNew",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10993,
                                    "src": "8364:9:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 10999,
                                  "name": "_writeCheckpoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11084,
                                  "src": "8317:16:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint32,uint256,uint256)"
                                  }
                                },
                                "id": 11004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8317:57:37",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 11005,
                              "nodeType": "ExpressionStatement",
                              "src": "8317:57:37"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 11011,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_moveDelegates",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10906,
                  "mutability": "mutable",
                  "name": "srcRep",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11011,
                  "src": "7500:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7500:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10908,
                  "mutability": "mutable",
                  "name": "dstRep",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11011,
                  "src": "7516:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7516:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10910,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11011,
                  "src": "7532:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7532:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7499:48:37"
            },
            "returnParameters": {
              "id": 10912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7557:0:37"
            },
            "scope": 11121,
            "src": "7476:929:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11083,
              "nodeType": "Block",
              "src": "8572:526:37",
              "statements": [
                {
                  "assignments": [
                    11023
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11023,
                      "mutability": "mutable",
                      "name": "blockNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 11083,
                      "src": "8582:18:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 11022,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8582:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11029,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11025,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8610:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 11026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8610:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
                        "id": 11027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8624:55:37",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74",
                          "typeString": "literal_string \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\""
                        },
                        "value": "SUSHI::_writeCheckpoint: block number exceeds 32 bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74",
                          "typeString": "literal_string \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\""
                        }
                      ],
                      "id": 11024,
                      "name": "safe32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11108,
                      "src": "8603:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
                        "typeString": "function (uint256,string memory) pure returns (uint32)"
                      }
                    },
                    "id": 11028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8603:77:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8582:98:37"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 11043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 11032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 11030,
                        "name": "nCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11015,
                        "src": "8695:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 11031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8710:1:37",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8695:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 11042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 11033,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10536,
                              "src": "8715:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
                                "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                              }
                            },
                            "id": 11035,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 11034,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11013,
                              "src": "8727:9:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8715:22:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$",
                              "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                            }
                          },
                          "id": 11039,
                          "indexExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 11038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 11036,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11015,
                              "src": "8738:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 11037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8753:1:37",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8738:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8715:40:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$10529_storage",
                            "typeString": "struct SushiToken.Checkpoint storage ref"
                          }
                        },
                        "id": 11040,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10526,
                        "src": "8715:50:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 11041,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11023,
                        "src": "8769:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "8715:65:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8695:85:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 11075,
                    "nodeType": "Block",
                    "src": "8870:155:37",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 11065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 11056,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10536,
                                "src": "8884:11:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                }
                              },
                              "id": 11059,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 11057,
                                "name": "delegatee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11013,
                                "src": "8896:9:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8884:22:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$",
                                "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                              }
                            },
                            "id": 11060,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 11058,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11015,
                              "src": "8907:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8884:36:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$10529_storage",
                              "typeString": "struct SushiToken.Checkpoint storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 11062,
                                "name": "blockNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11023,
                                "src": "8934:11:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 11063,
                                "name": "newVotes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11019,
                                "src": "8947:8:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 11061,
                              "name": "Checkpoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10529,
                              "src": "8923:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Checkpoint_$10529_storage_ptr_$",
                                "typeString": "type(struct SushiToken.Checkpoint storage pointer)"
                              }
                            },
                            "id": 11064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8923:33:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$10529_memory_ptr",
                              "typeString": "struct SushiToken.Checkpoint memory"
                            }
                          },
                          "src": "8884:72:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$10529_storage",
                            "typeString": "struct SushiToken.Checkpoint storage ref"
                          }
                        },
                        "id": 11066,
                        "nodeType": "ExpressionStatement",
                        "src": "8884:72:37"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 11073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 11067,
                              "name": "numCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10541,
                              "src": "8970:14:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                "typeString": "mapping(address => uint32)"
                              }
                            },
                            "id": 11069,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 11068,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11013,
                              "src": "8985:9:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8970:25:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 11072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 11070,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11015,
                              "src": "8998:12:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 11071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9013:1:37",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8998:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "8970:44:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 11074,
                        "nodeType": "ExpressionStatement",
                        "src": "8970:44:37"
                      }
                    ]
                  },
                  "id": 11076,
                  "nodeType": "IfStatement",
                  "src": "8691:334:37",
                  "trueBody": {
                    "id": 11055,
                    "nodeType": "Block",
                    "src": "8782:82:37",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 11053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 11044,
                                  "name": "checkpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10536,
                                  "src": "8796:11:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                  }
                                },
                                "id": 11049,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 11045,
                                  "name": "delegatee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11013,
                                  "src": "8808:9:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8796:22:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$10529_storage_$",
                                  "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                                }
                              },
                              "id": 11050,
                              "indexExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 11048,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 11046,
                                  "name": "nCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11015,
                                  "src": "8819:12:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 11047,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8834:1:37",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "8819:16:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8796:40:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$10529_storage",
                                "typeString": "struct SushiToken.Checkpoint storage ref"
                              }
                            },
                            "id": 11051,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10528,
                            "src": "8796:46:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 11052,
                            "name": "newVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11019,
                            "src": "8845:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8796:57:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11054,
                        "nodeType": "ExpressionStatement",
                        "src": "8796:57:37"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11078,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11013,
                        "src": "9061:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11079,
                        "name": "oldVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11017,
                        "src": "9072:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11080,
                        "name": "newVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11019,
                        "src": "9082:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11077,
                      "name": "DelegateVotesChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10576,
                      "src": "9040:20:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 11081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9040:51:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11082,
                  "nodeType": "EmitStatement",
                  "src": "9035:56:37"
                }
              ]
            },
            "documentation": null,
            "id": 11084,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_writeCheckpoint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11013,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11084,
                  "src": "8446:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8446:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11015,
                  "mutability": "mutable",
                  "name": "nCheckpoints",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11084,
                  "src": "8473:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 11014,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8473:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11017,
                  "mutability": "mutable",
                  "name": "oldVotes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11084,
                  "src": "8502:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8502:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11019,
                  "mutability": "mutable",
                  "name": "newVotes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11084,
                  "src": "8528:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8528:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8436:114:37"
            },
            "returnParameters": {
              "id": 11021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8572:0:37"
            },
            "scope": 11121,
            "src": "8411:687:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11107,
              "nodeType": "Block",
              "src": "9187:75:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 11094,
                          "name": "n",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11086,
                          "src": "9205:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          },
                          "id": 11097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 11095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9209:1:37",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3332",
                            "id": 11096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9212:2:37",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "9209:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          }
                        },
                        "src": "9205:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11099,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11088,
                        "src": "9216:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 11093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9197:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9197:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11101,
                  "nodeType": "ExpressionStatement",
                  "src": "9197:32:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11104,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11086,
                        "src": "9253:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9246:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 11102,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9246:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 11105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9246:9:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 11092,
                  "id": 11106,
                  "nodeType": "Return",
                  "src": "9239:16:37"
                }
              ]
            },
            "documentation": null,
            "id": 11108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safe32",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11086,
                  "mutability": "mutable",
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11108,
                  "src": "9120:6:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11085,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9120:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11088,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11108,
                  "src": "9128:26:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11087,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9128:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9119:36:37"
            },
            "returnParameters": {
              "id": 11092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11091,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11108,
                  "src": "9179:6:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 11090,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9179:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9178:8:37"
            },
            "scope": 11121,
            "src": "9104:158:37",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11119,
              "nodeType": "Block",
              "src": "9319:98:37",
              "statements": [
                {
                  "assignments": [
                    11114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11114,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 11119,
                      "src": "9329:15:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11113,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9329:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11115,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9329:15:37"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "9363:24:37",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9365:20:37",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "9376:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9376:9:37"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "9365:7:37"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 11114,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9365:7:37",
                      "valueSize": 1
                    }
                  ],
                  "id": 11116,
                  "nodeType": "InlineAssembly",
                  "src": "9354:33:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11117,
                    "name": "chainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11114,
                    "src": "9403:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11112,
                  "id": 11118,
                  "nodeType": "Return",
                  "src": "9396:14:37"
                }
              ]
            },
            "documentation": null,
            "id": 11120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9287:2:37"
            },
            "returnParameters": {
              "id": 11112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11111,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11120,
                  "src": "9313:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11110,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9313:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9312:6:37"
            },
            "scope": 11121,
            "src": "9268:149:37",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 11122,
        "src": "268:9151:37"
      }
    ],
    "src": "0:9419:37"
  },
  "bytecode": "608060405234801561001057600080fd5b50612247806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637ecebe001161010f578063b4b5ea57116100a2578063d547741f11610071578063d547741f1461079a578063dd62ed3e146107c6578063e7a324dc146107f4578063f1127ed8146107fc576101f0565b8063b4b5ea5714610708578063c3cda5201461072e578063ca15c87314610775578063d539139314610792576101f0565b806395d89b41116100de57806395d89b41146106a0578063a217fddf146106a8578063a457c2d7146106b0578063a9059cbb146106dc576101f0565b80637ecebe00146104f05780638dc7df72146105165780639010d07c1461065157806391d1485414610674576101f0565b806336568abe116101875780635c19a95c116101565780635c19a95c146104395780636fcfff451461045f57806370a082311461049e578063782d6fe1146104c4576101f0565b806336568abe14610373578063395093511461039f57806340c10f19146103cb578063587cde1e146103f7576101f0565b806323b872dd116101c357806323b872dd146102d4578063248a9ca31461030a5780632f2ff15d14610327578063313ce56714610355576101f0565b806306fdde03146101f5578063095ea7b31461027257806318160ddd146102b257806320606b70146102cc575b600080fd5b6101fd61084e565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561023757818101518382015260200161021f565b50505050905090810190601f1680156102645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61029e6004803603604081101561028857600080fd5b506001600160a01b0381351690602001356108e4565b604080519115158252519081900360200190f35b6102ba610902565b60408051918252519081900360200190f35b6102ba610908565b61029e600480360360608110156102ea57600080fd5b506001600160a01b0381358116916020810135909116906040013561092c565b6102ba6004803603602081101561032057600080fd5b50356109b3565b6103536004803603604081101561033d57600080fd5b50803590602001356001600160a01b03166109c8565b005b61035d610a34565b6040805160ff9092168252519081900360200190f35b6103536004803603604081101561038957600080fd5b50803590602001356001600160a01b0316610a3d565b61029e600480360360408110156103b557600080fd5b506001600160a01b038135169060200135610a9e565b610353600480360360408110156103e157600080fd5b506001600160a01b038135169060200135610aec565b61041d6004803603602081101561040d57600080fd5b50356001600160a01b0316610b82565b604080516001600160a01b039092168252519081900360200190f35b6103536004803603602081101561044f57600080fd5b50356001600160a01b0316610ba0565b6104856004803603602081101561047557600080fd5b50356001600160a01b0316610bad565b6040805163ffffffff9092168252519081900360200190f35b6102ba600480360360208110156104b457600080fd5b50356001600160a01b0316610bc5565b6102ba600480360360408110156104da57600080fd5b506001600160a01b038135169060200135610be0565b6102ba6004803603602081101561050657600080fd5b50356001600160a01b0316610de8565b6103536004803603608081101561052c57600080fd5b81019060208101813564010000000081111561054757600080fd5b82018360208201111561055957600080fd5b8035906020019184600183028401116401000000008311171561057b57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156105ce57600080fd5b8201836020820111156105e057600080fd5b8035906020019184600183028401116401000000008311171561060257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335169350505060200135610dfa565b61041d6004803603604081101561066757600080fd5b5080359060200135610e49565b61029e6004803603604081101561068a57600080fd5b50803590602001356001600160a01b0316610e68565b6101fd610e80565b6102ba610ee1565b61029e600480360360408110156106c657600080fd5b506001600160a01b038135169060200135610ee6565b61029e600480360360408110156106f257600080fd5b506001600160a01b038135169060200135610f4e565b6102ba6004803603602081101561071e57600080fd5b50356001600160a01b0316610f62565b610353600480360360c081101561074457600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135610fc5565b6102ba6004803603602081101561078b57600080fd5b5035611238565b6102ba61124f565b610353600480360360408110156107b057600080fd5b50803590602001356001600160a01b0316611273565b6102ba600480360360408110156107dc57600080fd5b506001600160a01b03813581169160200135166112cc565b6102ba6112f7565b61082e6004803603604081101561081257600080fd5b5080356001600160a01b0316906020013563ffffffff1661131b565b6040805163ffffffff909316835260208301919091528051918290030190f35b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108da5780601f106108af576101008083540402835291602001916108da565b820191906000526020600020905b8154815290600101906020018083116108bd57829003601f168201915b5050505050905090565b60006108f86108f1611348565b848461134c565b5060015b92915050565b60035490565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000610939848484611438565b6109a984610945611348565b6109a485604051806060016040528060288152602001612103602891396001600160a01b038a16600090815260026020526040812090610983611348565b6001600160a01b031681526020810191909152604001600020549190611595565b61134c565b5060019392505050565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546109eb906109e6611348565b610e68565b610a265760405162461bcd60e51b815260040180806020018281038252602f815260200180611f85602f913960400191505060405180910390fd5b610a30828261162c565b5050565b60065460ff1690565b610a45611348565b6001600160a01b0316816001600160a01b031614610a945760405162461bcd60e51b815260040180806020018281038252602f8152602001806121e3602f913960400191505060405180910390fd5b610a308282611695565b60006108f8610aab611348565b846109a48560026000610abc611348565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906116fe565b610b187f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109e6611348565b610b535760405162461bcd60e51b8152600401808060200182810382526029815260200180611fb46029913960400191505060405180910390fd5b610b5d8282611758565b6001600160a01b03808316600090815260076020526040812054610a3092168361184a565b6001600160a01b039081166000908152600760205260409020541690565b610baa338261198c565b50565b60096020526000908152604090205463ffffffff1681565b6001600160a01b031660009081526001602052604090205490565b6000438210610c205760405162461bcd60e51b81526004018080602001828103825260288152602001806120db6028913960400191505060405180910390fd5b6001600160a01b03831660009081526009602052604090205463ffffffff1680610c4e5760009150506108fc565b6001600160a01b038416600090815260086020908152604080832063ffffffff600019860181168552925290912054168310610cbd576001600160a01b03841660009081526008602090815260408083206000199490940163ffffffff168352929052206001015490506108fc565b6001600160a01b038416600090815260086020908152604080832083805290915290205463ffffffff16831015610cf85760009150506108fc565b600060001982015b8163ffffffff168163ffffffff161115610db157600282820363ffffffff16048103610d2a611e95565b506001600160a01b038716600090815260086020908152604080832063ffffffff808616855290835292819020815180830190925280549093168082526001909301549181019190915290871415610d8c576020015194506108fc9350505050565b805163ffffffff16871115610da357819350610daa565b6001820392505b5050610d00565b506001600160a01b038516600090815260086020908152604080832063ffffffff9094168352929052206001015491505092915050565b600a6020526000908152604090205481565b610e05600083610a26565b610e2f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a683610a26565b610e398484611a1b565b610e433382611758565b50505050565b6000828152602081905260408120610e619083611aa6565b9392505050565b6000828152602081905260408120610e619083611ab2565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108da5780601f106108af576101008083540402835291602001916108da565b600081565b60006108f8610ef3611348565b846109a4856040518060600160405280602581526020016121be6025913960026000610f1d611348565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611595565b60006108f8610f5b611348565b8484611438565b6001600160a01b03811660009081526009602052604081205463ffffffff1680610f8d576000610e61565b6001600160a01b038316600090815260086020908152604080832063ffffffff60001986011684529091529020600101549392505050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866610ff061084e565b80519060200120610fff611ac7565b60408051602080820195909552808201939093526060830191909152306080808401919091528151808403909101815260a0830182528051908401207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08401526001600160a01b038b1660e084015261010083018a90526101208084018a9052825180850390910181526101408401835280519085012061190160f01b6101608501526101628401829052610182808501829052835180860390910181526101a285018085528151918701919091206000918290526101c2860180865281905260ff8b166101e287015261020286018a90526102228601899052935192965090949293909260019261024280840193601f198301929081900390910190855afa158015611132573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111845760405162461bcd60e51b815260040180806020018281038252602781526020018061214e6027913960400191505060405180910390fd5b6001600160a01b0381166000908152600a6020526040902080546001810190915589146111e25760405162461bcd60e51b815260040180806020018281038252602381526020018061212b6023913960400191505060405180910390fd5b874211156112215760405162461bcd60e51b8152600401808060200182810382526027815260200180611fdd6027913960400191505060405180910390fd5b61122b818b61198c565b505050505b505050505050565b60008181526020819052604081206108fc90611acb565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b600082815260208190526040902060020154611291906109e6611348565b610a945760405162461bcd60e51b81526004018080602001828103825260308152602001806120766030913960400191505060405180910390fd5b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b60086020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b3390565b6001600160a01b0383166113915760405162461bcd60e51b815260040180806020018281038252602481526020018061219a6024913960400191505060405180910390fd5b6001600160a01b0382166113d65760405162461bcd60e51b81526004018080602001828103825260228152602001806120046022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661147d5760405162461bcd60e51b81526004018080602001828103825260258152602001806121756025913960400191505060405180910390fd5b6001600160a01b0382166114c25760405162461bcd60e51b8152600401808060200182810382526023815260200180611f626023913960400191505060405180910390fd5b6114cd838383611987565b61150a81604051806060016040528060268152602001612026602691396001600160a01b0386166000908152600160205260409020549190611595565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461153990826116fe565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156116245760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115e95781810151838201526020016115d1565b50505050905090810190601f1680156116165780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008281526020819052604090206116449082611ad6565b15610a3057611651611348565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020819052604090206116ad9082611aeb565b15610a30576116ba611348565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600082820183811015610e61576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166117b3576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6117bf60008383611987565b6003546117cc90826116fe565b6003556001600160a01b0382166000908152600160205260409020546117f290826116fe565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b816001600160a01b0316836001600160a01b03161415801561186c5750600081115b15611987576001600160a01b038316156118fe576001600160a01b03831660009081526009602052604081205463ffffffff1690816118ac5760006118de565b6001600160a01b038516600090815260086020908152604080832063ffffffff60001987011684529091529020600101545b905060006118ec8285611b00565b90506118fa86848484611b42565b5050505b6001600160a01b03821615611987576001600160a01b03821660009081526009602052604081205463ffffffff16908161193957600061196b565b6001600160a01b038416600090815260086020908152604080832063ffffffff60001987011684529091529020600101545b9050600061197982856116fe565b905061123085848484611b42565b505050565b6001600160a01b03808316600090815260076020526040812054909116906119b384610bc5565b6001600160a01b0385811660008181526007602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610e4382848361184a565b600654610100900460ff1615611a625760405162461bcd60e51b815260040180806020018281038252602a81526020018061204c602a913960400191505060405180910390fd5b8151611a75906004906020850190611eac565b508051611a89906005906020840190611eac565b50506006805461ff001960ff199091166012171661010017905550565b6000610e618383611ca7565b6000610e61836001600160a01b038416611d0b565b4690565b60006108fc82611d23565b6000610e61836001600160a01b038416611d27565b6000610e61836001600160a01b038416611d71565b6000610e6183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611595565b6000611b66436040518060600160405280603581526020016120a660359139611e37565b905060008463ffffffff16118015611baf57506001600160a01b038516600090815260086020908152604080832063ffffffff6000198901811685529252909120548282169116145b15611bec576001600160a01b038516600090815260086020908152604080832063ffffffff60001989011684529091529020600101829055611c5d565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600884528681208b8616825284528681209551865490861663ffffffff19918216178755925160019687015590815260099092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b81546000908210611ce95760405162461bcd60e51b8152600401808060200182810382526022815260200180611f406022913960400191505060405180910390fd5b826000018281548110611cf857fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6000611d338383611d0b565b611d69575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108fc565b5060006108fc565b60008181526001830160205260408120548015611e2d5783546000198083019190810190600090879083908110611da457fe5b9060005260206000200154905080876000018481548110611dc157fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611df157fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506108fc565b60009150506108fc565b6000816401000000008410611e8d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156115e95781810151838201526020016115d1565b509192915050565b604080518082019091526000808252602082015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611eed57805160ff1916838001178555611f1a565b82800160010185558215611f1a579182015b82811115611f1a578251825591602001919060010190611eff565b50611f26929150611f2a565b5090565b5b80821115611f265760008155600101611f2b56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e745375736869546f6b656e3a206d7573742068617665206d696e74657220726f6c6520746f206d696e7453555348493a3a64656c656761746542795369673a207369676e6174757265206578706972656445524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a20746f6b656e2068617320616c7265616479206265656e20696e697469616c697a656421416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6553555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747353555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636553555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e636553555348493a3a64656c656761746542795369673a20696e76616c6964207369676e617475726545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212202d25d106735696c32f3bb3951214afbd704d96ca43956e9a1e9d901ad4fbb72d64736f6c634300060c0033",
  "bytecodeSha1": "b399ba7d246b6b4626fdac095ac3054575fafe54",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "SushiToken",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "AccessControl._grantRole": {
          "124": [
            7088,
            7121,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "125": [
            7279,
            7315,
            false
          ]
        },
        "AccessControl.grantRole": {
          "121": [
            4717,
            4762,
            true
          ]
        },
        "AccessControl.renounceRole": {
          "122": [
            5894,
            5917,
            true
          ]
        },
        "AccessControl.revokeRole": {
          "123": [
            5175,
            5220,
            true
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "136": [
            986,
            992,
            true
          ]
        },
        "SafeMath.sub": {
          "135": [
            1859,
            1865,
            true
          ]
        }
      },
      "32": {
        "ERC20._approve": {
          "126": [
            9713,
            9732,
            true
          ],
          "127": [
            9791,
            9812,
            true
          ]
        },
        "ERC20._initERC20": {
          "131": [
            2214,
            2227,
            true
          ]
        },
        "ERC20._mint": {
          "130": [
            8173,
            8194,
            true
          ]
        },
        "ERC20._transfer": {
          "128": [
            7395,
            7415,
            true
          ],
          "129": [
            7475,
            7498,
            true
          ]
        }
      },
      "37": {
        "SushiToken._moveDelegates": {
          "112": [
            7571,
            7587,
            false
          ],
          "113": [
            7591,
            7601,
            false
          ],
          "114": [
            7621,
            7641,
            false
          ],
          "115": [
            7787,
            7800,
            true
          ],
          "116": [
            8014,
            8034,
            false
          ],
          "117": [
            8180,
            8193,
            true
          ]
        },
        "SushiToken._writeCheckpoint": {
          "118": [
            8695,
            8711,
            false
          ],
          "119": [
            8715,
            8780,
            false
          ]
        },
        "SushiToken.delegateBySig": {
          "109": [
            4670,
            4693,
            true
          ],
          "110": [
            4755,
            4783,
            true
          ],
          "111": [
            4841,
            4854,
            true
          ]
        },
        "SushiToken.getCurrentVotes": {
          "108": [
            5321,
            5337,
            true
          ]
        },
        "SushiToken.getPriorVotes": {
          "102": [
            5953,
            5979,
            true
          ],
          "103": [
            6094,
            6111,
            false
          ],
          "104": [
            6203,
            6266,
            false
          ],
          "105": [
            6402,
            6449,
            false
          ],
          "106": [
            6750,
            6777,
            false
          ],
          "107": [
            6837,
            6863,
            false
          ]
        },
        "SushiToken.mint": {
          "101": [
            870,
            904,
            true
          ]
        },
        "SushiToken.safe32": {
          "120": [
            9205,
            9214,
            true
          ]
        }
      },
      "6": {},
      "63": {},
      "7": {
        "EnumerableSet._add": {
          "133": [
            1695,
            1716,
            false
          ]
        },
        "EnumerableSet._at": {
          "132": [
            4517,
            4543,
            true
          ]
        },
        "EnumerableSet._remove": {
          "134": [
            2420,
            2435,
            false
          ]
        }
      },
      "70": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "45": [
            670,
            687
          ]
        }
      },
      "1": {
        "AccessControl._grantRole": {
          "57": [
            7137,
            7182
          ]
        },
        "AccessControl._revokeRole": {
          "58": [
            7331,
            7376
          ]
        },
        "AccessControl.getRoleAdmin": {
          "7": [
            4348,
            4377
          ]
        },
        "AccessControl.getRoleMember": {
          "32": [
            4047,
            4084
          ]
        },
        "AccessControl.getRoleMemberCount": {
          "42": [
            3327,
            3363
          ]
        },
        "AccessControl.grantRole": {
          "8": [
            4709,
            4814
          ],
          "9": [
            4825,
            4850
          ]
        },
        "AccessControl.hasRole": {
          "33": [
            3025,
            3070
          ]
        },
        "AccessControl.renounceRole": {
          "11": [
            5886,
            5969
          ],
          "12": [
            5980,
            6006
          ]
        },
        "AccessControl.revokeRole": {
          "43": [
            5167,
            5273
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "59": [
            978,
            1024
          ]
        },
        "SafeMath.sub": {
          "56": [
            1851,
            1880
          ],
          "80": [
            1398,
            1448
          ]
        }
      },
      "32": {
        "ERC20._approve": {
          "46": [
            9705,
            9773
          ],
          "47": [
            9783,
            9851
          ],
          "48": [
            9862,
            9898
          ],
          "49": [
            9908,
            9945
          ]
        },
        "ERC20._initERC20": {
          "70": [
            2206,
            2274
          ],
          "71": [
            2284,
            2296
          ],
          "72": [
            2306,
            2322
          ],
          "73": [
            2332,
            2346
          ],
          "74": [
            2356,
            2375
          ]
        },
        "ERC20._mint": {
          "60": [
            8165,
            8230
          ],
          "61": [
            8241,
            8290
          ],
          "62": [
            8301,
            8340
          ],
          "63": [
            8350,
            8401
          ],
          "64": [
            8411,
            8453
          ]
        },
        "ERC20._transfer": {
          "50": [
            7387,
            7457
          ],
          "51": [
            7467,
            7538
          ],
          "52": [
            7549,
            7596
          ],
          "53": [
            7607,
            7698
          ],
          "54": [
            7708,
            7763
          ],
          "55": [
            7773,
            7813
          ]
        },
        "ERC20.allowance": {
          "44": [
            4331,
            4365
          ]
        },
        "ERC20.approve": {
          "1": [
            4609,
            4648
          ],
          "2": [
            4658,
            4669
          ]
        },
        "ERC20.balanceOf": {
          "19": [
            3758,
            3783
          ]
        },
        "ERC20.decimals": {
          "10": [
            3434,
            3450
          ]
        },
        "ERC20.decreaseAllowance": {
          "35": [
            6659,
            6788
          ]
        },
        "ERC20.increaseAllowance": {
          "13": [
            5952,
            6035
          ]
        },
        "ERC20.name": {
          "0": [
            2518,
            2530
          ]
        },
        "ERC20.symbol": {
          "34": [
            2723,
            2737
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3589,
            3608
          ]
        },
        "ERC20.transfer": {
          "36": [
            4095,
            4137
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            5258,
            5294
          ],
          "5": [
            5304,
            5425
          ],
          "6": [
            5435,
            5446
          ]
        }
      },
      "37": {
        "SushiToken._delegate": {
          "67": [
            7289,
            7322
          ],
          "68": [
            7333,
            7392
          ],
          "69": [
            7403,
            7463
          ]
        },
        "SushiToken._moveDelegates": {
          "65": [
            7924,
            7981
          ],
          "66": [
            8317,
            8374
          ]
        },
        "SushiToken._writeCheckpoint": {
          "81": [
            8796,
            8853
          ],
          "82": [
            8884,
            8956
          ],
          "83": [
            8970,
            9014
          ],
          "84": [
            9035,
            9091
          ]
        },
        "SushiToken.delegate": {
          "18": [
            3344,
            3383
          ]
        },
        "SushiToken.delegateBySig": {
          "38": [
            4662,
            4737
          ],
          "39": [
            4747,
            4823
          ],
          "40": [
            4833,
            4898
          ],
          "41": [
            4908,
            4946
          ]
        },
        "SushiToken.delegates": {
          "17": [
            3115,
            3143
          ]
        },
        "SushiToken.getCurrentVotes": {
          "37": [
            5314,
            5388
          ]
        },
        "SushiToken.getPriorVotes": {
          "20": [
            5945,
            6024
          ],
          "21": [
            6127,
            6135
          ],
          "22": [
            6282,
            6333
          ],
          "23": [
            6465,
            6473
          ],
          "24": [
            6797,
            6812
          ],
          "25": [
            6883,
            6897
          ],
          "26": [
            6936,
            6954
          ],
          "27": [
            6988,
            7028
          ]
        },
        "SushiToken.initToken": {
          "28": [
            531,
            569
          ],
          "29": [
            579,
            610
          ],
          "30": [
            620,
            646
          ],
          "31": [
            656,
            689
          ]
        },
        "SushiToken.mint": {
          "14": [
            862,
            950
          ],
          "15": [
            960,
            979
          ],
          "16": [
            989,
            1041
          ]
        },
        "SushiToken.safe32": {
          "99": [
            9197,
            9229
          ],
          "100": [
            9239,
            9255
          ]
        }
      },
      "6": {},
      "63": {},
      "7": {
        "EnumerableSet._add": {
          "89": [
            1732,
            1755
          ],
          "90": [
            1890,
            1930
          ],
          "91": [
            1944,
            1955
          ],
          "92": [
            1986,
            1998
          ]
        },
        "EnumerableSet._at": {
          "85": [
            4509,
            4582
          ],
          "86": [
            4592,
            4617
          ]
        },
        "EnumerableSet._contains": {
          "87": [
            3865,
            3896
          ]
        },
        "EnumerableSet._length": {
          "88": [
            4059,
            4084
          ]
        },
        "EnumerableSet._remove": {
          "93": [
            3245,
            3283
          ],
          "94": [
            3349,
            3392
          ],
          "95": [
            3498,
            3515
          ],
          "96": [
            3583,
            3609
          ],
          "97": [
            3624,
            3635
          ],
          "98": [
            3666,
            3678
          ]
        },
        "EnumerableSet.add": {
          "78": [
            4950,
            4998
          ]
        },
        "EnumerableSet.at": {
          "75": [
            6178,
            6225
          ]
        },
        "EnumerableSet.contains": {
          "76": [
            5497,
            5550
          ]
        },
        "EnumerableSet.length": {
          "77": [
            5720,
            5746
          ]
        },
        "EnumerableSet.remove": {
          "79": [
            5262,
            5313
          ]
        }
      },
      "70": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.2.0/AccessControl",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Context",
    "ERC20",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/EnumerableSet",
    "IERC20",
    "IMisoToken",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101f05760003560e01c80637ecebe001161010f578063b4b5ea57116100a2578063d547741f11610071578063d547741f1461079a578063dd62ed3e146107c6578063e7a324dc146107f4578063f1127ed8146107fc576101f0565b8063b4b5ea5714610708578063c3cda5201461072e578063ca15c87314610775578063d539139314610792576101f0565b806395d89b41116100de57806395d89b41146106a0578063a217fddf146106a8578063a457c2d7146106b0578063a9059cbb146106dc576101f0565b80637ecebe00146104f05780638dc7df72146105165780639010d07c1461065157806391d1485414610674576101f0565b806336568abe116101875780635c19a95c116101565780635c19a95c146104395780636fcfff451461045f57806370a082311461049e578063782d6fe1146104c4576101f0565b806336568abe14610373578063395093511461039f57806340c10f19146103cb578063587cde1e146103f7576101f0565b806323b872dd116101c357806323b872dd146102d4578063248a9ca31461030a5780632f2ff15d14610327578063313ce56714610355576101f0565b806306fdde03146101f5578063095ea7b31461027257806318160ddd146102b257806320606b70146102cc575b600080fd5b6101fd61084e565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561023757818101518382015260200161021f565b50505050905090810190601f1680156102645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61029e6004803603604081101561028857600080fd5b506001600160a01b0381351690602001356108e4565b604080519115158252519081900360200190f35b6102ba610902565b60408051918252519081900360200190f35b6102ba610908565b61029e600480360360608110156102ea57600080fd5b506001600160a01b0381358116916020810135909116906040013561092c565b6102ba6004803603602081101561032057600080fd5b50356109b3565b6103536004803603604081101561033d57600080fd5b50803590602001356001600160a01b03166109c8565b005b61035d610a34565b6040805160ff9092168252519081900360200190f35b6103536004803603604081101561038957600080fd5b50803590602001356001600160a01b0316610a3d565b61029e600480360360408110156103b557600080fd5b506001600160a01b038135169060200135610a9e565b610353600480360360408110156103e157600080fd5b506001600160a01b038135169060200135610aec565b61041d6004803603602081101561040d57600080fd5b50356001600160a01b0316610b82565b604080516001600160a01b039092168252519081900360200190f35b6103536004803603602081101561044f57600080fd5b50356001600160a01b0316610ba0565b6104856004803603602081101561047557600080fd5b50356001600160a01b0316610bad565b6040805163ffffffff9092168252519081900360200190f35b6102ba600480360360208110156104b457600080fd5b50356001600160a01b0316610bc5565b6102ba600480360360408110156104da57600080fd5b506001600160a01b038135169060200135610be0565b6102ba6004803603602081101561050657600080fd5b50356001600160a01b0316610de8565b6103536004803603608081101561052c57600080fd5b81019060208101813564010000000081111561054757600080fd5b82018360208201111561055957600080fd5b8035906020019184600183028401116401000000008311171561057b57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156105ce57600080fd5b8201836020820111156105e057600080fd5b8035906020019184600183028401116401000000008311171561060257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335169350505060200135610dfa565b61041d6004803603604081101561066757600080fd5b5080359060200135610e49565b61029e6004803603604081101561068a57600080fd5b50803590602001356001600160a01b0316610e68565b6101fd610e80565b6102ba610ee1565b61029e600480360360408110156106c657600080fd5b506001600160a01b038135169060200135610ee6565b61029e600480360360408110156106f257600080fd5b506001600160a01b038135169060200135610f4e565b6102ba6004803603602081101561071e57600080fd5b50356001600160a01b0316610f62565b610353600480360360c081101561074457600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135610fc5565b6102ba6004803603602081101561078b57600080fd5b5035611238565b6102ba61124f565b610353600480360360408110156107b057600080fd5b50803590602001356001600160a01b0316611273565b6102ba600480360360408110156107dc57600080fd5b506001600160a01b03813581169160200135166112cc565b6102ba6112f7565b61082e6004803603604081101561081257600080fd5b5080356001600160a01b0316906020013563ffffffff1661131b565b6040805163ffffffff909316835260208301919091528051918290030190f35b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108da5780601f106108af576101008083540402835291602001916108da565b820191906000526020600020905b8154815290600101906020018083116108bd57829003601f168201915b5050505050905090565b60006108f86108f1611348565b848461134c565b5060015b92915050565b60035490565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000610939848484611438565b6109a984610945611348565b6109a485604051806060016040528060288152602001612103602891396001600160a01b038a16600090815260026020526040812090610983611348565b6001600160a01b031681526020810191909152604001600020549190611595565b61134c565b5060019392505050565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546109eb906109e6611348565b610e68565b610a265760405162461bcd60e51b815260040180806020018281038252602f815260200180611f85602f913960400191505060405180910390fd5b610a30828261162c565b5050565b60065460ff1690565b610a45611348565b6001600160a01b0316816001600160a01b031614610a945760405162461bcd60e51b815260040180806020018281038252602f8152602001806121e3602f913960400191505060405180910390fd5b610a308282611695565b60006108f8610aab611348565b846109a48560026000610abc611348565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906116fe565b610b187f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109e6611348565b610b535760405162461bcd60e51b8152600401808060200182810382526029815260200180611fb46029913960400191505060405180910390fd5b610b5d8282611758565b6001600160a01b03808316600090815260076020526040812054610a3092168361184a565b6001600160a01b039081166000908152600760205260409020541690565b610baa338261198c565b50565b60096020526000908152604090205463ffffffff1681565b6001600160a01b031660009081526001602052604090205490565b6000438210610c205760405162461bcd60e51b81526004018080602001828103825260288152602001806120db6028913960400191505060405180910390fd5b6001600160a01b03831660009081526009602052604090205463ffffffff1680610c4e5760009150506108fc565b6001600160a01b038416600090815260086020908152604080832063ffffffff600019860181168552925290912054168310610cbd576001600160a01b03841660009081526008602090815260408083206000199490940163ffffffff168352929052206001015490506108fc565b6001600160a01b038416600090815260086020908152604080832083805290915290205463ffffffff16831015610cf85760009150506108fc565b600060001982015b8163ffffffff168163ffffffff161115610db157600282820363ffffffff16048103610d2a611e95565b506001600160a01b038716600090815260086020908152604080832063ffffffff808616855290835292819020815180830190925280549093168082526001909301549181019190915290871415610d8c576020015194506108fc9350505050565b805163ffffffff16871115610da357819350610daa565b6001820392505b5050610d00565b506001600160a01b038516600090815260086020908152604080832063ffffffff9094168352929052206001015491505092915050565b600a6020526000908152604090205481565b610e05600083610a26565b610e2f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a683610a26565b610e398484611a1b565b610e433382611758565b50505050565b6000828152602081905260408120610e619083611aa6565b9392505050565b6000828152602081905260408120610e619083611ab2565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108da5780601f106108af576101008083540402835291602001916108da565b600081565b60006108f8610ef3611348565b846109a4856040518060600160405280602581526020016121be6025913960026000610f1d611348565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611595565b60006108f8610f5b611348565b8484611438565b6001600160a01b03811660009081526009602052604081205463ffffffff1680610f8d576000610e61565b6001600160a01b038316600090815260086020908152604080832063ffffffff60001986011684529091529020600101549392505050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866610ff061084e565b80519060200120610fff611ac7565b60408051602080820195909552808201939093526060830191909152306080808401919091528151808403909101815260a0830182528051908401207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08401526001600160a01b038b1660e084015261010083018a90526101208084018a9052825180850390910181526101408401835280519085012061190160f01b6101608501526101628401829052610182808501829052835180860390910181526101a285018085528151918701919091206000918290526101c2860180865281905260ff8b166101e287015261020286018a90526102228601899052935192965090949293909260019261024280840193601f198301929081900390910190855afa158015611132573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111845760405162461bcd60e51b815260040180806020018281038252602781526020018061214e6027913960400191505060405180910390fd5b6001600160a01b0381166000908152600a6020526040902080546001810190915589146111e25760405162461bcd60e51b815260040180806020018281038252602381526020018061212b6023913960400191505060405180910390fd5b874211156112215760405162461bcd60e51b8152600401808060200182810382526027815260200180611fdd6027913960400191505060405180910390fd5b61122b818b61198c565b505050505b505050505050565b60008181526020819052604081206108fc90611acb565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b600082815260208190526040902060020154611291906109e6611348565b610a945760405162461bcd60e51b81526004018080602001828103825260308152602001806120766030913960400191505060405180910390fd5b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b60086020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b3390565b6001600160a01b0383166113915760405162461bcd60e51b815260040180806020018281038252602481526020018061219a6024913960400191505060405180910390fd5b6001600160a01b0382166113d65760405162461bcd60e51b81526004018080602001828103825260228152602001806120046022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661147d5760405162461bcd60e51b81526004018080602001828103825260258152602001806121756025913960400191505060405180910390fd5b6001600160a01b0382166114c25760405162461bcd60e51b8152600401808060200182810382526023815260200180611f626023913960400191505060405180910390fd5b6114cd838383611987565b61150a81604051806060016040528060268152602001612026602691396001600160a01b0386166000908152600160205260409020549190611595565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461153990826116fe565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156116245760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115e95781810151838201526020016115d1565b50505050905090810190601f1680156116165780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008281526020819052604090206116449082611ad6565b15610a3057611651611348565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020819052604090206116ad9082611aeb565b15610a30576116ba611348565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600082820183811015610e61576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166117b3576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6117bf60008383611987565b6003546117cc90826116fe565b6003556001600160a01b0382166000908152600160205260409020546117f290826116fe565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b816001600160a01b0316836001600160a01b03161415801561186c5750600081115b15611987576001600160a01b038316156118fe576001600160a01b03831660009081526009602052604081205463ffffffff1690816118ac5760006118de565b6001600160a01b038516600090815260086020908152604080832063ffffffff60001987011684529091529020600101545b905060006118ec8285611b00565b90506118fa86848484611b42565b5050505b6001600160a01b03821615611987576001600160a01b03821660009081526009602052604081205463ffffffff16908161193957600061196b565b6001600160a01b038416600090815260086020908152604080832063ffffffff60001987011684529091529020600101545b9050600061197982856116fe565b905061123085848484611b42565b505050565b6001600160a01b03808316600090815260076020526040812054909116906119b384610bc5565b6001600160a01b0385811660008181526007602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610e4382848361184a565b600654610100900460ff1615611a625760405162461bcd60e51b815260040180806020018281038252602a81526020018061204c602a913960400191505060405180910390fd5b8151611a75906004906020850190611eac565b508051611a89906005906020840190611eac565b50506006805461ff001960ff199091166012171661010017905550565b6000610e618383611ca7565b6000610e61836001600160a01b038416611d0b565b4690565b60006108fc82611d23565b6000610e61836001600160a01b038416611d27565b6000610e61836001600160a01b038416611d71565b6000610e6183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611595565b6000611b66436040518060600160405280603581526020016120a660359139611e37565b905060008463ffffffff16118015611baf57506001600160a01b038516600090815260086020908152604080832063ffffffff6000198901811685529252909120548282169116145b15611bec576001600160a01b038516600090815260086020908152604080832063ffffffff60001989011684529091529020600101829055611c5d565b60408051808201825263ffffffff808416825260208083018681526001600160a01b038a166000818152600884528681208b8616825284528681209551865490861663ffffffff19918216178755925160019687015590815260099092529390208054928801909116919092161790555b604080518481526020810184905281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b81546000908210611ce95760405162461bcd60e51b8152600401808060200182810382526022815260200180611f406022913960400191505060405180910390fd5b826000018281548110611cf857fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6000611d338383611d0b565b611d69575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108fc565b5060006108fc565b60008181526001830160205260408120548015611e2d5783546000198083019190810190600090879083908110611da457fe5b9060005260206000200154905080876000018481548110611dc157fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611df157fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506108fc565b60009150506108fc565b6000816401000000008410611e8d5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156115e95781810151838201526020016115d1565b509192915050565b604080518082019091526000808252602082015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611eed57805160ff1916838001178555611f1a565b82800160010185558215611f1a579182015b82811115611f1a578251825591602001919060010190611eff565b50611f26929150611f2a565b5090565b5b80821115611f265760008155600101611f2b56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e745375736869546f6b656e3a206d7573742068617665206d696e74657220726f6c6520746f206d696e7453555348493a3a64656c656761746542795369673a207369676e6174757265206578706972656445524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a20746f6b656e2068617320616c7265616479206265656e20696e697469616c697a656421416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6553555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747353555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636553555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e636553555348493a3a64656c656761746542795369673a20696e76616c6964207369676e617475726545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212202d25d106735696c32f3bb3951214afbd704d96ca43956e9a1e9d901ad4fbb72d64736f6c634300060c0033",
  "deployedSourceMap": "268:9151:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:90:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4510:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4510:166:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3517:98;;;:::i;:::-;;;;;;;;;;;;;;;;2042:122:37;;;:::i;5136:317:32:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5136:317:32;;;;;;;;;;;;;;;;;:::i;4272:112:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4272:112:1;;:::i;4634:223::-;;;;;;;;;;;;;;;;-1:-1:-1;4634:223:1;;;;;;-1:-1:-1;;;;;4634:223:1;;:::i;:::-;;3367:90:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5808:205:1;;;;;;;;;;;;;;;;-1:-1:-1;5808:205:1;;;;;;-1:-1:-1;;;;;5808:205:1;;:::i;5848:215:32:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5848:215:32;;;;;;;;:::i;800:248:37:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;800:248:37;;;;;;;;:::i;3007:143::-;;;;;;;;;;;;;;;;-1:-1:-1;3007:143:37;-1:-1:-1;;;;;3007:143:37;;:::i;:::-;;;;-1:-1:-1;;;;;3007:143:37;;;;;;;;;;;;;;3288:102;;;;;;;;;;;;;;;;-1:-1:-1;3288:102:37;-1:-1:-1;;;;;3288:102:37;;:::i;1923:49::-;;;;;;;;;;;;;;;;-1:-1:-1;1923:49:37;-1:-1:-1;;;;;1923:49:37;;:::i;:::-;;;;;;;;;;;;;;;;;;;3673:117:32;;;;;;;;;;;;;;;;-1:-1:-1;3673:117:32;-1:-1:-1;;;;;3673:117:32;;:::i;5817:1218:37:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5817:1218:37;;;;;;;;:::i;2450:39::-;;;;;;;;;;;;;;;;-1:-1:-1;2450:39:37;-1:-1:-1;;;;;2450:39:37;;:::i;400:297::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;400:297:37;;;;;;;;-1:-1:-1;400:297:37;;-1:-1:-1;;400:297:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;400:297:37;;-1:-1:-1;;;;;;;400:297:37;;;;-1:-1:-1;;;400:297:37;;;;:::i;3955:136:1:-;;;;;;;;;;;;;;;;-1:-1:-1;3955:136:1;;;;;;;:::i;2940:137::-;;;;;;;;;;;;;;;;-1:-1:-1;2940:137:1;;;;;;-1:-1:-1;;;;;2940:137:1;;:::i;2650:94:32:-;;;:::i;1717:49:1:-;;;:::i;6550:266:32:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6550:266:32;;;;;;;;:::i;3993:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3993:172:32;;;;;;;;:::i;5147:248:37:-;;;;;;;;;;;;;;;;-1:-1:-1;5147:248:37;-1:-1:-1;;;;;5147:248:37;;:::i;3813:1140::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3813:1140:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3245:125:1:-;;;;;;;;;;;;;;;;-1:-1:-1;3245:125:1;;:::i;331:62:37:-;;;:::i;5091:226:1:-;;;;;;;;;;;;;;;;-1:-1:-1;5091:226:1;;;;;;-1:-1:-1;;;;;5091:226:1;;:::i;4223:149:32:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4223:149:32;;;;;;;;;;:::i;2255:117:37:-;;;:::i;1787:70::-;;;;;;;;;;;;;;;;-1:-1:-1;1787:70:37;;-1:-1:-1;;;;;1787:70:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2447:90:32;2525:5;2518:12;;;;;;;;-1:-1:-1;;2518:12:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:13;;2518:12;;2525:5;;2518:12;;2525:5;2518:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:90;:::o;4510:166::-;4593:4;4609:39;4618:12;:10;:12::i;:::-;4632:7;4641:6;4609:8;:39::i;:::-;-1:-1:-1;4665:4:32;4510:166;;;;;:::o;3517:98::-;3596:12;;3517:98;:::o;2042:122:37:-;2084:80;2042:122;:::o;5136:317:32:-;5242:4;5258:36;5268:6;5276:9;5287:6;5258:9;:36::i;:::-;5304:121;5313:6;5321:12;:10;:12::i;:::-;5335:89;5373:6;5335:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5335:19:32;;;;;;:11;:19;;;;;;5355:12;:10;:12::i;:::-;-1:-1:-1;;;;;5335:33:32;;;;;;;;;;;;-1:-1:-1;5335:33:32;;;:89;:37;:89::i;:::-;5304:8;:121::i;:::-;-1:-1:-1;5442:4:32;5136:317;;;;;:::o;4272:112:1:-;4329:7;4355:12;;;;;;;;;;:22;;;;4272:112::o;4634:223::-;4725:6;:12;;;;;;;;;;:22;;;4717:45;;4749:12;:10;:12::i;:::-;4717:7;:45::i;:::-;4709:105;;;;-1:-1:-1;;;4709:105:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;3367:90:32:-;3441:9;;;;3367:90;:::o;5808:205:1:-;5905:12;:10;:12::i;:::-;-1:-1:-1;;;;;5894:23:1;:7;-1:-1:-1;;;;;5894:23:1;;5886:83;;;;-1:-1:-1;;;5886:83:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;5848:215:32:-;5936:4;5952:83;5961:12;:10;:12::i;:::-;5975:7;5984:50;6023:10;5984:11;:25;5996:12;:10;:12::i;:::-;-1:-1:-1;;;;;5984:25:32;;;;;;;;;;;;;;;;;-1:-1:-1;5984:25:32;;;:34;;;;;;;;;;;:38;:50::i;800:248:37:-;870:34;369:24;891:12;:10;:12::i;870:34::-;862:88;;;;-1:-1:-1;;;862:88:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:19;966:3;971:7;960:5;:19::i;:::-;-1:-1:-1;;;;;1016:15:37;;;1012:1;1016:15;;;:10;:15;;;;;;989:52;;1016:15;1033:7;989:14;:52::i;3007:143::-;-1:-1:-1;;;;;3122:21:37;;;3092:7;3122:21;;;:10;:21;;;;;;;;3007:143::o;3288:102::-;3351:32;3361:10;3373:9;3351;:32::i;:::-;3288:102;:::o;1923:49::-;;;;;;;;;;;;;;;:::o;3673:117:32:-;-1:-1:-1;;;;;3765:18:32;3739:7;3765:18;;;:9;:18;;;;;;;3673:117::o;5817:1218:37:-;5922:7;5967:12;5953:11;:26;5945:79;;;;-1:-1:-1;;;5945:79:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6057:23:37;;6035:19;6057:23;;;:14;:23;;;;;;;;6094:17;6090:56;;6134:1;6127:8;;;;;6090:56;-1:-1:-1;;;;;6203:20:37;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;6224:16:37;;6203:38;;;;;;;;;:48;;:63;-1:-1:-1;6199:145:37;;-1:-1:-1;;;;;6289:20:37;;;;;;:11;:20;;;;;;;;-1:-1:-1;;6310:16:37;;;;6289:38;;;;;;;;6325:1;6289:44;;;-1:-1:-1;6282:51:37;;6199:145;-1:-1:-1;;;;;6402:20:37;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;6398:86:37;;;6472:1;6465:8;;;;;6398:86;6494:12;-1:-1:-1;;6535:16:37;;6561:418;6576:5;6568:13;;:5;:13;;;6561:418;;;6639:1;6622:13;;;6621:19;;;6613:27;;6681:20;;:::i;:::-;-1:-1:-1;;;;;;6704:20:37;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;6681:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6750:27;;6746:223;;;6804:8;;;;-1:-1:-1;6797:15:37;;-1:-1:-1;;;;6797:15:37;6746:223;6837:12;;:26;;;-1:-1:-1;6833:136:37;;;6891:6;6883:14;;6833:136;;;6953:1;6944:6;:10;6936:18;;6833:136;6561:418;;;;;-1:-1:-1;;;;;;6995:20:37;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;;;;-1:-1:-1;;5817:1218:37;;;;:::o;2450:39::-;;;;;;;;;;;;;:::o;400:297::-;531:38;1762:4:1;562:6:37;531:10;:38::i;:::-;579:31;369:24;603:6;579:10;:31::i;:::-;620:26;631:5;638:7;620:10;:26::i;:::-;656:33;662:10;674:14;656:5;:33::i;:::-;400:297;;;;:::o;3955:136:1:-;4028:7;4054:12;;;;;;;;;;:30;;4078:5;4054:23;:30::i;:::-;4047:37;3955:136;-1:-1:-1;;;3955:136:1:o;2940:137::-;3009:4;3032:12;;;;;;;;;;:38;;3062:7;3032:29;:38::i;2650:94:32:-;2730:7;2723:14;;;;;;;;-1:-1:-1;;2723:14:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2698:13;;2723:14;;2730:7;;2723:14;;2730:7;2723:14;;;;;;;;;;;;;;;;;;;;;;;;1717:49:1;1762:4;1717:49;:::o;6550:266:32:-;6643:4;6659:129;6668:12;:10;:12::i;:::-;6682:7;6691:96;6730:15;6691:96;;;;;;;;;;;;;;;;;:11;:25;6703:12;:10;:12::i;:::-;-1:-1:-1;;;;;6691:25:32;;;;;;;;;;;;;;;;;-1:-1:-1;6691:25:32;;;:34;;;;;;;;;;;:96;:38;:96::i;3993:172::-;4079:4;4095:42;4105:12;:10;:12::i;:::-;4119:9;4130:6;4095:9;:42::i;5147:248:37:-;-1:-1:-1;;;;;5281:23:37;;5236:7;5281:23;;;:14;:23;;;;;;;;5321:16;:67;;5387:1;5321:67;;;-1:-1:-1;;;;;5340:20:37;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;5361:16:37;;5340:38;;;;;;;;5376:1;5340:44;;5314:74;5147:248;-1:-1:-1;;;5147:248:37:o;3813:1140::-;3996:23;2084:80;4122:6;:4;:6::i;:::-;4106:24;;;;;;4148:12;:10;:12::i;:::-;4045:160;;;;;;;;;;;;;;;;;;;;;;;;;4186:4;4045:160;;;;;;;;;;;;;;;;;;;;;;;4022:193;;;;;;2301:71;4270:135;;;;-1:-1:-1;;;;;4270:135:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4247:168;;;;;;-1:-1:-1;;;4466:119:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4443:152;;;;;;;;;-1:-1:-1;4626:26:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4022:193;;-1:-1:-1;4247:168:37;;4443:152;;-1:-1:-1;;4626:26:37;;;;;;;-1:-1:-1;;4626:26:37;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4626:26:37;;-1:-1:-1;;4626:26:37;;;-1:-1:-1;;;;;;;4670:23:37;;4662:75;;;;-1:-1:-1;;;4662:75:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4764:17:37;;;;;;:6;:17;;;;;:19;;;;;;;;4755:28;;4747:76;;;;-1:-1:-1;;;4747:76:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4848:6;4841:3;:13;;4833:65;;;;-1:-1:-1;;;4833:65:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4915:31;4925:9;4936;4915;:31::i;:::-;4908:38;;;;3813:1140;;;;;;;:::o;3245:125:1:-;3308:7;3334:12;;;;;;;;;;:29;;:27;:29::i;331:62:37:-;369:24;331:62;:::o;5091:226:1:-;5183:6;:12;;;;;;;;;;:22;;;5175:45;;5207:12;:10;:12::i;5175:45::-;5167:106;;;;-1:-1:-1;;;5167:106:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4223:149:32;-1:-1:-1;;;;;4338:18:32;;;4312:7;4338:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4223:149::o;2255:117:37:-;2301:71;2255:117;:::o;1787:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;590:104:0:-;677:10;590:104;:::o;9612:340:32:-;-1:-1:-1;;;;;9713:19:32;;9705:68;;;;-1:-1:-1;;;9705:68:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9791:21:32;;9783:68;;;;-1:-1:-1;;;9783:68:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9862:18:32;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9913:32;;;;;;;;;;;;;;;;;9612:340;;;:::o;7290:530::-;-1:-1:-1;;;;;7395:20:32;;7387:70;;;;-1:-1:-1;;;7387:70:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7475:23:32;;7467:71;;;;-1:-1:-1;;;7467:71:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7549:47;7570:6;7578:9;7589:6;7549:20;:47::i;:::-;7627:71;7649:6;7627:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7627:17:32;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7607:17:32;;;;;;;:9;:17;;;;;;:91;;;;7731:20;;;;;;;:32;;7756:6;7731:24;:32::i;:::-;-1:-1:-1;;;;;7708:20:32;;;;;;;:9;:20;;;;;;;;;:55;;;;7778:35;;;;;;;7708:20;;7778:35;;;;;;;;;;;;;7290:530;;;:::o;1746:187:3:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:3;;;1746:187::o;7015:184:1:-;7088:6;:12;;;;;;;;;;:33;;7113:7;7088:24;:33::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:1;7160:7;-1:-1:-1;;;;;7142:40:1;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;7205:188::-;7279:6;:12;;;;;;;;;;:36;;7307:7;7279:27;:36::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;-1:-1:-1;;;;;7336:40:1;7354:7;-1:-1:-1;;;;;7336:40:1;7348:4;7336:40;;;;;;;;;;7205:188;;:::o;874:176:3:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;8090:370:32;-1:-1:-1;;;;;8173:21:32;;8165:65;;;;;-1:-1:-1;;;8165:65:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;8241:49;8270:1;8274:7;8283:6;8241:20;:49::i;:::-;8316:12;;:24;;8333:6;8316:16;:24::i;:::-;8301:12;:39;-1:-1:-1;;;;;8371:18:32;;;;;;:9;:18;;;;;;:30;;8394:6;8371:22;:30::i;:::-;-1:-1:-1;;;;;8350:18:32;;;;;;:9;:18;;;;;;;;:51;;;;8416:37;;;;;;;8350:18;;;;8416:37;;;;;;;;;;8090:370;;:::o;7476:929:37:-;7581:6;-1:-1:-1;;;;;7571:16:37;:6;-1:-1:-1;;;;;7571:16:37;;;:30;;;;;7600:1;7591:6;:10;7571:30;7567:832;;;-1:-1:-1;;;;;7621:20:37;;;7617:379;;-1:-1:-1;;;;;7727:22:37;;7708:16;7727:22;;;:14;:22;;;;;;;;;7787:13;:60;;7846:1;7787:60;;;-1:-1:-1;;;;;7803:19:37;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;7823:13:37;;7803:34;;;;;;;;7835:1;7803:40;;7787:60;7767:80;-1:-1:-1;7865:17:37;7885:21;7767:80;7899:6;7885:13;:21::i;:::-;7865:41;;7924:57;7941:6;7949:9;7960;7971;7924:16;:57::i;:::-;7617:379;;;;-1:-1:-1;;;;;8014:20:37;;;8010:379;;-1:-1:-1;;;;;8120:22:37;;8101:16;8120:22;;;:14;:22;;;;;;;;;8180:13;:60;;8239:1;8180:60;;;-1:-1:-1;;;;;8196:19:37;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;8216:13:37;;8196:34;;;;;;;;8228:1;8196:40;;8180:60;8160:80;-1:-1:-1;8258:17:37;8278:21;8160:80;8292:6;8278:13;:21::i;:::-;8258:41;;8317:57;8334:6;8342:9;8353;8364;8317:16;:57::i;8010:379::-;7476:929;;;:::o;7041:429::-;-1:-1:-1;;;;;7155:21:37;;;7129:23;7155:21;;;:10;:21;;;;;;;;;;7213:20;7166:9;7213;:20::i;:::-;-1:-1:-1;;;;;7289:21:37;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;7289:33:37;;;;;;;;;;7338:54;;7186:47;;-1:-1:-1;7289:33:37;7338:54;;;;;;7289:21;7338:54;7403:60;7418:15;7435:9;7446:16;7403:14;:60::i;2125:257:32:-;2215:12;;;;;;;2214:13;2206:68;;;;-1:-1:-1;;;2206:68:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2284:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2306:16:32;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2332:9:32;:14;;-1:-1:-1;;;;2332:14:32;;;2344:2;2332:14;2356:19;2332:14;2356:19;;;-1:-1:-1;2125:257:32:o;6085:147:7:-;6159:7;6201:22;6205:3;6217:5;6201:3;:22::i;5401:156::-;5481:4;5504:46;5514:3;-1:-1:-1;;;;;5534:14:7;;5504:9;:46::i;9268:149:37:-;9376:9;9268:149;:::o;5638:115:7:-;5701:7;5727:19;5735:3;5727:7;:19::i;4864:141::-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:7;;4957:4;:41::i;5173:147::-;5246:4;5269:44;5277:3;-1:-1:-1;;;;;5297:14:7;;5269:7;:44::i;1321:134:3:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;8411:687:37:-;8582:18;8603:77;8610:12;8603:77;;;;;;;;;;;;;;;;;:6;:77::i;:::-;8582:98;;8710:1;8695:12;:16;;;:85;;;;-1:-1:-1;;;;;;8715:22:37;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;8738:16:37;;8715:40;;;;;;;;;:50;:65;;;:50;;:65;8695:85;8691:334;;;-1:-1:-1;;;;;8796:22:37;;;;;;:11;:22;;;;;;;;:40;-1:-1:-1;;8819:16:37;;8796:40;;;;;;;;8834:1;8796:46;:57;;;8691:334;;;8923:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8884:22:37;;-1:-1:-1;8884:22:37;;;:11;:22;;;;;:36;;;;;;;;;;:72;;;;;;;-1:-1:-1;;8884:72:37;;;;;;;;;;;;;8970:25;;;:14;:25;;;;;;:44;;8998:16;;;8970:44;;;;;;;;;;8691:334;9040:51;;;;;;;;;;;;;;-1:-1:-1;;;;;9040:51:37;;;;;;;;;;;8411:687;;;;;:::o;4423:201:7:-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:7;;;;-1:-1:-1;;;4509:73:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;3984:107::-;4066:18;;3984:107::o;1611:404::-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;1732:23:7;;;;;;;;:11;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:7;1986:12;;2183:1512;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:7;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;;9104:158:37;9179:6;9216:12;9209:5;9205:9;;9197:32;;;;-1:-1:-1;;;9197:32:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9253:1:37;;9104:158;-1:-1:-1;;9104:158:37:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "events": {
      "DelegateChanged(address,address,address)": {
        "notice": "An event thats emitted when an account changes its delegate"
      },
      "DelegateVotesChanged(address,uint256,uint256)": {
        "notice": "An event thats emitted when a delegate account's vote balance changes"
      }
    },
    "kind": "dev",
    "methods": {
      "DELEGATION_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the delegation struct used by the contract"
      },
      "DOMAIN_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the contract's domain"
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "checkpoints(address,uint32)": {
        "notice": "A record of votes checkpoints for each account, by index"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "delegate(address)": {
        "notice": "Delegate votes from `msg.sender` to `delegatee`",
        "params": {
          "delegatee": "The address to delegate votes to"
        }
      },
      "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Delegates votes from signatory to `delegatee`",
        "params": {
          "delegatee": "The address to delegate votes to",
          "expiry": "The time at which to expire the signature",
          "nonce": "The contract state required to match the signature",
          "r": "Half of the ECDSA signature pair",
          "s": "Half of the ECDSA signature pair",
          "v": "The recovery byte of the signature"
        }
      },
      "delegates(address)": {
        "notice": "Delegate votes from `msg.sender` to `delegatee`",
        "params": {
          "delegator": "The address to get delegatee for"
        }
      },
      "getCurrentVotes(address)": {
        "notice": "Gets the current votes balance for `account`",
        "params": {
          "account": "The address to get votes balance"
        },
        "returns": {
          "_0": "The number of current votes for `account`"
        }
      },
      "getPriorVotes(address,uint256)": {
        "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
        "notice": "Determine the prior number of votes for an account as of a block number",
        "params": {
          "account": "The address of the account to check",
          "blockNumber": "The block number to get the vote balance at"
        },
        "returns": {
          "_0": "The number of votes the account had as of the given block"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "nonces(address)": {
        "notice": "A record of states for signing / validating signatures"
      },
      "numCheckpoints(address)": {
        "notice": "The number of checkpoints for each account"
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    268,
    9419
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x79A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7C6 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x7F4 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x7FC JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x775 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x792 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x6B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6DC JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x8DC7DF72 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x674 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x4C4 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3F7 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x355 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2CC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x237 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x264 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH2 0x902 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH2 0x908 JUMP JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x92C JUMP JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35D PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x41D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBA0 JUMP JUMPDEST PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xBE0 JUMP JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 CALLDATALOAD AND SWAP4 POP POP POP PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDFA JUMP JUMPDEST PUSH2 0x41D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xF4E JUMP JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF62 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x744 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x124F JUMP JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1273 JUMP JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x82E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x131B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x8DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F8 PUSH2 0x8F1 PUSH2 0x1348 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x134C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x939 DUP5 DUP5 DUP5 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x9A9 DUP5 PUSH2 0x945 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x9A4 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2103 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x983 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x134C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x9EB SWAP1 PUSH2 0x9E6 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F85 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA30 DUP3 DUP3 PUSH2 0x162C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xA45 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21E3 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA30 DUP3 DUP3 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F8 PUSH2 0xAAB PUSH2 0x1348 JUMP JUMPDEST DUP5 PUSH2 0x9A4 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0xABC PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0xB18 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x9E6 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0xB53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FB4 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5D DUP3 DUP3 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xA30 SWAP3 AND DUP4 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0xBAA CALLER DUP3 PUSH2 0x198C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xC20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20DB PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xC4E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xCBD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP5 SWAP1 SWAP5 ADD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xDB1 JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xD2A PUSH2 0x1E95 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0xD8C JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x8FC SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xDA3 JUMPI DUP2 SWAP4 POP PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xD00 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE05 PUSH1 0x0 DUP4 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0xE2F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0xE39 DUP5 DUP5 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0xE43 CALLER DUP3 PUSH2 0x1758 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xE61 SWAP1 DUP4 PUSH2 0x1AA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xE61 SWAP1 DUP4 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x8DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F8 PUSH2 0xEF3 PUSH2 0x1348 JUMP JUMPDEST DUP5 PUSH2 0x9A4 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21BE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xF1D PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F8 PUSH2 0xF5B PUSH2 0x1348 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xF8D JUMPI PUSH1 0x0 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0xFF0 PUSH2 0x84E JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xFFF PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD DUP11 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP6 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x162 DUP5 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x1A2 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x1C2 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP12 AND PUSH2 0x1E2 DUP8 ADD MSTORE PUSH2 0x202 DUP7 ADD DUP11 SWAP1 MSTORE PUSH2 0x222 DUP7 ADD DUP10 SWAP1 MSTORE SWAP4 MLOAD SWAP3 SWAP7 POP SWAP1 SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x242 DUP1 DUP5 ADD SWAP4 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1132 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x214E PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0x11E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x212B PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FDD PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x122B DUP2 DUP12 PUSH2 0x198C JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x8FC SWAP1 PUSH2 0x1ACB JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1291 SWAP1 PUSH2 0x9E6 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2076 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1391 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x219A PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2004 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x147D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2175 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F62 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14CD DUP4 DUP4 DUP4 PUSH2 0x1987 JUMP JUMPDEST PUSH2 0x150A DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2026 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1539 SWAP1 DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15E9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1616 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1644 SWAP1 DUP3 PUSH2 0x1AD6 JUMP JUMPDEST ISZERO PUSH2 0xA30 JUMPI PUSH2 0x1651 PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x16AD SWAP1 DUP3 PUSH2 0x1AEB JUMP JUMPDEST ISZERO PUSH2 0xA30 JUMPI PUSH2 0x16BA PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xE61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x17BF PUSH1 0x0 DUP4 DUP4 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x17CC SWAP1 DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17F2 SWAP1 DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x186C JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1987 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x18FE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x18AC JUMPI PUSH1 0x0 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18EC DUP3 DUP6 PUSH2 0x1B00 JUMP JUMPDEST SWAP1 POP PUSH2 0x18FA DUP7 DUP5 DUP5 DUP5 PUSH2 0x1B42 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1987 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1939 JUMPI PUSH1 0x0 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1979 DUP3 DUP6 PUSH2 0x16FE JUMP JUMPDEST SWAP1 POP PUSH2 0x1230 DUP6 DUP5 DUP5 DUP5 PUSH2 0x1B42 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH2 0x19B3 DUP5 PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP10 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 DUP7 AND SWAP3 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0xE43 DUP3 DUP5 DUP4 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x204C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A75 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1EAC JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1A89 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1EAC JUMP JUMPDEST POP POP PUSH1 0x6 DUP1 SLOAD PUSH2 0xFF00 NOT PUSH1 0xFF NOT SWAP1 SWAP2 AND PUSH1 0x12 OR AND PUSH2 0x100 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 DUP4 DUP4 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1D0B JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FC DUP3 PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1D71 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE61 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B66 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A6 PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x1E37 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1BAF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x1BEC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1CE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F40 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CF8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D33 DUP4 DUP4 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x1D69 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x8FC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1E2D JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1DA4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1DC1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x1DF1 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x1E8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x15E9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15D1 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1EED JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1F1A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1F1A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1F1A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1EFF JUMP JUMPDEST POP PUSH2 0x1F26 SWAP3 SWAP2 POP PUSH2 0x1F2A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1F26 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1F2B JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E647345524332303A207472616E PUSH20 0x66657220746F20746865207A65726F2061646472 PUSH6 0x737341636365 PUSH20 0x73436F6E74726F6C3A2073656E646572206D7573 PUSH21 0x20626520616E2061646D696E20746F206772616E74 MSTORE8 PUSH22 0x736869546F6B656E3A206D7573742068617665206D69 PUSH15 0x74657220726F6C6520746F206D696E PUSH21 0x53555348493A3A64656C656761746542795369673A KECCAK256 PUSH20 0x69676E6174757265206578706972656445524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x6F6B656E2068617320616C7265616479206265656E KECCAK256 PUSH10 0x6E697469616C697A6564 0x21 COINBASE PUSH4 0x63657373 NUMBER PUSH16 0x6E74726F6C3A2073656E646572206D75 PUSH20 0x7420626520616E2061646D696E20746F20726576 PUSH16 0x6B6553555348493A3A5F777269746543 PUSH9 0x65636B706F696E743A KECCAK256 PUSH3 0x6C6F63 PUSH12 0x206E756D6265722065786365 PUSH6 0x647320333220 PUSH3 0x697473 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636553555348493A3A64656C PUSH6 0x676174654279 MSTORE8 PUSH10 0x673A20696E76616C6964 KECCAK256 PUSH15 0x6F6E636553555348493A3A64656C65 PUSH8 0x6174654279536967 GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x617475726545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F41636365 PUSH20 0x73436F6E74726F6C3A2063616E206F6E6C792072 PUSH6 0x6E6F756E6365 KECCAK256 PUSH19 0x6F6C657320666F722073656C66A26469706673 PC 0x22 SLT KECCAK256 0x2D 0x25 0xD1 MOD PUSH20 0x5696C32F3BB3951214AFBD704D96CA43956E9A1E SWAP14 SWAP1 BYTE 0xD4 0xFB 0xB7 0x2D PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        268,
        9419
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "CALLVALUE",
      "path": "37"
    },
    "6": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "8": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "REVERT",
      "path": "37"
    },
    "16": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "17": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "POP",
      "path": "37"
    },
    "18": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "21": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "LT",
      "path": "37"
    },
    "22": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F0"
    },
    "25": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "26": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "29": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "SHR",
      "path": "37"
    },
    "32": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "33": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x7ECEBE00"
    },
    "38": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "GT",
      "path": "37"
    },
    "39": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x10F"
    },
    "42": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "43": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "44": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xB4B5EA57"
    },
    "49": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "GT",
      "path": "37"
    },
    "50": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xA2"
    },
    "53": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "54": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "55": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xD547741F"
    },
    "60": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "GT",
      "path": "37"
    },
    "61": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "65": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "66": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xD547741F"
    },
    "71": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "72": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x79A"
    },
    "75": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "76": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "77": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xDD62ED3E"
    },
    "82": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "83": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7C6"
    },
    "86": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "87": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "88": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xE7A324DC"
    },
    "93": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "94": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7F4"
    },
    "97": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "98": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "99": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xF1127ED8"
    },
    "104": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "105": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7FC"
    },
    "108": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "109": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F0"
    },
    "112": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMP",
      "path": "37"
    },
    "113": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "114": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "115": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xB4B5EA57"
    },
    "120": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "121": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x708"
    },
    "124": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "125": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "126": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xC3CDA520"
    },
    "131": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "132": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x72E"
    },
    "135": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "136": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "137": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xCA15C873"
    },
    "142": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "143": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x775"
    },
    "146": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "147": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "148": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xD5391393"
    },
    "153": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "154": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x792"
    },
    "157": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "158": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F0"
    },
    "161": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMP",
      "path": "37"
    },
    "162": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "163": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "164": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x95D89B41"
    },
    "169": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "GT",
      "path": "37"
    },
    "170": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "174": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "175": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x95D89B41"
    },
    "180": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "181": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6A0"
    },
    "184": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "185": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "186": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xA217FDDF"
    },
    "191": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "192": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6A8"
    },
    "195": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "196": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "197": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xA457C2D7"
    },
    "202": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "203": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6B0"
    },
    "206": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "207": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "208": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xA9059CBB"
    },
    "213": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "214": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6DC"
    },
    "217": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "218": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F0"
    },
    "221": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMP",
      "path": "37"
    },
    "222": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "223": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "224": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x7ECEBE00"
    },
    "229": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "230": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4F0"
    },
    "233": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "234": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "235": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x8DC7DF72"
    },
    "240": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "241": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x516"
    },
    "244": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "245": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "246": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x9010D07C"
    },
    "251": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "252": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x651"
    },
    "255": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "256": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "257": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x91D14854"
    },
    "262": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "263": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x674"
    },
    "266": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "267": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F0"
    },
    "270": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMP",
      "path": "37"
    },
    "271": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "272": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "273": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x36568ABE"
    },
    "278": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "GT",
      "path": "37"
    },
    "279": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x187"
    },
    "282": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "283": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "284": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x5C19A95C"
    },
    "289": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "GT",
      "path": "37"
    },
    "290": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x156"
    },
    "293": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "294": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "295": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x5C19A95C"
    },
    "300": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "301": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x439"
    },
    "304": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "305": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "306": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x6FCFFF45"
    },
    "311": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "312": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x45F"
    },
    "315": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "316": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "317": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x70A08231"
    },
    "322": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "323": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x49E"
    },
    "326": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "327": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "328": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x782D6FE1"
    },
    "333": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "334": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4C4"
    },
    "337": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "338": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F0"
    },
    "341": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMP",
      "path": "37"
    },
    "342": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "343": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "344": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x36568ABE"
    },
    "349": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "350": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x373"
    },
    "353": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "354": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "355": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x39509351"
    },
    "360": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "361": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x39F"
    },
    "364": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "365": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "366": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x40C10F19"
    },
    "371": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "372": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3CB"
    },
    "375": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "376": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "377": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x587CDE1E"
    },
    "382": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "383": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3F7"
    },
    "386": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "387": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F0"
    },
    "390": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMP",
      "path": "37"
    },
    "391": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "392": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "393": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x23B872DD"
    },
    "398": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "GT",
      "path": "37"
    },
    "399": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C3"
    },
    "402": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "403": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "404": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x23B872DD"
    },
    "409": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "410": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2D4"
    },
    "413": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "414": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "415": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x248A9CA3"
    },
    "420": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "421": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x30A"
    },
    "424": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "425": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "426": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x2F2FF15D"
    },
    "431": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "432": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x327"
    },
    "435": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "436": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "437": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x313CE567"
    },
    "442": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "443": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x355"
    },
    "446": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "447": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F0"
    },
    "450": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMP",
      "path": "37"
    },
    "451": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "452": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "453": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x6FDDE03"
    },
    "458": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "459": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F5"
    },
    "462": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "463": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "464": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x95EA7B3"
    },
    "469": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "470": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x272"
    },
    "473": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "474": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "475": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x18160DDD"
    },
    "480": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "481": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2B2"
    },
    "484": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "485": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "486": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x20606B70"
    },
    "491": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "EQ",
      "path": "37"
    },
    "492": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2CC"
    },
    "495": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "496": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "497": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "499": {
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "DUP1",
      "path": "37"
    },
    "500": {
      "first_revert": true,
      "fn": null,
      "offset": [
        268,
        9419
      ],
      "op": "REVERT",
      "path": "37"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1FD"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x84E"
    },
    "508": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMP",
      "path": "32"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "32"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "32"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP3",
      "path": "32"
    },
    "518": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "32"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "32"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "32"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "32"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "32"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "32"
    },
    "530": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "32"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "32"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP6",
      "path": "32"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "32"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "32"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "32"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "32"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "32"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "32"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "LT",
      "path": "32"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x237"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "32"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "32"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "32"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "556": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "32"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP3",
      "path": "32"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "32"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "32"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x21F"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMP",
      "path": "32"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "568": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "32"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "32"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "32"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "32"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "32"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "32"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "32"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "AND",
      "path": "32"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "32"
    },
    "582": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x264"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "32"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP3",
      "path": "32"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SUB",
      "path": "32"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "32"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "32"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SUB",
      "path": "32"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x100"
    },
    "601": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "EXP",
      "path": "32"
    },
    "602": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SUB",
      "path": "32"
    },
    "603": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "NOT",
      "path": "32"
    },
    "604": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "AND",
      "path": "32"
    },
    "605": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "32"
    },
    "606": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "607": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "609": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "32"
    },
    "610": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "611": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "32"
    },
    "612": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "613": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "32"
    },
    "614": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "615": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "32"
    },
    "616": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "32"
    },
    "617": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "32"
    },
    "618": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "620": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "621": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "32"
    },
    "622": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "623": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SUB",
      "path": "32"
    },
    "624": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "625": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "RETURN",
      "path": "32"
    },
    "626": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "627": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x29E"
    },
    "630": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "632": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP1",
      "path": "32"
    },
    "633": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "634": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SUB",
      "path": "32"
    },
    "635": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "637": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP2",
      "path": "32"
    },
    "638": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "LT",
      "path": "32"
    },
    "639": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "640": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x288"
    },
    "643": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "644": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "646": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP1",
      "path": "32"
    },
    "647": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "REVERT",
      "path": "32"
    },
    "648": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "649": {
      "op": "POP"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "656": {
      "op": "SHL"
    },
    "657": {
      "op": "SUB"
    },
    "658": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP2",
      "path": "32"
    },
    "659": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "660": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "AND",
      "path": "32"
    },
    "661": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "662": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "664": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ADD",
      "path": "32"
    },
    "665": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "666": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x8E4"
    },
    "669": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMP",
      "path": "32"
    },
    "670": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "671": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "673": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP1",
      "path": "32"
    },
    "674": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "675": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "676": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "677": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "678": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP3",
      "path": "32"
    },
    "679": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "680": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "681": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "682": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP2",
      "path": "32"
    },
    "683": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "684": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SUB",
      "path": "32"
    },
    "685": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "687": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ADD",
      "path": "32"
    },
    "688": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "689": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "RETURN",
      "path": "32"
    },
    "690": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "691": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2BA"
    },
    "694": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x902"
    },
    "697": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMP",
      "path": "32"
    },
    "698": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "699": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "701": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "DUP1",
      "path": "32"
    },
    "702": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "703": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "704": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "DUP3",
      "path": "32"
    },
    "705": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "706": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "707": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "708": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "DUP2",
      "path": "32"
    },
    "709": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "710": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SUB",
      "path": "32"
    },
    "711": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "713": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "ADD",
      "path": "32"
    },
    "714": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "715": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "RETURN",
      "path": "32"
    },
    "716": {
      "offset": [
        2042,
        2164
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "717": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2042,
        2164
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2BA"
    },
    "720": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2042,
        2164
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x908"
    },
    "723": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        2042,
        2164
      ],
      "op": "JUMP",
      "path": "37"
    },
    "724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x29E"
    },
    "728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "730": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP1",
      "path": "32"
    },
    "731": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SUB",
      "path": "32"
    },
    "733": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "735": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP2",
      "path": "32"
    },
    "736": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "LT",
      "path": "32"
    },
    "737": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "738": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2EA"
    },
    "741": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "742": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "744": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP1",
      "path": "32"
    },
    "745": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "REVERT",
      "path": "32"
    },
    "746": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "747": {
      "op": "POP"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "754": {
      "op": "SHL"
    },
    "755": {
      "op": "SUB"
    },
    "756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP2",
      "path": "32"
    },
    "757": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP2",
      "path": "32"
    },
    "759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "AND",
      "path": "32"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "763": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP2",
      "path": "32"
    },
    "764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "ADD",
      "path": "32"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "766": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "AND",
      "path": "32"
    },
    "769": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "ADD",
      "path": "32"
    },
    "773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x92C"
    },
    "777": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMP",
      "path": "32"
    },
    "778": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "779": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BA"
    },
    "782": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "784": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "DUP1",
      "path": "1"
    },
    "785": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "786": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "SUB",
      "path": "1"
    },
    "787": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "789": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "DUP2",
      "path": "1"
    },
    "790": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "LT",
      "path": "1"
    },
    "791": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "792": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x320"
    },
    "795": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "796": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "798": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "DUP1",
      "path": "1"
    },
    "799": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "REVERT",
      "path": "1"
    },
    "800": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "803": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B3"
    },
    "806": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4272,
        4384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "807": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "808": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x353"
    },
    "811": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "813": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "DUP1",
      "path": "1"
    },
    "814": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "815": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "SUB",
      "path": "1"
    },
    "816": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "818": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "DUP2",
      "path": "1"
    },
    "819": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "LT",
      "path": "1"
    },
    "820": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "821": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33D"
    },
    "824": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "825": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "827": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "DUP1",
      "path": "1"
    },
    "828": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "REVERT",
      "path": "1"
    },
    "829": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "830": {
      "op": "POP"
    },
    "831": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "DUP1",
      "path": "1"
    },
    "832": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "833": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "834": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "836": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "ADD",
      "path": "1"
    },
    "837": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "844": {
      "op": "SHL"
    },
    "845": {
      "op": "SUB"
    },
    "846": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "AND",
      "path": "1"
    },
    "847": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9C8"
    },
    "850": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMP",
      "path": "1"
    },
    "851": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "852": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "STOP",
      "path": "1"
    },
    "853": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "854": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x35D"
    },
    "857": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xA34"
    },
    "860": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMP",
      "path": "32"
    },
    "861": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "862": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "864": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "DUP1",
      "path": "32"
    },
    "865": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "866": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xFF"
    },
    "868": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "869": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "870": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "AND",
      "path": "32"
    },
    "871": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "DUP3",
      "path": "32"
    },
    "872": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "873": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "874": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "875": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "DUP2",
      "path": "32"
    },
    "876": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "877": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SUB",
      "path": "32"
    },
    "878": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "880": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "ADD",
      "path": "32"
    },
    "881": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "882": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "RETURN",
      "path": "32"
    },
    "883": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "884": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x353"
    },
    "887": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "889": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "DUP1",
      "path": "1"
    },
    "890": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "891": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "SUB",
      "path": "1"
    },
    "892": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "894": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "895": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "LT",
      "path": "1"
    },
    "896": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "897": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x389"
    },
    "900": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "901": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "903": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "DUP1",
      "path": "1"
    },
    "904": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "REVERT",
      "path": "1"
    },
    "905": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "906": {
      "op": "POP"
    },
    "907": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "DUP1",
      "path": "1"
    },
    "908": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "909": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "910": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "912": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "ADD",
      "path": "1"
    },
    "913": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "920": {
      "op": "SHL"
    },
    "921": {
      "op": "SUB"
    },
    "922": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "AND",
      "path": "1"
    },
    "923": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA3D"
    },
    "926": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5808,
        6013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "927": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "928": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x29E"
    },
    "931": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "933": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "DUP1",
      "path": "32"
    },
    "934": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "935": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "SUB",
      "path": "32"
    },
    "936": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "938": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "DUP2",
      "path": "32"
    },
    "939": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "LT",
      "path": "32"
    },
    "940": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "941": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3B5"
    },
    "944": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "945": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "947": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "DUP1",
      "path": "32"
    },
    "948": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "REVERT",
      "path": "32"
    },
    "949": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "op": "SUB"
    },
    "959": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "DUP2",
      "path": "32"
    },
    "960": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "961": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "AND",
      "path": "32"
    },
    "962": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "963": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "965": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "ADD",
      "path": "32"
    },
    "966": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "967": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xA9E"
    },
    "970": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMP",
      "path": "32"
    },
    "971": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "972": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x353"
    },
    "975": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "977": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "DUP1",
      "path": "37"
    },
    "978": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "979": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "SUB",
      "path": "37"
    },
    "980": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "982": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "DUP2",
      "path": "37"
    },
    "983": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "LT",
      "path": "37"
    },
    "984": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "985": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3E1"
    },
    "988": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "989": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "991": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "DUP1",
      "path": "37"
    },
    "992": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "REVERT",
      "path": "37"
    },
    "993": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "994": {
      "op": "POP"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1001": {
      "op": "SHL"
    },
    "1002": {
      "op": "SUB"
    },
    "1003": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1004": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1005": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "AND",
      "path": "37"
    },
    "1006": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1007": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1009": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "ADD",
      "path": "37"
    },
    "1010": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1011": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xAEC"
    },
    "1014": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        800,
        1048
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1015": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1016": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x41D"
    },
    "1019": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1021": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1022": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1023": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "SUB",
      "path": "37"
    },
    "1024": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1026": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1027": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "LT",
      "path": "37"
    },
    "1028": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1029": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x40D"
    },
    "1032": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1033": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1035": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1036": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1037": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1038": {
      "op": "POP"
    },
    "1039": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "op": "SUB"
    },
    "1048": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "AND",
      "path": "37"
    },
    "1049": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xB82"
    },
    "1052": {
      "fn": "SushiToken.delegates",
      "jump": "i",
      "offset": [
        3007,
        3150
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1053": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1054": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1056": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1057": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1064": {
      "op": "SHL"
    },
    "1065": {
      "op": "SUB"
    },
    "1066": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1067": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1068": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "AND",
      "path": "37"
    },
    "1069": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1070": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1071": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1072": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1073": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1074": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1075": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "SUB",
      "path": "37"
    },
    "1076": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1078": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "ADD",
      "path": "37"
    },
    "1079": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1080": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "RETURN",
      "path": "37"
    },
    "1081": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1082": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x353"
    },
    "1085": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1087": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1088": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1089": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "SUB",
      "path": "37"
    },
    "1090": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1092": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1093": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "LT",
      "path": "37"
    },
    "1094": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1095": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x44F"
    },
    "1098": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1099": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1101": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1102": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1103": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1112": {
      "op": "SHL"
    },
    "1113": {
      "op": "SUB"
    },
    "1114": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "AND",
      "path": "37"
    },
    "1115": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xBA0"
    },
    "1118": {
      "fn": "SushiToken.delegate",
      "jump": "i",
      "offset": [
        3288,
        3390
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1119": {
      "offset": [
        1923,
        1972
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1120": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x485"
    },
    "1123": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1125": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1126": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1127": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "SUB",
      "path": "37"
    },
    "1128": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1130": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1131": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "LT",
      "path": "37"
    },
    "1132": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1133": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x475"
    },
    "1136": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1137": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1139": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1140": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1141": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1142": {
      "op": "POP"
    },
    "1143": {
      "offset": [
        1923,
        1972
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1150": {
      "op": "SHL"
    },
    "1151": {
      "op": "SUB"
    },
    "1152": {
      "offset": [
        1923,
        1972
      ],
      "op": "AND",
      "path": "37"
    },
    "1153": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xBAD"
    },
    "1156": {
      "fn": "SushiToken.delegate",
      "jump": "i",
      "offset": [
        1923,
        1972
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1157": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1158": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1160": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1161": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1162": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "1167": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1168": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1169": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "AND",
      "path": "37"
    },
    "1170": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1171": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1172": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1173": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1174": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1175": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1176": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "SUB",
      "path": "37"
    },
    "1177": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1179": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "ADD",
      "path": "37"
    },
    "1180": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1181": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "RETURN",
      "path": "37"
    },
    "1182": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1183": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2BA"
    },
    "1186": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1188": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1189": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1190": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "SUB",
      "path": "32"
    },
    "1191": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1193": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1194": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "LT",
      "path": "32"
    },
    "1195": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1196": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4B4"
    },
    "1199": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1200": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1202": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1203": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1204": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1205": {
      "op": "POP"
    },
    "1206": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1213": {
      "op": "SHL"
    },
    "1214": {
      "op": "SUB"
    },
    "1215": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "AND",
      "path": "32"
    },
    "1216": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xBC5"
    },
    "1219": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1220": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1221": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2BA"
    },
    "1224": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1226": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1227": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1228": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "SUB",
      "path": "37"
    },
    "1229": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1231": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1232": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "LT",
      "path": "37"
    },
    "1233": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1234": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4DA"
    },
    "1237": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1238": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1240": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1241": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1242": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1243": {
      "op": "POP"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1250": {
      "op": "SHL"
    },
    "1251": {
      "op": "SUB"
    },
    "1252": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1253": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1254": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "AND",
      "path": "37"
    },
    "1255": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1256": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1258": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "ADD",
      "path": "37"
    },
    "1259": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1260": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xBE0"
    },
    "1263": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "i",
      "offset": [
        5817,
        7035
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1264": {
      "offset": [
        2450,
        2489
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1265": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2BA"
    },
    "1268": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1270": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1271": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1272": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "SUB",
      "path": "37"
    },
    "1273": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1275": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1276": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "LT",
      "path": "37"
    },
    "1277": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1278": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x506"
    },
    "1281": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1282": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1284": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1285": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1286": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1287": {
      "op": "POP"
    },
    "1288": {
      "offset": [
        2450,
        2489
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1295": {
      "op": "SHL"
    },
    "1296": {
      "op": "SUB"
    },
    "1297": {
      "offset": [
        2450,
        2489
      ],
      "op": "AND",
      "path": "37"
    },
    "1298": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xDE8"
    },
    "1301": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "i",
      "offset": [
        2450,
        2489
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1302": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1303": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x353"
    },
    "1306": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1308": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1309": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1310": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SUB",
      "path": "37"
    },
    "1311": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "1313": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1314": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "LT",
      "path": "37"
    },
    "1315": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1316": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x52C"
    },
    "1319": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1320": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1322": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1323": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1324": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1325": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1326": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1327": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1328": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1330": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1331": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1332": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1333": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1334": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH5",
      "path": "37",
      "value": "0x100000000"
    },
    "1340": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1341": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "GT",
      "path": "37"
    },
    "1342": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1343": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x547"
    },
    "1346": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1347": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1349": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1350": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1351": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1352": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1353": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1354": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1355": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1357": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1358": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1359": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "GT",
      "path": "37"
    },
    "1360": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1361": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x559"
    },
    "1364": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1365": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1367": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1368": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1369": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1370": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1371": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1372": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1373": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1375": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1376": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1377": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP5",
      "path": "37"
    },
    "1378": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "1380": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1381": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "MUL",
      "path": "37"
    },
    "1382": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP5",
      "path": "37"
    },
    "1383": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1384": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "GT",
      "path": "37"
    },
    "1385": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH5",
      "path": "37",
      "value": "0x100000000"
    },
    "1391": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1392": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "GT",
      "path": "37"
    },
    "1393": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "OR",
      "path": "37"
    },
    "1394": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1395": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x57B"
    },
    "1398": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1399": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1401": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1402": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1403": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1404": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1405": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1406": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1407": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1408": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "1410": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1411": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1413": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1414": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1415": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DIV",
      "path": "37"
    },
    "1416": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "MUL",
      "path": "37"
    },
    "1417": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1419": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1420": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1422": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1423": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1424": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1425": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1426": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1428": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1429": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1430": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "1431": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1432": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1433": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1434": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1435": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1436": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1437": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1439": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1440": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1441": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1442": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1443": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1444": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP5",
      "path": "37"
    },
    "1445": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "CALLDATACOPY",
      "path": "37"
    },
    "1446": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1448": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1449": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1450": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1451": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1452": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1453": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1456": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "1457": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "1458": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "1459": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1461": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1462": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1463": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "1464": {
      "op": "POP"
    },
    "1465": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1466": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1467": {
      "op": "POP"
    },
    "1468": {
      "op": "POP"
    },
    "1469": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH5",
      "path": "37",
      "value": "0x100000000"
    },
    "1475": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1476": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "GT",
      "path": "37"
    },
    "1477": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1478": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5CE"
    },
    "1481": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1482": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1484": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1485": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1486": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1487": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1488": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1489": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1490": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1492": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1493": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1494": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "GT",
      "path": "37"
    },
    "1495": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1496": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5E0"
    },
    "1499": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1500": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1502": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1503": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1504": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1505": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1506": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1507": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1508": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1510": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1511": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1512": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP5",
      "path": "37"
    },
    "1513": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "1515": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1516": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "MUL",
      "path": "37"
    },
    "1517": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP5",
      "path": "37"
    },
    "1518": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1519": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "GT",
      "path": "37"
    },
    "1520": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH5",
      "path": "37",
      "value": "0x100000000"
    },
    "1526": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1527": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "GT",
      "path": "37"
    },
    "1528": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "OR",
      "path": "37"
    },
    "1529": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1530": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x602"
    },
    "1533": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1534": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1536": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1537": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1538": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1539": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1540": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1541": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1542": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1543": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "1545": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1546": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1548": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1549": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1550": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DIV",
      "path": "37"
    },
    "1551": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "MUL",
      "path": "37"
    },
    "1552": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1554": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1555": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1557": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1558": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1559": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1560": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1561": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1563": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1564": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1565": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "1566": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1567": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1568": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1569": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1570": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1571": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1572": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1574": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1575": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1576": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1577": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1578": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1579": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP5",
      "path": "37"
    },
    "1580": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "CALLDATACOPY",
      "path": "37"
    },
    "1581": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1583": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1584": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1585": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1586": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1587": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1588": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1591": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "1592": {
      "op": "POP"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1600": {
      "op": "SHL"
    },
    "1601": {
      "op": "SUB"
    },
    "1602": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "DUP4",
      "path": "37"
    },
    "1603": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1604": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "AND",
      "path": "37"
    },
    "1605": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "1606": {
      "op": "POP"
    },
    "1607": {
      "op": "POP"
    },
    "1608": {
      "op": "POP"
    },
    "1609": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1611": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "ADD",
      "path": "37"
    },
    "1612": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1613": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xDFA"
    },
    "1616": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        400,
        697
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1617": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1618": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41D"
    },
    "1621": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1623": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1624": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1625": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "SUB",
      "path": "1"
    },
    "1626": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1628": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1629": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "LT",
      "path": "1"
    },
    "1630": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1631": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x667"
    },
    "1634": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1635": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1637": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1638": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1639": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1640": {
      "op": "POP"
    },
    "1641": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1642": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1643": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1644": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1646": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "ADD",
      "path": "1"
    },
    "1647": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1648": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE49"
    },
    "1651": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        3955,
        4091
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1652": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1653": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29E"
    },
    "1656": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1658": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1659": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1660": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "SUB",
      "path": "1"
    },
    "1661": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1663": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1664": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "LT",
      "path": "1"
    },
    "1665": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1666": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x68A"
    },
    "1669": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1670": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1672": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1673": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1674": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1675": {
      "op": "POP"
    },
    "1676": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1677": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1678": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1679": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1681": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "ADD",
      "path": "1"
    },
    "1682": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1689": {
      "op": "SHL"
    },
    "1690": {
      "op": "SUB"
    },
    "1691": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "AND",
      "path": "1"
    },
    "1692": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE68"
    },
    "1695": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2940,
        3077
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1696": {
      "fn": "ERC20.symbol",
      "offset": [
        2650,
        2744
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1697": {
      "fn": "ERC20.symbol",
      "offset": [
        2650,
        2744
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1FD"
    },
    "1700": {
      "fn": "ERC20.symbol",
      "offset": [
        2650,
        2744
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xE80"
    },
    "1703": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2650,
        2744
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1704": {
      "offset": [
        1717,
        1766
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1705": {
      "fn": "ERC20.symbol",
      "offset": [
        1717,
        1766
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BA"
    },
    "1708": {
      "fn": "ERC20.symbol",
      "offset": [
        1717,
        1766
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEE1"
    },
    "1711": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        1717,
        1766
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1712": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1713": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x29E"
    },
    "1716": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1718": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1719": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1720": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "SUB",
      "path": "32"
    },
    "1721": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1723": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1724": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "LT",
      "path": "32"
    },
    "1725": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1726": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x6C6"
    },
    "1729": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1730": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1732": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1733": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1734": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1735": {
      "op": "POP"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1742": {
      "op": "SHL"
    },
    "1743": {
      "op": "SUB"
    },
    "1744": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1745": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1746": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "AND",
      "path": "32"
    },
    "1747": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1748": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1750": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "ADD",
      "path": "32"
    },
    "1751": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1752": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xEE6"
    },
    "1755": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1756": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1757": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x29E"
    },
    "1760": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1762": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1763": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1764": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "SUB",
      "path": "32"
    },
    "1765": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1767": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1768": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "LT",
      "path": "32"
    },
    "1769": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1770": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x6F2"
    },
    "1773": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1774": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1776": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1777": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1778": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1779": {
      "op": "POP"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "op": "SUB"
    },
    "1788": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1789": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1790": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "AND",
      "path": "32"
    },
    "1791": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1792": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1794": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "ADD",
      "path": "32"
    },
    "1795": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "1796": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xF4E"
    },
    "1799": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1800": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1801": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2BA"
    },
    "1804": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1806": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1807": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1808": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "SUB",
      "path": "37"
    },
    "1809": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1811": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1812": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "LT",
      "path": "37"
    },
    "1813": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1814": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x71E"
    },
    "1817": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1818": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1820": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1821": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1822": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1823": {
      "op": "POP"
    },
    "1824": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1831": {
      "op": "SHL"
    },
    "1832": {
      "op": "SUB"
    },
    "1833": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "AND",
      "path": "37"
    },
    "1834": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF62"
    },
    "1837": {
      "fn": "SushiToken.getCurrentVotes",
      "jump": "i",
      "offset": [
        5147,
        5395
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1838": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1839": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x353"
    },
    "1842": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1844": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1845": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1846": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "SUB",
      "path": "37"
    },
    "1847": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xC0"
    },
    "1849": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1850": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "LT",
      "path": "37"
    },
    "1851": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1852": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x744"
    },
    "1855": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1856": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1858": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1859": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1860": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1861": {
      "op": "POP"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1868": {
      "op": "SHL"
    },
    "1869": {
      "op": "SUB"
    },
    "1870": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1871": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1872": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "AND",
      "path": "37"
    },
    "1873": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1874": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1876": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1877": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "ADD",
      "path": "37"
    },
    "1878": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1879": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1880": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1882": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1883": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "ADD",
      "path": "37"
    },
    "1884": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1885": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1886": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "1888": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "1890": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "DUP3",
      "path": "37"
    },
    "1891": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "ADD",
      "path": "37"
    },
    "1892": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1893": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "AND",
      "path": "37"
    },
    "1894": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1895": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "1897": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1898": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "ADD",
      "path": "37"
    },
    "1899": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1900": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1901": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA0"
    },
    "1903": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "ADD",
      "path": "37"
    },
    "1904": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "1905": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xFC5"
    },
    "1908": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        3813,
        4953
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1909": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1910": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BA"
    },
    "1913": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1915": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1916": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1917": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "SUB",
      "path": "1"
    },
    "1918": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1920": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1921": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "LT",
      "path": "1"
    },
    "1922": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1923": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x78B"
    },
    "1926": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1927": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1929": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1930": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1931": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1932": {
      "op": "POP"
    },
    "1933": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1934": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1238"
    },
    "1937": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3245,
        3370
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1938": {
      "offset": [
        331,
        393
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1939": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        331,
        393
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2BA"
    },
    "1942": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        331,
        393
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x124F"
    },
    "1945": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        331,
        393
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1946": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1947": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x353"
    },
    "1950": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1952": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1953": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1954": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "SUB",
      "path": "1"
    },
    "1955": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1957": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1958": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "LT",
      "path": "1"
    },
    "1959": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1960": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B0"
    },
    "1963": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1964": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1966": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1967": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1968": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1969": {
      "op": "POP"
    },
    "1970": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1971": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1972": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1973": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1975": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "ADD",
      "path": "1"
    },
    "1976": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1983": {
      "op": "SHL"
    },
    "1984": {
      "op": "SUB"
    },
    "1985": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "AND",
      "path": "1"
    },
    "1986": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1273"
    },
    "1989": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5091,
        5317
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1990": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1991": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2BA"
    },
    "1994": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1996": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1997": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1998": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "SUB",
      "path": "32"
    },
    "1999": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2001": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2002": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "LT",
      "path": "32"
    },
    "2003": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "2004": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x7DC"
    },
    "2007": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "2008": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2010": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2011": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "REVERT",
      "path": "32"
    },
    "2012": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2013": {
      "op": "POP"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2020": {
      "op": "SHL"
    },
    "2021": {
      "op": "SUB"
    },
    "2022": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2023": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "2024": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2025": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "AND",
      "path": "32"
    },
    "2026": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2027": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2029": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "ADD",
      "path": "32"
    },
    "2030": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "CALLDATALOAD",
      "path": "32"
    },
    "2031": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "AND",
      "path": "32"
    },
    "2032": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x12CC"
    },
    "2035": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2036": {
      "offset": [
        2255,
        2372
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2037": {
      "fn": "ERC20.allowance",
      "offset": [
        2255,
        2372
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2BA"
    },
    "2040": {
      "fn": "ERC20.allowance",
      "offset": [
        2255,
        2372
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x12F7"
    },
    "2043": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        2255,
        2372
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2044": {
      "offset": [
        1787,
        1857
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2045": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x82E"
    },
    "2048": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2050": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2051": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "2052": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SUB",
      "path": "37"
    },
    "2053": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2055": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2056": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "LT",
      "path": "37"
    },
    "2057": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "2058": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x812"
    },
    "2061": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2062": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2064": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2065": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "REVERT",
      "path": "37"
    },
    "2066": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2067": {
      "op": "POP"
    },
    "2068": {
      "offset": [
        1787,
        1857
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2069": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2076": {
      "op": "SHL"
    },
    "2077": {
      "op": "SUB"
    },
    "2078": {
      "offset": [
        1787,
        1857
      ],
      "op": "AND",
      "path": "37"
    },
    "2079": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2080": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2082": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "ADD",
      "path": "37"
    },
    "2083": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "2084": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "2089": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "AND",
      "path": "37"
    },
    "2090": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x131B"
    },
    "2093": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1787,
        1857
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2094": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2095": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2097": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2098": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2099": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "2104": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2105": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "2106": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "AND",
      "path": "37"
    },
    "2107": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP4",
      "path": "37"
    },
    "2108": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2109": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2111": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP4",
      "path": "37"
    },
    "2112": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "ADD",
      "path": "37"
    },
    "2113": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2114": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2115": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2116": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2117": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2118": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2119": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2120": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2121": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2122": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SUB",
      "path": "37"
    },
    "2123": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "ADD",
      "path": "37"
    },
    "2124": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2125": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "RETURN",
      "path": "37"
    },
    "2126": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2127": {
      "fn": "ERC20.name",
      "offset": [
        2525,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 0,
      "value": "0x4"
    },
    "2129": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2130": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2131": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2133": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2134": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "2135": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2137": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "2139": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x2"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2143": {
      "op": "NOT"
    },
    "2144": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x100"
    },
    "2147": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "2149": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP9",
      "path": "32"
    },
    "2150": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "AND",
      "path": "32"
    },
    "2151": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "2152": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MUL",
      "path": "32"
    },
    "2153": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "32"
    },
    "2154": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2155": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP6",
      "path": "32"
    },
    "2156": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "AND",
      "path": "32"
    },
    "2157": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "2158": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2159": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "2160": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DIV",
      "path": "32"
    },
    "2161": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "2162": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP5",
      "path": "32"
    },
    "2163": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "32"
    },
    "2164": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2165": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2166": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DIV",
      "path": "32"
    },
    "2167": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2168": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MUL",
      "path": "32"
    },
    "2169": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2170": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "32"
    },
    "2171": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2172": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "32"
    },
    "2173": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2174": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2175": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2176": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2177": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2178": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2179": {
      "fn": "ERC20.name",
      "offset": [
        2493,
        2506
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "2181": {
      "fn": "ERC20.name",
      "offset": [
        2493,
        2506
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "2182": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2183": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2184": {
      "fn": "ERC20.name",
      "offset": [
        2525,
        2530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2185": {
      "fn": "ERC20.name",
      "offset": [
        2525,
        2530
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2186": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2187": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "32"
    },
    "2188": {
      "fn": "ERC20.name",
      "offset": [
        2525,
        2530
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2189": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2190": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2191": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "2192": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x8DA"
    },
    "2195": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "2196": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2197": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "2199": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "LT",
      "path": "32"
    },
    "2200": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x8AF"
    },
    "2203": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "2204": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x100"
    },
    "2207": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2208": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2209": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2210": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DIV",
      "path": "32"
    },
    "2211": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MUL",
      "path": "32"
    },
    "2212": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2213": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2214": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2215": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2217": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "32"
    },
    "2218": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2219": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x8DA"
    },
    "2222": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2223": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2224": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2225": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "32"
    },
    "2226": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2227": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2228": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2230": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2231": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2233": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2235": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2236": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2237": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2238": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2239": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2240": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2241": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2242": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2243": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "2245": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "32"
    },
    "2246": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2247": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2249": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "32"
    },
    "2250": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2251": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2252": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "GT",
      "path": "32"
    },
    "2253": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x8BD"
    },
    "2256": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "2257": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2258": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2259": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SUB",
      "path": "32"
    },
    "2260": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "2262": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "AND",
      "path": "32"
    },
    "2263": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2264": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "32"
    },
    "2265": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2266": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2267": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "32"
    },
    "2268": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "32"
    },
    "2269": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "32"
    },
    "2270": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "32"
    },
    "2271": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "32"
    },
    "2272": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2273": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "32"
    },
    "2274": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2275": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2276": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2277": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4597
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2279": {
      "fn": "ERC20.approve",
      "offset": [
        4609,
        4648
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 1,
      "value": "0x8F8"
    },
    "2282": {
      "fn": "ERC20.approve",
      "offset": [
        4618,
        4630
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x8F1"
    },
    "2285": {
      "fn": "ERC20.approve",
      "offset": [
        4618,
        4628
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1348"
    },
    "2288": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4618,
        4630
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2289": {
      "fn": "ERC20.approve",
      "offset": [
        4618,
        4630
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2290": {
      "fn": "ERC20.approve",
      "offset": [
        4632,
        4639
      ],
      "op": "DUP5",
      "path": "32"
    },
    "2291": {
      "fn": "ERC20.approve",
      "offset": [
        4641,
        4647
      ],
      "op": "DUP5",
      "path": "32"
    },
    "2292": {
      "fn": "ERC20.approve",
      "offset": [
        4609,
        4617
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x134C"
    },
    "2295": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4609,
        4648
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2296": {
      "fn": "ERC20.approve",
      "offset": [
        4609,
        4648
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "fn": "ERC20.approve",
      "offset": [
        4665,
        4669
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 2,
      "value": "0x1"
    },
    "2300": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2301": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2302": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2303": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "POP",
      "path": "32"
    },
    "2304": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "POP",
      "path": "32"
    },
    "2305": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2306": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2307": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3596,
        3608
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 3,
      "value": "0x3"
    },
    "2309": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3596,
        3608
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2310": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2311": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2312": {
      "offset": [
        2042,
        2164
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2313": {
      "offset": [
        2084,
        2164
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
    },
    "2346": {
      "offset": [
        2042,
        2164
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2347": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        2042,
        2164
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2348": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2349": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5242,
        5246
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2351": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5258,
        5294
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 4,
      "value": "0x939"
    },
    "2354": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5268,
        5274
      ],
      "op": "DUP5",
      "path": "32"
    },
    "2355": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5276,
        5285
      ],
      "op": "DUP5",
      "path": "32"
    },
    "2356": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5287,
        5293
      ],
      "op": "DUP5",
      "path": "32"
    },
    "2357": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5258,
        5267
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1438"
    },
    "2360": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5258,
        5294
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2361": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5258,
        5294
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2362": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5304,
        5425
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 5,
      "value": "0x9A9"
    },
    "2365": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5313,
        5319
      ],
      "op": "DUP5",
      "path": "32"
    },
    "2366": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5321,
        5333
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x945"
    },
    "2369": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5321,
        5331
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1348"
    },
    "2372": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5321,
        5333
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2373": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5321,
        5333
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2374": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x9A4"
    },
    "2377": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5373,
        5379
      ],
      "op": "DUP6",
      "path": "32"
    },
    "2378": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2380": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "2381": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2382": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "2384": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "ADD",
      "path": "32"
    },
    "2385": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2387": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2388": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2389": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x28"
    },
    "2391": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2392": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2393": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2395": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "ADD",
      "path": "32"
    },
    "2396": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2103"
    },
    "2399": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x28"
    },
    "2401": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2402": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2409": {
      "op": "SHL"
    },
    "2410": {
      "op": "SUB"
    },
    "2411": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "DUP11",
      "path": "32"
    },
    "2412": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "AND",
      "path": "32"
    },
    "2413": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2415": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2416": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2417": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2418": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5346
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x2"
    },
    "2420": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2422": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2423": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2425": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2426": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2427": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2428": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5355,
        5367
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x983"
    },
    "2431": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5355,
        5365
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1348"
    },
    "2434": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5355,
        5367
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2435": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5355,
        5367
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "op": "SUB"
    },
    "2444": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "AND",
      "path": "32"
    },
    "2445": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2446": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2447": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2449": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2450": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "ADD",
      "path": "32"
    },
    "2451": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2452": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2453": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2454": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2455": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2457": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "ADD",
      "path": "32"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2460": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2461": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2462": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2463": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2464": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5372
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1595"
    },
    "2467": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5335,
        5424
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2468": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2469": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5304,
        5312
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x134C"
    },
    "2472": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5304,
        5425
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2473": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5304,
        5425
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2474": {
      "op": "POP"
    },
    "2475": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5442,
        5446
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 6,
      "value": "0x1"
    },
    "2477": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "2478": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2479": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "POP",
      "path": "32"
    },
    "2480": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "POP",
      "path": "32"
    },
    "2481": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "POP",
      "path": "32"
    },
    "2482": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2483": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4272,
        4384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2484": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4329,
        4336
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2486": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 7
    },
    "2487": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2488": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2489": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2491": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2492": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2493": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2494": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2496": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2497": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4367
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2498": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2500": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4377
      ],
      "op": "ADD",
      "path": "1"
    },
    "2501": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4377
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2502": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4355,
        4377
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2503": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "o",
      "offset": [
        4272,
        4384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2504": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2505": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4731
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x0"
    },
    "2507": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2508": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2509": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2510": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2512": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2513": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2514": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2515": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2517": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2518": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4737
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2519": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4747
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2521": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4747
      ],
      "op": "ADD",
      "path": "1"
    },
    "2522": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4725,
        4747
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2523": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4717,
        4762
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9EB"
    },
    "2526": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4717,
        4762
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2527": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4749,
        4761
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9E6"
    },
    "2530": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4749,
        4759
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1348"
    },
    "2533": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4749,
        4761
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2534": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4749,
        4761
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2535": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4717,
        4724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE68"
    },
    "2538": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4717,
        4762
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2539": {
      "branch": 121,
      "fn": "AccessControl.grantRole",
      "offset": [
        4717,
        4762
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2540": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA26"
    },
    "2543": {
      "branch": 121,
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2544": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2546": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2547": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2553": {
      "op": "SHL"
    },
    "2554": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2555": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2556": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2558": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "ADD",
      "path": "1"
    },
    "2559": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2560": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2561": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2563": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "ADD",
      "path": "1"
    },
    "2564": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2565": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2566": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "SUB",
      "path": "1"
    },
    "2567": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2568": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2569": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2F"
    },
    "2571": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2572": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2573": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2575": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "ADD",
      "path": "1"
    },
    "2576": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2577": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F85"
    },
    "2580": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2F"
    },
    "2582": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2583": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2584": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2586": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "ADD",
      "path": "1"
    },
    "2587": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2588": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "POP",
      "path": "1"
    },
    "2589": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "POP",
      "path": "1"
    },
    "2590": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2592": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2593": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2594": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2595": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "SUB",
      "path": "1"
    },
    "2596": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2597": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2598": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4709,
        4814
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2599": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4825,
        4850
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 9,
      "value": "0xA30"
    },
    "2602": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4836,
        4840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2603": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4842,
        4849
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2604": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4825,
        4835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x162C"
    },
    "2607": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4825,
        4850
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2608": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4825,
        4850
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2609": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "POP",
      "path": "1"
    },
    "2610": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4634,
        4857
      ],
      "op": "POP",
      "path": "1"
    },
    "2611": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4634,
        4857
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2612": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2613": {
      "fn": "ERC20.decimals",
      "offset": [
        3441,
        3450
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 10,
      "value": "0x6"
    },
    "2615": {
      "fn": "ERC20.decimals",
      "offset": [
        3441,
        3450
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2616": {
      "fn": "ERC20.decimals",
      "offset": [
        3441,
        3450
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xFF"
    },
    "2618": {
      "fn": "ERC20.decimals",
      "offset": [
        3441,
        3450
      ],
      "op": "AND",
      "path": "32"
    },
    "2619": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2620": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2621": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5808,
        6013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2622": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5905,
        5917
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0xA45"
    },
    "2625": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5905,
        5915
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1348"
    },
    "2628": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5905,
        5917
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2629": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5905,
        5917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "op": "SUB"
    },
    "2638": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5894,
        5917
      ],
      "op": "AND",
      "path": "1"
    },
    "2639": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5894,
        5901
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2646": {
      "op": "SHL"
    },
    "2647": {
      "op": "SUB"
    },
    "2648": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5894,
        5917
      ],
      "op": "AND",
      "path": "1"
    },
    "2649": {
      "branch": 122,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5894,
        5917
      ],
      "op": "EQ",
      "path": "1"
    },
    "2650": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA94"
    },
    "2653": {
      "branch": 122,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2654": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2656": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2657": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2663": {
      "op": "SHL"
    },
    "2664": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2665": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2666": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2668": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "ADD",
      "path": "1"
    },
    "2669": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2670": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2671": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2673": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "ADD",
      "path": "1"
    },
    "2674": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2675": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2676": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "SUB",
      "path": "1"
    },
    "2677": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2678": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2679": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2F"
    },
    "2681": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2682": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2683": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2685": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "ADD",
      "path": "1"
    },
    "2686": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2687": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21E3"
    },
    "2690": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2F"
    },
    "2692": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2693": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2694": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2696": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "ADD",
      "path": "1"
    },
    "2697": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2698": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "POP",
      "path": "1"
    },
    "2699": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "POP",
      "path": "1"
    },
    "2700": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2702": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2703": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2704": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2705": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "SUB",
      "path": "1"
    },
    "2706": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2707": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2708": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5886,
        5969
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2709": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5980,
        6006
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0xA30"
    },
    "2712": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5992,
        5996
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2713": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5998,
        6005
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2714": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5980,
        5991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1695"
    },
    "2717": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5980,
        6006
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2718": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2719": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5936,
        5940
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2721": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5952,
        6035
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 13,
      "value": "0x8F8"
    },
    "2724": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5973
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xAAB"
    },
    "2727": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5971
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1348"
    },
    "2730": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5961,
        5973
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2731": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5973
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2732": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5975,
        5982
      ],
      "op": "DUP5",
      "path": "32"
    },
    "2733": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6034
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x9A4"
    },
    "2736": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6023,
        6033
      ],
      "op": "DUP6",
      "path": "32"
    },
    "2737": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        5995
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x2"
    },
    "2739": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "2741": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5996,
        6008
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xABC"
    },
    "2744": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5996,
        6006
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1348"
    },
    "2747": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5996,
        6008
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2748": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5996,
        6008
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2755": {
      "op": "SHL"
    },
    "2756": {
      "op": "SUB"
    },
    "2757": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2758": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2759": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "AND",
      "path": "32"
    },
    "2760": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2761": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2762": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "2764": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP1",
      "path": "32"
    },
    "2765": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP4",
      "path": "32"
    },
    "2766": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "ADD",
      "path": "32"
    },
    "2767": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "2768": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2769": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "2770": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2771": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "2773": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2774": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP3",
      "path": "32"
    },
    "2775": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "ADD",
      "path": "32"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2778": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2779": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2780": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2781": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "2782": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "DUP13",
      "path": "32"
    },
    "2783": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "AND",
      "path": "32"
    },
    "2784": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "DUP2",
      "path": "32"
    },
    "2785": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2786": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "2787": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "2788": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2789": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "2790": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "2791": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "2792": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6022
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x16FE"
    },
    "2795": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5984,
        6034
      ],
      "op": "JUMP",
      "path": "32"
    },
    "2796": {
      "fn": "SushiToken.mint",
      "offset": [
        800,
        1048
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2797": {
      "fn": "SushiToken.mint",
      "offset": [
        870,
        904
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 14,
      "value": "0xB18"
    },
    "2800": {
      "offset": [
        369,
        393
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
    },
    "2833": {
      "fn": "SushiToken.mint",
      "offset": [
        891,
        903
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x9E6"
    },
    "2836": {
      "fn": "SushiToken.mint",
      "offset": [
        891,
        901
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1348"
    },
    "2839": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        891,
        903
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2840": {
      "branch": 101,
      "fn": "SushiToken.mint",
      "offset": [
        870,
        904
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2841": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xB53"
    },
    "2844": {
      "branch": 101,
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2845": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2847": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2848": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2854": {
      "op": "SHL"
    },
    "2855": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2856": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2857": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2859": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "ADD",
      "path": "37"
    },
    "2860": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2861": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2862": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2864": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "ADD",
      "path": "37"
    },
    "2865": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2866": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2867": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "SUB",
      "path": "37"
    },
    "2868": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2869": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2870": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x29"
    },
    "2872": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2873": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2874": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2876": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "ADD",
      "path": "37"
    },
    "2877": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2878": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1FB4"
    },
    "2881": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x29"
    },
    "2883": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2884": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "CODECOPY",
      "path": "37"
    },
    "2885": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2887": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "ADD",
      "path": "37"
    },
    "2888": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2889": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "POP",
      "path": "37"
    },
    "2890": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "POP",
      "path": "37"
    },
    "2891": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2893": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2894": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2895": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2896": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "SUB",
      "path": "37"
    },
    "2897": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2898": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "REVERT",
      "path": "37"
    },
    "2899": {
      "fn": "SushiToken.mint",
      "offset": [
        862,
        950
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2900": {
      "fn": "SushiToken.mint",
      "offset": [
        960,
        979
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 15,
      "value": "0xB5D"
    },
    "2903": {
      "fn": "SushiToken.mint",
      "offset": [
        966,
        969
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2904": {
      "fn": "SushiToken.mint",
      "offset": [
        971,
        978
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2905": {
      "fn": "SushiToken.mint",
      "offset": [
        960,
        965
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1758"
    },
    "2908": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        960,
        979
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2909": {
      "fn": "SushiToken.mint",
      "offset": [
        960,
        979
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2916": {
      "op": "SHL"
    },
    "2917": {
      "op": "SUB"
    },
    "2918": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 16
    },
    "2919": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "DUP4",
      "path": "37"
    },
    "2920": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "AND",
      "path": "37"
    },
    "2921": {
      "fn": "SushiToken.mint",
      "offset": [
        1012,
        1013
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2923": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2924": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2925": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2926": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1026
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x7"
    },
    "2928": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2930": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2931": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2933": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2934": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "2935": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2936": {
      "fn": "SushiToken.mint",
      "offset": [
        989,
        1041
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xA30"
    },
    "2939": {
      "fn": "SushiToken.mint",
      "offset": [
        989,
        1041
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "2940": {
      "fn": "SushiToken.mint",
      "offset": [
        1016,
        1031
      ],
      "op": "AND",
      "path": "37"
    },
    "2941": {
      "fn": "SushiToken.mint",
      "offset": [
        1033,
        1040
      ],
      "op": "DUP4",
      "path": "37"
    },
    "2942": {
      "fn": "SushiToken.mint",
      "offset": [
        989,
        1003
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x184A"
    },
    "2945": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        989,
        1041
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2946": {
      "fn": "SushiToken.delegates",
      "offset": [
        3007,
        3150
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2953": {
      "op": "SHL"
    },
    "2954": {
      "op": "SUB"
    },
    "2955": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "SWAP1",
      "path": "37",
      "statement": 17
    },
    "2956": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2957": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "AND",
      "path": "37"
    },
    "2958": {
      "fn": "SushiToken.delegates",
      "offset": [
        3092,
        3099
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2960": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2961": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2962": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2963": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3132
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x7"
    },
    "2965": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2967": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2968": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2970": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2971": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "2972": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2973": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "AND",
      "path": "37"
    },
    "2974": {
      "fn": "SushiToken.delegates",
      "offset": [
        3122,
        3143
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2975": {
      "fn": "SushiToken.delegates",
      "jump": "o",
      "offset": [
        3007,
        3150
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2976": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2977": {
      "fn": "SushiToken.delegate",
      "offset": [
        3351,
        3383
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 18,
      "value": "0xBAA"
    },
    "2980": {
      "fn": "SushiToken.delegate",
      "offset": [
        3361,
        3371
      ],
      "op": "CALLER",
      "path": "37"
    },
    "2981": {
      "fn": "SushiToken.delegate",
      "offset": [
        3373,
        3382
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2982": {
      "fn": "SushiToken.delegate",
      "offset": [
        3351,
        3360
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x198C"
    },
    "2985": {
      "fn": "SushiToken.delegate",
      "jump": "i",
      "offset": [
        3351,
        3383
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2986": {
      "fn": "SushiToken.delegate",
      "offset": [
        3351,
        3383
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2987": {
      "fn": "SushiToken.delegate",
      "offset": [
        3288,
        3390
      ],
      "op": "POP",
      "path": "37"
    },
    "2988": {
      "fn": "SushiToken.delegate",
      "jump": "o",
      "offset": [
        3288,
        3390
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2989": {
      "offset": [
        1923,
        1972
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2990": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x9"
    },
    "2992": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2994": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2995": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2997": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2998": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2999": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3000": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3002": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3003": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3004": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3005": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "3010": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "AND",
      "path": "37"
    },
    "3011": {
      "fn": "SushiToken.delegate",
      "offset": [
        1923,
        1972
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3012": {
      "fn": "SushiToken.delegate",
      "jump": "o",
      "offset": [
        1923,
        1972
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3013": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3020": {
      "op": "SHL"
    },
    "3021": {
      "op": "SUB"
    },
    "3022": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "AND",
      "path": "32",
      "statement": 19
    },
    "3023": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3739,
        3746
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3025": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3026": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3027": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3028": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3774
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "3030": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3032": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3033": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3035": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3036": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3037": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "3038": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3039": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3040": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3041": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5922,
        5929
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3043": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5967,
        5979
      ],
      "op": "NUMBER",
      "path": "37",
      "statement": 20
    },
    "3044": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5953,
        5964
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3045": {
      "branch": 102,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5953,
        5979
      ],
      "op": "LT",
      "path": "37"
    },
    "3046": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xC20"
    },
    "3049": {
      "branch": 102,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3050": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3052": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3053": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3059": {
      "op": "SHL"
    },
    "3060": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3061": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3062": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3064": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "ADD",
      "path": "37"
    },
    "3065": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3066": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3067": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3069": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "ADD",
      "path": "37"
    },
    "3070": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3071": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3072": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "SUB",
      "path": "37"
    },
    "3073": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3074": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3075": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x28"
    },
    "3077": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3078": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3079": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3081": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "ADD",
      "path": "37"
    },
    "3082": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3083": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x20DB"
    },
    "3086": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x28"
    },
    "3088": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3089": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "CODECOPY",
      "path": "37"
    },
    "3090": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3092": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "ADD",
      "path": "37"
    },
    "3093": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3094": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "POP",
      "path": "37"
    },
    "3095": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "POP",
      "path": "37"
    },
    "3096": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3098": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3099": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3100": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3101": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "SUB",
      "path": "37"
    },
    "3102": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3103": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "REVERT",
      "path": "37"
    },
    "3104": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5945,
        6024
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3111": {
      "op": "SHL"
    },
    "3112": {
      "op": "SUB"
    },
    "3113": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3114": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "AND",
      "path": "37"
    },
    "3115": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6035,
        6054
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3117": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3118": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3119": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3120": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6071
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x9"
    },
    "3122": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3124": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3125": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3127": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3128": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3129": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3130": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "3135": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6057,
        6080
      ],
      "op": "AND",
      "path": "37"
    },
    "3136": {
      "branch": 103,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6094,
        6111
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3137": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6090,
        6146
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xC4E"
    },
    "3140": {
      "branch": 103,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6090,
        6146
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3141": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6134,
        6135
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 21,
      "value": "0x0"
    },
    "3143": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6127,
        6135
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3144": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6127,
        6135
      ],
      "op": "POP",
      "path": "37"
    },
    "3145": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6127,
        6135
      ],
      "op": "POP",
      "path": "37"
    },
    "3146": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6127,
        6135
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8FC"
    },
    "3149": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6127,
        6135
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3150": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6090,
        6146
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3157": {
      "op": "SHL"
    },
    "3158": {
      "op": "SUB"
    },
    "3159": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "DUP5",
      "path": "37"
    },
    "3160": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "AND",
      "path": "37"
    },
    "3161": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3163": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3164": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3165": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3166": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6214
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "3168": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3170": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3171": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3172": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3173": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3175": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3176": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3177": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6223
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3178": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6241
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3185": {
      "op": "NOT"
    },
    "3186": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6224,
        6240
      ],
      "op": "DUP7",
      "path": "37"
    },
    "3187": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6224,
        6240
      ],
      "op": "ADD",
      "path": "37"
    },
    "3188": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6241
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3189": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6241
      ],
      "op": "AND",
      "path": "37"
    },
    "3190": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6241
      ],
      "op": "DUP6",
      "path": "37"
    },
    "3191": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6241
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3192": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6241
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3193": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6241
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3194": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6241
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3195": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6241
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3196": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6241
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3197": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6251
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3198": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6251
      ],
      "op": "AND",
      "path": "37"
    },
    "3199": {
      "branch": 104,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6203,
        6266
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3200": {
      "op": "LT"
    },
    "3201": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6199,
        6344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xCBD"
    },
    "3204": {
      "branch": 104,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6199,
        6344
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3211": {
      "op": "SHL"
    },
    "3212": {
      "op": "SUB"
    },
    "3213": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "DUP5",
      "path": "37",
      "statement": 22
    },
    "3214": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "AND",
      "path": "37"
    },
    "3215": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3217": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3218": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3219": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3220": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6300
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "3222": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3224": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3225": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3226": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3227": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3229": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3230": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3231": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6309
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3234": {
      "op": "NOT"
    },
    "3235": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6310,
        6326
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "3236": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6310,
        6326
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3237": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6310,
        6326
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "3238": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6310,
        6326
      ],
      "op": "ADD",
      "path": "37"
    },
    "3239": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6327
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "3244": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6327
      ],
      "op": "AND",
      "path": "37"
    },
    "3245": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6327
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3246": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6327
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3247": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6327
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3248": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6327
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3249": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6327
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3250": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6327
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3251": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6325,
        6326
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "3253": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6333
      ],
      "op": "ADD",
      "path": "37"
    },
    "3254": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6333
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3255": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6289,
        6333
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3256": {
      "op": "POP"
    },
    "3257": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6282,
        6333
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8FC"
    },
    "3260": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6282,
        6333
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3261": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6199,
        6344
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3268": {
      "op": "SHL"
    },
    "3269": {
      "op": "SUB"
    },
    "3270": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "DUP5",
      "path": "37"
    },
    "3271": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "AND",
      "path": "37"
    },
    "3272": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3274": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3275": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3276": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3277": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6413
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "3279": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3281": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3282": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3283": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3284": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3286": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3287": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3288": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6422
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3289": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6425
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3290": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6425
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3291": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6425
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3292": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6425
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3293": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6425
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3294": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6425
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3295": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6425
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3296": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6425
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3297": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6435
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3298": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6425
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "3303": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6435
      ],
      "op": "AND",
      "path": "37"
    },
    "3304": {
      "branch": 105,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6402,
        6449
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3305": {
      "op": "LT"
    },
    "3306": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6398,
        6484
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3307": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6398,
        6484
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xCF8"
    },
    "3310": {
      "branch": 105,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6398,
        6484
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3311": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6472,
        6473
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 23,
      "value": "0x0"
    },
    "3313": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6465,
        6473
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3314": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6465,
        6473
      ],
      "op": "POP",
      "path": "37"
    },
    "3315": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6465,
        6473
      ],
      "op": "POP",
      "path": "37"
    },
    "3316": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6465,
        6473
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8FC"
    },
    "3319": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6465,
        6473
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3320": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6398,
        6484
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3321": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6494,
        6506
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3325": {
      "op": "NOT"
    },
    "3326": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6535,
        6551
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3327": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6535,
        6551
      ],
      "op": "ADD",
      "path": "37"
    },
    "3328": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6561,
        6979
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3329": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6576,
        6581
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3330": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6568,
        6581
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "3335": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6568,
        6581
      ],
      "op": "AND",
      "path": "37"
    },
    "3336": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6568,
        6573
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3337": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6568,
        6581
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "3342": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6568,
        6581
      ],
      "op": "AND",
      "path": "37"
    },
    "3343": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6568,
        6581
      ],
      "op": "GT",
      "path": "37"
    },
    "3344": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6561,
        6979
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3345": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6561,
        6979
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xDB1"
    },
    "3348": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6561,
        6979
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3349": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6639,
        6640
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "3351": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6622,
        6635
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3352": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6622,
        6635
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3353": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6622,
        6635
      ],
      "op": "SUB",
      "path": "37"
    },
    "3354": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6621,
        6640
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "3359": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6621,
        6640
      ],
      "op": "AND",
      "path": "37"
    },
    "3360": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6621,
        6640
      ],
      "op": "DIV",
      "path": "37"
    },
    "3361": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6613,
        6640
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3362": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6613,
        6640
      ],
      "op": "SUB",
      "path": "37"
    },
    "3363": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6701
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xD2A"
    },
    "3366": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6701
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1E95"
    },
    "3369": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "i",
      "offset": [
        6681,
        6701
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3370": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6701
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3371": {
      "op": "POP"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3378": {
      "op": "SHL"
    },
    "3379": {
      "op": "SUB"
    },
    "3380": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "DUP8",
      "path": "37"
    },
    "3381": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "AND",
      "path": "37"
    },
    "3382": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3384": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3385": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3386": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3387": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6715
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "3389": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3391": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3392": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3393": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3394": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3396": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3397": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3398": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6724
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3399": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "3404": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3405": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "DUP7",
      "path": "37"
    },
    "3406": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "AND",
      "path": "37"
    },
    "3407": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "DUP6",
      "path": "37"
    },
    "3408": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3409": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3410": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3411": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3412": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3413": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3414": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3415": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6704,
        6732
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3416": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3417": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3418": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3419": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3420": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "ADD",
      "path": "37"
    },
    "3421": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3422": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3423": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3424": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3425": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3426": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3427": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "3428": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "AND",
      "path": "37"
    },
    "3429": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3430": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3431": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3432": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "3434": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3435": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "3436": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "ADD",
      "path": "37"
    },
    "3437": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3438": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3439": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3440": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "ADD",
      "path": "37"
    },
    "3441": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3442": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3443": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3444": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3445": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6681,
        6732
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3446": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6750,
        6777
      ],
      "op": "DUP8",
      "path": "37"
    },
    "3447": {
      "branch": 106,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6750,
        6777
      ],
      "op": "EQ",
      "path": "37"
    },
    "3448": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6746,
        6969
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3449": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6746,
        6969
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xD8C"
    },
    "3452": {
      "branch": 106,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6746,
        6969
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3453": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6804,
        6812
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 24,
      "value": "0x20"
    },
    "3455": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6804,
        6812
      ],
      "op": "ADD",
      "path": "37"
    },
    "3456": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6804,
        6812
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3457": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6804,
        6812
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "3458": {
      "op": "POP"
    },
    "3459": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6797,
        6812
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8FC"
    },
    "3462": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6797,
        6812
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "3463": {
      "op": "POP"
    },
    "3464": {
      "op": "POP"
    },
    "3465": {
      "op": "POP"
    },
    "3466": {
      "op": "POP"
    },
    "3467": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6797,
        6812
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3468": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6746,
        6969
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3469": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6837,
        6849
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3470": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6837,
        6849
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3471": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6837,
        6863
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "3476": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6837,
        6863
      ],
      "op": "AND",
      "path": "37"
    },
    "3477": {
      "branch": 107,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6837,
        6863
      ],
      "op": "DUP8",
      "path": "37"
    },
    "3478": {
      "op": "GT"
    },
    "3479": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6833,
        6969
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3480": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6833,
        6969
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xDA3"
    },
    "3483": {
      "branch": 107,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6833,
        6969
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3484": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6891,
        6897
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 25
    },
    "3485": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6883,
        6897
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "3486": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6883,
        6897
      ],
      "op": "POP",
      "path": "37"
    },
    "3487": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6833,
        6969
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xDAA"
    },
    "3490": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6833,
        6969
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3491": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6833,
        6969
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3492": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6953,
        6954
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 26,
      "value": "0x1"
    },
    "3494": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6944,
        6950
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3495": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6944,
        6954
      ],
      "op": "SUB",
      "path": "37"
    },
    "3496": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6936,
        6954
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3497": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6936,
        6954
      ],
      "op": "POP",
      "path": "37"
    },
    "3498": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6833,
        6969
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3499": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6561,
        6979
      ],
      "op": "POP",
      "path": "37"
    },
    "3500": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6561,
        6979
      ],
      "op": "POP",
      "path": "37"
    },
    "3501": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6561,
        6979
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xD00"
    },
    "3504": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6561,
        6979
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3505": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6561,
        6979
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3506": {
      "op": "POP"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3513": {
      "op": "SHL"
    },
    "3514": {
      "op": "SUB"
    },
    "3515": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "DUP6",
      "path": "37",
      "statement": 27
    },
    "3516": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "AND",
      "path": "37"
    },
    "3517": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3519": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3520": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3521": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3522": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7006
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "3524": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3526": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3527": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3528": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3529": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3531": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3532": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3533": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7015
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3534": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7022
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "3539": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7022
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3540": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7022
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "3541": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7022
      ],
      "op": "AND",
      "path": "37"
    },
    "3542": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7022
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3543": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7022
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3544": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7022
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3545": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7022
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3546": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7022
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3547": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7022
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3548": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7028
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "3550": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7028
      ],
      "op": "ADD",
      "path": "37"
    },
    "3551": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7028
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3552": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6995,
        7028
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3553": {
      "op": "POP"
    },
    "3554": {
      "op": "POP"
    },
    "3555": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3556": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3557": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "POP",
      "path": "37"
    },
    "3558": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5817,
        7035
      ],
      "op": "POP",
      "path": "37"
    },
    "3559": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "o",
      "offset": [
        5817,
        7035
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3560": {
      "offset": [
        2450,
        2489
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3561": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "3563": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3565": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3566": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3568": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3569": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3570": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3571": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3573": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3574": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3575": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3576": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        2450,
        2489
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3577": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "o",
      "offset": [
        2450,
        2489
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3578": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3579": {
      "fn": "SushiToken.initToken",
      "offset": [
        531,
        569
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 28,
      "value": "0xE05"
    },
    "3582": {
      "offset": [
        1762,
        1766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3584": {
      "fn": "SushiToken.initToken",
      "offset": [
        562,
        568
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3585": {
      "fn": "SushiToken.initToken",
      "offset": [
        531,
        541
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xA26"
    },
    "3588": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        531,
        569
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3589": {
      "fn": "SushiToken.initToken",
      "offset": [
        531,
        569
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3590": {
      "fn": "SushiToken.initToken",
      "offset": [
        579,
        610
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 29,
      "value": "0xE2F"
    },
    "3593": {
      "offset": [
        369,
        393
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
    },
    "3626": {
      "fn": "SushiToken.initToken",
      "offset": [
        603,
        609
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3627": {
      "fn": "SushiToken.initToken",
      "offset": [
        579,
        589
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xA26"
    },
    "3630": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        579,
        610
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3631": {
      "fn": "SushiToken.initToken",
      "offset": [
        579,
        610
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3632": {
      "fn": "SushiToken.initToken",
      "offset": [
        620,
        646
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 30,
      "value": "0xE39"
    },
    "3635": {
      "fn": "SushiToken.initToken",
      "offset": [
        631,
        636
      ],
      "op": "DUP5",
      "path": "37"
    },
    "3636": {
      "fn": "SushiToken.initToken",
      "offset": [
        638,
        645
      ],
      "op": "DUP5",
      "path": "37"
    },
    "3637": {
      "fn": "SushiToken.initToken",
      "offset": [
        620,
        630
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A1B"
    },
    "3640": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        620,
        646
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3641": {
      "fn": "SushiToken.initToken",
      "offset": [
        620,
        646
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3642": {
      "fn": "SushiToken.initToken",
      "offset": [
        656,
        689
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 31,
      "value": "0xE43"
    },
    "3645": {
      "fn": "SushiToken.initToken",
      "offset": [
        662,
        672
      ],
      "op": "CALLER",
      "path": "37"
    },
    "3646": {
      "fn": "SushiToken.initToken",
      "offset": [
        674,
        688
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3647": {
      "fn": "SushiToken.initToken",
      "offset": [
        656,
        661
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1758"
    },
    "3650": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        656,
        689
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3651": {
      "fn": "SushiToken.initToken",
      "offset": [
        656,
        689
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3652": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "POP",
      "path": "37"
    },
    "3653": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "POP",
      "path": "37"
    },
    "3654": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "POP",
      "path": "37"
    },
    "3655": {
      "fn": "SushiToken.initToken",
      "offset": [
        400,
        697
      ],
      "op": "POP",
      "path": "37"
    },
    "3656": {
      "fn": "SushiToken.initToken",
      "jump": "o",
      "offset": [
        400,
        697
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3657": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3658": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4028,
        4035
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3660": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 32
    },
    "3661": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3662": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3663": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3665": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3666": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3667": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3668": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3670": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3671": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4066
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3672": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4084
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE61"
    },
    "3675": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3676": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4078,
        4083
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3677": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AA6"
    },
    "3680": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        4054,
        4084
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3681": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4054,
        4084
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3682": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        4047,
        4084
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3683": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3955,
        4091
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3684": {
      "op": "POP"
    },
    "3685": {
      "op": "POP"
    },
    "3686": {
      "op": "POP"
    },
    "3687": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        3955,
        4091
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3688": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2940,
        3077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3689": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3009,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3691": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 33
    },
    "3692": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3693": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3694": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3696": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3697": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3698": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3699": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3701": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3702": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3044
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3703": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3070
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE61"
    },
    "3706": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3070
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3707": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3062,
        3069
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3708": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3032,
        3061
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AB2"
    },
    "3711": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3032,
        3070
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3712": {
      "fn": "ERC20.symbol",
      "offset": [
        2650,
        2744
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3713": {
      "fn": "ERC20.symbol",
      "offset": [
        2730,
        2737
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 34,
      "value": "0x5"
    },
    "3715": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3716": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "3717": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3719": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3720": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3721": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3723": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "3725": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x2"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3729": {
      "op": "NOT"
    },
    "3730": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x100"
    },
    "3733": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "3735": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP9",
      "path": "32"
    },
    "3736": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "AND",
      "path": "32"
    },
    "3737": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "3738": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MUL",
      "path": "32"
    },
    "3739": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "32"
    },
    "3740": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3741": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP6",
      "path": "32"
    },
    "3742": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "AND",
      "path": "32"
    },
    "3743": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "3744": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3745": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "3746": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DIV",
      "path": "32"
    },
    "3747": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "3748": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3749": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "32"
    },
    "3750": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3751": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3752": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DIV",
      "path": "32"
    },
    "3753": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3754": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MUL",
      "path": "32"
    },
    "3755": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3756": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "32"
    },
    "3757": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3758": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "32"
    },
    "3759": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3760": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "3761": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3762": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3763": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3764": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3765": {
      "fn": "ERC20.symbol",
      "offset": [
        2698,
        2711
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "3767": {
      "fn": "ERC20.symbol",
      "offset": [
        2698,
        2711
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "3768": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3769": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "3770": {
      "fn": "ERC20.symbol",
      "offset": [
        2730,
        2737
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3771": {
      "fn": "ERC20.symbol",
      "offset": [
        2730,
        2737
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3772": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3773": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "32"
    },
    "3774": {
      "fn": "ERC20.symbol",
      "offset": [
        2730,
        2737
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3775": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3776": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3777": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "3778": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x8DA"
    },
    "3781": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "3782": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3783": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "3785": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "LT",
      "path": "32"
    },
    "3786": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x8AF"
    },
    "3789": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "3790": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x100"
    },
    "3793": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3794": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3795": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "3796": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DIV",
      "path": "32"
    },
    "3797": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MUL",
      "path": "32"
    },
    "3798": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3799": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3800": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3801": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3803": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "32"
    },
    "3804": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3805": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x8DA"
    },
    "3808": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3809": {
      "offset": [
        1717,
        1766
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3810": {
      "offset": [
        1762,
        1766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3812": {
      "offset": [
        1717,
        1766
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3813": {
      "fn": "ERC20.symbol",
      "jump": "o",
      "offset": [
        1717,
        1766
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3814": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3815": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6643,
        6647
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3817": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6659,
        6788
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 35,
      "value": "0x8F8"
    },
    "3820": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6668,
        6680
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xEF3"
    },
    "3823": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6668,
        6678
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1348"
    },
    "3826": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6668,
        6680
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3827": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6668,
        6680
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3828": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6689
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3829": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x9A4"
    },
    "3832": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6730,
        6745
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3833": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3835": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3836": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3837": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "3839": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "ADD",
      "path": "32"
    },
    "3840": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3842": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3843": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3844": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x25"
    },
    "3846": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3847": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3848": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3850": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "ADD",
      "path": "32"
    },
    "3851": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x21BE"
    },
    "3854": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x25"
    },
    "3856": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3857": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "3858": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6702
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x2"
    },
    "3860": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3862": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6703,
        6715
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xF1D"
    },
    "3865": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6703,
        6713
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1348"
    },
    "3868": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6703,
        6715
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3869": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6703,
        6715
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3876": {
      "op": "SHL"
    },
    "3877": {
      "op": "SUB"
    },
    "3878": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3879": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "AND",
      "path": "32"
    },
    "3881": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3882": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3883": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3885": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3886": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3887": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "ADD",
      "path": "32"
    },
    "3888": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "3889": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3890": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "3891": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3892": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3894": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3895": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3896": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "ADD",
      "path": "32"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3899": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3900": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3901": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3902": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3903": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "DUP14",
      "path": "32"
    },
    "3904": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "AND",
      "path": "32"
    },
    "3905": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3906": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3907": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "3908": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3909": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3910": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3911": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "3912": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3913": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3914": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6729
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1595"
    },
    "3917": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6691,
        6787
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3918": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3919": {
      "fn": "ERC20.transfer",
      "offset": [
        4079,
        4083
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3921": {
      "fn": "ERC20.transfer",
      "offset": [
        4095,
        4137
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 36,
      "value": "0x8F8"
    },
    "3924": {
      "fn": "ERC20.transfer",
      "offset": [
        4105,
        4117
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xF5B"
    },
    "3927": {
      "fn": "ERC20.transfer",
      "offset": [
        4105,
        4115
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1348"
    },
    "3930": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4105,
        4117
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3931": {
      "fn": "ERC20.transfer",
      "offset": [
        4105,
        4117
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3932": {
      "fn": "ERC20.transfer",
      "offset": [
        4119,
        4128
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3933": {
      "fn": "ERC20.transfer",
      "offset": [
        4130,
        4136
      ],
      "op": "DUP5",
      "path": "32"
    },
    "3934": {
      "fn": "ERC20.transfer",
      "offset": [
        4095,
        4104
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1438"
    },
    "3937": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4095,
        4137
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3938": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3945": {
      "op": "SHL"
    },
    "3946": {
      "op": "SUB"
    },
    "3947": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3948": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "AND",
      "path": "37"
    },
    "3949": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5236,
        5243
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3951": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3952": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3953": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3954": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5295
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x9"
    },
    "3956": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3958": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3959": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3961": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3962": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3963": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3964": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "3969": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5281,
        5304
      ],
      "op": "AND",
      "path": "37"
    },
    "3970": {
      "branch": 108,
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5321,
        5337
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 37
    },
    "3971": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5321,
        5388
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF8D"
    },
    "3974": {
      "branch": 108,
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5321,
        5388
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3975": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5387,
        5388
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3977": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5321,
        5388
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xE61"
    },
    "3980": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5321,
        5388
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3981": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5321,
        5388
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3988": {
      "op": "SHL"
    },
    "3989": {
      "op": "SUB"
    },
    "3990": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3991": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "AND",
      "path": "37"
    },
    "3992": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3994": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3995": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3996": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3997": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5351
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "3999": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4001": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4002": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4003": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4004": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4006": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4007": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4008": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5360
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4009": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5378
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4016": {
      "op": "NOT"
    },
    "4017": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5361,
        5377
      ],
      "op": "DUP7",
      "path": "37"
    },
    "4018": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5361,
        5377
      ],
      "op": "ADD",
      "path": "37"
    },
    "4019": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5378
      ],
      "op": "AND",
      "path": "37"
    },
    "4020": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5378
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4021": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5378
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4022": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5378
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4023": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5378
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4024": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5378
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4025": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5378
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4026": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5378
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4027": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5376,
        5377
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "4029": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5384
      ],
      "op": "ADD",
      "path": "37"
    },
    "4030": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5340,
        5384
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4031": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5314,
        5388
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "4032": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        5147,
        5395
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4033": {
      "op": "POP"
    },
    "4034": {
      "op": "POP"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "fn": "SushiToken.getCurrentVotes",
      "jump": "o",
      "offset": [
        5147,
        5395
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4037": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4038": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3996,
        4019
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4040": {
      "offset": [
        2084,
        2164
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
    },
    "4073": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4122,
        4128
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xFF0"
    },
    "4076": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4122,
        4126
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x84E"
    },
    "4079": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        4122,
        4128
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4080": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4122,
        4128
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4081": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4106,
        4130
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4082": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4106,
        4130
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4083": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4106,
        4130
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4084": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4106,
        4130
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4086": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4106,
        4130
      ],
      "op": "ADD",
      "path": "37"
    },
    "4087": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4106,
        4130
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4088": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4148,
        4160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xFFF"
    },
    "4091": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4148,
        4158
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1AC7"
    },
    "4094": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        4148,
        4160
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4095": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4148,
        4160
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4096": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4098": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4099": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4100": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4102": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4103": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4104": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "ADD",
      "path": "37"
    },
    "4105": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "4106": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4107": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "4108": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4109": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4110": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4111": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "ADD",
      "path": "37"
    },
    "4112": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "4113": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4114": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "4115": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4116": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "4118": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4119": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "ADD",
      "path": "37"
    },
    "4120": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4121": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4122": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4123": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4124": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4186,
        4190
      ],
      "op": "ADDRESS",
      "path": "37"
    },
    "4125": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "4127": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4128": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4129": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "ADD",
      "path": "37"
    },
    "4130": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4131": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4132": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4133": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4134": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4135": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4136": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4137": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4138": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SUB",
      "path": "37"
    },
    "4139": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4140": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4141": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "ADD",
      "path": "37"
    },
    "4142": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4143": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4144": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA0"
    },
    "4146": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4147": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "ADD",
      "path": "37"
    },
    "4148": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4149": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4045,
        4205
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4150": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4022,
        4215
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4151": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4022,
        4215
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4152": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4022,
        4215
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4153": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4022,
        4215
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4154": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4022,
        4215
      ],
      "op": "ADD",
      "path": "37"
    },
    "4155": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4022,
        4215
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4156": {
      "offset": [
        2301,
        2372
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
    },
    "4189": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xC0"
    },
    "4191": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4192": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "ADD",
      "path": "37"
    },
    "4193": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4200": {
      "op": "SHL"
    },
    "4201": {
      "op": "SUB"
    },
    "4202": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP12",
      "path": "37"
    },
    "4203": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "AND",
      "path": "37"
    },
    "4204": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE0"
    },
    "4206": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4207": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "ADD",
      "path": "37"
    },
    "4208": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4209": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "4212": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4213": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "ADD",
      "path": "37"
    },
    "4214": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP11",
      "path": "37"
    },
    "4215": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4216": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4217": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x120"
    },
    "4220": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4221": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4222": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "ADD",
      "path": "37"
    },
    "4223": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP11",
      "path": "37"
    },
    "4224": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4225": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4226": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4227": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4228": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4229": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP6",
      "path": "37"
    },
    "4230": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "SUB",
      "path": "37"
    },
    "4231": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4232": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4233": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "ADD",
      "path": "37"
    },
    "4234": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4235": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4236": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x140"
    },
    "4239": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4240": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "ADD",
      "path": "37"
    },
    "4241": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4242": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4270,
        4405
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4243": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4247,
        4415
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4244": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4247,
        4415
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4245": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4247,
        4415
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4246": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4247,
        4415
      ],
      "op": "DUP6",
      "path": "37"
    },
    "4247": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4247,
        4415
      ],
      "op": "ADD",
      "path": "37"
    },
    "4248": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4247,
        4415
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4249": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4254": {
      "op": "SHL"
    },
    "4255": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x160"
    },
    "4258": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP6",
      "path": "37"
    },
    "4259": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "ADD",
      "path": "37"
    },
    "4260": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4261": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x162"
    },
    "4264": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4265": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "ADD",
      "path": "37"
    },
    "4266": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4267": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4268": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4269": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x182"
    },
    "4272": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4273": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP6",
      "path": "37"
    },
    "4274": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "ADD",
      "path": "37"
    },
    "4275": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4276": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4277": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4278": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4279": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4280": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4281": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP7",
      "path": "37"
    },
    "4282": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "SUB",
      "path": "37"
    },
    "4283": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4284": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4285": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "ADD",
      "path": "37"
    },
    "4286": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4287": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4288": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1A2"
    },
    "4291": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP6",
      "path": "37"
    },
    "4292": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "ADD",
      "path": "37"
    },
    "4293": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4294": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "DUP6",
      "path": "37"
    },
    "4295": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4466,
        4585
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4296": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4443,
        4595
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4297": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4443,
        4595
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4298": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4443,
        4595
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4299": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4443,
        4595
      ],
      "op": "DUP8",
      "path": "37"
    },
    "4300": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4443,
        4595
      ],
      "op": "ADD",
      "path": "37"
    },
    "4301": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4443,
        4595
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4302": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4443,
        4595
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4303": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4443,
        4595
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4304": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4443,
        4595
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4307": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4308": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4309": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4310": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4311": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C2"
    },
    "4314": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP7",
      "path": "37"
    },
    "4315": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "ADD",
      "path": "37"
    },
    "4316": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4317": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP7",
      "path": "37"
    },
    "4318": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4319": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4320": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4321": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4322": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "4324": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP12",
      "path": "37"
    },
    "4325": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "AND",
      "path": "37"
    },
    "4326": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1E2"
    },
    "4329": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP8",
      "path": "37"
    },
    "4330": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "ADD",
      "path": "37"
    },
    "4331": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4332": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x202"
    },
    "4335": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP7",
      "path": "37"
    },
    "4336": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "ADD",
      "path": "37"
    },
    "4337": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP11",
      "path": "37"
    },
    "4338": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4339": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4340": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x222"
    },
    "4343": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP7",
      "path": "37"
    },
    "4344": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "ADD",
      "path": "37"
    },
    "4345": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP10",
      "path": "37"
    },
    "4346": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4347": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4348": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "4349": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4350": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4022,
        4215
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4351": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4022,
        4215
      ],
      "op": "SWAP7",
      "path": "37"
    },
    "4352": {
      "op": "POP"
    },
    "4353": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4247,
        4415
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4354": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4247,
        4415
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "4355": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4443,
        4595
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4356": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4443,
        4595
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "4357": {
      "op": "SWAP1"
    },
    "4358": {
      "op": "SWAP3"
    },
    "4359": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "4361": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4362": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x242"
    },
    "4365": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4366": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4367": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "ADD",
      "path": "37"
    },
    "4368": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4371": {
      "op": "NOT"
    },
    "4372": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4373": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "ADD",
      "path": "37"
    },
    "4374": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4375": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4376": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4377": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4378": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SUB",
      "path": "37"
    },
    "4379": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4380": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4381": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "ADD",
      "path": "37"
    },
    "4382": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4383": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP6",
      "path": "37"
    },
    "4384": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "GAS",
      "path": "37"
    },
    "4385": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "STATICCALL",
      "path": "37"
    },
    "4386": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "4387": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4388": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "4389": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1132"
    },
    "4392": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4393": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "4394": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4396": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4397": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "RETURNDATACOPY",
      "path": "37"
    },
    "4398": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "RETURNDATASIZE",
      "path": "37"
    },
    "4399": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4401": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "REVERT",
      "path": "37"
    },
    "4402": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4403": {
      "op": "POP"
    },
    "4404": {
      "op": "POP"
    },
    "4405": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4407": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4410": {
      "op": "NOT"
    },
    "4411": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "ADD",
      "path": "37"
    },
    "4412": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4413": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4626,
        4652
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4414": {
      "op": "POP"
    },
    "4415": {
      "op": "POP"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4422": {
      "op": "SHL"
    },
    "4423": {
      "op": "SUB"
    },
    "4424": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4670,
        4693
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 38
    },
    "4425": {
      "branch": 109,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4670,
        4693
      ],
      "op": "AND",
      "path": "37"
    },
    "4426": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1184"
    },
    "4429": {
      "branch": 109,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4430": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4432": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4433": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4439": {
      "op": "SHL"
    },
    "4440": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4441": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4442": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4444": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "ADD",
      "path": "37"
    },
    "4445": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4446": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4447": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4449": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "ADD",
      "path": "37"
    },
    "4450": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4451": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4452": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "SUB",
      "path": "37"
    },
    "4453": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4454": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4455": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x27"
    },
    "4457": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4458": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4459": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4461": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "ADD",
      "path": "37"
    },
    "4462": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4463": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x214E"
    },
    "4466": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x27"
    },
    "4468": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4469": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "CODECOPY",
      "path": "37"
    },
    "4470": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4472": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "ADD",
      "path": "37"
    },
    "4473": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4474": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "POP",
      "path": "37"
    },
    "4475": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "POP",
      "path": "37"
    },
    "4476": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4478": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4479": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4480": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4481": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "SUB",
      "path": "37"
    },
    "4482": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4483": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "REVERT",
      "path": "37"
    },
    "4484": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4662,
        4737
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4491": {
      "op": "SHL"
    },
    "4492": {
      "op": "SUB"
    },
    "4493": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4781
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 39
    },
    "4494": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4781
      ],
      "op": "AND",
      "path": "37"
    },
    "4495": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4781
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4497": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4781
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4498": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4781
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4499": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4781
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4500": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4770
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "4502": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4781
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4504": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4781
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4505": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4781
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4507": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4781
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4508": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4781
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4509": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4783
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4510": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4783
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4511": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4783
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "4513": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4783
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4514": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4783
      ],
      "op": "ADD",
      "path": "37"
    },
    "4515": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4783
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4516": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4783
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4517": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4764,
        4783
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "4518": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4755,
        4783
      ],
      "op": "DUP10",
      "path": "37"
    },
    "4519": {
      "branch": 110,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4755,
        4783
      ],
      "op": "EQ",
      "path": "37"
    },
    "4520": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x11E2"
    },
    "4523": {
      "branch": 110,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4524": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4526": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4527": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4533": {
      "op": "SHL"
    },
    "4534": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4535": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4536": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4538": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "ADD",
      "path": "37"
    },
    "4539": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4540": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4541": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4543": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "ADD",
      "path": "37"
    },
    "4544": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4545": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4546": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "SUB",
      "path": "37"
    },
    "4547": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4548": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4549": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x23"
    },
    "4551": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4552": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4553": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4555": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "ADD",
      "path": "37"
    },
    "4556": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4557": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x212B"
    },
    "4560": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x23"
    },
    "4562": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4563": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "CODECOPY",
      "path": "37"
    },
    "4564": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4566": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "ADD",
      "path": "37"
    },
    "4567": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4568": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "POP",
      "path": "37"
    },
    "4569": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "POP",
      "path": "37"
    },
    "4570": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4572": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4573": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4574": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4575": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "SUB",
      "path": "37"
    },
    "4576": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4577": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "REVERT",
      "path": "37"
    },
    "4578": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4747,
        4823
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4579": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4848,
        4854
      ],
      "op": "DUP8",
      "path": "37",
      "statement": 40
    },
    "4580": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4841,
        4844
      ],
      "op": "TIMESTAMP",
      "path": "37"
    },
    "4581": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4841,
        4854
      ],
      "op": "GT",
      "path": "37"
    },
    "4582": {
      "branch": 111,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4841,
        4854
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "4583": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1221"
    },
    "4586": {
      "branch": 111,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4587": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4589": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4590": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4596": {
      "op": "SHL"
    },
    "4597": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4598": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4599": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4601": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "ADD",
      "path": "37"
    },
    "4602": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4603": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4604": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4606": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "ADD",
      "path": "37"
    },
    "4607": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4608": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4609": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "SUB",
      "path": "37"
    },
    "4610": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4611": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4612": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x27"
    },
    "4614": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4615": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4616": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4618": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "ADD",
      "path": "37"
    },
    "4619": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4620": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1FDD"
    },
    "4623": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x27"
    },
    "4625": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4626": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "CODECOPY",
      "path": "37"
    },
    "4627": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4629": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "ADD",
      "path": "37"
    },
    "4630": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4631": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "POP",
      "path": "37"
    },
    "4632": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "POP",
      "path": "37"
    },
    "4633": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4635": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4636": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4637": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4638": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "SUB",
      "path": "37"
    },
    "4639": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4640": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "REVERT",
      "path": "37"
    },
    "4641": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4833,
        4898
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4642": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4915,
        4946
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 41,
      "value": "0x122B"
    },
    "4645": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4925,
        4934
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4646": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4936,
        4945
      ],
      "op": "DUP12",
      "path": "37"
    },
    "4647": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4915,
        4924
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x198C"
    },
    "4650": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        4915,
        4946
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4651": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4915,
        4946
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4652": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4908,
        4946
      ],
      "op": "POP",
      "path": "37"
    },
    "4653": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4908,
        4946
      ],
      "op": "POP",
      "path": "37"
    },
    "4654": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4908,
        4946
      ],
      "op": "POP",
      "path": "37"
    },
    "4655": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4908,
        4946
      ],
      "op": "POP",
      "path": "37"
    },
    "4656": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4657": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "POP",
      "path": "37"
    },
    "4658": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "POP",
      "path": "37"
    },
    "4659": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "POP",
      "path": "37"
    },
    "4660": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "POP",
      "path": "37"
    },
    "4661": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "POP",
      "path": "37"
    },
    "4662": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3813,
        4953
      ],
      "op": "POP",
      "path": "37"
    },
    "4663": {
      "fn": "SushiToken.delegateBySig",
      "jump": "o",
      "offset": [
        3813,
        4953
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4664": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3245,
        3370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4665": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3308,
        3315
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4667": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 42
    },
    "4668": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4669": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4670": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4672": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4673": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4674": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4675": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4677": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4678": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3346
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4679": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "4682": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4683": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3334,
        3361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ACB"
    },
    "4686": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3334,
        3363
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4687": {
      "offset": [
        331,
        393
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4688": {
      "offset": [
        369,
        393
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
    },
    "4721": {
      "offset": [
        331,
        393
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4722": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "o",
      "offset": [
        331,
        393
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4723": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5091,
        5317
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4724": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5189
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 43,
      "value": "0x0"
    },
    "4726": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4727": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4728": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4729": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4731": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4732": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4733": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4734": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4736": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4737": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5195
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4738": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5205
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4740": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5205
      ],
      "op": "ADD",
      "path": "1"
    },
    "4741": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5183,
        5205
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4742": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5175,
        5220
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1291"
    },
    "4745": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5175,
        5220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4746": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5207,
        5219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9E6"
    },
    "4749": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5207,
        5217
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1348"
    },
    "4752": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5207,
        5219
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4753": {
      "branch": 123,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5175,
        5220
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4754": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA94"
    },
    "4757": {
      "branch": 123,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4758": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4760": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4761": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4767": {
      "op": "SHL"
    },
    "4768": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4769": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4770": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4772": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "ADD",
      "path": "1"
    },
    "4773": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4774": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4775": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4777": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "ADD",
      "path": "1"
    },
    "4778": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4779": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4780": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "SUB",
      "path": "1"
    },
    "4781": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4782": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4783": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x30"
    },
    "4785": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4786": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4787": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4789": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "ADD",
      "path": "1"
    },
    "4790": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4791": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2076"
    },
    "4794": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x30"
    },
    "4796": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4797": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "4798": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4800": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "ADD",
      "path": "1"
    },
    "4801": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4802": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "POP",
      "path": "1"
    },
    "4803": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "POP",
      "path": "1"
    },
    "4804": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4806": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4807": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4808": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4809": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "SUB",
      "path": "1"
    },
    "4810": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4811": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5167,
        5273
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4812": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4819": {
      "op": "SHL"
    },
    "4820": {
      "op": "SUB"
    },
    "4821": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "SWAP2",
      "path": "32",
      "statement": 44
    },
    "4822": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP3",
      "path": "32"
    },
    "4823": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "AND",
      "path": "32"
    },
    "4824": {
      "fn": "ERC20.allowance",
      "offset": [
        4312,
        4319
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "4826": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4827": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4828": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4829": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4349
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x2"
    },
    "4831": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "4833": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4834": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4835": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4836": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "4838": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4839": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP4",
      "path": "32"
    },
    "4840": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "4841": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "4842": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4843": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "4844": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "AND",
      "path": "32"
    },
    "4845": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "DUP3",
      "path": "32"
    },
    "4846": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4847": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4848": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4849": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4850": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4851": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "4852": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "4853": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "4854": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMP",
      "path": "32"
    },
    "4855": {
      "offset": [
        2255,
        2372
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4856": {
      "offset": [
        2301,
        2372
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
    },
    "4889": {
      "offset": [
        2255,
        2372
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4890": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        2255,
        2372
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4891": {
      "offset": [
        1787,
        1857
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4892": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "4894": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4896": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4897": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4898": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4899": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4901": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4902": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4903": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4904": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4906": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4907": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4908": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4909": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4910": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4911": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4912": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4913": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4914": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4915": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4916": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4917": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4918": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4919": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "4921": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4922": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4923": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "ADD",
      "path": "37"
    },
    "4924": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4925": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "4930": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4931": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4932": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "AND",
      "path": "37"
    },
    "4933": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4934": {
      "fn": "ERC20.allowance",
      "offset": [
        1787,
        1857
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4935": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        1787,
        1857
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4936": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4937": {
      "fn": "Context._msgSender",
      "offset": [
        677,
        687
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 45
    },
    "4938": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4939": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        590,
        694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4940": {
      "fn": "ERC20._approve",
      "offset": [
        9612,
        9952
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4947": {
      "op": "SHL"
    },
    "4948": {
      "op": "SUB"
    },
    "4949": {
      "fn": "ERC20._approve",
      "offset": [
        9713,
        9732
      ],
      "op": "DUP4",
      "path": "32",
      "statement": 46
    },
    "4950": {
      "branch": 126,
      "fn": "ERC20._approve",
      "offset": [
        9713,
        9732
      ],
      "op": "AND",
      "path": "32"
    },
    "4951": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1391"
    },
    "4954": {
      "branch": 126,
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "4955": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "4957": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "4958": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4964": {
      "op": "SHL"
    },
    "4965": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4966": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4967": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "4969": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "ADD",
      "path": "32"
    },
    "4970": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4971": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4972": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "4974": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "ADD",
      "path": "32"
    },
    "4975": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP3",
      "path": "32"
    },
    "4976": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4977": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SUB",
      "path": "32"
    },
    "4978": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP3",
      "path": "32"
    },
    "4979": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4980": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x24"
    },
    "4982": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP2",
      "path": "32"
    },
    "4983": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "4984": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "4986": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "ADD",
      "path": "32"
    },
    "4987": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP1",
      "path": "32"
    },
    "4988": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x219A"
    },
    "4991": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x24"
    },
    "4993": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4994": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "4995": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "4997": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "ADD",
      "path": "32"
    },
    "4998": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "4999": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "POP",
      "path": "32"
    },
    "5000": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "POP",
      "path": "32"
    },
    "5001": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5003": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5004": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5005": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5006": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SUB",
      "path": "32"
    },
    "5007": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5008": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "REVERT",
      "path": "32"
    },
    "5009": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5016": {
      "op": "SHL"
    },
    "5017": {
      "op": "SUB"
    },
    "5018": {
      "fn": "ERC20._approve",
      "offset": [
        9791,
        9812
      ],
      "op": "DUP3",
      "path": "32",
      "statement": 47
    },
    "5019": {
      "branch": 127,
      "fn": "ERC20._approve",
      "offset": [
        9791,
        9812
      ],
      "op": "AND",
      "path": "32"
    },
    "5020": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x13D6"
    },
    "5023": {
      "branch": 127,
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5024": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5026": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5033": {
      "op": "SHL"
    },
    "5034": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5035": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5036": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "5038": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "ADD",
      "path": "32"
    },
    "5039": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5040": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5041": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5043": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "ADD",
      "path": "32"
    },
    "5044": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5045": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5046": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SUB",
      "path": "32"
    },
    "5047": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5048": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5049": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x22"
    },
    "5051": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5052": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5053": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5055": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "ADD",
      "path": "32"
    },
    "5056": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5057": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2004"
    },
    "5060": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x22"
    },
    "5062": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5063": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "5064": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5066": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "ADD",
      "path": "32"
    },
    "5067": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5068": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "POP",
      "path": "32"
    },
    "5069": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "POP",
      "path": "32"
    },
    "5070": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5072": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5073": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5074": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5075": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SUB",
      "path": "32"
    },
    "5076": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5077": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "REVERT",
      "path": "32"
    },
    "5078": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5085": {
      "op": "SHL"
    },
    "5086": {
      "op": "SUB"
    },
    "5087": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 48
    },
    "5088": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5089": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "AND",
      "path": "32"
    },
    "5090": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5092": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5093": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5094": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5095": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9873
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x2"
    },
    "5097": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5099": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5100": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5101": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5102": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5104": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5105": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5106": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5107": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "5108": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP8",
      "path": "32"
    },
    "5109": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "AND",
      "path": "32"
    },
    "5110": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5111": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5112": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5113": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "5114": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5115": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5116": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5117": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5118": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5119": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5120": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9898
      ],
      "op": "DUP6",
      "path": "32"
    },
    "5121": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9898
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5122": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9898
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "5123": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "DUP2",
      "path": "32",
      "statement": 49
    },
    "5124": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5125": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "DUP6",
      "path": "32"
    },
    "5126": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5127": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5128": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5129": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5130": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "5163": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "5164": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5165": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5166": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SUB",
      "path": "32"
    },
    "5167": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5168": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5169": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "ADD",
      "path": "32"
    },
    "5170": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5171": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "LOG3",
      "path": "32"
    },
    "5172": {
      "fn": "ERC20._approve",
      "offset": [
        9612,
        9952
      ],
      "op": "POP",
      "path": "32"
    },
    "5173": {
      "fn": "ERC20._approve",
      "offset": [
        9612,
        9952
      ],
      "op": "POP",
      "path": "32"
    },
    "5174": {
      "fn": "ERC20._approve",
      "offset": [
        9612,
        9952
      ],
      "op": "POP",
      "path": "32"
    },
    "5175": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9612,
        9952
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5176": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7820
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5183": {
      "op": "SHL"
    },
    "5184": {
      "op": "SUB"
    },
    "5185": {
      "fn": "ERC20._transfer",
      "offset": [
        7395,
        7415
      ],
      "op": "DUP4",
      "path": "32",
      "statement": 50
    },
    "5186": {
      "branch": 128,
      "fn": "ERC20._transfer",
      "offset": [
        7395,
        7415
      ],
      "op": "AND",
      "path": "32"
    },
    "5187": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x147D"
    },
    "5190": {
      "branch": 128,
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5191": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5193": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5194": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5200": {
      "op": "SHL"
    },
    "5201": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5202": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5203": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "5205": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "ADD",
      "path": "32"
    },
    "5206": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5207": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5208": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5210": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "ADD",
      "path": "32"
    },
    "5211": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5212": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5213": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SUB",
      "path": "32"
    },
    "5214": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5215": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5216": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x25"
    },
    "5218": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5219": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5220": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5222": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "ADD",
      "path": "32"
    },
    "5223": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5224": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2175"
    },
    "5227": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x25"
    },
    "5229": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5230": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "5231": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5233": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "ADD",
      "path": "32"
    },
    "5234": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5235": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "POP",
      "path": "32"
    },
    "5236": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "POP",
      "path": "32"
    },
    "5237": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5239": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5240": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5241": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5242": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SUB",
      "path": "32"
    },
    "5243": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5244": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "REVERT",
      "path": "32"
    },
    "5245": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5252": {
      "op": "SHL"
    },
    "5253": {
      "op": "SUB"
    },
    "5254": {
      "fn": "ERC20._transfer",
      "offset": [
        7475,
        7498
      ],
      "op": "DUP3",
      "path": "32",
      "statement": 51
    },
    "5255": {
      "branch": 129,
      "fn": "ERC20._transfer",
      "offset": [
        7475,
        7498
      ],
      "op": "AND",
      "path": "32"
    },
    "5256": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x14C2"
    },
    "5259": {
      "branch": 129,
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5260": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5262": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5263": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5269": {
      "op": "SHL"
    },
    "5270": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5271": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5272": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "5274": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "ADD",
      "path": "32"
    },
    "5275": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5276": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5277": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5279": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "ADD",
      "path": "32"
    },
    "5280": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5281": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5282": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SUB",
      "path": "32"
    },
    "5283": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5284": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5285": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x23"
    },
    "5287": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5288": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5289": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5291": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "ADD",
      "path": "32"
    },
    "5292": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5293": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1F62"
    },
    "5296": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x23"
    },
    "5298": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5299": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "5300": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5302": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "ADD",
      "path": "32"
    },
    "5303": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5304": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "POP",
      "path": "32"
    },
    "5305": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "POP",
      "path": "32"
    },
    "5306": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5308": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5309": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5310": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5311": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SUB",
      "path": "32"
    },
    "5312": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5313": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "REVERT",
      "path": "32"
    },
    "5314": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5315": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7596
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 52,
      "value": "0x14CD"
    },
    "5318": {
      "fn": "ERC20._transfer",
      "offset": [
        7570,
        7576
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5319": {
      "fn": "ERC20._transfer",
      "offset": [
        7578,
        7587
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5320": {
      "fn": "ERC20._transfer",
      "offset": [
        7589,
        7595
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5321": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7569
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1987"
    },
    "5324": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7549,
        7596
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5325": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7596
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5326": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 53,
      "value": "0x150A"
    },
    "5329": {
      "fn": "ERC20._transfer",
      "offset": [
        7649,
        7655
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5330": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5332": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5333": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5334": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "5336": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "ADD",
      "path": "32"
    },
    "5337": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5339": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5340": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5341": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x26"
    },
    "5343": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5344": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5345": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5347": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "ADD",
      "path": "32"
    },
    "5348": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2026"
    },
    "5351": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x26"
    },
    "5353": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5354": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5361": {
      "op": "SHL"
    },
    "5362": {
      "op": "SUB"
    },
    "5363": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "DUP7",
      "path": "32"
    },
    "5364": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "AND",
      "path": "32"
    },
    "5365": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5367": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5368": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5369": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5370": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7636
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "5372": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5374": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5375": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5377": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5378": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5379": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "5380": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5381": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5382": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7648
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1595"
    },
    "5385": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7627,
        7698
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5386": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5393": {
      "op": "SHL"
    },
    "5394": {
      "op": "SUB"
    },
    "5395": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5396": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP6",
      "path": "32"
    },
    "5397": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "AND",
      "path": "32"
    },
    "5398": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5400": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5401": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5402": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5403": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7616
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "5405": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5407": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5408": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5410": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5411": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5412": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5413": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7698
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "5414": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7698
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5415": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7698
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "5416": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7698
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "5417": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "SWAP1",
      "path": "32",
      "statement": 54
    },
    "5418": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5419": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "AND",
      "path": "32"
    },
    "5420": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5421": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5422": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5423": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "5424": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1539"
    },
    "5427": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5428": {
      "fn": "ERC20._transfer",
      "offset": [
        7756,
        7762
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5429": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7755
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x16FE"
    },
    "5432": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5433": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5440": {
      "op": "SHL"
    },
    "5441": {
      "op": "SUB"
    },
    "5442": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5443": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP5",
      "path": "32"
    },
    "5444": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "AND",
      "path": "32"
    },
    "5445": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5447": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5448": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5449": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5450": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7717
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "5452": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5454": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5455": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5456": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5457": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5459": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5460": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5461": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5462": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "5463": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7763
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "5464": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7763
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5465": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7763
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "5466": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7763
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "5467": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 55
    },
    "5468": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5469": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP6",
      "path": "32"
    },
    "5470": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5471": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5472": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5473": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5474": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5475": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "5476": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "5477": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP8",
      "path": "32"
    },
    "5478": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "AND",
      "path": "32"
    },
    "5479": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "5480": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5513": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "5514": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "5515": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5516": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5517": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SUB",
      "path": "32"
    },
    "5518": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "ADD",
      "path": "32"
    },
    "5519": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5520": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "LOG3",
      "path": "32"
    },
    "5521": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7820
      ],
      "op": "POP",
      "path": "32"
    },
    "5522": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7820
      ],
      "op": "POP",
      "path": "32"
    },
    "5523": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7820
      ],
      "op": "POP",
      "path": "32"
    },
    "5524": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7290,
        7820
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5525": {
      "fn": "SafeMath.sub",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5526": {
      "fn": "SafeMath.sub",
      "offset": [
        1832,
        1839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5528": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1879
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 56
    },
    "5529": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5530": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5531": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "GT",
      "path": "3"
    },
    "5532": {
      "branch": 135,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5533": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1624"
    },
    "5536": {
      "branch": 135,
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5537": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5539": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5540": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5546": {
      "op": "SHL"
    },
    "5547": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5548": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5549": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5551": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5552": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5553": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5554": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5556": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5557": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5558": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5559": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5560": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5561": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5562": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5563": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5564": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5565": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5566": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5567": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5568": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5570": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5571": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5572": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5573": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5574": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5575": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5576": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5578": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5579": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5580": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5581": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5582": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5583": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5585": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5586": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5587": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5588": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "LT",
      "path": "3"
    },
    "5589": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5590": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15E9"
    },
    "5593": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5594": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5595": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5596": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5597": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5598": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5599": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5600": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5601": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5602": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5604": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5605": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15D1"
    },
    "5608": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5609": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5610": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5611": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5612": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5613": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5614": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5615": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5616": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5617": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5618": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5619": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5620": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5622": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "3"
    },
    "5623": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5624": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5625": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1616"
    },
    "5628": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5629": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5630": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5631": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5632": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5633": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5634": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5636": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5637": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5639": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5640": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5643": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "EXP",
      "path": "3"
    },
    "5644": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5645": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "NOT",
      "path": "3"
    },
    "5646": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "3"
    },
    "5647": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5648": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5649": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5651": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5652": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5653": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5654": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5655": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5656": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5657": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5658": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5659": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5660": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5662": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5663": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5664": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5665": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5666": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5667": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5668": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5669": {
      "op": "POP"
    },
    "5670": {
      "op": "POP"
    },
    "5671": {
      "op": "POP"
    },
    "5672": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5673": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SUB",
      "path": "3"
    },
    "5674": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5675": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5676": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7015,
        7199
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5677": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7094
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5679": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5680": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5681": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5682": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5684": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5685": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5686": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5687": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5689": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5690": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7100
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5691": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7121
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1644"
    },
    "5694": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7121
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5695": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7113,
        7120
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5696": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7112
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AD6"
    },
    "5699": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7088,
        7121
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5700": {
      "branch": 124,
      "fn": "AccessControl._grantRole",
      "offset": [
        7088,
        7121
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5701": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7084,
        7193
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5702": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7084,
        7193
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA30"
    },
    "5705": {
      "branch": 124,
      "fn": "AccessControl._grantRole",
      "offset": [
        7084,
        7193
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5706": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7169,
        7181
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 57,
      "value": "0x1651"
    },
    "5709": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7169,
        7179
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1348"
    },
    "5712": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7169,
        7181
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5713": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7169,
        7181
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5720": {
      "op": "SHL"
    },
    "5721": {
      "op": "SUB"
    },
    "5722": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "AND",
      "path": "1"
    },
    "5723": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7160,
        7167
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5730": {
      "op": "SHL"
    },
    "5731": {
      "op": "SUB"
    },
    "5732": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "AND",
      "path": "1"
    },
    "5733": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7154,
        7158
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5734": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "5767": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5769": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5770": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5772": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5773": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5774": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5775": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "SUB",
      "path": "1"
    },
    "5776": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5777": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7142,
        7182
      ],
      "op": "LOG4",
      "path": "1"
    },
    "5778": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7015,
        7199
      ],
      "op": "POP",
      "path": "1"
    },
    "5779": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7015,
        7199
      ],
      "op": "POP",
      "path": "1"
    },
    "5780": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        7015,
        7199
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5781": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7205,
        7393
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5782": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7285
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5784": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5785": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5786": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5787": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5789": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5790": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5791": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5792": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5794": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5795": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7291
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5796": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16AD"
    },
    "5799": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5800": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7307,
        7314
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5801": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7306
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AEB"
    },
    "5804": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7279,
        7315
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5805": {
      "branch": 125,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7279,
        7315
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5806": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7275,
        7387
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5807": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7275,
        7387
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA30"
    },
    "5810": {
      "branch": 125,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7275,
        7387
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5811": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7363,
        7375
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 58,
      "value": "0x16BA"
    },
    "5814": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7363,
        7373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1348"
    },
    "5817": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7363,
        7375
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5818": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7363,
        7375
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5825": {
      "op": "SHL"
    },
    "5826": {
      "op": "SUB"
    },
    "5827": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "AND",
      "path": "1"
    },
    "5828": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7354,
        7361
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5835": {
      "op": "SHL"
    },
    "5836": {
      "op": "SUB"
    },
    "5837": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "AND",
      "path": "1"
    },
    "5838": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7348,
        7352
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5839": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "5872": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5874": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5875": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5877": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5878": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5879": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5880": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "SUB",
      "path": "1"
    },
    "5881": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5882": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7336,
        7376
      ],
      "op": "LOG4",
      "path": "1"
    },
    "5883": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7205,
        7393
      ],
      "op": "POP",
      "path": "1"
    },
    "5884": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7205,
        7393
      ],
      "op": "POP",
      "path": "1"
    },
    "5885": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7205,
        7393
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5886": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5887": {
      "fn": "SafeMath.add",
      "offset": [
        932,
        939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5889": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5890": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5891": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "ADD",
      "path": "3"
    },
    "5892": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 59
    },
    "5893": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5894": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "LT",
      "path": "3"
    },
    "5895": {
      "branch": 136,
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5896": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE61"
    },
    "5899": {
      "branch": 136,
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5900": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5902": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5903": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5910": {
      "op": "SHL"
    },
    "5911": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5912": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5913": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5915": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5917": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5918": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5919": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5920": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "5922": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5924": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5925": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5926": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5927": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "5960": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "5962": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5963": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5964": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5965": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5966": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5967": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5968": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5969": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5970": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SUB",
      "path": "3"
    },
    "5971": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5973": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5974": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5975": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5976": {
      "fn": "ERC20._mint",
      "offset": [
        8090,
        8460
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5983": {
      "op": "SHL"
    },
    "5984": {
      "op": "SUB"
    },
    "5985": {
      "fn": "ERC20._mint",
      "offset": [
        8173,
        8194
      ],
      "op": "DUP3",
      "path": "32",
      "statement": 60
    },
    "5986": {
      "branch": 130,
      "fn": "ERC20._mint",
      "offset": [
        8173,
        8194
      ],
      "op": "AND",
      "path": "32"
    },
    "5987": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x17B3"
    },
    "5990": {
      "branch": 130,
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5991": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5993": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5994": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5995": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5999": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6001": {
      "op": "SHL"
    },
    "6002": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6003": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6004": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6006": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "6008": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6009": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "ADD",
      "path": "32"
    },
    "6010": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6011": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "6013": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x24"
    },
    "6015": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6016": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "ADD",
      "path": "32"
    },
    "6017": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6018": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "6051": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x44"
    },
    "6053": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6054": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "ADD",
      "path": "32"
    },
    "6055": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6056": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6057": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6058": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6059": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6060": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6061": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SUB",
      "path": "32"
    },
    "6062": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x64"
    },
    "6064": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "ADD",
      "path": "32"
    },
    "6065": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6066": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "REVERT",
      "path": "32"
    },
    "6067": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6068": {
      "fn": "ERC20._mint",
      "offset": [
        8241,
        8290
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 61,
      "value": "0x17BF"
    },
    "6071": {
      "fn": "ERC20._mint",
      "offset": [
        8270,
        8271
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "6073": {
      "fn": "ERC20._mint",
      "offset": [
        8274,
        8281
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6074": {
      "fn": "ERC20._mint",
      "offset": [
        8283,
        8289
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6075": {
      "fn": "ERC20._mint",
      "offset": [
        8241,
        8261
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1987"
    },
    "6078": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8241,
        8290
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6079": {
      "fn": "ERC20._mint",
      "offset": [
        8241,
        8290
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6080": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8328
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 62,
      "value": "0x3"
    },
    "6082": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8328
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "6083": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8340
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x17CC"
    },
    "6086": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8340
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6087": {
      "fn": "ERC20._mint",
      "offset": [
        8333,
        8339
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6088": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8332
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x16FE"
    },
    "6091": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8316,
        8340
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6092": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8340
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6093": {
      "fn": "ERC20._mint",
      "offset": [
        8301,
        8313
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x3"
    },
    "6095": {
      "fn": "ERC20._mint",
      "offset": [
        8301,
        8340
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "6096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6102": {
      "op": "SHL"
    },
    "6103": {
      "op": "SUB"
    },
    "6104": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "DUP3",
      "path": "32",
      "statement": 63
    },
    "6105": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "AND",
      "path": "32"
    },
    "6106": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "6108": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6109": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6110": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6111": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8380
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "6113": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6115": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6116": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "6118": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6119": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "6120": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "6121": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8401
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x17F2"
    },
    "6124": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8401
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6125": {
      "fn": "ERC20._mint",
      "offset": [
        8394,
        8400
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6126": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8393
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x16FE"
    },
    "6129": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8371,
        8401
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6130": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8401
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6137": {
      "op": "SHL"
    },
    "6138": {
      "op": "SUB"
    },
    "6139": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6140": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "AND",
      "path": "32"
    },
    "6141": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "6143": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6144": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6145": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6146": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8359
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "6148": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6150": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6151": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6152": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6153": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "6155": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6156": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6157": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "6158": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8401
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "6159": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8401
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6160": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8401
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "6161": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8401
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "6162": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "DUP4",
      "path": "32",
      "statement": 64
    },
    "6163": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6164": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "DUP6",
      "path": "32"
    },
    "6165": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6166": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6167": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "6168": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6169": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6170": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "6171": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6172": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6173": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6206": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6207": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6208": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6209": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SUB",
      "path": "32"
    },
    "6210": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6211": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6212": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "ADD",
      "path": "32"
    },
    "6213": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6214": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "LOG3",
      "path": "32"
    },
    "6215": {
      "fn": "ERC20._mint",
      "offset": [
        8090,
        8460
      ],
      "op": "POP",
      "path": "32"
    },
    "6216": {
      "fn": "ERC20._mint",
      "offset": [
        8090,
        8460
      ],
      "op": "POP",
      "path": "32"
    },
    "6217": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8090,
        8460
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6218": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        8405
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6219": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7581,
        7587
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6226": {
      "op": "SHL"
    },
    "6227": {
      "op": "SUB"
    },
    "6228": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7571,
        7587
      ],
      "op": "AND",
      "path": "37"
    },
    "6229": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7571,
        7577
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6236": {
      "op": "SHL"
    },
    "6237": {
      "op": "SUB"
    },
    "6238": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7571,
        7587
      ],
      "op": "AND",
      "path": "37"
    },
    "6239": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7571,
        7587
      ],
      "op": "EQ",
      "path": "37"
    },
    "6240": {
      "branch": 112,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7571,
        7587
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "6241": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7571,
        7601
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6242": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7571,
        7601
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "6243": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7571,
        7601
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x186C"
    },
    "6246": {
      "branch": 112,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7571,
        7601
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "6247": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7571,
        7601
      ],
      "op": "POP",
      "path": "37"
    },
    "6248": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7600,
        7601
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6250": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7591,
        7597
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6251": {
      "branch": 113,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7591,
        7601
      ],
      "op": "GT",
      "path": "37"
    },
    "6252": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7571,
        7601
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6253": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7567,
        8399
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "6254": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7567,
        8399
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1987"
    },
    "6257": {
      "branch": 113,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7567,
        8399
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6264": {
      "op": "SHL"
    },
    "6265": {
      "op": "SUB"
    },
    "6266": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7621,
        7641
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6267": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7621,
        7641
      ],
      "op": "AND",
      "path": "37"
    },
    "6268": {
      "branch": 114,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7621,
        7641
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "6269": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7617,
        7996
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x18FE"
    },
    "6272": {
      "branch": 114,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7617,
        7996
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6279": {
      "op": "SHL"
    },
    "6280": {
      "op": "SUB"
    },
    "6281": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6282": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "AND",
      "path": "37"
    },
    "6283": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7708,
        7724
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6285": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6286": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6287": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6288": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7741
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x9"
    },
    "6290": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "6292": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6293": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6295": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6296": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "6297": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6298": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "6303": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "AND",
      "path": "37"
    },
    "6304": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7727,
        7749
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6305": {
      "branch": 115,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7787,
        7800
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6306": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7787,
        7847
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x18AC"
    },
    "6309": {
      "branch": 115,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7787,
        7847
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "6310": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7846,
        7847
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6312": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7787,
        7847
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x18DE"
    },
    "6315": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7787,
        7847
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6316": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7787,
        7847
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6323": {
      "op": "SHL"
    },
    "6324": {
      "op": "SUB"
    },
    "6325": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "DUP6",
      "path": "37"
    },
    "6326": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "AND",
      "path": "37"
    },
    "6327": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6329": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6330": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6331": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6332": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7814
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "6334": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "6336": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6337": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6338": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6339": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6341": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6342": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6343": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7822
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "6344": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7837
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6351": {
      "op": "NOT"
    },
    "6352": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7823,
        7836
      ],
      "op": "DUP8",
      "path": "37"
    },
    "6353": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7823,
        7836
      ],
      "op": "ADD",
      "path": "37"
    },
    "6354": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7837
      ],
      "op": "AND",
      "path": "37"
    },
    "6355": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7837
      ],
      "op": "DUP5",
      "path": "37"
    },
    "6356": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7837
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6357": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7837
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6358": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7837
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6359": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7837
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6360": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7837
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6361": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7837
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "6362": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7835,
        7836
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "6364": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7843
      ],
      "op": "ADD",
      "path": "37"
    },
    "6365": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7843
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6366": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7787,
        7847
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6367": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7767,
        7847
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6368": {
      "op": "POP"
    },
    "6369": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7865,
        7882
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6371": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7885,
        7906
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x18EC"
    },
    "6374": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7767,
        7847
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6375": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7899,
        7905
      ],
      "op": "DUP6",
      "path": "37"
    },
    "6376": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7885,
        7898
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1B00"
    },
    "6379": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        7885,
        7906
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6380": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7885,
        7906
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6381": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7865,
        7906
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6382": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7865,
        7906
      ],
      "op": "POP",
      "path": "37"
    },
    "6383": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7924,
        7981
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 65,
      "value": "0x18FA"
    },
    "6386": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7941,
        7947
      ],
      "op": "DUP7",
      "path": "37"
    },
    "6387": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7949,
        7958
      ],
      "op": "DUP5",
      "path": "37"
    },
    "6388": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7960,
        7969
      ],
      "op": "DUP5",
      "path": "37"
    },
    "6389": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7971,
        7980
      ],
      "op": "DUP5",
      "path": "37"
    },
    "6390": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7924,
        7940
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1B42"
    },
    "6393": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        7924,
        7981
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6394": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7924,
        7981
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6395": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7617,
        7996
      ],
      "op": "POP",
      "path": "37"
    },
    "6396": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7617,
        7996
      ],
      "op": "POP",
      "path": "37"
    },
    "6397": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7617,
        7996
      ],
      "op": "POP",
      "path": "37"
    },
    "6398": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7617,
        7996
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6405": {
      "op": "SHL"
    },
    "6406": {
      "op": "SUB"
    },
    "6407": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8014,
        8034
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6408": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8014,
        8034
      ],
      "op": "AND",
      "path": "37"
    },
    "6409": {
      "branch": 116,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8014,
        8034
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "6410": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8010,
        8389
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1987"
    },
    "6413": {
      "branch": 116,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8010,
        8389
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6420": {
      "op": "SHL"
    },
    "6421": {
      "op": "SUB"
    },
    "6422": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6423": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "AND",
      "path": "37"
    },
    "6424": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8101,
        8117
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6426": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6427": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6428": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6429": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8134
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x9"
    },
    "6431": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "6433": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6434": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6436": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6437": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "6438": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6439": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "6444": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "AND",
      "path": "37"
    },
    "6445": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8120,
        8142
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6446": {
      "branch": 117,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8180,
        8193
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6447": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8180,
        8240
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1939"
    },
    "6450": {
      "branch": 117,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8180,
        8240
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "6451": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8239,
        8240
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6453": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8180,
        8240
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x196B"
    },
    "6456": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8180,
        8240
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6457": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8180,
        8240
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6464": {
      "op": "SHL"
    },
    "6465": {
      "op": "SUB"
    },
    "6466": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "DUP5",
      "path": "37"
    },
    "6467": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "AND",
      "path": "37"
    },
    "6468": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6470": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6471": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6472": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6473": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8207
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "6475": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "6477": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6478": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6479": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6480": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6482": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6483": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6484": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8215
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "6485": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8230
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "6490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6492": {
      "op": "NOT"
    },
    "6493": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8216,
        8229
      ],
      "op": "DUP8",
      "path": "37"
    },
    "6494": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8216,
        8229
      ],
      "op": "ADD",
      "path": "37"
    },
    "6495": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8230
      ],
      "op": "AND",
      "path": "37"
    },
    "6496": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8230
      ],
      "op": "DUP5",
      "path": "37"
    },
    "6497": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8230
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6498": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8230
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6499": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8230
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6500": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8230
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6501": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8230
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6502": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8230
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "6503": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8228,
        8229
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "6505": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8236
      ],
      "op": "ADD",
      "path": "37"
    },
    "6506": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8196,
        8236
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6507": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8180,
        8240
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6508": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8160,
        8240
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6509": {
      "op": "POP"
    },
    "6510": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8258,
        8275
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6512": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8278,
        8299
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1979"
    },
    "6515": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8160,
        8240
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6516": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8292,
        8298
      ],
      "op": "DUP6",
      "path": "37"
    },
    "6517": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8278,
        8291
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x16FE"
    },
    "6520": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        8278,
        8299
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6521": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8278,
        8299
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6522": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8258,
        8299
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6523": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8258,
        8299
      ],
      "op": "POP",
      "path": "37"
    },
    "6524": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8317,
        8374
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 66,
      "value": "0x1230"
    },
    "6527": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8334,
        8340
      ],
      "op": "DUP6",
      "path": "37"
    },
    "6528": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8342,
        8351
      ],
      "op": "DUP5",
      "path": "37"
    },
    "6529": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8353,
        8362
      ],
      "op": "DUP5",
      "path": "37"
    },
    "6530": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8364,
        8373
      ],
      "op": "DUP5",
      "path": "37"
    },
    "6531": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8317,
        8333
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1B42"
    },
    "6534": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        8317,
        8374
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6535": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8010,
        8389
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6536": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        8405
      ],
      "op": "POP",
      "path": "37"
    },
    "6537": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        8405
      ],
      "op": "POP",
      "path": "37"
    },
    "6538": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7476,
        8405
      ],
      "op": "POP",
      "path": "37"
    },
    "6539": {
      "fn": "SushiToken._moveDelegates",
      "jump": "o",
      "offset": [
        7476,
        8405
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6540": {
      "fn": "SushiToken._delegate",
      "offset": [
        7041,
        7470
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6547": {
      "op": "SHL"
    },
    "6548": {
      "op": "SUB"
    },
    "6549": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6550": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6551": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "AND",
      "path": "37"
    },
    "6552": {
      "fn": "SushiToken._delegate",
      "offset": [
        7129,
        7152
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6554": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6555": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6556": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6557": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7165
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x7"
    },
    "6559": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "6561": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6562": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6564": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6565": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "6566": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6567": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6568": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6569": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "AND",
      "path": "37"
    },
    "6570": {
      "fn": "SushiToken._delegate",
      "offset": [
        7155,
        7176
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6571": {
      "fn": "SushiToken._delegate",
      "offset": [
        7213,
        7233
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x19B3"
    },
    "6574": {
      "fn": "SushiToken._delegate",
      "offset": [
        7166,
        7175
      ],
      "op": "DUP5",
      "path": "37"
    },
    "6575": {
      "fn": "SushiToken._delegate",
      "offset": [
        7213,
        7222
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xBC5"
    },
    "6578": {
      "fn": "SushiToken._delegate",
      "jump": "i",
      "offset": [
        7213,
        7233
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6579": {
      "fn": "SushiToken._delegate",
      "offset": [
        7213,
        7233
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6586": {
      "op": "SHL"
    },
    "6587": {
      "op": "SUB"
    },
    "6588": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "DUP6",
      "path": "37",
      "statement": 67
    },
    "6589": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6590": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "AND",
      "path": "37"
    },
    "6591": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6593": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6594": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6595": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6596": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7299
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x7"
    },
    "6598": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "6600": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6601": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6603": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6604": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6605": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "6606": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6607": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6614": {
      "op": "SHL"
    },
    "6615": {
      "op": "SUB"
    },
    "6616": {
      "op": "NOT"
    },
    "6617": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "AND",
      "path": "37"
    },
    "6618": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "DUP10",
      "path": "37"
    },
    "6619": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "DUP7",
      "path": "37"
    },
    "6620": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "AND",
      "path": "37"
    },
    "6621": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6622": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6623": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "OR",
      "path": "37"
    },
    "6624": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6625": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6626": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "6627": {
      "fn": "SushiToken._delegate",
      "offset": [
        7338,
        7392
      ],
      "op": "SWAP1",
      "path": "37",
      "statement": 68
    },
    "6628": {
      "fn": "SushiToken._delegate",
      "offset": [
        7338,
        7392
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6629": {
      "fn": "SushiToken._delegate",
      "offset": [
        7186,
        7233
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "6630": {
      "fn": "SushiToken._delegate",
      "offset": [
        7186,
        7233
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "6631": {
      "op": "POP"
    },
    "6632": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7322
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "6633": {
      "fn": "SushiToken._delegate",
      "offset": [
        7338,
        7392
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "6634": {
      "fn": "SushiToken._delegate",
      "offset": [
        7338,
        7392
      ],
      "op": "DUP7",
      "path": "37"
    },
    "6635": {
      "fn": "SushiToken._delegate",
      "offset": [
        7338,
        7392
      ],
      "op": "AND",
      "path": "37"
    },
    "6636": {
      "fn": "SushiToken._delegate",
      "offset": [
        7338,
        7392
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "6637": {
      "fn": "SushiToken._delegate",
      "offset": [
        7338,
        7392
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
    },
    "6670": {
      "fn": "SushiToken._delegate",
      "offset": [
        7338,
        7392
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "6671": {
      "fn": "SushiToken._delegate",
      "offset": [
        7289,
        7310
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6672": {
      "fn": "SushiToken._delegate",
      "offset": [
        7338,
        7392
      ],
      "op": "LOG4",
      "path": "37"
    },
    "6673": {
      "fn": "SushiToken._delegate",
      "offset": [
        7403,
        7463
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 69,
      "value": "0xE43"
    },
    "6676": {
      "fn": "SushiToken._delegate",
      "offset": [
        7418,
        7433
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6677": {
      "fn": "SushiToken._delegate",
      "offset": [
        7435,
        7444
      ],
      "op": "DUP5",
      "path": "37"
    },
    "6678": {
      "fn": "SushiToken._delegate",
      "offset": [
        7446,
        7462
      ],
      "op": "DUP4",
      "path": "37"
    },
    "6679": {
      "fn": "SushiToken._delegate",
      "offset": [
        7403,
        7417
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x184A"
    },
    "6682": {
      "fn": "SushiToken._delegate",
      "jump": "i",
      "offset": [
        7403,
        7463
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6683": {
      "fn": "ERC20._initERC20",
      "offset": [
        2125,
        2382
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6684": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 70,
      "value": "0x6"
    },
    "6686": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "6687": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x100"
    },
    "6690": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6691": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "DIV",
      "path": "32"
    },
    "6692": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xFF"
    },
    "6694": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "AND",
      "path": "32"
    },
    "6695": {
      "branch": 131,
      "fn": "ERC20._initERC20",
      "offset": [
        2214,
        2227
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "6696": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1A62"
    },
    "6699": {
      "branch": 131,
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "6700": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "6702": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6703": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6707": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6709": {
      "op": "SHL"
    },
    "6710": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6711": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6712": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "6714": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "ADD",
      "path": "32"
    },
    "6715": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6716": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6717": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6719": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "ADD",
      "path": "32"
    },
    "6720": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6721": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6722": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SUB",
      "path": "32"
    },
    "6723": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6724": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6725": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x2A"
    },
    "6727": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6728": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6729": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6731": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "ADD",
      "path": "32"
    },
    "6732": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6733": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x204C"
    },
    "6736": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x2A"
    },
    "6738": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6739": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "CODECOPY",
      "path": "32"
    },
    "6740": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "6742": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "ADD",
      "path": "32"
    },
    "6743": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6744": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "POP",
      "path": "32"
    },
    "6745": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "POP",
      "path": "32"
    },
    "6746": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "6748": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6749": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6750": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6751": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SUB",
      "path": "32"
    },
    "6752": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6753": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "REVERT",
      "path": "32"
    },
    "6754": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6755": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "DUP2",
      "path": "32",
      "statement": 71
    },
    "6756": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6757": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1A75"
    },
    "6760": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6761": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2289
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "6763": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2289
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6764": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6766": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "DUP6",
      "path": "32"
    },
    "6767": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "ADD",
      "path": "32"
    },
    "6768": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6769": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1EAC"
    },
    "6772": {
      "fn": "ERC20._initERC20",
      "jump": "i",
      "offset": [
        2284,
        2296
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6773": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6774": {
      "op": "POP"
    },
    "6775": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 72
    },
    "6776": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6777": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1A89"
    },
    "6780": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6781": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2313
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x5"
    },
    "6783": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2313
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6784": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6786": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "DUP5",
      "path": "32"
    },
    "6787": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "ADD",
      "path": "32"
    },
    "6788": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6789": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1EAC"
    },
    "6792": {
      "fn": "ERC20._initERC20",
      "jump": "i",
      "offset": [
        2306,
        2322
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6793": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6794": {
      "op": "POP"
    },
    "6795": {
      "op": "POP"
    },
    "6796": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2341
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 73,
      "value": "0x6"
    },
    "6798": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "DUP1",
      "path": "32"
    },
    "6799": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "6800": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6803": {
      "op": "NOT"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6806": {
      "op": "NOT"
    },
    "6807": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6808": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6809": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "AND",
      "path": "32"
    },
    "6810": {
      "fn": "ERC20._initERC20",
      "offset": [
        2344,
        2346
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x12"
    },
    "6812": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "OR",
      "path": "32"
    },
    "6813": {
      "fn": "ERC20._initERC20",
      "offset": [
        2356,
        2375
      ],
      "op": "AND",
      "path": "32",
      "statement": 74
    },
    "6814": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x100"
    },
    "6817": {
      "fn": "ERC20._initERC20",
      "offset": [
        2356,
        2375
      ],
      "op": "OR",
      "path": "32"
    },
    "6818": {
      "fn": "ERC20._initERC20",
      "offset": [
        2356,
        2375
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6819": {
      "fn": "ERC20._initERC20",
      "offset": [
        2356,
        2375
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "6820": {
      "op": "POP"
    },
    "6821": {
      "fn": "ERC20._initERC20",
      "jump": "o",
      "offset": [
        2125,
        2382
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6822": {
      "fn": "EnumerableSet.at",
      "offset": [
        6085,
        6232
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6823": {
      "fn": "EnumerableSet.at",
      "offset": [
        6159,
        6166
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6825": {
      "fn": "EnumerableSet.at",
      "offset": [
        6201,
        6223
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 75,
      "value": "0xE61"
    },
    "6828": {
      "fn": "EnumerableSet.at",
      "offset": [
        6205,
        6208
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6829": {
      "fn": "EnumerableSet.at",
      "offset": [
        6217,
        6222
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6830": {
      "fn": "EnumerableSet.at",
      "offset": [
        6201,
        6204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CA7"
    },
    "6833": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        6201,
        6223
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6834": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5401,
        5557
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6835": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5481,
        5485
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6837": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5504,
        5550
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 76,
      "value": "0xE61"
    },
    "6840": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5514,
        5517
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6847": {
      "op": "SHL"
    },
    "6848": {
      "op": "SUB"
    },
    "6849": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5534,
        5548
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6850": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5534,
        5548
      ],
      "op": "AND",
      "path": "7"
    },
    "6851": {
      "fn": "EnumerableSet.contains",
      "offset": [
        5504,
        5513
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D0B"
    },
    "6854": {
      "fn": "EnumerableSet.contains",
      "jump": "i",
      "offset": [
        5504,
        5550
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6855": {
      "fn": "SushiToken.getChainId",
      "offset": [
        9268,
        9417
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6856": {
      "fn": "SushiToken.getChainId",
      "offset": [
        9376,
        9385
      ],
      "op": "CHAINID",
      "path": "37"
    },
    "6857": {
      "fn": "SushiToken.getChainId",
      "offset": [
        9268,
        9417
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6858": {
      "fn": "SushiToken.getChainId",
      "jump": "o",
      "offset": [
        9268,
        9417
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6859": {
      "fn": "EnumerableSet.length",
      "offset": [
        5638,
        5753
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6860": {
      "fn": "EnumerableSet.length",
      "offset": [
        5701,
        5708
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6862": {
      "fn": "EnumerableSet.length",
      "offset": [
        5727,
        5746
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 77,
      "value": "0x8FC"
    },
    "6865": {
      "fn": "EnumerableSet.length",
      "offset": [
        5735,
        5738
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6866": {
      "fn": "EnumerableSet.length",
      "offset": [
        5727,
        5734
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D23"
    },
    "6869": {
      "fn": "EnumerableSet.length",
      "jump": "i",
      "offset": [
        5727,
        5746
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6870": {
      "fn": "EnumerableSet.add",
      "offset": [
        4864,
        5005
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6871": {
      "fn": "EnumerableSet.add",
      "offset": [
        4934,
        4938
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6873": {
      "fn": "EnumerableSet.add",
      "offset": [
        4957,
        4998
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 78,
      "value": "0xE61"
    },
    "6876": {
      "fn": "EnumerableSet.add",
      "offset": [
        4962,
        4965
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6883": {
      "op": "SHL"
    },
    "6884": {
      "op": "SUB"
    },
    "6885": {
      "fn": "EnumerableSet.add",
      "offset": [
        4982,
        4996
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6886": {
      "fn": "EnumerableSet.add",
      "offset": [
        4982,
        4996
      ],
      "op": "AND",
      "path": "7"
    },
    "6887": {
      "fn": "EnumerableSet.add",
      "offset": [
        4957,
        4961
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D27"
    },
    "6890": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        4957,
        4998
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6891": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5173,
        5320
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6892": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5246,
        5250
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6894": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5269,
        5313
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 79,
      "value": "0xE61"
    },
    "6897": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5277,
        5280
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6904": {
      "op": "SHL"
    },
    "6905": {
      "op": "SUB"
    },
    "6906": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5297,
        5311
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6907": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5297,
        5311
      ],
      "op": "AND",
      "path": "7"
    },
    "6908": {
      "fn": "EnumerableSet.remove",
      "offset": [
        5269,
        5276
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D71"
    },
    "6911": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        5269,
        5313
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6912": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6913": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6915": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 80,
      "value": "0xE61"
    },
    "6918": {
      "fn": "SafeMath.sub",
      "offset": [
        1409,
        1410
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6919": {
      "fn": "SafeMath.sub",
      "offset": [
        1412,
        1413
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6920": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6922": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6923": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6924": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6926": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "6927": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6929": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6930": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6931": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "6933": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6934": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6935": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6937": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "6938": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "6971": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6972": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6973": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "POP",
      "path": "3"
    },
    "6974": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1595"
    },
    "6977": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1405,
        1448
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6978": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8411,
        9098
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6979": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8582,
        8600
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6981": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1B66"
    },
    "6984": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8610,
        8622
      ],
      "op": "NUMBER",
      "path": "37"
    },
    "6985": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6987": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6988": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6989": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "6991": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "ADD",
      "path": "37"
    },
    "6992": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6994": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6995": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6996": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x35"
    },
    "6998": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6999": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7000": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7002": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "ADD",
      "path": "37"
    },
    "7003": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x20A6"
    },
    "7006": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x35"
    },
    "7008": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7009": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "CODECOPY",
      "path": "37"
    },
    "7010": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8609
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1E37"
    },
    "7013": {
      "fn": "SushiToken._writeCheckpoint",
      "jump": "i",
      "offset": [
        8603,
        8680
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7014": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8603,
        8680
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7015": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8582,
        8680
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7016": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8582,
        8680
      ],
      "op": "POP",
      "path": "37"
    },
    "7017": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8710,
        8711
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7019": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8695,
        8707
      ],
      "op": "DUP5",
      "path": "37"
    },
    "7020": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8695,
        8711
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "7025": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8695,
        8711
      ],
      "op": "AND",
      "path": "37"
    },
    "7026": {
      "branch": 118,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8695,
        8711
      ],
      "op": "GT",
      "path": "37"
    },
    "7027": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8695,
        8780
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7028": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8695,
        8780
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "7029": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8695,
        8780
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1BAF"
    },
    "7032": {
      "branch": 118,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8695,
        8780
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7033": {
      "op": "POP"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7040": {
      "op": "SHL"
    },
    "7041": {
      "op": "SUB"
    },
    "7042": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "DUP6",
      "path": "37"
    },
    "7043": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "AND",
      "path": "37"
    },
    "7044": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7046": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7047": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7048": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7049": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8726
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "7051": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7053": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7054": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7055": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7056": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7058": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7059": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7060": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8737
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "7061": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8780
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "7066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7068": {
      "op": "NOT"
    },
    "7069": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8738,
        8754
      ],
      "op": "DUP10",
      "path": "37"
    },
    "7070": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8738,
        8754
      ],
      "op": "ADD",
      "path": "37"
    },
    "7071": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8755
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7072": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8755
      ],
      "op": "AND",
      "path": "37"
    },
    "7073": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8755
      ],
      "op": "DUP6",
      "path": "37"
    },
    "7074": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8755
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7075": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8755
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7076": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8755
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7077": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8755
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7078": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8755
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7079": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8755
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "7080": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8765
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7081": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8780
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7082": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8780
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7083": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8780
      ],
      "op": "AND",
      "path": "37"
    },
    "7084": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8765
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7085": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8765
      ],
      "op": "AND",
      "path": "37"
    },
    "7086": {
      "branch": 119,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8715,
        8780
      ],
      "op": "EQ",
      "path": "37"
    },
    "7087": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8695,
        8780
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7088": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8691,
        9025
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "7089": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8691,
        9025
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1BEC"
    },
    "7092": {
      "branch": 119,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8691,
        9025
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7099": {
      "op": "SHL"
    },
    "7100": {
      "op": "SUB"
    },
    "7101": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "DUP6",
      "path": "37",
      "statement": 81
    },
    "7102": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "AND",
      "path": "37"
    },
    "7103": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7105": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7106": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7107": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7108": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8807
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "7110": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7112": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7113": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7114": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7115": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7117": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7118": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7119": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8818
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "7120": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8836
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7127": {
      "op": "NOT"
    },
    "7128": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8819,
        8835
      ],
      "op": "DUP10",
      "path": "37"
    },
    "7129": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8819,
        8835
      ],
      "op": "ADD",
      "path": "37"
    },
    "7130": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8836
      ],
      "op": "AND",
      "path": "37"
    },
    "7131": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8836
      ],
      "op": "DUP5",
      "path": "37"
    },
    "7132": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8836
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7133": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8836
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7134": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8836
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7135": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8836
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7136": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8836
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7137": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8836
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "7138": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8834,
        8835
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "7140": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8842
      ],
      "op": "ADD",
      "path": "37"
    },
    "7141": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8853
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7142": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8853
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7143": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8796,
        8853
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "7144": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8691,
        9025
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C5D"
    },
    "7147": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8691,
        9025
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7148": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8691,
        9025
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7149": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 82,
      "value": "0x40"
    },
    "7151": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7152": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7153": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7154": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7155": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "ADD",
      "path": "37"
    },
    "7156": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7157": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7158": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xFFFFFFFF"
    },
    "7163": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7164": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "DUP5",
      "path": "37"
    },
    "7165": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "AND",
      "path": "37"
    },
    "7166": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7167": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7168": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7170": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7171": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7172": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "ADD",
      "path": "37"
    },
    "7173": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "DUP7",
      "path": "37"
    },
    "7174": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7175": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8923,
        8956
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7182": {
      "op": "SHL"
    },
    "7183": {
      "op": "SUB"
    },
    "7184": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP11",
      "path": "37"
    },
    "7185": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8906
      ],
      "op": "AND",
      "path": "37"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7188": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7189": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7190": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8906
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7191": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8895
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "7193": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP5",
      "path": "37"
    },
    "7194": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8906
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7195": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP7",
      "path": "37"
    },
    "7196": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7197": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8906
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "7198": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8920
      ],
      "op": "DUP12",
      "path": "37"
    },
    "7199": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8920
      ],
      "op": "DUP7",
      "path": "37"
    },
    "7200": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8920
      ],
      "op": "AND",
      "path": "37"
    },
    "7201": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8920
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7202": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8920
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7203": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8920
      ],
      "op": "DUP5",
      "path": "37"
    },
    "7204": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8920
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7205": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8920
      ],
      "op": "DUP7",
      "path": "37"
    },
    "7206": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8920
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7207": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8920
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "7208": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "7209": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7210": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "DUP7",
      "path": "37"
    },
    "7211": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7212": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7213": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "DUP7",
      "path": "37"
    },
    "7214": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "AND",
      "path": "37"
    },
    "7215": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7220": {
      "op": "NOT"
    },
    "7221": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7222": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7223": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "AND",
      "path": "37"
    },
    "7224": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "OR",
      "path": "37"
    },
    "7225": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "DUP8",
      "path": "37"
    },
    "7226": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "7227": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7228": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7229": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "7231": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "SWAP7",
      "path": "37"
    },
    "7232": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "DUP8",
      "path": "37"
    },
    "7233": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "ADD",
      "path": "37"
    },
    "7234": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8884,
        8956
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "7235": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        8995
      ],
      "op": "SWAP1",
      "path": "37",
      "statement": 83
    },
    "7236": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        8995
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7237": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        8995
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7238": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        8984
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x9"
    },
    "7240": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        8995
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7241": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        8995
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7242": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        8995
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7243": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        8995
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "7244": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        8995
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7245": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        8995
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "7246": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        9014
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7247": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        9014
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "7248": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8998,
        9014
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7249": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8998,
        9014
      ],
      "op": "DUP9",
      "path": "37"
    },
    "7250": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8998,
        9014
      ],
      "op": "ADD",
      "path": "37"
    },
    "7251": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        9014
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7252": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        9014
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7253": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        9014
      ],
      "op": "AND",
      "path": "37"
    },
    "7254": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        9014
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7255": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        9014
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7256": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        9014
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7257": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        9014
      ],
      "op": "AND",
      "path": "37"
    },
    "7258": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        9014
      ],
      "op": "OR",
      "path": "37"
    },
    "7259": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        9014
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7260": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8970,
        9014
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "7261": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8691,
        9025
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7262": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 84,
      "value": "0x40"
    },
    "7264": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7265": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7266": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "DUP5",
      "path": "37"
    },
    "7267": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7268": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7269": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7271": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7272": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "ADD",
      "path": "37"
    },
    "7273": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "DUP5",
      "path": "37"
    },
    "7274": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7275": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7276": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7277": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7284": {
      "op": "SHL"
    },
    "7285": {
      "op": "SUB"
    },
    "7286": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "DUP9",
      "path": "37"
    },
    "7287": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "AND",
      "path": "37"
    },
    "7288": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7289": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "PUSH32",
      "path": "37",
      "value": "0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
    },
    "7322": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7323": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7324": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7325": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "SUB",
      "path": "37"
    },
    "7326": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "ADD",
      "path": "37"
    },
    "7327": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7328": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9040,
        9091
      ],
      "op": "LOG2",
      "path": "37"
    },
    "7329": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8411,
        9098
      ],
      "op": "POP",
      "path": "37"
    },
    "7330": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8411,
        9098
      ],
      "op": "POP",
      "path": "37"
    },
    "7331": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8411,
        9098
      ],
      "op": "POP",
      "path": "37"
    },
    "7332": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8411,
        9098
      ],
      "op": "POP",
      "path": "37"
    },
    "7333": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8411,
        9098
      ],
      "op": "POP",
      "path": "37"
    },
    "7334": {
      "fn": "SushiToken._writeCheckpoint",
      "jump": "o",
      "offset": [
        8411,
        9098
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7335": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7336": {
      "fn": "EnumerableSet._at",
      "offset": [
        4517,
        4535
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 85
    },
    "7337": {
      "fn": "EnumerableSet._at",
      "offset": [
        4517,
        4535
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7338": {
      "fn": "EnumerableSet._at",
      "offset": [
        4490,
        4497
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7340": {
      "fn": "EnumerableSet._at",
      "offset": [
        4490,
        4497
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7341": {
      "branch": 132,
      "fn": "EnumerableSet._at",
      "offset": [
        4517,
        4543
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7342": {
      "op": "LT"
    },
    "7343": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CE9"
    },
    "7346": {
      "branch": 132,
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7347": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7349": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7350": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7356": {
      "op": "SHL"
    },
    "7357": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7358": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7359": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7361": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "ADD",
      "path": "7"
    },
    "7362": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7363": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7364": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7366": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "ADD",
      "path": "7"
    },
    "7367": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7368": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7369": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SUB",
      "path": "7"
    },
    "7370": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7371": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7372": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x22"
    },
    "7374": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7375": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7376": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7378": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "ADD",
      "path": "7"
    },
    "7379": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7380": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F40"
    },
    "7383": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x22"
    },
    "7385": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7386": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "CODECOPY",
      "path": "7"
    },
    "7387": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7389": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "ADD",
      "path": "7"
    },
    "7390": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7391": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "POP",
      "path": "7"
    },
    "7392": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "POP",
      "path": "7"
    },
    "7393": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7395": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7396": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7397": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7398": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SUB",
      "path": "7"
    },
    "7399": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7400": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "REVERT",
      "path": "7"
    },
    "7401": {
      "fn": "EnumerableSet._at",
      "offset": [
        4509,
        4582
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7402": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4602
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 86
    },
    "7403": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4610
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7405": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4610
      ],
      "op": "ADD",
      "path": "7"
    },
    "7406": {
      "fn": "EnumerableSet._at",
      "offset": [
        4611,
        4616
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7407": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7408": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7409": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7410": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "LT",
      "path": "7"
    },
    "7411": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CF8"
    },
    "7414": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7415": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "INVALID",
      "path": "7"
    },
    "7416": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7417": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7418": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7420": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7421": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7423": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7425": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7426": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "ADD",
      "path": "7"
    },
    "7427": {
      "fn": "EnumerableSet._at",
      "offset": [
        4599,
        4617
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7428": {
      "fn": "EnumerableSet._at",
      "offset": [
        4592,
        4617
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7429": {
      "fn": "EnumerableSet._at",
      "offset": [
        4592,
        4617
      ],
      "op": "POP",
      "path": "7"
    },
    "7430": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7431": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7432": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "POP",
      "path": "7"
    },
    "7433": {
      "fn": "EnumerableSet._at",
      "offset": [
        4423,
        4624
      ],
      "op": "POP",
      "path": "7"
    },
    "7434": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4423,
        4624
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7435": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3776,
        3903
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7436": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3849,
        3853
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7438": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 87
    },
    "7439": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7440": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7441": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7443": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7444": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7445": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7446": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3884
      ],
      "op": "ADD",
      "path": "7"
    },
    "7447": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7449": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7450": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7452": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7453": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7454": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3891
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7455": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3896
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7456": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3896
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7457": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3872,
        3896
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7458": {
      "fn": "EnumerableSet._contains",
      "jump": "o",
      "offset": [
        3776,
        3903
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7459": {
      "fn": "EnumerableSet._length",
      "offset": [
        3984,
        4091
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7460": {
      "fn": "EnumerableSet._length",
      "offset": [
        4066,
        4084
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 88
    },
    "7461": {
      "fn": "EnumerableSet._length",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7462": {
      "fn": "EnumerableSet._length",
      "jump": "o",
      "offset": [
        3984,
        4091
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7463": {
      "fn": "EnumerableSet._add",
      "offset": [
        1611,
        2015
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7464": {
      "fn": "EnumerableSet._add",
      "offset": [
        1674,
        1678
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7466": {
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1716
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D33"
    },
    "7469": {
      "fn": "EnumerableSet._add",
      "offset": [
        1705,
        1708
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7470": {
      "fn": "EnumerableSet._add",
      "offset": [
        1710,
        1715
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7471": {
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1704
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D0B"
    },
    "7474": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1695,
        1716
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7475": {
      "branch": 133,
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1716
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7476": {
      "fn": "EnumerableSet._add",
      "offset": [
        1690,
        2009
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D69"
    },
    "7479": {
      "branch": 133,
      "fn": "EnumerableSet._add",
      "offset": [
        1690,
        2009
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7480": {
      "op": "POP"
    },
    "7481": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 89
    },
    "7482": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7483": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7485": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7486": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7487": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "ADD",
      "path": "7"
    },
    "7488": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7489": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7490": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1743
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7492": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7493": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7494": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7495": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7497": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7498": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7499": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7500": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7501": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7502": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "ADD",
      "path": "7"
    },
    "7503": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7504": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7505": {
      "fn": "EnumerableSet._add",
      "offset": [
        1732,
        1755
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7506": {
      "fn": "EnumerableSet._add",
      "offset": [
        1912,
        1930
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 90
    },
    "7507": {
      "fn": "EnumerableSet._add",
      "offset": [
        1912,
        1930
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7508": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7509": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7510": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7511": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1902
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7512": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1902
      ],
      "op": "DUP7",
      "path": "7"
    },
    "7513": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1902
      ],
      "op": "ADD",
      "path": "7"
    },
    "7514": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7515": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7516": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7517": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7519": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7520": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1909
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7521": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1930
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7522": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1930
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7523": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1930
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7524": {
      "fn": "EnumerableSet._add",
      "offset": [
        1890,
        1930
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7525": {
      "fn": "EnumerableSet._add",
      "offset": [
        1944,
        1955
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 91,
      "value": "0x8FC"
    },
    "7528": {
      "fn": "EnumerableSet._add",
      "offset": [
        1944,
        1955
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7529": {
      "fn": "EnumerableSet._add",
      "offset": [
        1690,
        2009
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7530": {
      "op": "POP"
    },
    "7531": {
      "fn": "EnumerableSet._add",
      "offset": [
        1993,
        1998
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 92,
      "value": "0x0"
    },
    "7533": {
      "fn": "EnumerableSet._add",
      "offset": [
        1986,
        1998
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8FC"
    },
    "7536": {
      "fn": "EnumerableSet._add",
      "offset": [
        1986,
        1998
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7537": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2183,
        3695
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7538": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2249,
        2253
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7540": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7541": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7542": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7543": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2398
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7545": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2398
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7546": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2398
      ],
      "op": "ADD",
      "path": "7"
    },
    "7547": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7549": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7550": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7552": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7553": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7554": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2386,
        2405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7555": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2420,
        2435
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7556": {
      "branch": 134,
      "fn": "EnumerableSet._remove",
      "offset": [
        2420,
        2435
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7557": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2416,
        3689
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E2D"
    },
    "7560": {
      "branch": 134,
      "fn": "EnumerableSet._remove",
      "offset": [
        2416,
        3689
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7561": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2867
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7562": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2867
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7565": {
      "op": "NOT"
    },
    "7566": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2801,
        2815
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7567": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2801,
        2815
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7568": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2801,
        2815
      ],
      "op": "ADD",
      "path": "7"
    },
    "7569": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2801,
        2815
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7570": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7571": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7572": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "ADD",
      "path": "7"
    },
    "7573": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7574": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2777,
        2798
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7576": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2777,
        2798
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7577": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2852
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7578": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2852
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7579": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7580": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2849,
        2871
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7581": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7582": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "LT",
      "path": "7"
    },
    "7583": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DA4"
    },
    "7586": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7587": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "INVALID",
      "path": "7"
    },
    "7588": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7589": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7590": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7592": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7593": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7595": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7597": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7598": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "ADD",
      "path": "7"
    },
    "7599": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3131,
        3153
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7600": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3111,
        3153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7601": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3111,
        3153
      ],
      "op": "POP",
      "path": "7"
    },
    "7602": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3283
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 93
    },
    "7603": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3248
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7604": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3256
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7606": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3256
      ],
      "op": "ADD",
      "path": "7"
    },
    "7607": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3257,
        3270
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7608": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7609": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7610": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7611": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "LT",
      "path": "7"
    },
    "7612": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DC1"
    },
    "7615": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7616": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "INVALID",
      "path": "7"
    },
    "7617": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7618": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7620": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7621": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7622": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7623": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7625": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7626": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7627": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7628": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7629": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7630": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3271
      ],
      "op": "ADD",
      "path": "7"
    },
    "7631": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3283
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7632": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3283
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7633": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3283
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7634": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3245,
        3283
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7635": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 94
    },
    "7636": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7637": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7638": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3391,
        3392
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7640": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3361
      ],
      "op": "DUP10",
      "path": "7"
    },
    "7641": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3361
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7642": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3361
      ],
      "op": "ADD",
      "path": "7"
    },
    "7643": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7644": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7645": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7646": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7648": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7649": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3372
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7650": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3375,
        3392
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7651": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3375,
        3392
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7652": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3375,
        3392
      ],
      "op": "ADD",
      "path": "7"
    },
    "7653": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3392
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7654": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3392
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7655": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "DUP7",
      "path": "7",
      "statement": 95
    },
    "7656": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7657": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3352
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7658": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3349,
        3352
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7659": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7660": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DF1"
    },
    "7663": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7664": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "INVALID",
      "path": "7"
    },
    "7665": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7666": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7668": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7669": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SUB",
      "path": "7"
    },
    "7670": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7671": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7672": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7673": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7675": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7676": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7678": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7680": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7681": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "ADD",
      "path": "7"
    },
    "7682": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7684": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7685": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7686": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7687": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3498,
        3515
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7688": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3593
      ],
      "op": "DUP7",
      "path": "7",
      "statement": 96
    },
    "7689": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3602
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7691": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3602
      ],
      "op": "ADD",
      "path": "7"
    },
    "7692": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7694": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3603,
        3608
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7695": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7696": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7697": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7699": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "ADD",
      "path": "7"
    },
    "7700": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7701": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7702": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7703": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7705": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "ADD",
      "path": "7"
    },
    "7706": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7708": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3590,
        3609
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7709": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3583,
        3609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7711": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3583,
        3609
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7712": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3583,
        3609
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7713": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3631,
        3635
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 97,
      "value": "0x1"
    },
    "7715": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "7716": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "7"
    },
    "7717": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "7"
    },
    "7718": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "7"
    },
    "7719": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "7"
    },
    "7720": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "POP",
      "path": "7"
    },
    "7721": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8FC"
    },
    "7724": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3635
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7725": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2416,
        3689
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7726": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3673,
        3678
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 98,
      "value": "0x0"
    },
    "7728": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7729": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "POP",
      "path": "7"
    },
    "7730": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "POP",
      "path": "7"
    },
    "7731": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8FC"
    },
    "7734": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3666,
        3678
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7735": {
      "fn": "SushiToken.safe32",
      "offset": [
        9104,
        9262
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7736": {
      "fn": "SushiToken.safe32",
      "offset": [
        9179,
        9185
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7738": {
      "fn": "SushiToken.safe32",
      "offset": [
        9216,
        9228
      ],
      "op": "DUP2",
      "path": "37",
      "statement": 99
    },
    "7739": {
      "fn": "SushiToken.safe32",
      "offset": [
        9209,
        9214
      ],
      "op": "PUSH5",
      "path": "37",
      "value": "0x100000000"
    },
    "7745": {
      "fn": "SushiToken.safe32",
      "offset": [
        9205,
        9214
      ],
      "op": "DUP5",
      "path": "37"
    },
    "7746": {
      "branch": 120,
      "fn": "SushiToken.safe32",
      "offset": [
        9205,
        9214
      ],
      "op": "LT",
      "path": "37"
    },
    "7747": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1E8D"
    },
    "7750": {
      "branch": 120,
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7751": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7753": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7760": {
      "op": "SHL"
    },
    "7761": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7762": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7763": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7765": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "7767": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7768": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "ADD",
      "path": "37"
    },
    "7769": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7770": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7771": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7772": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7773": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7774": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x24"
    },
    "7776": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP5",
      "path": "37"
    },
    "7777": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "ADD",
      "path": "37"
    },
    "7778": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7779": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7780": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7781": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7782": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7783": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7784": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7785": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x44"
    },
    "7787": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7788": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7789": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "ADD",
      "path": "37"
    },
    "7790": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7791": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7792": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP6",
      "path": "37"
    },
    "7793": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "ADD",
      "path": "37"
    },
    "7794": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "7795": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7796": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7797": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7798": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7800": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7801": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "7802": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15E9"
    },
    "7805": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7806": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7807": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7808": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "ADD",
      "path": "37"
    },
    "7809": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7810": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7811": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7812": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "ADD",
      "path": "37"
    },
    "7813": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7814": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "7816": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "ADD",
      "path": "37"
    },
    "7817": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15D1"
    },
    "7820": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7821": {
      "fn": "SushiToken.safe32",
      "offset": [
        9197,
        9229
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7822": {
      "op": "POP"
    },
    "7823": {
      "fn": "SushiToken.safe32",
      "offset": [
        9253,
        9254
      ],
      "op": "SWAP2",
      "path": "37",
      "statement": 100
    },
    "7824": {
      "fn": "SushiToken.safe32",
      "offset": [
        9253,
        9254
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "7825": {
      "fn": "SushiToken.safe32",
      "offset": [
        9104,
        9262
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "7826": {
      "op": "POP"
    },
    "7827": {
      "op": "POP"
    },
    "7828": {
      "fn": "SushiToken.safe32",
      "jump": "o",
      "offset": [
        9104,
        9262
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7829": {
      "op": "JUMPDEST"
    },
    "7830": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7832": {
      "op": "DUP1"
    },
    "7833": {
      "op": "MLOAD"
    },
    "7834": {
      "op": "DUP1"
    },
    "7835": {
      "op": "DUP3"
    },
    "7836": {
      "op": "ADD"
    },
    "7837": {
      "op": "SWAP1"
    },
    "7838": {
      "op": "SWAP2"
    },
    "7839": {
      "op": "MSTORE"
    },
    "7840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7842": {
      "op": "DUP1"
    },
    "7843": {
      "op": "DUP3"
    },
    "7844": {
      "op": "MSTORE"
    },
    "7845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7847": {
      "op": "DUP3"
    },
    "7848": {
      "op": "ADD"
    },
    "7849": {
      "op": "MSTORE"
    },
    "7850": {
      "op": "SWAP1"
    },
    "7851": {
      "jump": "o",
      "op": "JUMP"
    },
    "7852": {
      "op": "JUMPDEST"
    },
    "7853": {
      "op": "DUP3"
    },
    "7854": {
      "op": "DUP1"
    },
    "7855": {
      "op": "SLOAD"
    },
    "7856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7858": {
      "op": "DUP2"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7861": {
      "op": "AND"
    },
    "7862": {
      "op": "ISZERO"
    },
    "7863": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7866": {
      "op": "MUL"
    },
    "7867": {
      "op": "SUB"
    },
    "7868": {
      "op": "AND"
    },
    "7869": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7871": {
      "op": "SWAP1"
    },
    "7872": {
      "op": "DIV"
    },
    "7873": {
      "op": "SWAP1"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7876": {
      "op": "MSTORE"
    },
    "7877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7881": {
      "op": "KECCAK256"
    },
    "7882": {
      "op": "SWAP1"
    },
    "7883": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7885": {
      "op": "ADD"
    },
    "7886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7888": {
      "op": "SWAP1"
    },
    "7889": {
      "op": "DIV"
    },
    "7890": {
      "op": "DUP2"
    },
    "7891": {
      "op": "ADD"
    },
    "7892": {
      "op": "SWAP3"
    },
    "7893": {
      "op": "DUP3"
    },
    "7894": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7896": {
      "op": "LT"
    },
    "7897": {
      "op": "PUSH2",
      "value": "0x1EED"
    },
    "7900": {
      "op": "JUMPI"
    },
    "7901": {
      "op": "DUP1"
    },
    "7902": {
      "op": "MLOAD"
    },
    "7903": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7905": {
      "op": "NOT"
    },
    "7906": {
      "op": "AND"
    },
    "7907": {
      "op": "DUP4"
    },
    "7908": {
      "op": "DUP1"
    },
    "7909": {
      "op": "ADD"
    },
    "7910": {
      "op": "OR"
    },
    "7911": {
      "op": "DUP6"
    },
    "7912": {
      "op": "SSTORE"
    },
    "7913": {
      "op": "PUSH2",
      "value": "0x1F1A"
    },
    "7916": {
      "op": "JUMP"
    },
    "7917": {
      "op": "JUMPDEST"
    },
    "7918": {
      "op": "DUP3"
    },
    "7919": {
      "op": "DUP1"
    },
    "7920": {
      "op": "ADD"
    },
    "7921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7923": {
      "op": "ADD"
    },
    "7924": {
      "op": "DUP6"
    },
    "7925": {
      "op": "SSTORE"
    },
    "7926": {
      "op": "DUP3"
    },
    "7927": {
      "op": "ISZERO"
    },
    "7928": {
      "op": "PUSH2",
      "value": "0x1F1A"
    },
    "7931": {
      "op": "JUMPI"
    },
    "7932": {
      "op": "SWAP2"
    },
    "7933": {
      "op": "DUP3"
    },
    "7934": {
      "op": "ADD"
    },
    "7935": {
      "op": "JUMPDEST"
    },
    "7936": {
      "op": "DUP3"
    },
    "7937": {
      "op": "DUP2"
    },
    "7938": {
      "op": "GT"
    },
    "7939": {
      "op": "ISZERO"
    },
    "7940": {
      "op": "PUSH2",
      "value": "0x1F1A"
    },
    "7943": {
      "op": "JUMPI"
    },
    "7944": {
      "op": "DUP3"
    },
    "7945": {
      "op": "MLOAD"
    },
    "7946": {
      "op": "DUP3"
    },
    "7947": {
      "op": "SSTORE"
    },
    "7948": {
      "op": "SWAP2"
    },
    "7949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7951": {
      "op": "ADD"
    },
    "7952": {
      "op": "SWAP2"
    },
    "7953": {
      "op": "SWAP1"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7956": {
      "op": "ADD"
    },
    "7957": {
      "op": "SWAP1"
    },
    "7958": {
      "op": "PUSH2",
      "value": "0x1EFF"
    },
    "7961": {
      "op": "JUMP"
    },
    "7962": {
      "op": "JUMPDEST"
    },
    "7963": {
      "op": "POP"
    },
    "7964": {
      "op": "PUSH2",
      "value": "0x1F26"
    },
    "7967": {
      "op": "SWAP3"
    },
    "7968": {
      "op": "SWAP2"
    },
    "7969": {
      "op": "POP"
    },
    "7970": {
      "op": "PUSH2",
      "value": "0x1F2A"
    },
    "7973": {
      "jump": "i",
      "op": "JUMP"
    },
    "7974": {
      "op": "JUMPDEST"
    },
    "7975": {
      "op": "POP"
    },
    "7976": {
      "op": "SWAP1"
    },
    "7977": {
      "jump": "o",
      "op": "JUMP"
    },
    "7978": {
      "op": "JUMPDEST"
    },
    "7979": {
      "op": "JUMPDEST"
    },
    "7980": {
      "op": "DUP1"
    },
    "7981": {
      "op": "DUP3"
    },
    "7982": {
      "op": "GT"
    },
    "7983": {
      "op": "ISZERO"
    },
    "7984": {
      "op": "PUSH2",
      "value": "0x1F26"
    },
    "7987": {
      "op": "JUMPI"
    },
    "7988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7990": {
      "op": "DUP2"
    },
    "7991": {
      "op": "SSTORE"
    },
    "7992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7994": {
      "op": "ADD"
    },
    "7995": {
      "op": "PUSH2",
      "value": "0x1F2B"
    },
    "7998": {
      "op": "JUMP"
    }
  },
  "sha1": "5d74635fdcd0d39acfcb035ca915bae94876069d",
  "source": "pragma solidity 0.6.12;\n\n\nimport \"./ERC20.sol\";\nimport \"../../interfaces/IMisoToken.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n\n// GP: Change this to access control, remove owner, and set the minter role for mint\n\n// SushiToken with Governance.\ncontract SushiToken is AccessControl, ERC20, IMisoToken {\n\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    function initToken(string memory _name, string memory _symbol, address _owner, uint256 _initialSupply) external override {\n        _setupRole(DEFAULT_ADMIN_ROLE, _owner);\n        _setupRole(MINTER_ROLE, _owner);\n        _initERC20(_name, _symbol);\n        _mint(msg.sender, _initialSupply);\n\n    }\n\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\n    function mint(address _to, uint256 _amount) public  {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"SushiToken: must have minter role to mint\");\n        _mint(_to, _amount);\n        _moveDelegates(address(0), _delegates[_to], _amount);\n    }\n\n    // Copied and modified from YAM code:\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernanceStorage.sol\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernance.sol\n    // Which is copied and modified from COMPOUND:\n    // https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/Comp.sol\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) internal _delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint256 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public nonces;\n\n      /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegator The address to get delegatee for\n     */\n    function delegates(address delegator)\n        external\n        view\n        returns (address)\n    {\n        return _delegates[delegator];\n    }\n\n   /**\n    * @notice Delegate votes from `msg.sender` to `delegatee`\n    * @param delegatee The address to delegate votes to\n    */\n    function delegate(address delegatee) external {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(\n        address delegatee,\n        uint nonce,\n        uint expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    )\n        external\n    {\n        bytes32 domainSeparator = keccak256(\n            abi.encode(\n                DOMAIN_TYPEHASH,\n                keccak256(bytes(name())),\n                getChainId(),\n                address(this)\n            )\n        );\n\n        bytes32 structHash = keccak256(\n            abi.encode(\n                DELEGATION_TYPEHASH,\n                delegatee,\n                nonce,\n                expiry\n            )\n        );\n\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                domainSeparator,\n                structHash\n            )\n        );\n\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"SUSHI::delegateBySig: invalid signature\");\n        require(nonce == nonces[signatory]++, \"SUSHI::delegateBySig: invalid nonce\");\n        require(now <= expiry, \"SUSHI::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account)\n        external\n        view\n        returns (uint256)\n    {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint blockNumber)\n        external\n        view\n        returns (uint256)\n    {\n        require(blockNumber < block.number, \"SUSHI::getPriorVotes: not yet determined\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee)\n        internal\n    {\n        address currentDelegate = _delegates[delegator];\n        uint256 delegatorBalance = balanceOf(delegator); // balance of underlying SUSHIs (not scaled);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                // decrease old representative\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount);\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                // increase new representative\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount);\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        address delegatee,\n        uint32 nCheckpoints,\n        uint256 oldVotes,\n        uint256 newVotes\n    )\n        internal\n    {\n        uint32 blockNumber = safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\");\n\n        if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n        } else {\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n            numCheckpoints[delegatee] = nCheckpoints + 1;\n        }\n\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function getChainId() internal pure returns (uint) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}",
  "sourceMap": "268:9151:37:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Tokens/SushiToken.sol",
  "type": "contract"
}