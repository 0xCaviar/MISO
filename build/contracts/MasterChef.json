{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISushiToken",
          "name": "_sushi",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_sushiPerBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bonusEndBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BONUS_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_lpToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bonusEndBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        }
      ],
      "name": "dev",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devaddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "massUpdatePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "pendingSushi",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accSushiPerShare",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sushi",
      "outputs": [
        {
          "internalType": "contract ISushiToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sushiPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/GSN/Context.sol",
    "15": "contracts/Farms/MasterChef.sol",
    "2": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/access/Ownable.sol",
    "3": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
    "5": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/SafeERC20.sol",
    "6": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/Farms/MasterChef.sol",
    "exportedSymbols": {
      "MasterChef": [
        2905
      ]
    },
    "id": 2906,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2101,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2102,
        "nodeType": "ImportDirective",
        "scope": 2906,
        "sourceUnit": 16891,
        "src": "26:56:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 2103,
        "nodeType": "ImportDirective",
        "scope": 2906,
        "sourceUnit": 17104,
        "src": "83:59:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "id": 2104,
        "nodeType": "ImportDirective",
        "scope": 2906,
        "sourceUnit": 17499,
        "src": "143:57:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2105,
        "nodeType": "ImportDirective",
        "scope": 2906,
        "sourceUnit": 16539,
        "src": "201:51:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2106,
        "nodeType": "ImportDirective",
        "scope": 2906,
        "sourceUnit": 16813,
        "src": "253:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ISushiToken.sol",
        "file": "../../interfaces/ISushiToken.sol",
        "id": 2107,
        "nodeType": "ImportDirective",
        "scope": 2906,
        "sourceUnit": 17590,
        "src": "306:42:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2108,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16812,
              "src": "780:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$16812",
                "typeString": "contract Ownable"
              }
            },
            "id": 2109,
            "nodeType": "InheritanceSpecifier",
            "src": "780:7:15"
          }
        ],
        "contractDependencies": [
          16663,
          16812
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2905,
        "linearizedBaseContracts": [
          2905,
          16812,
          16663
        ],
        "name": "MasterChef",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2112,
            "libraryName": {
              "contractScope": null,
              "id": 2110,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16538,
              "src": "800:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$16538",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "794:27:15",
            "typeName": {
              "id": 2111,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "813:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2115,
            "libraryName": {
              "contractScope": null,
              "id": 2113,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17103,
              "src": "832:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$17103",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "826:27:15",
            "typeName": {
              "contractScope": null,
              "id": 2114,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16890,
              "src": "846:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$16890",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "MasterChef.UserInfo",
            "id": 2120,
            "members": [
              {
                "constant": false,
                "id": 2117,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2120,
                "src": "911:14:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2116,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "911:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2119,
                "mutability": "mutable",
                "name": "rewardDebt",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2120,
                "src": "984:18:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2118,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "984:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nodeType": "StructDefinition",
            "scope": 2905,
            "src": "885:784:15",
            "visibility": "public"
          },
          {
            "canonicalName": "MasterChef.PoolInfo",
            "id": 2129,
            "members": [
              {
                "constant": false,
                "id": 2122,
                "mutability": "mutable",
                "name": "lpToken",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2129,
                "src": "1727:14:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$16890",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 2121,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 16890,
                  "src": "1727:6:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$16890",
                    "typeString": "contract IERC20"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2124,
                "mutability": "mutable",
                "name": "allocPoint",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2129,
                "src": "1794:18:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2123,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1794:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2126,
                "mutability": "mutable",
                "name": "lastRewardBlock",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2129,
                "src": "1913:23:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2125,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1913:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2128,
                "mutability": "mutable",
                "name": "accSushiPerShare",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2129,
                "src": "2001:24:15",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2127,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2001:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nodeType": "StructDefinition",
            "scope": 2905,
            "src": "1701:387:15",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0a087903",
            "id": 2131,
            "mutability": "mutable",
            "name": "sushi",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2905,
            "src": "2118:24:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISushiToken_$17589",
              "typeString": "contract ISushiToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 2130,
              "name": "ISushiToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17589,
              "src": "2118:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISushiToken_$17589",
                "typeString": "contract ISushiToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d49e77cd",
            "id": 2133,
            "mutability": "mutable",
            "name": "devaddr",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2905,
            "src": "2168:22:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2132,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2168:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1aed6553",
            "id": 2135,
            "mutability": "mutable",
            "name": "bonusEndBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2905,
            "src": "2246:28:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2134,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2246:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b0bcf42a",
            "id": 2137,
            "mutability": "mutable",
            "name": "sushiPerBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2905,
            "src": "2319:28:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2136,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2319:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "8aa28550",
            "id": 2140,
            "mutability": "constant",
            "name": "BONUS_MULTIPLIER",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2905,
            "src": "2400:45:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2138,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2400:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 2139,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2443:2:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1526fe27",
            "id": 2143,
            "mutability": "mutable",
            "name": "poolInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2905,
            "src": "2478:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2129_storage_$dyn_storage",
              "typeString": "struct MasterChef.PoolInfo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 2141,
                "name": "PoolInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2129,
                "src": "2478:8:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                  "typeString": "struct MasterChef.PoolInfo"
                }
              },
              "id": 2142,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "2478:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2129_storage_$dyn_storage_ptr",
                "typeString": "struct MasterChef.PoolInfo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93f1a40b",
            "id": 2149,
            "mutability": "mutable",
            "name": "userInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2905,
            "src": "2558:66:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2120_storage_$_$",
              "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"
            },
            "typeName": {
              "id": 2148,
              "keyType": {
                "id": 2144,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2567:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2558:50:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2120_storage_$_$",
                "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"
              },
              "valueType": {
                "id": 2147,
                "keyType": {
                  "id": 2145,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2587:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2578:29:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2120_storage_$",
                  "typeString": "mapping(address => struct MasterChef.UserInfo)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 2146,
                  "name": "UserInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2120,
                  "src": "2598:8:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                    "typeString": "struct MasterChef.UserInfo"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "17caf6f1",
            "id": 2152,
            "mutability": "mutable",
            "name": "totalAllocPoint",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2905,
            "src": "2717:34:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2150,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2717:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 2151,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2750:1:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "48cd4cb1",
            "id": 2154,
            "mutability": "mutable",
            "name": "startBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2905,
            "src": "2807:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2153,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2807:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2162,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2156,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2162,
                  "src": "2853:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2853:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2158,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2162,
                  "src": "2875:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2162,
                  "src": "2896:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2896:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2852:59:15"
            },
            "src": "2839:73:15"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2170,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2164,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2170,
                  "src": "2932:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2932:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2166,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2170,
                  "src": "2954:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2954:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2168,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2170,
                  "src": "2975:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2975:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2931:59:15"
            },
            "src": "2917:74:15"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2178,
            "name": "EmergencyWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2172,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2178,
                  "src": "3020:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3020:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2174,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2178,
                  "src": "3042:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3042:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2176,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2178,
                  "src": "3063:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3063:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3019:59:15"
            },
            "src": "2996:83:15"
          },
          {
            "body": {
              "id": 2211,
              "nodeType": "Block",
              "src": "3257:173:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2191,
                      "name": "sushi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2131,
                      "src": "3267:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISushiToken_$17589",
                        "typeString": "contract ISushiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2192,
                      "name": "_sushi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2180,
                      "src": "3275:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISushiToken_$17589",
                        "typeString": "contract ISushiToken"
                      }
                    },
                    "src": "3267:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISushiToken_$17589",
                      "typeString": "contract ISushiToken"
                    }
                  },
                  "id": 2194,
                  "nodeType": "ExpressionStatement",
                  "src": "3267:14:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2195,
                      "name": "devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "3291:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2196,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2182,
                      "src": "3301:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3291:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2198,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:18:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2199,
                      "name": "sushiPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2137,
                      "src": "3319:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2200,
                      "name": "_sushiPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2184,
                      "src": "3335:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3319:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2202,
                  "nodeType": "ExpressionStatement",
                  "src": "3319:30:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2203,
                      "name": "bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2135,
                      "src": "3359:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2204,
                      "name": "_bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2188,
                      "src": "3375:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3359:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2206,
                  "nodeType": "ExpressionStatement",
                  "src": "3359:30:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2207,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2154,
                      "src": "3399:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2208,
                      "name": "_startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2186,
                      "src": "3412:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3399:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2210,
                  "nodeType": "ExpressionStatement",
                  "src": "3399:24:15"
                }
              ]
            },
            "documentation": null,
            "id": 2212,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2180,
                  "mutability": "mutable",
                  "name": "_sushi",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2212,
                  "src": "3106:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISushiToken_$17589",
                    "typeString": "contract ISushiToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2179,
                    "name": "ISushiToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17589,
                    "src": "3106:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISushiToken_$17589",
                      "typeString": "contract ISushiToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2182,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2212,
                  "src": "3134:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2184,
                  "mutability": "mutable",
                  "name": "_sushiPerBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2212,
                  "src": "3160:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3160:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2186,
                  "mutability": "mutable",
                  "name": "_startBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2212,
                  "src": "3192:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2188,
                  "mutability": "mutable",
                  "name": "_bonusEndBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2212,
                  "src": "3221:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3221:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3096:153:15"
            },
            "returnParameters": {
              "id": 2190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3257:0:15"
            },
            "scope": 2905,
            "src": "3085:345:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2220,
              "nodeType": "Block",
              "src": "3490:39:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2217,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2143,
                      "src": "3507:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2129_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3507:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2216,
                  "id": 2219,
                  "nodeType": "Return",
                  "src": "3500:22:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "081e3eda",
            "id": 2221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3455:2:15"
            },
            "returnParameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2215,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2221,
                  "src": "3481:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3481:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3480:9:15"
            },
            "scope": 2905,
            "src": "3436:93:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2267,
              "nodeType": "Block",
              "src": "3780:416:15",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2232,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2227,
                    "src": "3794:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2237,
                  "nodeType": "IfStatement",
                  "src": "3790:59:15",
                  "trueBody": {
                    "id": 2236,
                    "nodeType": "Block",
                    "src": "3807:42:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2233,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2479,
                            "src": "3821:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3821:17:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2235,
                        "nodeType": "ExpressionStatement",
                        "src": "3821:17:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2239,
                      "mutability": "mutable",
                      "name": "lastRewardBlock",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2267,
                      "src": "3858:23:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2238,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3858:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2248,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2240,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3884:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3884:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2242,
                        "name": "startBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2154,
                        "src": "3899:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3884:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 2246,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2154,
                      "src": "3927:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3884:53:15",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2244,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3912:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3912:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3858:79:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2249,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2152,
                      "src": "3947:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2252,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2223,
                          "src": "3985:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2250,
                          "name": "totalAllocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2152,
                          "src": "3965:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16371,
                        "src": "3965:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3965:32:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3947:50:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2255,
                  "nodeType": "ExpressionStatement",
                  "src": "3947:50:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2260,
                            "name": "_lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2225,
                            "src": "4053:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$16890",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2261,
                            "name": "_allocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2223,
                            "src": "4087:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2262,
                            "name": "lastRewardBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2239,
                            "src": "4129:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4176:1:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$16890",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2259,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2129,
                          "src": "4021:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$2129_storage_ptr_$",
                            "typeString": "type(struct MasterChef.PoolInfo storage pointer)"
                          }
                        },
                        "id": 2264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "lpToken",
                          "allocPoint",
                          "lastRewardBlock",
                          "accSushiPerShare"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "4021:167:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2129_memory_ptr",
                          "typeString": "struct MasterChef.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$2129_memory_ptr",
                          "typeString": "struct MasterChef.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2256,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2143,
                        "src": "4007:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2129_storage_$dyn_storage",
                          "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 2258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4007:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$2129_storage_$returns$__$",
                        "typeString": "function (struct MasterChef.PoolInfo storage ref)"
                      }
                    },
                    "id": 2265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4007:182:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2266,
                  "nodeType": "ExpressionStatement",
                  "src": "4007:182:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1eaaa045",
            "id": 2268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2230,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2229,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16761,
                  "src": "3770:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3770:9:15"
              }
            ],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2223,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2268,
                  "src": "3707:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3707:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2225,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2268,
                  "src": "3728:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$16890",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2224,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16890,
                    "src": "3728:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$16890",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2227,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2268,
                  "src": "3745:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2226,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3745:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3706:56:15"
            },
            "returnParameters": {
              "id": 2231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3780:0:15"
            },
            "scope": 2905,
            "src": "3694:502:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2305,
              "nodeType": "Block",
              "src": "4373:215:15",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2279,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2274,
                    "src": "4387:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2284,
                  "nodeType": "IfStatement",
                  "src": "4383:59:15",
                  "trueBody": {
                    "id": 2283,
                    "nodeType": "Block",
                    "src": "4400:42:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2280,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2479,
                            "src": "4414:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4414:17:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2282,
                        "nodeType": "ExpressionStatement",
                        "src": "4414:17:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2285,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2152,
                      "src": "4451:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2294,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2272,
                          "src": "4520:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2288,
                                  "name": "poolInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2143,
                                  "src": "4489:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2129_storage_$dyn_storage",
                                    "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 2290,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2289,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2270,
                                  "src": "4498:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4489:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2129_storage",
                                  "typeString": "struct MasterChef.PoolInfo storage ref"
                                }
                              },
                              "id": 2291,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allocPoint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2124,
                              "src": "4489:25:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2286,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2152,
                              "src": "4469:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16388,
                            "src": "4469:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4469:46:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16371,
                        "src": "4469:50:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4469:63:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4451:81:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2297,
                  "nodeType": "ExpressionStatement",
                  "src": "4451:81:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2298,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2143,
                          "src": "4542:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2129_storage_$dyn_storage",
                            "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 2300,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2299,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2270,
                          "src": "4551:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4542:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2129_storage",
                          "typeString": "struct MasterChef.PoolInfo storage ref"
                        }
                      },
                      "id": 2301,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocPoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2124,
                      "src": "4542:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2302,
                      "name": "_allocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2272,
                      "src": "4570:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4542:39:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2304,
                  "nodeType": "ExpressionStatement",
                  "src": "4542:39:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "64482f79",
            "id": 2306,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2277,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2276,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16761,
                  "src": "4363:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4363:9:15"
              }
            ],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2270,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2306,
                  "src": "4303:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4303:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2272,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2306,
                  "src": "4317:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4317:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2274,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2306,
                  "src": "4338:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2273,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4338:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4302:53:15"
            },
            "returnParameters": {
              "id": 2278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4373:0:15"
            },
            "scope": 2905,
            "src": "4290:298:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2353,
              "nodeType": "Block",
              "src": "4743:332:15",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2315,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2310,
                      "src": "4757:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2316,
                      "name": "bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2135,
                      "src": "4764:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4757:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2327,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2308,
                        "src": "4857:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2328,
                        "name": "bonusEndBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2135,
                        "src": "4866:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4857:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 2350,
                      "nodeType": "Block",
                      "src": "4933:136:15",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2346,
                                    "name": "bonusEndBlock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2135,
                                    "src": "5030:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2344,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2310,
                                    "src": "5022:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2345,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16388,
                                  "src": "5022:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5022:22:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2341,
                                    "name": "BONUS_MULTIPLIER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2140,
                                    "src": "4983:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 2338,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2308,
                                        "src": "4972:5:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2336,
                                        "name": "bonusEndBlock",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2135,
                                        "src": "4954:13:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2337,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 16388,
                                      "src": "4954:17:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2339,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4954:24:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16451,
                                  "src": "4954:28:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4954:46:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16371,
                              "src": "4954:50:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4954:104:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 2314,
                          "id": 2349,
                          "nodeType": "Return",
                          "src": "4947:111:15"
                        }
                      ]
                    },
                    "id": 2351,
                    "nodeType": "IfStatement",
                    "src": "4853:216:15",
                    "trueBody": {
                      "id": 2335,
                      "nodeType": "Block",
                      "src": "4881:46:15",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2332,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2308,
                                "src": "4910:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2330,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2310,
                                "src": "4902:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16388,
                              "src": "4902:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4902:14:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 2314,
                          "id": 2334,
                          "nodeType": "Return",
                          "src": "4895:21:15"
                        }
                      ]
                    }
                  },
                  "id": 2352,
                  "nodeType": "IfStatement",
                  "src": "4753:316:15",
                  "trueBody": {
                    "id": 2326,
                    "nodeType": "Block",
                    "src": "4779:68:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2323,
                              "name": "BONUS_MULTIPLIER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2140,
                              "src": "4819:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2320,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2308,
                                  "src": "4808:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2318,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2310,
                                  "src": "4800:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16388,
                                "src": "4800:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4800:14:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16451,
                            "src": "4800:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4800:36:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2314,
                        "id": 2325,
                        "nodeType": "Return",
                        "src": "4793:43:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8dbb1e3a",
            "id": 2354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMultiplier",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2308,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2354,
                  "src": "4685:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2310,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2354,
                  "src": "4700:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4700:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4684:28:15"
            },
            "returnParameters": {
              "id": 2314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2313,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2354,
                  "src": "4734:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4734:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4733:9:15"
            },
            "scope": 2905,
            "src": "4662:413:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2453,
              "nodeType": "Block",
              "src": "5220:674:15",
              "statements": [
                {
                  "assignments": [
                    2364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2364,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2453,
                      "src": "5230:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2363,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2129,
                        "src": "5230:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2368,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2365,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2143,
                      "src": "5254:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2129_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2367,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2366,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2356,
                      "src": "5263:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5254:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2129_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5230:38:15"
                },
                {
                  "assignments": [
                    2370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2370,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2453,
                      "src": "5278:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2369,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2120,
                        "src": "5278:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2376,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2371,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2149,
                        "src": "5302:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2120_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 2373,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2372,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2356,
                        "src": "5311:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5302:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2120_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 2375,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2374,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2358,
                      "src": "5317:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5302:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2120_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5278:45:15"
                },
                {
                  "assignments": [
                    2378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2378,
                      "mutability": "mutable",
                      "name": "accSushiPerShare",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2453,
                      "src": "5333:24:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2377,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5333:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2381,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2379,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2364,
                      "src": "5360:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo storage pointer"
                      }
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accSushiPerShare",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2128,
                    "src": "5360:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5333:48:15"
                },
                {
                  "assignments": [
                    2383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2383,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2453,
                      "src": "5391:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2382,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5391:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2392,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2389,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5441:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$2905",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$2905",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 2388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5433:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2387,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5433:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5433:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2384,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2364,
                          "src": "5410:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2385,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2122,
                        "src": "5410:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16890",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16829,
                      "src": "5410:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5410:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5391:56:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2393,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5461:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5461:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2395,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2364,
                          "src": "5476:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2396,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2126,
                        "src": "5476:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5461:35:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2398,
                        "name": "lpSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2383,
                        "src": "5500:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5512:1:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5500:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5461:52:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2439,
                  "nodeType": "IfStatement",
                  "src": "5457:350:15",
                  "trueBody": {
                    "id": 2438,
                    "nodeType": "Block",
                    "src": "5515:292:15",
                    "statements": [
                      {
                        "assignments": [
                          2403
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2403,
                            "mutability": "mutable",
                            "name": "multiplier",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2438,
                            "src": "5529:18:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2402,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5529:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2410,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2405,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2364,
                                "src": "5564:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 2406,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRewardBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2126,
                              "src": "5564:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2407,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5586:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5586:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2404,
                            "name": "getMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2354,
                            "src": "5550:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 2409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5550:49:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5529:70:15"
                      },
                      {
                        "assignments": [
                          2412
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2412,
                            "mutability": "mutable",
                            "name": "sushiReward",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2438,
                            "src": "5613:19:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2411,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5613:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2424,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2422,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2152,
                              "src": "5690:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2418,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2364,
                                    "src": "5669:4:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                                      "typeString": "struct MasterChef.PoolInfo storage pointer"
                                    }
                                  },
                                  "id": 2419,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allocPoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2124,
                                  "src": "5669:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2415,
                                      "name": "sushiPerBlock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2137,
                                      "src": "5650:13:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2413,
                                      "name": "multiplier",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2403,
                                      "src": "5635:10:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2414,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16451,
                                    "src": "5635:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2416,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5635:29:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16451,
                                "src": "5635:33:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5635:50:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16468,
                            "src": "5635:54:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5635:71:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5613:93:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2425,
                            "name": "accSushiPerShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2378,
                            "src": "5720:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2433,
                                    "name": "lpSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2383,
                                    "src": "5786:8:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "31653132",
                                        "id": 2430,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5776:4:15",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        },
                                        "value": "1e12"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2428,
                                        "name": "sushiReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2412,
                                        "src": "5760:11:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2429,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 16451,
                                      "src": "5760:15:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2431,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5760:21:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16468,
                                  "src": "5760:25:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5760:35:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2426,
                                "name": "accSushiPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2378,
                                "src": "5739:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16371,
                              "src": "5739:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5739:57:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5720:76:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2437,
                        "nodeType": "ExpressionStatement",
                        "src": "5720:76:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2449,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2370,
                          "src": "5871:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                            "typeString": "struct MasterChef.UserInfo storage pointer"
                          }
                        },
                        "id": 2450,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2119,
                        "src": "5871:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 2446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5861:4:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2443,
                                "name": "accSushiPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2378,
                                "src": "5839:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2440,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2370,
                                  "src": "5823:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 2441,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2117,
                                "src": "5823:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16451,
                              "src": "5823:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5823:33:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16468,
                          "src": "5823:37:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5823:43:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16388,
                      "src": "5823:47:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5823:64:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2362,
                  "id": 2452,
                  "nodeType": "Return",
                  "src": "5816:71:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "195426ec",
            "id": 2454,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingSushi",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2356,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2454,
                  "src": "5159:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5159:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2358,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2454,
                  "src": "5173:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5173:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5158:29:15"
            },
            "returnParameters": {
              "id": 2362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2361,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2454,
                  "src": "5211:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5211:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5210:9:15"
            },
            "scope": 2905,
            "src": "5137:757:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2478,
              "nodeType": "Block",
              "src": "6008:141:15",
              "statements": [
                {
                  "assignments": [
                    2458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2458,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2478,
                      "src": "6018:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2457,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6018:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2461,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2459,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2143,
                      "src": "6035:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2129_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "6035:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6018:32:15"
                },
                {
                  "body": {
                    "id": 2476,
                    "nodeType": "Block",
                    "src": "6103:40:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2473,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2463,
                              "src": "6128:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2472,
                            "name": "updatePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2589,
                            "src": "6117:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6117:15:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2475,
                        "nodeType": "ExpressionStatement",
                        "src": "6117:15:15"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2466,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2463,
                      "src": "6082:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2467,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2458,
                      "src": "6088:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6082:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2477,
                  "initializationExpression": {
                    "assignments": [
                      2463
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2463,
                        "mutability": "mutable",
                        "name": "pid",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2477,
                        "src": "6065:11:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6065:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2465,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6079:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6065:15:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6096:5:15",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2469,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2463,
                        "src": "6098:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2471,
                    "nodeType": "ExpressionStatement",
                    "src": "6096:5:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "6060:83:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "630b5ba1",
            "id": 2479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "massUpdatePools",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5998:2:15"
            },
            "returnParameters": {
              "id": 2456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6008:0:15"
            },
            "scope": 2905,
            "src": "5974:175:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2588,
              "nodeType": "Block",
              "src": "6263:733:15",
              "statements": [
                {
                  "assignments": [
                    2485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2485,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2588,
                      "src": "6273:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2484,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2129,
                        "src": "6273:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2489,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2486,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2143,
                      "src": "6297:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2129_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2488,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2487,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2481,
                      "src": "6306:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6297:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2129_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6273:38:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2490,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6325:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6325:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2492,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2485,
                        "src": "6341:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                        }
                      },
                      "id": 2493,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2126,
                      "src": "6341:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6325:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2497,
                  "nodeType": "IfStatement",
                  "src": "6321:73:15",
                  "trueBody": {
                    "id": 2496,
                    "nodeType": "Block",
                    "src": "6363:31:15",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 2483,
                        "id": 2495,
                        "nodeType": "Return",
                        "src": "6377:7:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2499,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2588,
                      "src": "6403:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2498,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6403:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2508,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2505,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6453:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$2905",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$2905",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 2504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6445:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2503,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6445:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6445:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2500,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2485,
                          "src": "6422:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2501,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2122,
                        "src": "6422:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16890",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16829,
                      "src": "6422:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6422:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6403:56:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2509,
                      "name": "lpSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2499,
                      "src": "6473:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6485:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6473:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2521,
                  "nodeType": "IfStatement",
                  "src": "6469:99:15",
                  "trueBody": {
                    "id": 2520,
                    "nodeType": "Block",
                    "src": "6488:80:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2512,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2485,
                              "src": "6502:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                                "typeString": "struct MasterChef.PoolInfo storage pointer"
                              }
                            },
                            "id": 2514,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastRewardBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2126,
                            "src": "6502:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2515,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6525:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6525:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6502:35:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2518,
                        "nodeType": "ExpressionStatement",
                        "src": "6502:35:15"
                      },
                      {
                        "expression": null,
                        "functionReturnParameters": 2483,
                        "id": 2519,
                        "nodeType": "Return",
                        "src": "6551:7:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2523
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2523,
                      "mutability": "mutable",
                      "name": "multiplier",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2588,
                      "src": "6577:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2522,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6577:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2530,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2525,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2485,
                          "src": "6612:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2526,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2126,
                        "src": "6612:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2527,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6634:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6634:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2524,
                      "name": "getMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2354,
                      "src": "6598:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 2529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6598:49:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6577:70:15"
                },
                {
                  "assignments": [
                    2532
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2532,
                      "mutability": "mutable",
                      "name": "sushiReward",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2588,
                      "src": "6657:19:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2531,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6657:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2544,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2542,
                        "name": "totalAllocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "6734:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2538,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2485,
                              "src": "6713:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                                "typeString": "struct MasterChef.PoolInfo storage pointer"
                              }
                            },
                            "id": 2539,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allocPoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2124,
                            "src": "6713:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2535,
                                "name": "sushiPerBlock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2137,
                                "src": "6694:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2533,
                                "name": "multiplier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2523,
                                "src": "6679:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16451,
                              "src": "6679:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6679:29:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16451,
                          "src": "6679:33:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6679:50:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16468,
                      "src": "6679:54:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6679:71:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6657:93:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2548,
                        "name": "devaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "6771:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 2551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6796:2:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2549,
                            "name": "sushiReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2532,
                            "src": "6780:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16468,
                          "src": "6780:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6780:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2545,
                        "name": "sushi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "6760:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISushiToken_$17589",
                          "typeString": "contract ISushiToken"
                        }
                      },
                      "id": 2547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17507,
                      "src": "6760:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6760:40:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2554,
                  "nodeType": "ExpressionStatement",
                  "src": "6760:40:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2560,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6829:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$2905",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$2905",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 2559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6821:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2558,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6821:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6821:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2562,
                        "name": "sushiReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2532,
                        "src": "6836:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2555,
                        "name": "sushi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "6810:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISushiToken_$17589",
                          "typeString": "contract ISushiToken"
                        }
                      },
                      "id": 2557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17507,
                      "src": "6810:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6810:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2564,
                  "nodeType": "ExpressionStatement",
                  "src": "6810:38:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2565,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2485,
                        "src": "6858:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                        }
                      },
                      "id": 2567,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accSushiPerShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2128,
                      "src": "6858:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2576,
                              "name": "lpSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2499,
                              "src": "6934:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 2573,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6924:4:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2571,
                                  "name": "sushiReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2532,
                                  "src": "6908:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16451,
                                "src": "6908:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6908:21:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16468,
                            "src": "6908:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6908:35:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2568,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2485,
                            "src": "6882:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                              "typeString": "struct MasterChef.PoolInfo storage pointer"
                            }
                          },
                          "id": 2569,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accSushiPerShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2128,
                          "src": "6882:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16371,
                        "src": "6882:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6882:62:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6858:86:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2580,
                  "nodeType": "ExpressionStatement",
                  "src": "6858:86:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2581,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2485,
                        "src": "6954:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                        }
                      },
                      "id": 2583,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2126,
                      "src": "6954:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2584,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6977:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6977:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6954:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2587,
                  "nodeType": "ExpressionStatement",
                  "src": "6954:35:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "51eb05a6",
            "id": 2589,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2481,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2589,
                  "src": "6242:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6242:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6241:14:15"
            },
            "returnParameters": {
              "id": 2483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6263:0:15"
            },
            "scope": 2905,
            "src": "6222:774:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2691,
              "nodeType": "Block",
              "src": "7118:592:15",
              "statements": [
                {
                  "assignments": [
                    2597
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2597,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2691,
                      "src": "7128:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2596,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2129,
                        "src": "7128:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2601,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2598,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2143,
                      "src": "7152:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2129_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2600,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2599,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2591,
                      "src": "7161:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7152:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2129_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7128:38:15"
                },
                {
                  "assignments": [
                    2603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2603,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2691,
                      "src": "7176:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2602,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2120,
                        "src": "7176:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2610,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2604,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2149,
                        "src": "7200:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2120_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 2606,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2605,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2591,
                        "src": "7209:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7200:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2120_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 2609,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2607,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7215:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7215:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7200:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2120_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7176:50:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2612,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2591,
                        "src": "7247:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2611,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2589,
                      "src": "7236:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7236:16:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2614,
                  "nodeType": "ExpressionStatement",
                  "src": "7236:16:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2615,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2603,
                        "src": "7266:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 2616,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2117,
                      "src": "7266:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7280:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7266:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2642,
                  "nodeType": "IfStatement",
                  "src": "7262:185:15",
                  "trueBody": {
                    "id": 2641,
                    "nodeType": "Block",
                    "src": "7283:164:15",
                    "statements": [
                      {
                        "assignments": [
                          2620
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2620,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2641,
                            "src": "7297:15:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2619,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7297:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2634,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2631,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2603,
                                "src": "7368:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                                  "typeString": "struct MasterChef.UserInfo storage pointer"
                                }
                              },
                              "id": 2632,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardDebt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2119,
                              "src": "7368:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 2628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7358:4:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2624,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2597,
                                        "src": "7331:4:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                                          "typeString": "struct MasterChef.PoolInfo storage pointer"
                                        }
                                      },
                                      "id": 2625,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "accSushiPerShare",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2128,
                                      "src": "7331:21:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2621,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2603,
                                        "src": "7315:4:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                                          "typeString": "struct MasterChef.UserInfo storage pointer"
                                        }
                                      },
                                      "id": 2622,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2117,
                                      "src": "7315:11:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2623,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16451,
                                    "src": "7315:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7315:38:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16468,
                                "src": "7315:42:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7315:48:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16388,
                            "src": "7315:52:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7315:69:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7297:87:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2636,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7416:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7416:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2638,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2620,
                              "src": "7428:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2635,
                            "name": "safeSushiTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2886,
                            "src": "7398:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7398:38:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2640,
                        "nodeType": "ExpressionStatement",
                        "src": "7398:38:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2650,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7494:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7494:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7486:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2648,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7486:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7486:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2655,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7515:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$2905",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$2905",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 2654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7507:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2653,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7507:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7507:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2657,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2593,
                        "src": "7522:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2643,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2597,
                          "src": "7456:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2646,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2122,
                        "src": "7456:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16890",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16949,
                      "src": "7456:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16890_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16890_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 2658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7456:74:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2659,
                  "nodeType": "ExpressionStatement",
                  "src": "7456:74:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2660,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2603,
                        "src": "7540:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 2662,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2117,
                      "src": "7540:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2666,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2593,
                          "src": "7570:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2663,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2603,
                            "src": "7554:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                              "typeString": "struct MasterChef.UserInfo storage pointer"
                            }
                          },
                          "id": 2664,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2117,
                          "src": "7554:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16371,
                        "src": "7554:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7554:24:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7540:38:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2669,
                  "nodeType": "ExpressionStatement",
                  "src": "7540:38:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2670,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2603,
                        "src": "7588:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 2672,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2119,
                      "src": "7588:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 2680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7649:4:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2676,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2597,
                                "src": "7622:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 2677,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accSushiPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2128,
                              "src": "7622:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2673,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2603,
                                "src": "7606:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                                  "typeString": "struct MasterChef.UserInfo storage pointer"
                                }
                              },
                              "id": 2674,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2117,
                              "src": "7606:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16451,
                            "src": "7606:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7606:38:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16468,
                        "src": "7606:42:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7606:48:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7588:66:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2683,
                  "nodeType": "ExpressionStatement",
                  "src": "7588:66:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2685,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7677:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7677:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2687,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2591,
                        "src": "7689:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2688,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2593,
                        "src": "7695:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2684,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2162,
                      "src": "7669:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7669:34:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2690,
                  "nodeType": "EmitStatement",
                  "src": "7664:39:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e2bbb158",
            "id": 2692,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2591,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2692,
                  "src": "7080:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7080:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2593,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2692,
                  "src": "7094:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7094:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7079:31:15"
            },
            "returnParameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7118:0:15"
            },
            "scope": 2905,
            "src": "7063:647:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2792,
              "nodeType": "Block",
              "src": "7815:588:15",
              "statements": [
                {
                  "assignments": [
                    2700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2700,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2792,
                      "src": "7825:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2699,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2129,
                        "src": "7825:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2704,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2701,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2143,
                      "src": "7849:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2129_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2703,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2702,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2694,
                      "src": "7858:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7849:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2129_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7825:38:15"
                },
                {
                  "assignments": [
                    2706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2706,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2792,
                      "src": "7873:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2705,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2120,
                        "src": "7873:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2713,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2707,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2149,
                        "src": "7897:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2120_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 2709,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2708,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2694,
                        "src": "7906:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7897:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2120_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 2712,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2710,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7912:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7912:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7897:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2120_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7873:50:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2715,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2706,
                            "src": "7941:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                              "typeString": "struct MasterChef.UserInfo storage pointer"
                            }
                          },
                          "id": 2716,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2117,
                          "src": "7941:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2717,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2696,
                          "src": "7956:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7941:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77697468647261773a206e6f7420676f6f64",
                        "id": 2719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7965:20:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        },
                        "value": "withdraw: not good"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        }
                      ],
                      "id": 2714,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7933:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7933:53:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2721,
                  "nodeType": "ExpressionStatement",
                  "src": "7933:53:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2723,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2694,
                        "src": "8007:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2722,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2589,
                      "src": "7996:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7996:16:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2725,
                  "nodeType": "ExpressionStatement",
                  "src": "7996:16:15"
                },
                {
                  "assignments": [
                    2727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2727,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2792,
                      "src": "8022:15:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2726,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8022:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2741,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2738,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2706,
                          "src": "8093:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                            "typeString": "struct MasterChef.UserInfo storage pointer"
                          }
                        },
                        "id": 2739,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2119,
                        "src": "8093:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 2735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8083:4:15",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2731,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2700,
                                  "src": "8056:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                                    "typeString": "struct MasterChef.PoolInfo storage pointer"
                                  }
                                },
                                "id": 2732,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accSushiPerShare",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2128,
                                "src": "8056:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2728,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2706,
                                  "src": "8040:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                                    "typeString": "struct MasterChef.UserInfo storage pointer"
                                  }
                                },
                                "id": 2729,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2117,
                                "src": "8040:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16451,
                              "src": "8040:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8040:38:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16468,
                          "src": "8040:42:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8040:48:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16388,
                      "src": "8040:52:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8040:69:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8022:87:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2743,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8137:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8137:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2745,
                        "name": "pending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2727,
                        "src": "8149:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2742,
                      "name": "safeSushiTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2886,
                      "src": "8119:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8119:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2747,
                  "nodeType": "ExpressionStatement",
                  "src": "8119:38:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2748,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2706,
                        "src": "8167:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 2750,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2117,
                      "src": "8167:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2754,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2696,
                          "src": "8197:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2751,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2706,
                            "src": "8181:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                              "typeString": "struct MasterChef.UserInfo storage pointer"
                            }
                          },
                          "id": 2752,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2117,
                          "src": "8181:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16388,
                        "src": "8181:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8181:24:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8167:38:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2757,
                  "nodeType": "ExpressionStatement",
                  "src": "8167:38:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2758,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2706,
                        "src": "8215:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 2760,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2119,
                      "src": "8215:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 2768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8276:4:15",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2764,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2700,
                                "src": "8249:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                                  "typeString": "struct MasterChef.PoolInfo storage pointer"
                                }
                              },
                              "id": 2765,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accSushiPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2128,
                              "src": "8249:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2761,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2706,
                                "src": "8233:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                                  "typeString": "struct MasterChef.UserInfo storage pointer"
                                }
                              },
                              "id": 2762,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2117,
                              "src": "8233:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16451,
                            "src": "8233:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8233:38:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16468,
                        "src": "8233:42:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8233:48:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8215:66:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2771,
                  "nodeType": "ExpressionStatement",
                  "src": "8215:66:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2779,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8325:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8325:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8317:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2777,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8317:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8317:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2782,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2696,
                        "src": "8338:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2772,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2700,
                          "src": "8291:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2775,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2122,
                        "src": "8291:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16890",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16924,
                      "src": "8291:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16890_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16890_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8291:55:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2784,
                  "nodeType": "ExpressionStatement",
                  "src": "8291:55:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2786,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8370:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8370:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2788,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2694,
                        "src": "8382:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2789,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2696,
                        "src": "8388:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2785,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2170,
                      "src": "8361:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8361:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2791,
                  "nodeType": "EmitStatement",
                  "src": "8356:40:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "441a3e70",
            "id": 2793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2694,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2793,
                  "src": "7777:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7777:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2696,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2793,
                  "src": "7791:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7791:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7776:31:15"
            },
            "returnParameters": {
              "id": 2698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7815:0:15"
            },
            "scope": 2905,
            "src": "7759:644:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2847,
              "nodeType": "Block",
              "src": "8519:301:15",
              "statements": [
                {
                  "assignments": [
                    2799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2799,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2847,
                      "src": "8529:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                        "typeString": "struct MasterChef.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2798,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2129,
                        "src": "8529:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                          "typeString": "struct MasterChef.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2803,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2800,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2143,
                      "src": "8553:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$2129_storage_$dyn_storage",
                        "typeString": "struct MasterChef.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2802,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2801,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2795,
                      "src": "8562:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8553:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$2129_storage",
                      "typeString": "struct MasterChef.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8529:38:15"
                },
                {
                  "assignments": [
                    2805
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2805,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2847,
                      "src": "8577:21:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                        "typeString": "struct MasterChef.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2804,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2120,
                        "src": "8577:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2812,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2806,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2149,
                        "src": "8601:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$2120_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo storage ref))"
                        }
                      },
                      "id": 2808,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2807,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "8610:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8601:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$2120_storage_$",
                        "typeString": "mapping(address => struct MasterChef.UserInfo storage ref)"
                      }
                    },
                    "id": 2811,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2809,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8616:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8616:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8601:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$2120_storage",
                      "typeString": "struct MasterChef.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8577:50:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2820,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8671:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8671:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8663:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2818,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8663:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8663:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2823,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2805,
                          "src": "8684:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                            "typeString": "struct MasterChef.UserInfo storage pointer"
                          }
                        },
                        "id": 2824,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2117,
                        "src": "8684:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2813,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2799,
                          "src": "8637:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$2129_storage_ptr",
                            "typeString": "struct MasterChef.PoolInfo storage pointer"
                          }
                        },
                        "id": 2816,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2122,
                        "src": "8637:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16890",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16924,
                      "src": "8637:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16890_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16890_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8637:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2826,
                  "nodeType": "ExpressionStatement",
                  "src": "8637:59:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2828,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8729:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8729:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2830,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "8741:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2831,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2805,
                          "src": "8747:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                            "typeString": "struct MasterChef.UserInfo storage pointer"
                          }
                        },
                        "id": 2832,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2117,
                        "src": "8747:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2827,
                      "name": "EmergencyWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2178,
                      "src": "8711:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8711:48:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2834,
                  "nodeType": "EmitStatement",
                  "src": "8706:53:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2835,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2805,
                        "src": "8769:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 2837,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2117,
                      "src": "8769:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8783:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8769:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2840,
                  "nodeType": "ExpressionStatement",
                  "src": "8769:15:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2841,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2805,
                        "src": "8794:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$2120_storage_ptr",
                          "typeString": "struct MasterChef.UserInfo storage pointer"
                        }
                      },
                      "id": 2843,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2119,
                      "src": "8794:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8812:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8794:19:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2846,
                  "nodeType": "ExpressionStatement",
                  "src": "8794:19:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5312ea8e",
            "id": 2848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2795,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2848,
                  "src": "8498:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8498:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8497:14:15"
            },
            "returnParameters": {
              "id": 2797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8519:0:15"
            },
            "scope": 2905,
            "src": "8471:349:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2885,
              "nodeType": "Block",
              "src": "8999:212:15",
              "statements": [
                {
                  "assignments": [
                    2856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2856,
                      "mutability": "mutable",
                      "name": "sushiBal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2885,
                      "src": "9009:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9009:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2864,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2861,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9052:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterChef_$2905",
                              "typeString": "contract MasterChef"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MasterChef_$2905",
                              "typeString": "contract MasterChef"
                            }
                          ],
                          "id": 2860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9044:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2859,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9044:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9044:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2857,
                        "name": "sushi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "9028:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISushiToken_$17589",
                          "typeString": "contract ISushiToken"
                        }
                      },
                      "id": 2858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17534,
                      "src": "9028:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9028:30:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9009:49:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2865,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2852,
                      "src": "9072:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2866,
                      "name": "sushiBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2856,
                      "src": "9082:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9072:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2883,
                    "nodeType": "Block",
                    "src": "9152:53:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2879,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2850,
                              "src": "9181:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2880,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2852,
                              "src": "9186:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2876,
                              "name": "sushi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2131,
                              "src": "9166:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISushiToken_$17589",
                                "typeString": "contract ISushiToken"
                              }
                            },
                            "id": 2878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17543,
                            "src": "9166:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9166:28:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2882,
                        "nodeType": "ExpressionStatement",
                        "src": "9166:28:15"
                      }
                    ]
                  },
                  "id": 2884,
                  "nodeType": "IfStatement",
                  "src": "9068:137:15",
                  "trueBody": {
                    "id": 2875,
                    "nodeType": "Block",
                    "src": "9092:54:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2871,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2850,
                              "src": "9121:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2872,
                              "name": "sushiBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2856,
                              "src": "9126:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2868,
                              "name": "sushi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2131,
                              "src": "9106:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISushiToken_$17589",
                                "typeString": "contract ISushiToken"
                              }
                            },
                            "id": 2870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17543,
                            "src": "9106:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9106:29:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2874,
                        "nodeType": "ExpressionStatement",
                        "src": "9106:29:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeSushiTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2850,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2886,
                  "src": "8960:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8960:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2852,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2886,
                  "src": "8973:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8973:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8959:30:15"
            },
            "returnParameters": {
              "id": 2854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8999:0:15"
            },
            "scope": 2905,
            "src": "8933:278:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2903,
              "nodeType": "Block",
              "src": "9302:88:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2892,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9320:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9320:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2894,
                          "name": "devaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2133,
                          "src": "9334:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9320:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6465763a207775743f",
                        "id": 2896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9343:11:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        },
                        "value": "dev: wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        }
                      ],
                      "id": 2891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9312:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9312:43:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2898,
                  "nodeType": "ExpressionStatement",
                  "src": "9312:43:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2899,
                      "name": "devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "9365:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2900,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2888,
                      "src": "9375:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9365:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2902,
                  "nodeType": "ExpressionStatement",
                  "src": "9365:18:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8d88a90e",
            "id": 2904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dev",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2888,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2904,
                  "src": "9277:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9277:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9276:18:15"
            },
            "returnParameters": {
              "id": 2890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9302:0:15"
            },
            "scope": 2905,
            "src": "9264:126:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2906,
        "src": "757:8635:15"
      }
    ],
    "src": "0:9392:15"
  },
  "bytecode": "6080604052600060075534801561001557600080fd5b50604051611874380380611874833981810160405260a081101561003857600080fd5b5080516020820151604083015160608401516080909401519293919290919060006100616100e9565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b039687166001600160a01b03199182161790915560028054959096169416939093179093556004556003556008556100ed565b3390565b611778806100fc6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063630b5ba1116100c35780638dbb1e3a1161007c5780638dbb1e3a1461032557806393f1a40b14610348578063b0bcf42a1461038d578063d49e77cd14610395578063e2bbb1581461039d578063f2fde38b146103c05761014d565b8063630b5ba1146102b457806364482f79146102bc578063715018a6146102e75780638aa28550146102ef5780638d88a90e146102f75780638da5cb5b1461031d5761014d565b80631aed6553116101155780631aed6553146102115780631eaaa04514610219578063441a3e701461024f57806348cd4cb11461027257806351eb05a61461027a5780635312ea8e146102975761014d565b8063081e3eda146101525780630a0879031461016c5780631526fe271461019057806317caf6f1146101dd578063195426ec146101e5575b600080fd5b61015a6103e6565b60408051918252519081900360200190f35b6101746103ec565b604080516001600160a01b039092168252519081900360200190f35b6101ad600480360360208110156101a657600080fd5b50356103fb565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b61015a61043c565b61015a600480360360408110156101fb57600080fd5b50803590602001356001600160a01b0316610442565b61015a6105b8565b61024d6004803603606081101561022f57600080fd5b508035906001600160a01b03602082013516906040013515156105be565b005b61024d6004803603604081101561026557600080fd5b5080359060200135610739565b61015a610880565b61024d6004803603602081101561029057600080fd5b5035610886565b61024d600480360360208110156102ad57600080fd5b5035610aa7565b61024d610b42565b61024d600480360360608110156102d257600080fd5b50803590602081013590604001351515610b65565b61024d610c36565b61015a610cd8565b61024d6004803603602081101561030d57600080fd5b50356001600160a01b0316610cdd565b610174610d4a565b61015a6004803603604081101561033b57600080fd5b5080359060200135610d59565b6103746004803603604081101561035e57600080fd5b50803590602001356001600160a01b0316610dbf565b6040805192835260208301919091528051918290030190f35b61015a610de3565b610174610de9565b61024d600480360360408110156103b357600080fd5b5080359060200135610df8565b61024d600480360360208110156103d657600080fd5b50356001600160a01b0316610efd565b60055490565b6001546001600160a01b031681565b6005818154811061040857fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b60075481565b6000806005848154811061045257fe5b600091825260208083208784526006825260408085206001600160a01b03898116875290845281862060049586029093016003810154815484516370a0823160e01b81523098810198909852935191985093969395939492909116926370a08231926024808301939192829003018186803b1580156104d057600080fd5b505afa1580156104e4573d6000803e3d6000fd5b505050506040513d60208110156104fa57600080fd5b505160028501549091504311801561051157508015155b1561057d576000610526856002015443610d59565b90506000610559600754610553886001015461054d60045487610ff590919063ffffffff16565b90610ff5565b90611055565b9050610578610571846105538464e8d4a51000610ff5565b8590611097565b935050505b6105ab83600101546105a564e8d4a51000610553868860000154610ff590919063ffffffff16565b906110f1565b9450505050505b92915050565b60035481565b6105c6611133565b6000546001600160a01b03908116911614610616576040805162461bcd60e51b815260206004820181905260248201526000805160206116f9833981519152604482015290519081900360640190fd5b801561062457610624610b42565b6000600854431161063757600854610639565b435b6007549091506106499085611097565b600755604080516080810182526001600160a01b0394851681526020810195865290810191825260006060820181815260058054600181018255925291517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600490920291820180546001600160a01b031916919096161790945593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1840155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db28301555090517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db390910155565b60006005838154811061074857fe5b6000918252602080832086845260068252604080852033865290925292208054600490920290920192508311156107bb576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b6107c484610886565b60006107f282600101546105a564e8d4a5100061055387600301548760000154610ff590919063ffffffff16565b90506107fe3382611137565b815461080a90856110f1565b80835560038401546108279164e8d4a51000916105539190610ff5565b60018301558254610842906001600160a01b031633866112c8565b604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050505050565b60085481565b60006005828154811061089557fe5b90600052602060002090600402019050806002015443116108b65750610aa4565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561090057600080fd5b505afa158015610914573d6000803e3d6000fd5b505050506040513d602081101561092a57600080fd5b5051905080610940575043600290910155610aa4565b6000610950836002015443610d59565b90506000610977600754610553866001015461054d60045487610ff590919063ffffffff16565b6001546002549192506001600160a01b03908116916340c10f19911661099e84600a611055565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156109e457600080fd5b505af11580156109f8573d6000803e3d6000fd5b5050600154604080516340c10f1960e01b81523060048201526024810186905290516001600160a01b0390921693506340c10f19925060448082019260009290919082900301818387803b158015610a4f57600080fd5b505af1158015610a63573d6000803e3d6000fd5b50505050610a91610a868461055364e8d4a5100085610ff590919063ffffffff16565b600386015490611097565b6003850155505043600290920191909155505b50565b600060058281548110610ab657fe5b60009182526020808320858452600682526040808520338087529352909320805460049093029093018054909450610afb926001600160a01b039190911691906112c8565b80546040805191825251849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a360008082556001909101555050565b60055460005b81811015610b6157610b5981610886565b600101610b48565b5050565b610b6d611133565b6000546001600160a01b03908116911614610bbd576040805162461bcd60e51b815260206004820181905260248201526000805160206116f9833981519152604482015290519081900360640190fd5b8015610bcb57610bcb610b42565b610c0882610c0260058681548110610bdf57fe5b9060005260206000209060040201600101546007546110f190919063ffffffff16565b90611097565b6007819055508160058481548110610c1c57fe5b906000526020600020906004020160010181905550505050565b610c3e611133565b6000546001600160a01b03908116911614610c8e576040805162461bcd60e51b815260206004820181905260248201526000805160206116f9833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600a81565b6002546001600160a01b03163314610d28576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b60006003548211610d7a57610d73600a61054d84866110f1565b90506105b2565b6003548310610d8d57610d7382846110f1565b610d73610da5600354846110f190919063ffffffff16565b610c02600a61054d876003546110f190919063ffffffff16565b60066020908152600092835260408084209091529082529020805460019091015482565b60045481565b6002546001600160a01b031681565b600060058381548110610e0757fe5b60009182526020808320868452600682526040808520338652909252922060049091029091019150610e3884610886565b805415610e7b576000610e6d82600101546105a564e8d4a5100061055387600301548760000154610ff590919063ffffffff16565b9050610e793382611137565b505b8154610e92906001600160a01b031633308661131a565b8054610e9e9084611097565b8082556003830154610ebb9164e8d4a51000916105539190610ff5565b6001820155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b610f05611133565b6000546001600160a01b03908116911614610f55576040805162461bcd60e51b815260206004820181905260248201526000805160206116f9833981519152604482015290519081900360640190fd5b6001600160a01b038116610f9a5760405162461bcd60e51b81526004018080602001828103825260268152602001806116b26026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600082611004575060006105b2565b8282028284828161101157fe5b041461104e5760405162461bcd60e51b81526004018080602001828103825260218152602001806116d86021913960400191505060405180910390fd5b9392505050565b600061104e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061137a565b60008282018381101561104e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061104e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061141c565b3390565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561118257600080fd5b505afa158015611196573d6000803e3d6000fd5b505050506040513d60208110156111ac57600080fd5b5051905080821115611240576001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561120e57600080fd5b505af1158015611222573d6000803e3d6000fd5b505050506040513d602081101561123857600080fd5b506112c39050565b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561129657600080fd5b505af11580156112aa573d6000803e3d6000fd5b505050506040513d60208110156112c057600080fd5b50505b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526112c3908490611476565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611374908590611476565b50505050565b600081836114065760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113cb5781810151838201526020016113b3565b50505050905090810190601f1680156113f85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161141257fe5b0495945050505050565b6000818484111561146e5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156113cb5781810151838201526020016113b3565b505050900390565b60606114cb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115279092919063ffffffff16565b8051909150156112c3578080602001905160208110156114ea57600080fd5b50516112c35760405162461bcd60e51b815260040180806020018281038252602a815260200180611719602a913960400191505060405180910390fd5b6060611536848460008561153e565b949350505050565b6060611549856116ab565b61159a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106115d95780518252601f1990920191602091820191016115ba565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461163b576040519150601f19603f3d011682016040523d82523d6000602084013e611640565b606091505b509150915081156116545791506115369050565b8051156116645780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156113cb5781810151838201526020016113b3565b3b15159056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220cd0160124aabbc86b18ddc8e9c44c32f9159868273c6dc997cd7b3940172f26864736f6c634300060c0033",
  "bytecodeSha1": "a4ec2c66c80857a6bf39d381eaa59a99d3167ac5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "MasterChef",
  "coverageMap": {
    "branches": {
      "0": {},
      "15": {
        "MasterChef.add": {
          "67": [
            3794,
            3805,
            false
          ],
          "68": [
            3884,
            3909,
            true
          ]
        },
        "MasterChef.deposit": {
          "76": [
            7266,
            7281,
            false
          ]
        },
        "MasterChef.dev": {
          "73": [
            9320,
            9341,
            true
          ]
        },
        "MasterChef.getMultiplier": {
          "74": [
            4757,
            4777,
            false
          ],
          "75": [
            4857,
            4879,
            false
          ]
        },
        "MasterChef.pendingSushi": {
          "65": [
            5461,
            5496,
            false
          ],
          "66": [
            5500,
            5513,
            false
          ]
        },
        "MasterChef.safeSushiTransfer": {
          "77": [
            9072,
            9090,
            false
          ]
        },
        "MasterChef.set": {
          "72": [
            4387,
            4398,
            false
          ]
        },
        "MasterChef.updatePool": {
          "70": [
            6325,
            6361,
            false
          ],
          "71": [
            6473,
            6486,
            false
          ]
        },
        "MasterChef.withdraw": {
          "69": [
            7941,
            7963,
            true
          ]
        }
      },
      "2": {
        "Ownable.transferOwnership": {
          "81": [
            1270,
            1292,
            true
          ],
          "82": [
            2071,
            2093,
            true
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "87": [
            986,
            992,
            true
          ]
        },
        "SafeMath.div": {
          "88": [
            3826,
            3831,
            true
          ]
        },
        "SafeMath.mul": {
          "85": [
            2479,
            2485,
            false
          ],
          "86": [
            2565,
            2575,
            true
          ]
        },
        "SafeMath.sub": {
          "89": [
            1859,
            1865,
            true
          ]
        }
      },
      "5": {
        "SafeERC20._callOptionalReturn": {
          "83": [
            3487,
            3508,
            false
          ],
          "84": [
            3616,
            3646,
            true
          ]
        }
      },
      "6": {
        "Address._functionCallWithValue": {
          "78": [
            5082,
            5100,
            true
          ],
          "79": [
            5296,
            5303,
            false
          ],
          "80": [
            5437,
            5458,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "52": [
            670,
            687
          ]
        }
      },
      "15": {
        "MasterChef.add": {
          "3": [
            3821,
            3838
          ],
          "4": [
            3947,
            3997
          ],
          "5": [
            4007,
            4189
          ]
        },
        "MasterChef.deposit": {
          "37": [
            7236,
            7252
          ],
          "38": [
            7398,
            7436
          ],
          "39": [
            7456,
            7530
          ],
          "40": [
            7540,
            7578
          ],
          "41": [
            7588,
            7654
          ],
          "42": [
            7664,
            7703
          ]
        },
        "MasterChef.dev": {
          "31": [
            9312,
            9355
          ],
          "32": [
            9365,
            9383
          ]
        },
        "MasterChef.emergencyWithdraw": {
          "20": [
            8637,
            8696
          ],
          "21": [
            8706,
            8759
          ],
          "22": [
            8769,
            8784
          ],
          "23": [
            8794,
            8813
          ]
        },
        "MasterChef.getMultiplier": {
          "34": [
            4793,
            4836
          ],
          "35": [
            4895,
            4916
          ],
          "36": [
            4947,
            5058
          ]
        },
        "MasterChef.massUpdatePools": {
          "24": [
            6117,
            6132
          ],
          "25": [
            6096,
            6101
          ]
        },
        "MasterChef.pendingSushi": {
          "1": [
            5720,
            5796
          ],
          "2": [
            5816,
            5887
          ]
        },
        "MasterChef.poolLength": {
          "0": [
            3500,
            3522
          ]
        },
        "MasterChef.safeSushiTransfer": {
          "53": [
            9106,
            9135
          ],
          "54": [
            9166,
            9194
          ]
        },
        "MasterChef.set": {
          "26": [
            4414,
            4431
          ],
          "27": [
            4451,
            4532
          ],
          "28": [
            4542,
            4581
          ]
        },
        "MasterChef.updatePool": {
          "13": [
            6377,
            6384
          ],
          "14": [
            6502,
            6537
          ],
          "15": [
            6551,
            6558
          ],
          "16": [
            6760,
            6800
          ],
          "17": [
            6810,
            6848
          ],
          "18": [
            6858,
            6944
          ],
          "19": [
            6954,
            6989
          ]
        },
        "MasterChef.withdraw": {
          "6": [
            7933,
            7986
          ],
          "7": [
            7996,
            8012
          ],
          "8": [
            8119,
            8157
          ],
          "9": [
            8167,
            8205
          ],
          "10": [
            8215,
            8281
          ],
          "11": [
            8291,
            8346
          ],
          "12": [
            8356,
            8396
          ]
        }
      },
      "2": {
        "Ownable.owner": {
          "33": [
            1123,
            1136
          ]
        },
        "Ownable.renounceOwnership": {
          "29": [
            1753,
            1798
          ],
          "30": [
            1808,
            1827
          ]
        },
        "Ownable.transferOwnership": {
          "43": [
            2063,
            2136
          ],
          "44": [
            2146,
            2189
          ],
          "45": [
            2199,
            2216
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "50": [
            978,
            1024
          ]
        },
        "SafeMath.div": {
          "49": [
            3178,
            3224
          ],
          "57": [
            3818,
            3846
          ]
        },
        "SafeMath.mul": {
          "46": [
            2501,
            2509
          ],
          "47": [
            2557,
            2613
          ],
          "48": [
            2624,
            2632
          ]
        },
        "SafeMath.sub": {
          "51": [
            1398,
            1448
          ],
          "58": [
            1851,
            1880
          ]
        }
      },
      "5": {
        "SafeERC20._callOptionalReturn": {
          "59": [
            3608,
            3693
          ]
        },
        "SafeERC20.safeTransfer": {
          "55": [
            778,
            864
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "56": [
            977,
            1073
          ]
        }
      },
      "6": {
        "Address._functionCallWithValue": {
          "61": [
            5074,
            5134
          ],
          "62": [
            5319,
            5336
          ],
          "63": [
            5827,
            5847
          ]
        },
        "Address.functionCall": {
          "60": [
            3700,
            3760
          ]
        },
        "Address.isContract": {
          "64": [
            1109,
            1124
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "757:8635:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3436:93;;;:::i;:::-;;;;;;;;;;;;;;;;2118:24;;;:::i;:::-;;;;-1:-1:-1;;;;;2118:24:15;;;;;;;;;;;;;;2478:26;;;;;;;;;;;;;;;;-1:-1:-1;2478:26:15;;:::i;:::-;;;;-1:-1:-1;;;;;2478:26:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2717:34;;;:::i;5137:757::-;;;;;;;;;;;;;;;;-1:-1:-1;5137:757:15;;;;;;-1:-1:-1;;;;;5137:757:15;;:::i;2246:28::-;;;:::i;3694:502::-;;;;;;;;;;;;;;;;-1:-1:-1;3694:502:15;;;-1:-1:-1;;;;;3694:502:15;;;;;;;;;;;;:::i;:::-;;7759:644;;;;;;;;;;;;;;;;-1:-1:-1;7759:644:15;;;;;;;:::i;2807:25::-;;;:::i;6222:774::-;;;;;;;;;;;;;;;;-1:-1:-1;6222:774:15;;:::i;8471:349::-;;;;;;;;;;;;;;;;-1:-1:-1;8471:349:15;;:::i;5974:175::-;;;:::i;4290:298::-;;;;;;;;;;;;;;;;-1:-1:-1;4290:298:15;;;;;;;;;;;;;;:::i;1689:145:2:-;;;:::i;2400:45:15:-;;;:::i;9264:126::-;;;;;;;;;;;;;;;;-1:-1:-1;9264:126:15;-1:-1:-1;;;;;9264:126:15;;:::i;1066:77:2:-;;;:::i;4662:413:15:-;;;;;;;;;;;;;;;;-1:-1:-1;4662:413:15;;;;;;;:::i;2558:66::-;;;;;;;;;;;;;;;;-1:-1:-1;2558:66:15;;;;;;-1:-1:-1;;;;;2558:66:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2319:28;;;:::i;2168:22::-;;;:::i;7063:647::-;;;;;;;;;;;;;;;;-1:-1:-1;7063:647:15;;;;;;;:::i;1983:240:2:-;;;;;;;;;;;;;;;;-1:-1:-1;1983:240:2;-1:-1:-1;;;;;1983:240:2;;:::i;3436:93:15:-;3507:8;:15;3436:93;:::o;2118:24::-;;;-1:-1:-1;;;;;2118:24:15;;:::o;2478:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2478:26:15;;;;-1:-1:-1;2478:26:15;;;:::o;2717:34::-;;;;:::o;5137:757::-;5211:7;5230:21;5254:8;5263:4;5254:14;;;;;;;;;;;;;;;;5302;;;:8;:14;;;;;;-1:-1:-1;;;;;5302:21:15;;;;;;;;;;;5254:14;;;;;;;5360:21;;;;5410:12;;:37;;-1:-1:-1;;;5410:37:15;;5441:4;5410:37;;;;;;;;;5254:14;;-1:-1:-1;5302:21:15;;5360;;5254:14;;5410:12;;;;;:22;;:37;;;;;5254:14;;5410:37;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5410:37:15;5476:20;;;;5410:37;;-1:-1:-1;5461:12:15;:35;:52;;;;-1:-1:-1;5500:13:15;;;5461:52;5457:350;;;5529:18;5550:49;5564:4;:20;;;5586:12;5550:13;:49::i;:::-;5529:70;;5613:19;5635:71;5690:15;;5635:50;5669:4;:15;;;5635:29;5650:13;;5635:10;:14;;:29;;;;:::i;:::-;:33;;:50::i;:::-;:54;;:71::i;:::-;5613:93;-1:-1:-1;5739:57:15;5760:35;5786:8;5760:21;5613:93;5776:4;5760:15;:21::i;:35::-;5739:16;;:20;:57::i;:::-;5720:76;;5457:350;;;5823:64;5871:4;:15;;;5823:43;5861:4;5823:33;5839:16;5823:4;:11;;;:15;;:33;;;;:::i;:43::-;:47;;:64::i;:::-;5816:71;;;;;;5137:757;;;;;:::o;2246:28::-;;;;:::o;3694:502::-;1280:12:2;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:2;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:2;;;;;;;;;;;;;;;3794:11:15::1;3790:59;;;3821:17;:15;:17::i;:::-;3858:23;3899:10;;3884:12;:25;:53;;3927:10;;3884:53;;;3912:12;3884:53;3965:15;::::0;3858:79;;-1:-1:-1;3965:32:15::1;::::0;3985:11;3965:19:::1;:32::i;:::-;3947:15;:50:::0;4021:167:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4021:167:15;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;4021:167:15;;;;;;4007:8:::1;:182:::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;4007:182:15::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;-1:-1:-1;4007:182:15;;;;;;;3694:502::o;7759:644::-;7825:21;7849:8;7858:4;7849:14;;;;;;;;;;;;;;;;7897;;;:8;:14;;;;;;7912:10;7897:26;;;;;;;7941:11;;7849:14;;;;;;;;-1:-1:-1;7941:22:15;-1:-1:-1;7941:22:15;7933:53;;;;;-1:-1:-1;;;7933:53:15;;;;;;;;;;;;-1:-1:-1;;;7933:53:15;;;;;;;;;;;;;;;7996:16;8007:4;7996:10;:16::i;:::-;8022:15;8040:69;8093:4;:15;;;8040:48;8083:4;8040:38;8056:4;:21;;;8040:4;:11;;;:15;;:38;;;;:::i;:69::-;8022:87;;8119:38;8137:10;8149:7;8119:17;:38::i;:::-;8181:11;;:24;;8197:7;8181:15;:24::i;:::-;8167:38;;;8249:21;;;;8233:48;;8276:4;;8233:38;;8167;8233:15;:38::i;:48::-;8215:15;;;:66;8291:12;;:55;;-1:-1:-1;;;;;8291:12:15;8325:10;8338:7;8291:25;:55::i;:::-;8361:35;;;;;;;;8382:4;;8370:10;;8361:35;;;;;;;;;7759:644;;;;;:::o;2807:25::-;;;;:::o;6222:774::-;6273:21;6297:8;6306:4;6297:14;;;;;;;;;;;;;;;;;;6273:38;;6341:4;:20;;;6325:12;:36;6321:73;;6377:7;;;6321:73;6422:12;;:37;;;-1:-1:-1;;;6422:37:15;;6453:4;6422:37;;;;;;6403:16;;-1:-1:-1;;;;;6422:12:15;;:22;;:37;;;;;;;;;;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6422:37:15;;-1:-1:-1;6473:13:15;6469:99;;-1:-1:-1;6525:12:15;6502:20;;;;:35;6551:7;;6469:99;6577:18;6598:49;6612:4;:20;;;6634:12;6598:13;:49::i;:::-;6577:70;;6657:19;6679:71;6734:15;;6679:50;6713:4;:15;;;6679:29;6694:13;;6679:10;:14;;:29;;;;:::i;:71::-;6760:5;;6771:7;;6657:93;;-1:-1:-1;;;;;;6760:5:15;;;;:10;;6771:7;6780:19;6657:93;6796:2;6780:15;:19::i;:::-;6760:40;;;;;;;;;;;;;-1:-1:-1;;;;;6760:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6810:5:15;;:38;;;-1:-1:-1;;;6810:38:15;;6829:4;6810:38;;;;;;;;;;;;-1:-1:-1;;;;;6810:5:15;;;;-1:-1:-1;6810:10:15;;-1:-1:-1;6810:38:15;;;;;:5;;:38;;;;;;;;:5;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6882:62;6908:35;6934:8;6908:21;6924:4;6908:11;:15;;:21;;;;:::i;:35::-;6882:21;;;;;:25;:62::i;:::-;6858:21;;;:86;-1:-1:-1;;6977:12:15;6954:20;;;;:35;;;;-1:-1:-1;6222:774:15;;:::o;8471:349::-;8529:21;8553:8;8562:4;8553:14;;;;;;;;;;;;;;;;8601;;;:8;:14;;;;;;8616:10;8601:26;;;;;;;;8684:11;;8553:14;;;;;;;8637:12;;8553:14;;-1:-1:-1;8637:59:15;;-1:-1:-1;;;;;8637:12:15;;;;;8616:10;8637:25;:59::i;:::-;8747:11;;8711:48;;;;;;;8741:4;;8729:10;;8711:48;;;;;;;;;8783:1;8769:15;;;8794;;;;:19;-1:-1:-1;;8471:349:15:o;5974:175::-;6035:8;:15;6018:14;6060:83;6088:6;6082:3;:12;6060:83;;;6117:15;6128:3;6117:10;:15::i;:::-;6096:5;;6060:83;;;;5974:175;:::o;4290:298::-;1280:12:2;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:2;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:2;;;;;;;;;;;;;;;4387:11:15::1;4383:59;;;4414:17;:15;:17::i;:::-;4469:63;4520:11;4469:46;4489:8;4498:4;4489:14;;;;;;;;;;;;;;;;;;:25;;;4469:15;;:19;;:46;;;;:::i;:::-;:50:::0;::::1;:63::i;:::-;4451:15;:81;;;;4570:11;4542:8;4551:4;4542:14;;;;;;;;;;;;;;;;;;:25;;:39;;;;4290:298:::0;;;:::o;1689:145:2:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:2;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:2;;;;;;;;;;;;;;;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:2;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:2::1;::::0;;1689:145::o;2400:45:15:-;2443:2;2400:45;:::o;9264:126::-;9334:7;;-1:-1:-1;;;;;9334:7:15;9320:10;:21;9312:43;;;;;-1:-1:-1;;;9312:43:15;;;;;;;;;;;;-1:-1:-1;;;9312:43:15;;;;;;;;;;;;;;;9365:7;:18;;-1:-1:-1;;;;;;9365:18:15;-1:-1:-1;;;;;9365:18:15;;;;;;;;;;9264:126::o;1066:77:2:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:2;1066:77;:::o;4662:413:15:-;4734:7;4764:13;;4757:3;:20;4753:316;;4800:36;2443:2;4800:14;:3;4808:5;4800:7;:14::i;:36::-;4793:43;;;;4753:316;4866:13;;4857:5;:22;4853:216;;4902:14;:3;4910:5;4902:7;:14::i;4853:216::-;4954:104;5022:22;5030:13;;5022:3;:7;;:22;;;;:::i;:::-;4954:46;2443:2;4954:24;4972:5;4954:13;;:17;;:24;;;;:::i;2558:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2319:28::-;;;;:::o;2168:22::-;;;-1:-1:-1;;;;;2168:22:15;;:::o;7063:647::-;7128:21;7152:8;7161:4;7152:14;;;;;;;;;;;;;;;;7200;;;:8;:14;;;;;;7215:10;7200:26;;;;;;;7152:14;;;;;;;;-1:-1:-1;7236:16:15;7209:4;7236:10;:16::i;:::-;7266:11;;:15;7262:185;;7297:15;7315:69;7368:4;:15;;;7315:48;7358:4;7315:38;7331:4;:21;;;7315:4;:11;;;:15;;:38;;;;:::i;:69::-;7297:87;;7398:38;7416:10;7428:7;7398:17;:38::i;:::-;7262:185;;7456:12;;:74;;-1:-1:-1;;;;;7456:12:15;7494:10;7515:4;7522:7;7456:29;:74::i;:::-;7554:11;;:24;;7570:7;7554:15;:24::i;:::-;7540:38;;;7622:21;;;;7606:48;;7649:4;;7606:38;;7540;7606:15;:38::i;:48::-;7588:15;;;:66;7669:34;;;;;;;;7689:4;;7677:10;;7669:34;;;;;;;;;7063:647;;;;:::o;1983:240:2:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:2;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:2;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:2;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:2::1;-1:-1:-1::0;;;;;2199:17:2;;;::::1;::::0;;;::::1;::::0;;1983:240::o;2180:459:3:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:3;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:1;2180:459;-1:-1:-1;;;2180:459:3:o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:134;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;590:104:0:-;677:10;590:104;:::o;8933:278:15:-;9028:5;;:30;;;-1:-1:-1;;;9028:30:15;;9052:4;9028:30;;;;;;9009:16;;-1:-1:-1;;;;;9028:5:15;;:15;;:30;;;;;;;;;;;;;;:5;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9028:30:15;;-1:-1:-1;9072:18:15;;;9068:137;;;9106:5;;:29;;;-1:-1:-1;;;9106:29:15;;-1:-1:-1;;;;;9106:29:15;;;;;;;;;;;;;;;:5;;;;;:14;;:29;;;;;;;;;;;;;;:5;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9068:137:15;;-1:-1:-1;9068:137:15;;9166:5;;:28;;;-1:-1:-1;;;9166:28:15;;-1:-1:-1;;;;;9166:28:15;;;;;;;;;;;;;;;:5;;;;;:14;;:28;;;;;;;;;;;;;;:5;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9068:137:15;8933:278;;;:::o;696:175:5:-;805:58;;;-1:-1:-1;;;;;805:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;805:58:5;-1:-1:-1;;;805:58:5;;;778:86;;798:5;;778:19;:86::i;877:203::-;1004:68;;;-1:-1:-1;;;;;1004:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1004:68:5;-1:-1:-1;;;1004:68:5;;;977:96;;997:5;;977:19;:96::i;:::-;877:203;;;;:::o;3713:272:3:-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:3:o;1746:187::-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:3;;;1746:187::o;2959:751:5:-;3378:23;3404:69;3432:4;3404:69;;;;;;;;;;;;;;;;;3412:5;-1:-1:-1;;;;;3404:27:5;;;:69;;;;;:::i;:::-;3487:17;;3378:95;;-1:-1:-1;3487:21:5;3483:221;;3627:10;3616:30;;;;;;;;;;;;;;;-1:-1:-1;3616:30:5;3608:85;;;;-1:-1:-1;;;3608:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3573:194:6;3676:12;3707:53;3730:6;3738:4;3744:1;3747:12;3707:22;:53::i;:::-;3700:60;3573:194;-1:-1:-1;;;;3573:194:6:o;4920:958::-;5050:12;5082:18;5093:6;5082:10;:18::i;:::-;5074:60;;;;;-1:-1:-1;;;5074:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;5205:12;5219:23;5246:6;-1:-1:-1;;;;;5246:11:6;5266:8;5277:4;5246:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5246:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5204:78;;;;5296:7;5292:580;;;5326:10;-1:-1:-1;5319:17:6;;-1:-1:-1;5319:17:6;5292:580;5437:17;;:21;5433:429;;5695:10;5689:17;5755:15;5742:10;5738:2;5734:19;5727:44;5644:145;5827:20;;-1:-1:-1;;;5827:20:6;;;;;;;;;;;;;;;;;5834:12;;5827:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:413;1078:20;1116:8;;;718:413::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    757,
    9392
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x630B5BA1 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x8DBB1E3A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xB0BCF42A EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C0 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x8D88A90E EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31D JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x1AED6553 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x297 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xA087903 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x195426EC EQ PUSH2 0x1E5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x43C JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x442 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x5BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x739 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x880 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x886 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0x24D PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x24D PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x15A PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCDD JUMP JUMPDEST PUSH2 0x174 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x174 PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x408 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x452 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP8 MSTORE SWAP1 DUP5 MSTORE DUP2 DUP7 KECCAK256 PUSH1 0x4 SWAP6 DUP7 MUL SWAP1 SWAP4 ADD PUSH1 0x3 DUP2 ADD SLOAD DUP2 SLOAD DUP5 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP9 DUP2 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP4 MLOAD SWAP2 SWAP9 POP SWAP4 SWAP7 SWAP4 SWAP6 SWAP4 SWAP5 SWAP3 SWAP1 SWAP2 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 DUP6 ADD SLOAD SWAP1 SWAP2 POP NUMBER GT DUP1 ISZERO PUSH2 0x511 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 PUSH2 0x526 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xD59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x559 PUSH1 0x7 SLOAD PUSH2 0x553 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x54D PUSH1 0x4 SLOAD DUP8 PUSH2 0xFF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xFF5 JUMP JUMPDEST SWAP1 PUSH2 0x1055 JUMP JUMPDEST SWAP1 POP PUSH2 0x578 PUSH2 0x571 DUP5 PUSH2 0x553 DUP5 PUSH5 0xE8D4A51000 PUSH2 0xFF5 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1097 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x5AB DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x5A5 PUSH5 0xE8D4A51000 PUSH2 0x553 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0xFF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x10F1 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5C6 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x616 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x624 JUMPI PUSH2 0x624 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD NUMBER GT PUSH2 0x637 JUMPI PUSH1 0x8 SLOAD PUSH2 0x639 JUMP JUMPDEST NUMBER JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x649 SWAP1 DUP6 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 DUP7 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE SWAP2 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 PUSH1 0x4 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP4 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP5 ADD SSTORE MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP4 ADD SSTORE POP SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x748 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x7C4 DUP5 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x5A5 PUSH5 0xE8D4A51000 PUSH2 0x553 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0xFF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x7FE CALLER DUP3 PUSH2 0x1137 JUMP JUMPDEST DUP2 SLOAD PUSH2 0x80A SWAP1 DUP6 PUSH2 0x10F1 JUMP JUMPDEST DUP1 DUP4 SSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x827 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP3 SLOAD PUSH2 0x842 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x12C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x895 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x8B6 JUMPI POP PUSH2 0xAA4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x900 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x914 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x92A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x940 JUMPI POP NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x950 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xD59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x977 PUSH1 0x7 SLOAD PUSH2 0x553 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x54D PUSH1 0x4 SLOAD DUP8 PUSH2 0xFF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0x40C10F19 SWAP2 AND PUSH2 0x99E DUP5 PUSH1 0xA PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP PUSH4 0x40C10F19 SWAP3 POP PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xA91 PUSH2 0xA86 DUP5 PUSH2 0x553 PUSH5 0xE8D4A51000 DUP6 PUSH2 0xFF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE POP POP NUMBER PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAB6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE SWAP1 SWAP4 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP4 MUL SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP5 POP PUSH2 0xAFB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH2 0x12C8 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP5 SWAP2 CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB61 JUMPI PUSH2 0xB59 DUP2 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB48 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB6D PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xBBD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xBCB JUMPI PUSH2 0xBCB PUSH2 0xB42 JUMP JUMPDEST PUSH2 0xC08 DUP3 PUSH2 0xC02 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xBDF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x10F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC1C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xC3E PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xC8E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD28 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6465763A207775743F PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 GT PUSH2 0xD7A JUMPI PUSH2 0xD73 PUSH1 0xA PUSH2 0x54D DUP5 DUP7 PUSH2 0x10F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 LT PUSH2 0xD8D JUMPI PUSH2 0xD73 DUP3 DUP5 PUSH2 0x10F1 JUMP JUMPDEST PUSH2 0xD73 PUSH2 0xDA5 PUSH1 0x3 SLOAD DUP5 PUSH2 0x10F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC02 PUSH1 0xA PUSH2 0x54D DUP8 PUSH1 0x3 SLOAD PUSH2 0x10F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xE07 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xE38 DUP5 PUSH2 0x886 JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0xE7B JUMPI PUSH1 0x0 PUSH2 0xE6D DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x5A5 PUSH5 0xE8D4A51000 PUSH2 0x553 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0xFF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE79 CALLER DUP3 PUSH2 0x1137 JUMP JUMPDEST POP JUMPDEST DUP2 SLOAD PUSH2 0xE92 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x131A JUMP JUMPDEST DUP1 SLOAD PUSH2 0xE9E SWAP1 DUP5 PUSH2 0x1097 JUMP JUMPDEST DUP1 DUP3 SSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0xEBB SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xF05 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xF55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16F9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16B2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1004 JUMPI POP PUSH1 0x0 PUSH2 0x5B2 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1011 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x104E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16D8 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x137A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x104E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x104E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x141C JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1196 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1240 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x120E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1222 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x12C3 SWAP1 DUP5 SWAP1 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1374 SWAP1 DUP6 SWAP1 PUSH2 0x1476 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1406 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13CB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13B3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13F8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1412 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x146E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x13CB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13B3 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x14CB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1527 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x12C3 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x12C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1719 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1536 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x153E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1549 DUP6 PUSH2 0x16AB JUMP JUMPDEST PUSH2 0x159A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x15D9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x163B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x1654 JUMPI SWAP2 POP PUSH2 0x1536 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1664 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x13CB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13B3 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F774F776E61626C653A206361 PUSH13 0x6C6572206973206E6F74207468 PUSH6 0x206F776E6572 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220CD016012 0x4A 0xAB 0xBC DUP7 0xB1 DUP14 0xDC DUP15 SWAP13 DIFFICULTY 0xC3 0x2F SWAP2 MSIZE DUP7 DUP3 PUSH20 0xC6DC997CD7B3940172F26864736F6C634300060C STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        757,
        9392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "6": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "REVERT",
      "path": "15"
    },
    "16": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "17": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "POP",
      "path": "15"
    },
    "18": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "21": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "LT",
      "path": "15"
    },
    "22": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "25": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "29": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "SHR",
      "path": "15"
    },
    "32": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "33": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x630B5BA1"
    },
    "38": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "GT",
      "path": "15"
    },
    "39": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "43": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "44": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8DBB1E3A"
    },
    "49": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "GT",
      "path": "15"
    },
    "50": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "54": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "55": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8DBB1E3A"
    },
    "60": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "61": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x325"
    },
    "64": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "65": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "66": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x93F1A40B"
    },
    "71": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "72": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x348"
    },
    "75": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "76": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "77": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB0BCF42A"
    },
    "82": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "83": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38D"
    },
    "86": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "87": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "88": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD49E77CD"
    },
    "93": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "94": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x395"
    },
    "97": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "98": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "99": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE2BBB158"
    },
    "104": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "105": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x39D"
    },
    "108": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "109": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "110": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "116": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3C0"
    },
    "119": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "120": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "123": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMP",
      "path": "15"
    },
    "124": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "125": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "126": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x630B5BA1"
    },
    "131": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "132": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B4"
    },
    "135": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "136": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "137": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x64482F79"
    },
    "142": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "143": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BC"
    },
    "146": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "147": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "148": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x715018A6"
    },
    "153": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "154": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E7"
    },
    "157": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "158": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "159": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8AA28550"
    },
    "164": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "165": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EF"
    },
    "168": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "169": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "170": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8D88A90E"
    },
    "175": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "176": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F7"
    },
    "179": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "180": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "181": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8DA5CB5B"
    },
    "186": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "187": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31D"
    },
    "190": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "191": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "194": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMP",
      "path": "15"
    },
    "195": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "196": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "197": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1AED6553"
    },
    "202": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "GT",
      "path": "15"
    },
    "203": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "207": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "208": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1AED6553"
    },
    "213": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "214": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x211"
    },
    "217": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "218": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "219": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1EAAA045"
    },
    "224": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "225": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x219"
    },
    "228": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "229": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "230": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x441A3E70"
    },
    "235": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "236": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24F"
    },
    "239": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "240": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "241": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x48CD4CB1"
    },
    "246": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "247": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x272"
    },
    "250": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "251": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "252": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x51EB05A6"
    },
    "257": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "258": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27A"
    },
    "261": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "262": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "263": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5312EA8E"
    },
    "268": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "269": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x297"
    },
    "272": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "273": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "276": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMP",
      "path": "15"
    },
    "277": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "278": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "279": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x81E3EDA"
    },
    "284": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "285": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x152"
    },
    "288": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "289": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "290": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA087903"
    },
    "295": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "296": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16C"
    },
    "299": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "300": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "301": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1526FE27"
    },
    "306": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "307": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x190"
    },
    "310": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "311": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "312": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x17CAF6F1"
    },
    "317": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "318": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DD"
    },
    "321": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "322": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "323": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x195426EC"
    },
    "328": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "EQ",
      "path": "15"
    },
    "329": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E5"
    },
    "332": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "333": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "334": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "336": {
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "DUP1",
      "path": "15"
    },
    "337": {
      "first_revert": true,
      "fn": null,
      "offset": [
        757,
        9392
      ],
      "op": "REVERT",
      "path": "15"
    },
    "338": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "339": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15A"
    },
    "342": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E6"
    },
    "345": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        3436,
        3529
      ],
      "op": "JUMP",
      "path": "15"
    },
    "346": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "347": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "349": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "DUP1",
      "path": "15"
    },
    "350": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "351": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "352": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "DUP3",
      "path": "15"
    },
    "353": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "354": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "355": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "356": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "DUP2",
      "path": "15"
    },
    "357": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "358": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "SUB",
      "path": "15"
    },
    "359": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "361": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "ADD",
      "path": "15"
    },
    "362": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "363": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "RETURN",
      "path": "15"
    },
    "364": {
      "offset": [
        2118,
        2142
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "365": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x174"
    },
    "368": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3EC"
    },
    "371": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        2118,
        2142
      ],
      "op": "JUMP",
      "path": "15"
    },
    "372": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "373": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "375": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "DUP1",
      "path": "15"
    },
    "376": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "383": {
      "op": "SHL"
    },
    "384": {
      "op": "SUB"
    },
    "385": {
      "offset": [
        2118,
        2142
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "386": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "387": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "AND",
      "path": "15"
    },
    "388": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "DUP3",
      "path": "15"
    },
    "389": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "390": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "391": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "392": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "DUP2",
      "path": "15"
    },
    "393": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "394": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "SUB",
      "path": "15"
    },
    "395": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "397": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "ADD",
      "path": "15"
    },
    "398": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "399": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "RETURN",
      "path": "15"
    },
    "400": {
      "offset": [
        2478,
        2504
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "401": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AD"
    },
    "404": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "406": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP1",
      "path": "15"
    },
    "407": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "408": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SUB",
      "path": "15"
    },
    "409": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "411": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP2",
      "path": "15"
    },
    "412": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "LT",
      "path": "15"
    },
    "413": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "414": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A6"
    },
    "417": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "418": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "420": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP1",
      "path": "15"
    },
    "421": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "REVERT",
      "path": "15"
    },
    "422": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "423": {
      "op": "POP"
    },
    "424": {
      "offset": [
        2478,
        2504
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "425": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3FB"
    },
    "428": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        2478,
        2504
      ],
      "op": "JUMP",
      "path": "15"
    },
    "429": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "430": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "432": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP1",
      "path": "15"
    },
    "433": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "440": {
      "op": "SHL"
    },
    "441": {
      "op": "SUB"
    },
    "442": {
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "443": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "444": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "AND",
      "path": "15"
    },
    "445": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP6",
      "path": "15"
    },
    "446": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "447": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "449": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP6",
      "path": "15"
    },
    "450": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "ADD",
      "path": "15"
    },
    "451": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "452": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "453": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "454": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "455": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP4",
      "path": "15"
    },
    "456": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP4",
      "path": "15"
    },
    "457": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "ADD",
      "path": "15"
    },
    "458": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "459": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "460": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "461": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "462": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "464": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP4",
      "path": "15"
    },
    "465": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "ADD",
      "path": "15"
    },
    "466": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "467": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "468": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "469": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP2",
      "path": "15"
    },
    "470": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "471": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SUB",
      "path": "15"
    },
    "472": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "474": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "ADD",
      "path": "15"
    },
    "475": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "476": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "RETURN",
      "path": "15"
    },
    "477": {
      "offset": [
        2717,
        2751
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "478": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2717,
        2751
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15A"
    },
    "481": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2717,
        2751
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43C"
    },
    "484": {
      "fn": "MasterChef.poolLength",
      "jump": "i",
      "offset": [
        2717,
        2751
      ],
      "op": "JUMP",
      "path": "15"
    },
    "485": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "486": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15A"
    },
    "489": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "491": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "DUP1",
      "path": "15"
    },
    "492": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "493": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "SUB",
      "path": "15"
    },
    "494": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "496": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "DUP2",
      "path": "15"
    },
    "497": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "LT",
      "path": "15"
    },
    "498": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "499": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FB"
    },
    "502": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "503": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "505": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "DUP1",
      "path": "15"
    },
    "506": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "REVERT",
      "path": "15"
    },
    "507": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "508": {
      "op": "POP"
    },
    "509": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "DUP1",
      "path": "15"
    },
    "510": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "511": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "512": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "514": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "ADD",
      "path": "15"
    },
    "515": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "522": {
      "op": "SHL"
    },
    "523": {
      "op": "SUB"
    },
    "524": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "AND",
      "path": "15"
    },
    "525": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x442"
    },
    "528": {
      "fn": "MasterChef.pendingSushi",
      "jump": "i",
      "offset": [
        5137,
        5894
      ],
      "op": "JUMP",
      "path": "15"
    },
    "529": {
      "offset": [
        2246,
        2274
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "530": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        2246,
        2274
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15A"
    },
    "533": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        2246,
        2274
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5B8"
    },
    "536": {
      "fn": "MasterChef.pendingSushi",
      "jump": "i",
      "offset": [
        2246,
        2274
      ],
      "op": "JUMP",
      "path": "15"
    },
    "537": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "538": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24D"
    },
    "541": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "543": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "DUP1",
      "path": "15"
    },
    "544": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "545": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "SUB",
      "path": "15"
    },
    "546": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "548": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "DUP2",
      "path": "15"
    },
    "549": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "LT",
      "path": "15"
    },
    "550": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "551": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22F"
    },
    "554": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "555": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "557": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "DUP1",
      "path": "15"
    },
    "558": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "REVERT",
      "path": "15"
    },
    "559": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "560": {
      "op": "POP"
    },
    "561": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "DUP1",
      "path": "15"
    },
    "562": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "563": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "570": {
      "op": "SHL"
    },
    "571": {
      "op": "SUB"
    },
    "572": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "574": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "DUP3",
      "path": "15"
    },
    "575": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "ADD",
      "path": "15"
    },
    "576": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "577": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "AND",
      "path": "15"
    },
    "578": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "579": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "581": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "ADD",
      "path": "15"
    },
    "582": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "583": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "584": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "585": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5BE"
    },
    "588": {
      "fn": "MasterChef.add",
      "jump": "i",
      "offset": [
        3694,
        4196
      ],
      "op": "JUMP",
      "path": "15"
    },
    "589": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "590": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "STOP",
      "path": "15"
    },
    "591": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "592": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24D"
    },
    "595": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "597": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "DUP1",
      "path": "15"
    },
    "598": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "599": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "SUB",
      "path": "15"
    },
    "600": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "602": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "DUP2",
      "path": "15"
    },
    "603": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "LT",
      "path": "15"
    },
    "604": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "605": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x265"
    },
    "608": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "609": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "611": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "DUP1",
      "path": "15"
    },
    "612": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "REVERT",
      "path": "15"
    },
    "613": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "614": {
      "op": "POP"
    },
    "615": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "DUP1",
      "path": "15"
    },
    "616": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "617": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "618": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "620": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "ADD",
      "path": "15"
    },
    "621": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "622": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x739"
    },
    "625": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        7759,
        8403
      ],
      "op": "JUMP",
      "path": "15"
    },
    "626": {
      "offset": [
        2807,
        2832
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "627": {
      "fn": "MasterChef.withdraw",
      "offset": [
        2807,
        2832
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15A"
    },
    "630": {
      "fn": "MasterChef.withdraw",
      "offset": [
        2807,
        2832
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x880"
    },
    "633": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        2807,
        2832
      ],
      "op": "JUMP",
      "path": "15"
    },
    "634": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "635": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24D"
    },
    "638": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "640": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "DUP1",
      "path": "15"
    },
    "641": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "642": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "SUB",
      "path": "15"
    },
    "643": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "645": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "DUP2",
      "path": "15"
    },
    "646": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "LT",
      "path": "15"
    },
    "647": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "648": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x290"
    },
    "651": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "652": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "654": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "DUP1",
      "path": "15"
    },
    "655": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "REVERT",
      "path": "15"
    },
    "656": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "657": {
      "op": "POP"
    },
    "658": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "659": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x886"
    },
    "662": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        6222,
        6996
      ],
      "op": "JUMP",
      "path": "15"
    },
    "663": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "664": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24D"
    },
    "667": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "669": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "DUP1",
      "path": "15"
    },
    "670": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "671": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "SUB",
      "path": "15"
    },
    "672": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "674": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "DUP2",
      "path": "15"
    },
    "675": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "LT",
      "path": "15"
    },
    "676": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "677": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AD"
    },
    "680": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "681": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "683": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "DUP1",
      "path": "15"
    },
    "684": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "REVERT",
      "path": "15"
    },
    "685": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "688": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAA7"
    },
    "691": {
      "fn": "MasterChef.emergencyWithdraw",
      "jump": "i",
      "offset": [
        8471,
        8820
      ],
      "op": "JUMP",
      "path": "15"
    },
    "692": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        5974,
        6149
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "693": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        5974,
        6149
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24D"
    },
    "696": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        5974,
        6149
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB42"
    },
    "699": {
      "fn": "MasterChef.massUpdatePools",
      "jump": "i",
      "offset": [
        5974,
        6149
      ],
      "op": "JUMP",
      "path": "15"
    },
    "700": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "701": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24D"
    },
    "704": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "706": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "DUP1",
      "path": "15"
    },
    "707": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "708": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "SUB",
      "path": "15"
    },
    "709": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "711": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "DUP2",
      "path": "15"
    },
    "712": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "LT",
      "path": "15"
    },
    "713": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "714": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D2"
    },
    "717": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "718": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "720": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "DUP1",
      "path": "15"
    },
    "721": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "REVERT",
      "path": "15"
    },
    "722": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "723": {
      "op": "POP"
    },
    "724": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "DUP1",
      "path": "15"
    },
    "725": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "726": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "727": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "729": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "DUP2",
      "path": "15"
    },
    "730": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "ADD",
      "path": "15"
    },
    "731": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "732": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "733": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "735": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "ADD",
      "path": "15"
    },
    "736": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "737": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "738": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "739": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB65"
    },
    "742": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        4290,
        4588
      ],
      "op": "JUMP",
      "path": "15"
    },
    "743": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1689,
        1834
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "744": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1689,
        1834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24D"
    },
    "747": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1689,
        1834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC36"
    },
    "750": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1689,
        1834
      ],
      "op": "JUMP",
      "path": "2"
    },
    "751": {
      "offset": [
        2400,
        2445
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "752": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2400,
        2445
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15A"
    },
    "755": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2400,
        2445
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCD8"
    },
    "758": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2400,
        2445
      ],
      "op": "JUMP",
      "path": "15"
    },
    "759": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "760": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24D"
    },
    "763": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "765": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "DUP1",
      "path": "15"
    },
    "766": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "767": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "SUB",
      "path": "15"
    },
    "768": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "770": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "DUP2",
      "path": "15"
    },
    "771": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "LT",
      "path": "15"
    },
    "772": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "773": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30D"
    },
    "776": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "777": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "779": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "DUP1",
      "path": "15"
    },
    "780": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "REVERT",
      "path": "15"
    },
    "781": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "782": {
      "op": "POP"
    },
    "783": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "790": {
      "op": "SHL"
    },
    "791": {
      "op": "SUB"
    },
    "792": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "AND",
      "path": "15"
    },
    "793": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCDD"
    },
    "796": {
      "fn": "MasterChef.dev",
      "jump": "i",
      "offset": [
        9264,
        9390
      ],
      "op": "JUMP",
      "path": "15"
    },
    "797": {
      "fn": "Ownable.owner",
      "offset": [
        1066,
        1143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "798": {
      "fn": "Ownable.owner",
      "offset": [
        1066,
        1143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x174"
    },
    "801": {
      "fn": "Ownable.owner",
      "offset": [
        1066,
        1143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD4A"
    },
    "804": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1066,
        1143
      ],
      "op": "JUMP",
      "path": "2"
    },
    "805": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "806": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15A"
    },
    "809": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "811": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "DUP1",
      "path": "15"
    },
    "812": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "813": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "SUB",
      "path": "15"
    },
    "814": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "816": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "DUP2",
      "path": "15"
    },
    "817": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "LT",
      "path": "15"
    },
    "818": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "819": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33B"
    },
    "822": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "823": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "825": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "DUP1",
      "path": "15"
    },
    "826": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "REVERT",
      "path": "15"
    },
    "827": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "DUP1",
      "path": "15"
    },
    "830": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "831": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "832": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "834": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "ADD",
      "path": "15"
    },
    "835": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "836": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD59"
    },
    "839": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        4662,
        5075
      ],
      "op": "JUMP",
      "path": "15"
    },
    "840": {
      "offset": [
        2558,
        2624
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "841": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x374"
    },
    "844": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "846": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP1",
      "path": "15"
    },
    "847": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "848": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SUB",
      "path": "15"
    },
    "849": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "851": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP2",
      "path": "15"
    },
    "852": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "LT",
      "path": "15"
    },
    "853": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "854": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35E"
    },
    "857": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "858": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "860": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP1",
      "path": "15"
    },
    "861": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "REVERT",
      "path": "15"
    },
    "862": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "863": {
      "op": "POP"
    },
    "864": {
      "offset": [
        2558,
        2624
      ],
      "op": "DUP1",
      "path": "15"
    },
    "865": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "866": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "867": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "869": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "ADD",
      "path": "15"
    },
    "870": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "877": {
      "op": "SHL"
    },
    "878": {
      "op": "SUB"
    },
    "879": {
      "offset": [
        2558,
        2624
      ],
      "op": "AND",
      "path": "15"
    },
    "880": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDBF"
    },
    "883": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        2558,
        2624
      ],
      "op": "JUMP",
      "path": "15"
    },
    "884": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "885": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "887": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP1",
      "path": "15"
    },
    "888": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "889": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "890": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP4",
      "path": "15"
    },
    "891": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "892": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "894": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP4",
      "path": "15"
    },
    "895": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "ADD",
      "path": "15"
    },
    "896": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "897": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "898": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "899": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "900": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP1",
      "path": "15"
    },
    "901": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "902": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "903": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP3",
      "path": "15"
    },
    "904": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "905": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SUB",
      "path": "15"
    },
    "906": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "ADD",
      "path": "15"
    },
    "907": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "908": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "RETURN",
      "path": "15"
    },
    "909": {
      "offset": [
        2319,
        2347
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "910": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2319,
        2347
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15A"
    },
    "913": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2319,
        2347
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDE3"
    },
    "916": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        2319,
        2347
      ],
      "op": "JUMP",
      "path": "15"
    },
    "917": {
      "offset": [
        2168,
        2190
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "918": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2168,
        2190
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x174"
    },
    "921": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2168,
        2190
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDE9"
    },
    "924": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        2168,
        2190
      ],
      "op": "JUMP",
      "path": "15"
    },
    "925": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "926": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24D"
    },
    "929": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "931": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "DUP1",
      "path": "15"
    },
    "932": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "933": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "SUB",
      "path": "15"
    },
    "934": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "936": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "937": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "LT",
      "path": "15"
    },
    "938": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "939": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3B3"
    },
    "942": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "943": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "945": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "DUP1",
      "path": "15"
    },
    "946": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "REVERT",
      "path": "15"
    },
    "947": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "DUP1",
      "path": "15"
    },
    "950": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "951": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "952": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "954": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "ADD",
      "path": "15"
    },
    "955": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "956": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDF8"
    },
    "959": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        7063,
        7710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "960": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "961": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24D"
    },
    "964": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "966": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "DUP1",
      "path": "2"
    },
    "967": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "968": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "SUB",
      "path": "2"
    },
    "969": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "971": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "DUP2",
      "path": "2"
    },
    "972": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "LT",
      "path": "2"
    },
    "973": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "974": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D6"
    },
    "977": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "978": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "980": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "DUP1",
      "path": "2"
    },
    "981": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "REVERT",
      "path": "2"
    },
    "982": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "983": {
      "op": "POP"
    },
    "984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "SUB"
    },
    "993": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "AND",
      "path": "2"
    },
    "994": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEFD"
    },
    "997": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1983,
        2223
      ],
      "op": "JUMP",
      "path": "2"
    },
    "998": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "999": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3507,
        3515
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 0,
      "value": "0x5"
    },
    "1001": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3507,
        3522
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1002": {
      "fn": "MasterChef.poolLength",
      "offset": [
        3436,
        3529
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1003": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        3436,
        3529
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1004": {
      "offset": [
        2118,
        2142
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1005": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1007": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1014": {
      "op": "SHL"
    },
    "1015": {
      "op": "SUB"
    },
    "1016": {
      "offset": [
        2118,
        2142
      ],
      "op": "AND",
      "path": "15"
    },
    "1017": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2118,
        2142
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1018": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        2118,
        2142
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1019": {
      "offset": [
        2478,
        2504
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1020": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1022": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1023": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1024": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1025": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1026": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "LT",
      "path": "15"
    },
    "1027": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x408"
    },
    "1030": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1031": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "INVALID",
      "path": "15"
    },
    "1032": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1033": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1035": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1036": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1037": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1038": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1040": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1041": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1042": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1043": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1045": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1046": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1047": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "MUL",
      "path": "15"
    },
    "1048": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "ADD",
      "path": "15"
    },
    "1049": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1050": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1051": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1053": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1054": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "ADD",
      "path": "15"
    },
    "1055": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1056": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1058": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1059": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "ADD",
      "path": "15"
    },
    "1060": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1061": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "1063": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1064": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1065": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "ADD",
      "path": "15"
    },
    "1066": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1073": {
      "op": "SHL"
    },
    "1074": {
      "op": "SUB"
    },
    "1075": {
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1076": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1077": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "AND",
      "path": "15"
    },
    "1078": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1081": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1082": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2478,
        2504
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1083": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        2478,
        2504
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1084": {
      "offset": [
        2717,
        2751
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1085": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2717,
        2751
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "1087": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2717,
        2751
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1088": {
      "fn": "MasterChef.poolLength",
      "offset": [
        2717,
        2751
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1089": {
      "fn": "MasterChef.poolLength",
      "jump": "o",
      "offset": [
        2717,
        2751
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1090": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1091": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5211,
        5218
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1093": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5230,
        5251
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1094": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5262
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1096": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5263,
        5267
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1097": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1098": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1099": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1100": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "LT",
      "path": "15"
    },
    "1101": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x452"
    },
    "1104": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1105": {
      "dev": "Index out of range",
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "INVALID",
      "path": "15"
    },
    "1106": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1107": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1109": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1110": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1111": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1112": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1114": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1115": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1116": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1117": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5316
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1118": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5316
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1119": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5316
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1120": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5310
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "1122": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5316
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1123": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5316
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1124": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5316
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1126": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5316
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1127": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5316
      ],
      "op": "DUP6",
      "path": "15"
    },
    "1128": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5316
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1135": {
      "op": "SHL"
    },
    "1136": {
      "op": "SUB"
    },
    "1137": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1138": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1139": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "AND",
      "path": "15"
    },
    "1140": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1141": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1142": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1143": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1144": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1145": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1146": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1147": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1148": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1150": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "1151": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1152": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "MUL",
      "path": "15"
    },
    "1153": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1154": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1155": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "ADD",
      "path": "15"
    },
    "1156": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5360,
        5381
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "1158": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5360,
        5381
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1159": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5360,
        5381
      ],
      "op": "ADD",
      "path": "15"
    },
    "1160": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5360,
        5381
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1161": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5422
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1162": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5422
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1163": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1164": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1165": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1172": {
      "op": "SHL"
    },
    "1173": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1174": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1175": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5441,
        5445
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "1176": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1177": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1178": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "ADD",
      "path": "15"
    },
    "1179": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1180": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1181": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1182": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1183": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1184": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1185": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1186": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1187": {
      "op": "POP"
    },
    "1188": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1189": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5302,
        5323
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "1190": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5360,
        5381
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1191": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5360,
        5381
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "1192": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1193": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "1194": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5422
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1195": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5422
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1196": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5422
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1197": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5422
      ],
      "op": "AND",
      "path": "15"
    },
    "1198": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5422
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1199": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5432
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "1204": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5432
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1205": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1207": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1208": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1209": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "ADD",
      "path": "15"
    },
    "1210": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1211": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1212": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5254,
        5268
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1213": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1214": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1215": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "SUB",
      "path": "15"
    },
    "1216": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "ADD",
      "path": "15"
    },
    "1217": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1218": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5422
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1219": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1220": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "1221": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1222": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1223": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1224": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D0"
    },
    "1227": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1228": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1230": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1231": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1232": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1233": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "POP",
      "path": "15"
    },
    "1234": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "GAS",
      "path": "15"
    },
    "1235": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "1236": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1237": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1238": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1239": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4E4"
    },
    "1242": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1243": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1244": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1246": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1247": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "1248": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1249": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1251": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1252": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1253": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "POP",
      "path": "15"
    },
    "1254": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "POP",
      "path": "15"
    },
    "1255": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "POP",
      "path": "15"
    },
    "1256": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "POP",
      "path": "15"
    },
    "1257": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1259": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1260": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1261": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1263": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1264": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "LT",
      "path": "15"
    },
    "1265": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1266": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4FA"
    },
    "1269": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1270": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1272": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1273": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1274": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1275": {
      "op": "POP"
    },
    "1276": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1277": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5476,
        5496
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1279": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5476,
        5496
      ],
      "op": "DUP6",
      "path": "15"
    },
    "1280": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5476,
        5496
      ],
      "op": "ADD",
      "path": "15"
    },
    "1281": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5476,
        5496
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1282": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1283": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5410,
        5447
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1284": {
      "op": "POP"
    },
    "1285": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5461,
        5473
      ],
      "op": "NUMBER",
      "path": "15"
    },
    "1286": {
      "branch": 65,
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5461,
        5496
      ],
      "op": "GT",
      "path": "15"
    },
    "1287": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5461,
        5513
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1288": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5461,
        5513
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1289": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5461,
        5513
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x511"
    },
    "1292": {
      "branch": 65,
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5461,
        5513
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1293": {
      "op": "POP"
    },
    "1294": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5500,
        5513
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1295": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5500,
        5513
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1296": {
      "branch": 66,
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5500,
        5513
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1297": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5461,
        5513
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1298": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5457,
        5807
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1299": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5457,
        5807
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x57D"
    },
    "1302": {
      "branch": 66,
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5457,
        5807
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1303": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5529,
        5547
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1305": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5550,
        5599
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x526"
    },
    "1308": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5564,
        5568
      ],
      "op": "DUP6",
      "path": "15"
    },
    "1309": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5564,
        5584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1311": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5564,
        5584
      ],
      "op": "ADD",
      "path": "15"
    },
    "1312": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5564,
        5584
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1313": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5586,
        5598
      ],
      "op": "NUMBER",
      "path": "15"
    },
    "1314": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5550,
        5563
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD59"
    },
    "1317": {
      "fn": "MasterChef.pendingSushi",
      "jump": "i",
      "offset": [
        5550,
        5599
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1318": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5550,
        5599
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1319": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5529,
        5599
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1320": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5529,
        5599
      ],
      "op": "POP",
      "path": "15"
    },
    "1321": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5613,
        5632
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1323": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5706
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x559"
    },
    "1326": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5690,
        5705
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "1328": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5690,
        5705
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1329": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5685
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x553"
    },
    "1332": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5669,
        5673
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1333": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5669,
        5684
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1335": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5669,
        5684
      ],
      "op": "ADD",
      "path": "15"
    },
    "1336": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5669,
        5684
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1337": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5664
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x54D"
    },
    "1340": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5650,
        5663
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1342": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5650,
        5663
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1343": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5645
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1344": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5649
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF5"
    },
    "1347": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5649
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1348": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5664
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1349": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5664
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1350": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5664
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1355": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5664
      ],
      "op": "AND",
      "path": "15"
    },
    "1356": {
      "fn": "MasterChef.pendingSushi",
      "jump": "i",
      "offset": [
        5635,
        5664
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1357": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5664
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1358": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5668
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1359": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5668
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF5"
    },
    "1362": {
      "fn": "MasterChef.pendingSushi",
      "jump": "i",
      "offset": [
        5635,
        5685
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1363": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5685
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1364": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5689
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1365": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5689
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1055"
    },
    "1368": {
      "fn": "MasterChef.pendingSushi",
      "jump": "i",
      "offset": [
        5635,
        5706
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1369": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5635,
        5706
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1370": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5613,
        5706
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1371": {
      "op": "POP"
    },
    "1372": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5739,
        5796
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 1,
      "value": "0x578"
    },
    "1375": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5760,
        5795
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x571"
    },
    "1378": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5786,
        5794
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1379": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5760,
        5781
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x553"
    },
    "1382": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5613,
        5706
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1383": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5776,
        5780
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "1389": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5760,
        5775
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF5"
    },
    "1392": {
      "fn": "MasterChef.pendingSushi",
      "jump": "i",
      "offset": [
        5760,
        5781
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1393": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5760,
        5795
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1394": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5739,
        5755
      ],
      "op": "DUP6",
      "path": "15"
    },
    "1395": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5739,
        5755
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1396": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5739,
        5759
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1097"
    },
    "1399": {
      "fn": "MasterChef.pendingSushi",
      "jump": "i",
      "offset": [
        5739,
        5796
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1400": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5739,
        5796
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1401": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5720,
        5796
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1402": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5720,
        5796
      ],
      "op": "POP",
      "path": "15"
    },
    "1403": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5457,
        5807
      ],
      "op": "POP",
      "path": "15"
    },
    "1404": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5457,
        5807
      ],
      "op": "POP",
      "path": "15"
    },
    "1405": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5457,
        5807
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1406": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5887
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 2,
      "value": "0x5AB"
    },
    "1409": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5871,
        5875
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1410": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5871,
        5886
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1412": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5871,
        5886
      ],
      "op": "ADD",
      "path": "15"
    },
    "1413": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5871,
        5886
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1414": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5A5"
    },
    "1417": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5861,
        5865
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "1423": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5856
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x553"
    },
    "1426": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5839,
        5855
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1427": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5827
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1428": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5834
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1430": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5834
      ],
      "op": "ADD",
      "path": "15"
    },
    "1431": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5834
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1432": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5838
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF5"
    },
    "1435": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5838
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1436": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5856
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1437": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5856
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1438": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5856
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1443": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5856
      ],
      "op": "AND",
      "path": "15"
    },
    "1444": {
      "fn": "MasterChef.pendingSushi",
      "jump": "i",
      "offset": [
        5823,
        5856
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1445": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5866
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1446": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5870
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1447": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5870
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10F1"
    },
    "1450": {
      "fn": "MasterChef.pendingSushi",
      "jump": "i",
      "offset": [
        5823,
        5887
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1451": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5823,
        5887
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1452": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5816,
        5887
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "1453": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5816,
        5887
      ],
      "op": "POP",
      "path": "15"
    },
    "1454": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5816,
        5887
      ],
      "op": "POP",
      "path": "15"
    },
    "1455": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5816,
        5887
      ],
      "op": "POP",
      "path": "15"
    },
    "1456": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5816,
        5887
      ],
      "op": "POP",
      "path": "15"
    },
    "1457": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5816,
        5887
      ],
      "op": "POP",
      "path": "15"
    },
    "1458": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1459": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1460": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1461": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "POP",
      "path": "15"
    },
    "1462": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        5137,
        5894
      ],
      "op": "POP",
      "path": "15"
    },
    "1463": {
      "fn": "MasterChef.pendingSushi",
      "jump": "o",
      "offset": [
        5137,
        5894
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1464": {
      "offset": [
        2246,
        2274
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1465": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        2246,
        2274
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "1467": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        2246,
        2274
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1468": {
      "fn": "MasterChef.pendingSushi",
      "offset": [
        2246,
        2274
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1469": {
      "fn": "MasterChef.pendingSushi",
      "jump": "o",
      "offset": [
        2246,
        2274
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1470": {
      "fn": "MasterChef.add",
      "offset": [
        3694,
        4196
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1471": {
      "offset": [
        1280,
        1292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C6"
    },
    "1474": {
      "offset": [
        1280,
        1290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1133"
    },
    "1477": {
      "jump": "i",
      "offset": [
        1280,
        1292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1478": {
      "fn": "MasterChef.add",
      "offset": [
        1280,
        1292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1479": {
      "offset": [
        1270,
        1276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1481": {
      "fn": "MasterChef.add",
      "offset": [
        1270,
        1276
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "op": "SUB"
    },
    "1490": {
      "offset": [
        1270,
        1276
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1491": {
      "fn": "MasterChef.add",
      "offset": [
        1270,
        1276
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1492": {
      "fn": "MasterChef.add",
      "offset": [
        1270,
        1276
      ],
      "op": "AND",
      "path": "2"
    },
    "1493": {
      "offset": [
        1270,
        1292
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1494": {
      "fn": "MasterChef.add",
      "offset": [
        1270,
        1292
      ],
      "op": "AND",
      "path": "2"
    },
    "1495": {
      "fn": "MasterChef.add",
      "offset": [
        1270,
        1292
      ],
      "op": "EQ",
      "path": "2"
    },
    "1496": {
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x616"
    },
    "1499": {
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1500": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1502": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1503": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1504": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1512": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1513": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1515": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1517": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1518": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "1519": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1520": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1521": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1522": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1524": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1525": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "1526": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1529": {
      "op": "DUP1"
    },
    "1530": {
      "op": "MLOAD"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1533": {
      "op": "PUSH2",
      "value": "0x16F9"
    },
    "1536": {
      "op": "DUP4"
    },
    "1537": {
      "op": "CODECOPY"
    },
    "1538": {
      "op": "DUP2"
    },
    "1539": {
      "op": "MLOAD"
    },
    "1540": {
      "op": "SWAP2"
    },
    "1541": {
      "op": "MSTORE"
    },
    "1542": {
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1544": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1545": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "1546": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1547": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1548": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1549": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1550": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1551": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1552": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "SUB",
      "path": "2"
    },
    "1553": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "1555": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "1556": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1557": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1558": {
      "fn": "MasterChef.add",
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1559": {
      "branch": 67,
      "fn": "MasterChef.add",
      "offset": [
        3794,
        3805
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1560": {
      "fn": "MasterChef.add",
      "offset": [
        3790,
        3849
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1561": {
      "fn": "MasterChef.add",
      "offset": [
        3790,
        3849
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x624"
    },
    "1564": {
      "branch": 67,
      "fn": "MasterChef.add",
      "offset": [
        3790,
        3849
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1565": {
      "fn": "MasterChef.add",
      "offset": [
        3821,
        3838
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 3,
      "value": "0x624"
    },
    "1568": {
      "fn": "MasterChef.add",
      "offset": [
        3821,
        3836
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB42"
    },
    "1571": {
      "fn": "MasterChef.add",
      "jump": "i",
      "offset": [
        3821,
        3838
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1572": {
      "fn": "MasterChef.add",
      "offset": [
        3821,
        3838
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1573": {
      "fn": "MasterChef.add",
      "offset": [
        3858,
        3881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1575": {
      "fn": "MasterChef.add",
      "offset": [
        3899,
        3909
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "1577": {
      "fn": "MasterChef.add",
      "offset": [
        3899,
        3909
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1578": {
      "fn": "MasterChef.add",
      "offset": [
        3884,
        3896
      ],
      "op": "NUMBER",
      "path": "15"
    },
    "1579": {
      "branch": 68,
      "fn": "MasterChef.add",
      "offset": [
        3884,
        3909
      ],
      "op": "GT",
      "path": "15"
    },
    "1580": {
      "fn": "MasterChef.add",
      "offset": [
        3884,
        3937
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x637"
    },
    "1583": {
      "branch": 68,
      "fn": "MasterChef.add",
      "offset": [
        3884,
        3937
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1584": {
      "fn": "MasterChef.add",
      "offset": [
        3927,
        3937
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "1586": {
      "fn": "MasterChef.add",
      "offset": [
        3927,
        3937
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1587": {
      "fn": "MasterChef.add",
      "offset": [
        3884,
        3937
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x639"
    },
    "1590": {
      "fn": "MasterChef.add",
      "offset": [
        3884,
        3937
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1591": {
      "fn": "MasterChef.add",
      "offset": [
        3884,
        3937
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1592": {
      "fn": "MasterChef.add",
      "offset": [
        3912,
        3924
      ],
      "op": "NUMBER",
      "path": "15"
    },
    "1593": {
      "fn": "MasterChef.add",
      "offset": [
        3884,
        3937
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1594": {
      "fn": "MasterChef.add",
      "offset": [
        3965,
        3980
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 4,
      "value": "0x7"
    },
    "1596": {
      "fn": "MasterChef.add",
      "offset": [
        3965,
        3980
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1597": {
      "fn": "MasterChef.add",
      "offset": [
        3858,
        3937
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1598": {
      "fn": "MasterChef.add",
      "offset": [
        3858,
        3937
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "fn": "MasterChef.add",
      "offset": [
        3965,
        3997
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x649"
    },
    "1603": {
      "fn": "MasterChef.add",
      "offset": [
        3965,
        3997
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1604": {
      "fn": "MasterChef.add",
      "offset": [
        3985,
        3996
      ],
      "op": "DUP6",
      "path": "15"
    },
    "1605": {
      "fn": "MasterChef.add",
      "offset": [
        3965,
        3984
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1097"
    },
    "1608": {
      "fn": "MasterChef.add",
      "jump": "i",
      "offset": [
        3965,
        3997
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1609": {
      "fn": "MasterChef.add",
      "offset": [
        3965,
        3997
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1610": {
      "fn": "MasterChef.add",
      "offset": [
        3947,
        3962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "1612": {
      "fn": "MasterChef.add",
      "offset": [
        3947,
        3997
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1613": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 5,
      "value": "0x40"
    },
    "1615": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1616": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1617": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "1619": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1620": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "ADD",
      "path": "15"
    },
    "1621": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1622": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1629": {
      "op": "SHL"
    },
    "1630": {
      "op": "SUB"
    },
    "1631": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "1632": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "DUP6",
      "path": "15"
    },
    "1633": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "AND",
      "path": "15"
    },
    "1634": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1635": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1636": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1638": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1639": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "ADD",
      "path": "15"
    },
    "1640": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "1641": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1642": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1643": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1644": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1645": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "ADD",
      "path": "15"
    },
    "1646": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1647": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1648": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1651": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "1653": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1654": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "ADD",
      "path": "15"
    },
    "1655": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1656": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1657": {
      "fn": "MasterChef.add",
      "offset": [
        4021,
        4188
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1658": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4015
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1660": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1661": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1662": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1664": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1665": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "ADD",
      "path": "15"
    },
    "1666": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1667": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1668": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1669": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1670": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1671": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1672": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "1705": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1707": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1708": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1709": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "MUL",
      "path": "15"
    },
    "1710": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1711": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1712": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "ADD",
      "path": "15"
    },
    "1713": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1714": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1721": {
      "op": "SHL"
    },
    "1722": {
      "op": "SUB"
    },
    "1723": {
      "op": "NOT"
    },
    "1724": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "AND",
      "path": "15"
    },
    "1725": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1726": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1727": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "1728": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "AND",
      "path": "15"
    },
    "1729": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "OR",
      "path": "15"
    },
    "1730": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1731": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "1732": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1733": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1734": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1735": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1"
    },
    "1768": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1769": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "ADD",
      "path": "15"
    },
    "1770": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1771": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1772": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2"
    },
    "1805": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1806": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "ADD",
      "path": "15"
    },
    "1807": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1810": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1811": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3"
    },
    "1844": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1845": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1846": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "ADD",
      "path": "15"
    },
    "1847": {
      "fn": "MasterChef.add",
      "offset": [
        4007,
        4189
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1848": {
      "fn": "MasterChef.add",
      "jump": "o",
      "offset": [
        3694,
        4196
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1849": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1850": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7825,
        7846
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1852": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7857
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1854": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7858,
        7862
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1855": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1856": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1857": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1858": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "LT",
      "path": "15"
    },
    "1859": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x748"
    },
    "1862": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1863": {
      "dev": "Index out of range",
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "INVALID",
      "path": "15"
    },
    "1864": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1865": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1867": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1868": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1869": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1870": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1872": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1873": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1874": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1875": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7911
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1876": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7911
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1877": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7911
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1878": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "1880": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7911
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1881": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7911
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1882": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1884": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7911
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1885": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7911
      ],
      "op": "DUP6",
      "path": "15"
    },
    "1886": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7911
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1887": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7912,
        7922
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1888": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7923
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1889": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7923
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1890": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7923
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1891": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7923
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1892": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7923
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1893": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7923
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1894": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7897,
        7923
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1895": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7941,
        7952
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 6
    },
    "1896": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7941,
        7952
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1897": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1899": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1900": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1901": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "MUL",
      "path": "15"
    },
    "1902": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1903": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1904": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "ADD",
      "path": "15"
    },
    "1905": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7849,
        7863
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1906": {
      "op": "POP"
    },
    "1907": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7941,
        7963
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1908": {
      "op": "GT"
    },
    "1909": {
      "branch": 69,
      "fn": "MasterChef.withdraw",
      "offset": [
        7941,
        7963
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1910": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7BB"
    },
    "1913": {
      "branch": 69,
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1914": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1916": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1917": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1918": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1926": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1927": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1929": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1931": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1932": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "ADD",
      "path": "15"
    },
    "1933": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1934": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x12"
    },
    "1936": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1938": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1939": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "ADD",
      "path": "15"
    },
    "1940": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1941": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1962": {
      "op": "SHL"
    },
    "1963": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "1965": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1966": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "ADD",
      "path": "15"
    },
    "1967": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1968": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1969": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1970": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1971": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1972": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1973": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "SUB",
      "path": "15"
    },
    "1974": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "1976": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "ADD",
      "path": "15"
    },
    "1977": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1978": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1979": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7933,
        7986
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1980": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7996,
        8012
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 7,
      "value": "0x7C4"
    },
    "1983": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8007,
        8011
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1984": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7996,
        8006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x886"
    },
    "1987": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        7996,
        8012
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1988": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7996,
        8012
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1989": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8022,
        8037
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1991": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8109
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7F2"
    },
    "1994": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8093,
        8097
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1995": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8093,
        8108
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1997": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8093,
        8108
      ],
      "op": "ADD",
      "path": "15"
    },
    "1998": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8093,
        8108
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1999": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8088
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5A5"
    },
    "2002": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8083,
        8087
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "2008": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8078
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x553"
    },
    "2011": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8056,
        8060
      ],
      "op": "DUP8",
      "path": "15"
    },
    "2012": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8056,
        8077
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2014": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8056,
        8077
      ],
      "op": "ADD",
      "path": "15"
    },
    "2015": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8056,
        8077
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2016": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8044
      ],
      "op": "DUP8",
      "path": "15"
    },
    "2017": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8051
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2019": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8051
      ],
      "op": "ADD",
      "path": "15"
    },
    "2020": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8051
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2021": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8055
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF5"
    },
    "2024": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8055
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2025": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8078
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2026": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8078
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2027": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8078
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2032": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8078
      ],
      "op": "AND",
      "path": "15"
    },
    "2033": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        8040,
        8078
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2034": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8040,
        8109
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2035": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8022,
        8109
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2036": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8022,
        8109
      ],
      "op": "POP",
      "path": "15"
    },
    "2037": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8119,
        8157
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 8,
      "value": "0x7FE"
    },
    "2040": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8137,
        8147
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2041": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8149,
        8156
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2042": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8119,
        8136
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1137"
    },
    "2045": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        8119,
        8157
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2046": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8119,
        8157
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2047": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8181,
        8192
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 9
    },
    "2048": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8181,
        8192
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2049": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8181,
        8205
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x80A"
    },
    "2052": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8181,
        8205
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2053": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8197,
        8204
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2054": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8181,
        8196
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10F1"
    },
    "2057": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        8181,
        8205
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2058": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8181,
        8205
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2059": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8167,
        8205
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2060": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8167,
        8205
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2061": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8167,
        8205
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2062": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8249,
        8270
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 10,
      "value": "0x3"
    },
    "2064": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8249,
        8270
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2065": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8249,
        8270
      ],
      "op": "ADD",
      "path": "15"
    },
    "2066": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8249,
        8270
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2067": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8233,
        8281
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x827"
    },
    "2070": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8233,
        8281
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2071": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8276,
        8280
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "2077": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8276,
        8280
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2078": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8233,
        8271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x553"
    },
    "2081": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8233,
        8271
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2082": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8167,
        8205
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2083": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8233,
        8248
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF5"
    },
    "2086": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        8233,
        8271
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2087": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8233,
        8281
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2088": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8215,
        8230
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2090": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8215,
        8230
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2091": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8215,
        8230
      ],
      "op": "ADD",
      "path": "15"
    },
    "2092": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8215,
        8281
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2093": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8291,
        8303
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 11
    },
    "2094": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8291,
        8303
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2095": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8291,
        8346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x842"
    },
    "2098": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8291,
        8346
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2105": {
      "op": "SHL"
    },
    "2106": {
      "op": "SUB"
    },
    "2107": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8291,
        8303
      ],
      "op": "AND",
      "path": "15"
    },
    "2108": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8325,
        8335
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2109": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8338,
        8345
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2110": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8291,
        8316
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12C8"
    },
    "2113": {
      "fn": "MasterChef.withdraw",
      "jump": "i",
      "offset": [
        8291,
        8346
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2114": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8291,
        8346
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2115": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 12,
      "value": "0x40"
    },
    "2117": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2118": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2119": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2120": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2121": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2122": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2123": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2124": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8382,
        8386
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2125": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8382,
        8386
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2126": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8370,
        8380
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2127": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8370,
        8380
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2128": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
    },
    "2161": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2162": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2163": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2164": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "SUB",
      "path": "15"
    },
    "2165": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2167": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "ADD",
      "path": "15"
    },
    "2168": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2169": {
      "fn": "MasterChef.withdraw",
      "offset": [
        8361,
        8396
      ],
      "op": "LOG3",
      "path": "15"
    },
    "2170": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "POP",
      "path": "15"
    },
    "2171": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "POP",
      "path": "15"
    },
    "2172": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "POP",
      "path": "15"
    },
    "2173": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "POP",
      "path": "15"
    },
    "2174": {
      "fn": "MasterChef.withdraw",
      "offset": [
        7759,
        8403
      ],
      "op": "POP",
      "path": "15"
    },
    "2175": {
      "fn": "MasterChef.withdraw",
      "jump": "o",
      "offset": [
        7759,
        8403
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2176": {
      "offset": [
        2807,
        2832
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2177": {
      "fn": "MasterChef.withdraw",
      "offset": [
        2807,
        2832
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "2179": {
      "fn": "MasterChef.withdraw",
      "offset": [
        2807,
        2832
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2180": {
      "fn": "MasterChef.withdraw",
      "offset": [
        2807,
        2832
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2181": {
      "fn": "MasterChef.withdraw",
      "jump": "o",
      "offset": [
        2807,
        2832
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2182": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2183": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6273,
        6294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2185": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6305
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "2187": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6306,
        6310
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2188": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2189": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2190": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2191": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "LT",
      "path": "15"
    },
    "2192": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x895"
    },
    "2195": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2196": {
      "dev": "Index out of range",
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "INVALID",
      "path": "15"
    },
    "2197": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2198": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2199": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2201": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2202": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2204": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2206": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2207": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2208": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2210": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "MUL",
      "path": "15"
    },
    "2211": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6297,
        6311
      ],
      "op": "ADD",
      "path": "15"
    },
    "2212": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6273,
        6311
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2213": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6273,
        6311
      ],
      "op": "POP",
      "path": "15"
    },
    "2214": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6341,
        6345
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2215": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6341,
        6361
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2217": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6341,
        6361
      ],
      "op": "ADD",
      "path": "15"
    },
    "2218": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6341,
        6361
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2219": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6325,
        6337
      ],
      "op": "NUMBER",
      "path": "15"
    },
    "2220": {
      "branch": 70,
      "fn": "MasterChef.updatePool",
      "offset": [
        6325,
        6361
      ],
      "op": "GT",
      "path": "15"
    },
    "2221": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6321,
        6394
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8B6"
    },
    "2224": {
      "branch": 70,
      "fn": "MasterChef.updatePool",
      "offset": [
        6321,
        6394
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2225": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6377,
        6384
      ],
      "op": "POP",
      "path": "15",
      "statement": 13
    },
    "2226": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6377,
        6384
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAA4"
    },
    "2229": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6377,
        6384
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2230": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6321,
        6394
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2231": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6434
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2232": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6434
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2233": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2235": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2236": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2237": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2244": {
      "op": "SHL"
    },
    "2245": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2246": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2247": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6453,
        6457
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "2248": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2250": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2251": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "ADD",
      "path": "15"
    },
    "2252": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2253": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2254": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2255": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6403,
        6419
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2257": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6403,
        6419
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "op": "SUB"
    },
    "2266": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6434
      ],
      "op": "AND",
      "path": "15"
    },
    "2267": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6434
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2268": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6444
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "2273": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6444
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2274": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2276": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2277": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2278": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "ADD",
      "path": "15"
    },
    "2279": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2280": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2282": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2283": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2284": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2285": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2286": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2287": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "SUB",
      "path": "15"
    },
    "2288": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "ADD",
      "path": "15"
    },
    "2289": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2290": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6434
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2291": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2292": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2293": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2294": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2295": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2296": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x900"
    },
    "2299": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2300": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2302": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2303": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2304": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2305": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "POP",
      "path": "15"
    },
    "2306": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "GAS",
      "path": "15"
    },
    "2307": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "2308": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2309": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2310": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2311": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x914"
    },
    "2314": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2315": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2316": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2318": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2319": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "2320": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2321": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2323": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2324": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2325": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "POP",
      "path": "15"
    },
    "2326": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "POP",
      "path": "15"
    },
    "2327": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "POP",
      "path": "15"
    },
    "2328": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "POP",
      "path": "15"
    },
    "2329": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2331": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2332": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2333": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2335": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2336": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "LT",
      "path": "15"
    },
    "2337": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2338": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x92A"
    },
    "2341": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2342": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2344": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2345": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2346": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2347": {
      "op": "POP"
    },
    "2348": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2349": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6422,
        6459
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2350": {
      "op": "POP"
    },
    "2351": {
      "branch": 71,
      "fn": "MasterChef.updatePool",
      "offset": [
        6473,
        6486
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2352": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6469,
        6568
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x940"
    },
    "2355": {
      "branch": 71,
      "fn": "MasterChef.updatePool",
      "offset": [
        6469,
        6568
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2356": {
      "op": "POP"
    },
    "2357": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6525,
        6537
      ],
      "op": "NUMBER",
      "path": "15",
      "statement": 14
    },
    "2358": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6502,
        6522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2360": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6502,
        6522
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2361": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6502,
        6522
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2362": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6502,
        6522
      ],
      "op": "ADD",
      "path": "15"
    },
    "2363": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6502,
        6537
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2364": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6551,
        6558
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 15,
      "value": "0xAA4"
    },
    "2367": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6551,
        6558
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2368": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6469,
        6568
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2369": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6577,
        6595
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2371": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6598,
        6647
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x950"
    },
    "2374": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6612,
        6616
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2375": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6612,
        6632
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2377": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6612,
        6632
      ],
      "op": "ADD",
      "path": "15"
    },
    "2378": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6612,
        6632
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2379": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6634,
        6646
      ],
      "op": "NUMBER",
      "path": "15"
    },
    "2380": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6598,
        6611
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD59"
    },
    "2383": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        6598,
        6647
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2384": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6598,
        6647
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2385": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6577,
        6647
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2386": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6577,
        6647
      ],
      "op": "POP",
      "path": "15"
    },
    "2387": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6657,
        6676
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2389": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6679,
        6750
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x977"
    },
    "2392": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6734,
        6749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "2394": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6734,
        6749
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2395": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6679,
        6729
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x553"
    },
    "2398": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6713,
        6717
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2399": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6713,
        6728
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2401": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6713,
        6728
      ],
      "op": "ADD",
      "path": "15"
    },
    "2402": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6713,
        6728
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2403": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6679,
        6708
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x54D"
    },
    "2406": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6694,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2408": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6694,
        6707
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2409": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6679,
        6689
      ],
      "op": "DUP8",
      "path": "15"
    },
    "2410": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6679,
        6693
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF5"
    },
    "2413": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6679,
        6693
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2414": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6679,
        6708
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2415": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6679,
        6708
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2416": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6679,
        6708
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2421": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6679,
        6708
      ],
      "op": "AND",
      "path": "15"
    },
    "2422": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        6679,
        6708
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2423": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6679,
        6750
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2424": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6765
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 16,
      "value": "0x1"
    },
    "2426": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2427": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6771,
        6778
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2429": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6771,
        6778
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2430": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6657,
        6750
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2431": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6657,
        6750
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2432": {
      "op": "POP"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "op": "SUB"
    },
    "2441": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6765
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2442": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6765
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2443": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6765
      ],
      "op": "AND",
      "path": "15"
    },
    "2444": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6765
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2445": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6770
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x40C10F19"
    },
    "2450": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6770
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2451": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6771,
        6778
      ],
      "op": "AND",
      "path": "15"
    },
    "2452": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6780,
        6799
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x99E"
    },
    "2455": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6657,
        6750
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2456": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6796,
        6798
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "2458": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6780,
        6795
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1055"
    },
    "2461": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        6780,
        6799
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2462": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6780,
        6799
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2463": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2465": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2466": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2467": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2472": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "AND",
      "path": "15"
    },
    "2473": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "2475": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "SHL",
      "path": "15"
    },
    "2476": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2477": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2478": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2480": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "ADD",
      "path": "15"
    },
    "2481": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2482": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2489": {
      "op": "SHL"
    },
    "2490": {
      "op": "SUB"
    },
    "2491": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "AND",
      "path": "15"
    },
    "2492": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2493": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2494": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2496": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "ADD",
      "path": "15"
    },
    "2497": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2498": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2499": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2500": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2502": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "ADD",
      "path": "15"
    },
    "2503": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2504": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "POP",
      "path": "15"
    },
    "2505": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "POP",
      "path": "15"
    },
    "2506": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "POP",
      "path": "15"
    },
    "2507": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2509": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2511": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2512": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2513": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2514": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "SUB",
      "path": "15"
    },
    "2515": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2516": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2518": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP8",
      "path": "15"
    },
    "2519": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2520": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2521": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2522": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2523": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2524": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9E4"
    },
    "2527": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2528": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2530": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2531": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2532": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2533": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "POP",
      "path": "15"
    },
    "2534": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "GAS",
      "path": "15"
    },
    "2535": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "CALL",
      "path": "15"
    },
    "2536": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2537": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2538": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2539": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9F8"
    },
    "2542": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2543": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2544": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2546": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2547": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "2548": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2549": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2551": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2552": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6760,
        6800
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2553": {
      "op": "POP"
    },
    "2554": {
      "op": "POP"
    },
    "2555": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6815
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 17,
      "value": "0x1"
    },
    "2557": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6815
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2558": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2560": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2561": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2562": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2569": {
      "op": "SHL"
    },
    "2570": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2571": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2572": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6829,
        6833
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "2573": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2575": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2576": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "ADD",
      "path": "15"
    },
    "2577": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2578": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2580": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2581": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "ADD",
      "path": "15"
    },
    "2582": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2583": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2584": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2585": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2586": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2593": {
      "op": "SHL"
    },
    "2594": {
      "op": "SUB"
    },
    "2595": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6815
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2596": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6815
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2597": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6815
      ],
      "op": "AND",
      "path": "15"
    },
    "2598": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6815
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2599": {
      "op": "POP"
    },
    "2600": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6820
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x40C10F19"
    },
    "2605": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6820
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "2609": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2610": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2611": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "ADD",
      "path": "15"
    },
    "2612": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2613": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6815
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2615": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6815
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2616": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2617": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2618": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2619": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2620": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2621": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "SUB",
      "path": "15"
    },
    "2622": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "ADD",
      "path": "15"
    },
    "2623": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2624": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6815
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2625": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6815
      ],
      "op": "DUP8",
      "path": "15"
    },
    "2626": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2627": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2628": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2629": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2630": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2631": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA4F"
    },
    "2634": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2635": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2637": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2638": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2639": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2640": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "POP",
      "path": "15"
    },
    "2641": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "GAS",
      "path": "15"
    },
    "2642": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "CALL",
      "path": "15"
    },
    "2643": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2644": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2645": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2646": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA63"
    },
    "2649": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2650": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2651": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2653": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2654": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "2655": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2656": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2658": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2659": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2660": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "POP",
      "path": "15"
    },
    "2661": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "POP",
      "path": "15"
    },
    "2662": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "POP",
      "path": "15"
    },
    "2663": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6810,
        6848
      ],
      "op": "POP",
      "path": "15"
    },
    "2664": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6882,
        6944
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 18,
      "value": "0xA91"
    },
    "2667": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6908,
        6943
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA86"
    },
    "2670": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6934,
        6942
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2671": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6908,
        6929
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x553"
    },
    "2674": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6924,
        6928
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "2680": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6908,
        6919
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2681": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6908,
        6923
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF5"
    },
    "2684": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6908,
        6923
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2685": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6908,
        6929
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2686": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6908,
        6929
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2687": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6908,
        6929
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2692": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6908,
        6929
      ],
      "op": "AND",
      "path": "15"
    },
    "2693": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        6908,
        6929
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2694": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6908,
        6943
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2695": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6882,
        6903
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2697": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6882,
        6903
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2698": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6882,
        6903
      ],
      "op": "ADD",
      "path": "15"
    },
    "2699": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6882,
        6903
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2700": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6882,
        6903
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2701": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6882,
        6907
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1097"
    },
    "2704": {
      "fn": "MasterChef.updatePool",
      "jump": "i",
      "offset": [
        6882,
        6944
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2705": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6882,
        6944
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2706": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6858,
        6879
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2708": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6858,
        6879
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2709": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6858,
        6879
      ],
      "op": "ADD",
      "path": "15"
    },
    "2710": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6858,
        6944
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2711": {
      "op": "POP"
    },
    "2712": {
      "op": "POP"
    },
    "2713": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6977,
        6989
      ],
      "op": "NUMBER",
      "path": "15",
      "statement": 19
    },
    "2714": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6954,
        6974
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2716": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6954,
        6974
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2717": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6954,
        6974
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2718": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6954,
        6974
      ],
      "op": "ADD",
      "path": "15"
    },
    "2719": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6954,
        6989
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2720": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6954,
        6989
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2721": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6954,
        6989
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2722": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6954,
        6989
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2723": {
      "op": "POP"
    },
    "2724": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2725": {
      "fn": "MasterChef.updatePool",
      "offset": [
        6222,
        6996
      ],
      "op": "POP",
      "path": "15"
    },
    "2726": {
      "fn": "MasterChef.updatePool",
      "jump": "o",
      "offset": [
        6222,
        6996
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2727": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8471,
        8820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2728": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8529,
        8550
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2730": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8561
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "2732": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8562,
        8566
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2733": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2734": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2735": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2736": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "LT",
      "path": "15"
    },
    "2737": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAB6"
    },
    "2740": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2741": {
      "dev": "Index out of range",
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "INVALID",
      "path": "15"
    },
    "2742": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2743": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2745": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2746": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2747": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2748": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2750": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2751": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2752": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2753": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8615
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2754": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8615
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2755": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8615
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2756": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "2758": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8615
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2759": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8615
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2760": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8615
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2762": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8615
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2763": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8615
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2764": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8615
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2765": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8616,
        8626
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2766": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8627
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2767": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8627
      ],
      "op": "DUP8",
      "path": "15"
    },
    "2768": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8627
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2769": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8627
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2770": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8627
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2771": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8627
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2772": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8627
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2773": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8601,
        8627
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2774": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8684,
        8695
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 20
    },
    "2775": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8684,
        8695
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2776": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2778": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2779": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2780": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "MUL",
      "path": "15"
    },
    "2781": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2782": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2783": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "ADD",
      "path": "15"
    },
    "2784": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8637,
        8649
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2785": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8637,
        8649
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2786": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2787": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8553,
        8567
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "2788": {
      "op": "POP"
    },
    "2789": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8637,
        8696
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAFB"
    },
    "2792": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8637,
        8696
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2799": {
      "op": "SHL"
    },
    "2800": {
      "op": "SUB"
    },
    "2801": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8637,
        8649
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2802": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8637,
        8649
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2803": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8637,
        8649
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2804": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8637,
        8649
      ],
      "op": "AND",
      "path": "15"
    },
    "2805": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8637,
        8649
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2806": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8616,
        8626
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2807": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8637,
        8662
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12C8"
    },
    "2810": {
      "fn": "MasterChef.emergencyWithdraw",
      "jump": "i",
      "offset": [
        8637,
        8696
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2811": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8637,
        8696
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2812": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8747,
        8758
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 21
    },
    "2813": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8747,
        8758
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2814": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2816": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2817": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2818": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2819": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2820": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2821": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2822": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8741,
        8745
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2823": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8741,
        8745
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2824": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8729,
        8739
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2825": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8729,
        8739
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2826": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
    },
    "2859": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2860": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2861": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2862": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "SUB",
      "path": "15"
    },
    "2863": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2865": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "ADD",
      "path": "15"
    },
    "2866": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2867": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8711,
        8759
      ],
      "op": "LOG3",
      "path": "15"
    },
    "2868": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8783,
        8784
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 22,
      "value": "0x0"
    },
    "2870": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8769,
        8784
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2871": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8769,
        8784
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2872": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8769,
        8784
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2873": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8794,
        8809
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 23,
      "value": "0x1"
    },
    "2875": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8794,
        8809
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2876": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8794,
        8809
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2877": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8794,
        8809
      ],
      "op": "ADD",
      "path": "15"
    },
    "2878": {
      "fn": "MasterChef.emergencyWithdraw",
      "offset": [
        8794,
        8813
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2879": {
      "op": "POP"
    },
    "2880": {
      "op": "POP"
    },
    "2881": {
      "fn": "MasterChef.emergencyWithdraw",
      "jump": "o",
      "offset": [
        8471,
        8820
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2882": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        5974,
        6149
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2883": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6035,
        6043
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "2885": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6035,
        6050
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2886": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6018,
        6032
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2888": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6060,
        6143
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2889": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6088,
        6094
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2890": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6082,
        6085
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2891": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6082,
        6094
      ],
      "op": "LT",
      "path": "15"
    },
    "2892": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6060,
        6143
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2893": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6060,
        6143
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB61"
    },
    "2896": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6060,
        6143
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2897": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6117,
        6132
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 24,
      "value": "0xB59"
    },
    "2900": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6128,
        6131
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2901": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6117,
        6127
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x886"
    },
    "2904": {
      "fn": "MasterChef.massUpdatePools",
      "jump": "i",
      "offset": [
        6117,
        6132
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2905": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6117,
        6132
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2906": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6096,
        6101
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 25,
      "value": "0x1"
    },
    "2908": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6096,
        6101
      ],
      "op": "ADD",
      "path": "15"
    },
    "2909": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6060,
        6143
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB48"
    },
    "2912": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6060,
        6143
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2913": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6060,
        6143
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2914": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        6060,
        6143
      ],
      "op": "POP",
      "path": "15"
    },
    "2915": {
      "fn": "MasterChef.massUpdatePools",
      "offset": [
        5974,
        6149
      ],
      "op": "POP",
      "path": "15"
    },
    "2916": {
      "fn": "MasterChef.massUpdatePools",
      "jump": "o",
      "offset": [
        5974,
        6149
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2917": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2918": {
      "offset": [
        1280,
        1292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB6D"
    },
    "2921": {
      "offset": [
        1280,
        1290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1133"
    },
    "2924": {
      "jump": "i",
      "offset": [
        1280,
        1292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2925": {
      "fn": "MasterChef.set",
      "offset": [
        1280,
        1292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2926": {
      "offset": [
        1270,
        1276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2928": {
      "fn": "MasterChef.set",
      "offset": [
        1270,
        1276
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2935": {
      "op": "SHL"
    },
    "2936": {
      "op": "SUB"
    },
    "2937": {
      "offset": [
        1270,
        1276
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2938": {
      "fn": "MasterChef.set",
      "offset": [
        1270,
        1276
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2939": {
      "fn": "MasterChef.set",
      "offset": [
        1270,
        1276
      ],
      "op": "AND",
      "path": "2"
    },
    "2940": {
      "offset": [
        1270,
        1292
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2941": {
      "fn": "MasterChef.set",
      "offset": [
        1270,
        1292
      ],
      "op": "AND",
      "path": "2"
    },
    "2942": {
      "fn": "MasterChef.set",
      "offset": [
        1270,
        1292
      ],
      "op": "EQ",
      "path": "2"
    },
    "2943": {
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBBD"
    },
    "2946": {
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2947": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2949": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2950": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2957": {
      "op": "SHL"
    },
    "2958": {
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2959": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2960": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2962": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2964": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2965": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "2966": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2967": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2968": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2969": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2971": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2972": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "2973": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2976": {
      "op": "DUP1"
    },
    "2977": {
      "op": "MLOAD"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2980": {
      "op": "PUSH2",
      "value": "0x16F9"
    },
    "2983": {
      "op": "DUP4"
    },
    "2984": {
      "op": "CODECOPY"
    },
    "2985": {
      "op": "DUP2"
    },
    "2986": {
      "op": "MLOAD"
    },
    "2987": {
      "op": "SWAP2"
    },
    "2988": {
      "op": "MSTORE"
    },
    "2989": {
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2991": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2992": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "2993": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2994": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2995": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2996": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2997": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2998": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2999": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "SUB",
      "path": "2"
    },
    "3000": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "3002": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "3003": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3004": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3005": {
      "fn": "MasterChef.set",
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3006": {
      "branch": 72,
      "fn": "MasterChef.set",
      "offset": [
        4387,
        4398
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3007": {
      "fn": "MasterChef.set",
      "offset": [
        4383,
        4442
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3008": {
      "fn": "MasterChef.set",
      "offset": [
        4383,
        4442
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBCB"
    },
    "3011": {
      "branch": 72,
      "fn": "MasterChef.set",
      "offset": [
        4383,
        4442
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3012": {
      "fn": "MasterChef.set",
      "offset": [
        4414,
        4431
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 26,
      "value": "0xBCB"
    },
    "3015": {
      "fn": "MasterChef.set",
      "offset": [
        4414,
        4429
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB42"
    },
    "3018": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        4414,
        4431
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3019": {
      "fn": "MasterChef.set",
      "offset": [
        4414,
        4431
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3020": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4532
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 27,
      "value": "0xC08"
    },
    "3023": {
      "fn": "MasterChef.set",
      "offset": [
        4520,
        4531
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3024": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4515
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC02"
    },
    "3027": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4497
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "3029": {
      "fn": "MasterChef.set",
      "offset": [
        4498,
        4502
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3030": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3031": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3032": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3033": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "LT",
      "path": "15"
    },
    "3034": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBDF"
    },
    "3037": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3038": {
      "dev": "Index out of range",
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "INVALID",
      "path": "15"
    },
    "3039": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3040": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3041": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3043": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3044": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3046": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3048": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3049": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3050": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3052": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "MUL",
      "path": "15"
    },
    "3053": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4503
      ],
      "op": "ADD",
      "path": "15"
    },
    "3054": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4514
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3056": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4514
      ],
      "op": "ADD",
      "path": "15"
    },
    "3057": {
      "fn": "MasterChef.set",
      "offset": [
        4489,
        4514
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3058": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4484
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "3060": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4484
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3061": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4488
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10F1"
    },
    "3064": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4488
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3065": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4515
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3066": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4515
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3067": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4515
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3072": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4515
      ],
      "op": "AND",
      "path": "15"
    },
    "3073": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        4469,
        4515
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3074": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4515
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3075": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4519
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3076": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4519
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1097"
    },
    "3079": {
      "fn": "MasterChef.set",
      "jump": "i",
      "offset": [
        4469,
        4532
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3080": {
      "fn": "MasterChef.set",
      "offset": [
        4469,
        4532
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3081": {
      "fn": "MasterChef.set",
      "offset": [
        4451,
        4466
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "3083": {
      "fn": "MasterChef.set",
      "offset": [
        4451,
        4532
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3084": {
      "fn": "MasterChef.set",
      "offset": [
        4451,
        4532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3085": {
      "fn": "MasterChef.set",
      "offset": [
        4451,
        4532
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3086": {
      "fn": "MasterChef.set",
      "offset": [
        4451,
        4532
      ],
      "op": "POP",
      "path": "15"
    },
    "3087": {
      "fn": "MasterChef.set",
      "offset": [
        4570,
        4581
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 28
    },
    "3088": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4550
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "3090": {
      "fn": "MasterChef.set",
      "offset": [
        4551,
        4555
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3091": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3092": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3093": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3094": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "LT",
      "path": "15"
    },
    "3095": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC1C"
    },
    "3098": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3099": {
      "dev": "Index out of range",
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "INVALID",
      "path": "15"
    },
    "3100": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3101": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3102": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3104": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3105": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3107": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3109": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3110": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3111": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3113": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "MUL",
      "path": "15"
    },
    "3114": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4556
      ],
      "op": "ADD",
      "path": "15"
    },
    "3115": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4567
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3117": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4567
      ],
      "op": "ADD",
      "path": "15"
    },
    "3118": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4581
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3119": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4581
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3120": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4581
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3121": {
      "fn": "MasterChef.set",
      "offset": [
        4542,
        4581
      ],
      "op": "POP",
      "path": "15"
    },
    "3122": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "POP",
      "path": "15"
    },
    "3123": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "POP",
      "path": "15"
    },
    "3124": {
      "fn": "MasterChef.set",
      "offset": [
        4290,
        4588
      ],
      "op": "POP",
      "path": "15"
    },
    "3125": {
      "fn": "MasterChef.set",
      "jump": "o",
      "offset": [
        4290,
        4588
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3126": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1689,
        1834
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3127": {
      "offset": [
        1280,
        1292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3E"
    },
    "3130": {
      "offset": [
        1280,
        1290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1133"
    },
    "3133": {
      "jump": "i",
      "offset": [
        1280,
        1292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3134": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1280,
        1292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3135": {
      "offset": [
        1270,
        1276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3137": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1270,
        1276
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3144": {
      "op": "SHL"
    },
    "3145": {
      "op": "SUB"
    },
    "3146": {
      "offset": [
        1270,
        1276
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3147": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1270,
        1276
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3148": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1270,
        1276
      ],
      "op": "AND",
      "path": "2"
    },
    "3149": {
      "offset": [
        1270,
        1292
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3150": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1270,
        1292
      ],
      "op": "AND",
      "path": "2"
    },
    "3151": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1270,
        1292
      ],
      "op": "EQ",
      "path": "2"
    },
    "3152": {
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC8E"
    },
    "3155": {
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3156": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3158": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3159": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3160": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3166": {
      "op": "SHL"
    },
    "3167": {
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3168": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3169": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3171": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3173": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3174": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "3175": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3176": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3177": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3178": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3180": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3181": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "3182": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3185": {
      "op": "DUP1"
    },
    "3186": {
      "op": "MLOAD"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3189": {
      "op": "PUSH2",
      "value": "0x16F9"
    },
    "3192": {
      "op": "DUP4"
    },
    "3193": {
      "op": "CODECOPY"
    },
    "3194": {
      "op": "DUP2"
    },
    "3195": {
      "op": "MLOAD"
    },
    "3196": {
      "op": "SWAP2"
    },
    "3197": {
      "op": "MSTORE"
    },
    "3198": {
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "3200": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3201": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "3202": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3203": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3204": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3205": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3206": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3207": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3208": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SUB",
      "path": "2"
    },
    "3209": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "3211": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "3212": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3213": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3214": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3215": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1795,
        1796
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x0"
    },
    "3217": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1785
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3218": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1785
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3219": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1758,
        1798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3221": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1758,
        1798
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3228": {
      "op": "SHL"
    },
    "3229": {
      "op": "SUB"
    },
    "3230": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1785
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3231": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1785
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3232": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1785
      ],
      "op": "AND",
      "path": "2"
    },
    "3233": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1779,
        1785
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3234": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1758,
        1798
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3267": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1758,
        1798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3268": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1795,
        1796
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3269": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1795,
        1796
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3270": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1758,
        1798
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3271": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1826
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 30,
      "value": "0x0"
    },
    "3273": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1808,
        1827
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3274": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1808,
        1827
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3281": {
      "op": "SHL"
    },
    "3282": {
      "op": "SUB"
    },
    "3283": {
      "op": "NOT"
    },
    "3284": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1808,
        1827
      ],
      "op": "AND",
      "path": "2"
    },
    "3285": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1808,
        1827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3286": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1808,
        1827
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3287": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1689,
        1834
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3288": {
      "offset": [
        2400,
        2445
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3289": {
      "offset": [
        2443,
        2445
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "3291": {
      "offset": [
        2400,
        2445
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3292": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        2400,
        2445
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3293": {
      "fn": "MasterChef.dev",
      "offset": [
        9264,
        9390
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3294": {
      "fn": "MasterChef.dev",
      "offset": [
        9334,
        9341
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 31,
      "value": "0x2"
    },
    "3296": {
      "fn": "MasterChef.dev",
      "offset": [
        9334,
        9341
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3303": {
      "op": "SHL"
    },
    "3304": {
      "op": "SUB"
    },
    "3305": {
      "fn": "MasterChef.dev",
      "offset": [
        9334,
        9341
      ],
      "op": "AND",
      "path": "15"
    },
    "3306": {
      "fn": "MasterChef.dev",
      "offset": [
        9320,
        9330
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3307": {
      "branch": 73,
      "fn": "MasterChef.dev",
      "offset": [
        9320,
        9341
      ],
      "op": "EQ",
      "path": "15"
    },
    "3308": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD28"
    },
    "3311": {
      "branch": 73,
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3312": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3314": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3315": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3316": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3322": {
      "op": "SHL"
    },
    "3323": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3324": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3325": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3327": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3329": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3330": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "ADD",
      "path": "15"
    },
    "3331": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3332": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x9"
    },
    "3334": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "3336": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3337": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "ADD",
      "path": "15"
    },
    "3338": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3339": {
      "op": "PUSH9",
      "value": "0x6465763A207775743F"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "3351": {
      "op": "SHL"
    },
    "3352": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "3354": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3355": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "ADD",
      "path": "15"
    },
    "3356": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3357": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3358": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3359": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3360": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3361": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3362": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "SUB",
      "path": "15"
    },
    "3363": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "3365": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "ADD",
      "path": "15"
    },
    "3366": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3367": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "REVERT",
      "path": "15"
    },
    "3368": {
      "fn": "MasterChef.dev",
      "offset": [
        9312,
        9355
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3369": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9372
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 32,
      "value": "0x2"
    },
    "3371": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3372": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3379": {
      "op": "SHL"
    },
    "3380": {
      "op": "SUB"
    },
    "3381": {
      "op": "NOT"
    },
    "3382": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "AND",
      "path": "15"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3389": {
      "op": "SHL"
    },
    "3390": {
      "op": "SUB"
    },
    "3391": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3392": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3393": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3394": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "AND",
      "path": "15"
    },
    "3395": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3396": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3397": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3398": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "OR",
      "path": "15"
    },
    "3399": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3400": {
      "fn": "MasterChef.dev",
      "offset": [
        9365,
        9383
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3401": {
      "fn": "MasterChef.dev",
      "jump": "o",
      "offset": [
        9264,
        9390
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3402": {
      "fn": "Ownable.owner",
      "offset": [
        1066,
        1143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3403": {
      "fn": "Ownable.owner",
      "offset": [
        1104,
        1111
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3405": {
      "fn": "Ownable.owner",
      "offset": [
        1130,
        1136
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 33
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3412": {
      "op": "SHL"
    },
    "3413": {
      "op": "SUB"
    },
    "3414": {
      "fn": "Ownable.owner",
      "offset": [
        1130,
        1136
      ],
      "op": "AND",
      "path": "2"
    },
    "3415": {
      "fn": "Ownable.owner",
      "offset": [
        1066,
        1143
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3416": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1066,
        1143
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3417": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4662,
        5075
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3418": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4734,
        4741
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3420": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4764,
        4777
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "3422": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4764,
        4777
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3423": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4757,
        4760
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3424": {
      "branch": 74,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4757,
        4777
      ],
      "op": "GT",
      "path": "15"
    },
    "3425": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4753,
        5069
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD7A"
    },
    "3428": {
      "branch": 74,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4753,
        5069
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3429": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4800,
        4836
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 34,
      "value": "0xD73"
    },
    "3432": {
      "offset": [
        2443,
        2445
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "3434": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4800,
        4814
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x54D"
    },
    "3437": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4800,
        4803
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3438": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4808,
        4813
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3439": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4800,
        4807
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10F1"
    },
    "3442": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        4800,
        4814
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3443": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4800,
        4836
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3444": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4793,
        4836
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3445": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4793,
        4836
      ],
      "op": "POP",
      "path": "15"
    },
    "3446": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4793,
        4836
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5B2"
    },
    "3449": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4793,
        4836
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3450": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4753,
        5069
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3451": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4866,
        4879
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "3453": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4866,
        4879
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3454": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4857,
        4862
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3455": {
      "branch": 75,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4857,
        4879
      ],
      "op": "LT",
      "path": "15"
    },
    "3456": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4853,
        5069
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD8D"
    },
    "3459": {
      "branch": 75,
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4853,
        5069
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3460": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4902,
        4916
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 35,
      "value": "0xD73"
    },
    "3463": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4902,
        4905
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3464": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4910,
        4915
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3465": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4902,
        4909
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10F1"
    },
    "3468": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        4902,
        4916
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3469": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4853,
        5069
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3470": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4954,
        5058
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 36,
      "value": "0xD73"
    },
    "3473": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5022,
        5044
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDA5"
    },
    "3476": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5030,
        5043
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "3478": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5030,
        5043
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3479": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5022,
        5025
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3480": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5022,
        5029
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10F1"
    },
    "3483": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5022,
        5029
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3484": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5022,
        5044
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3485": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5022,
        5044
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3486": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5022,
        5044
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3491": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5022,
        5044
      ],
      "op": "AND",
      "path": "15"
    },
    "3492": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        5022,
        5044
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3493": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        5022,
        5044
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3494": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4954,
        5000
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC02"
    },
    "3497": {
      "offset": [
        2443,
        2445
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "3499": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4954,
        4978
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x54D"
    },
    "3502": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4972,
        4977
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3503": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4954,
        4967
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "3505": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4954,
        4967
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3506": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4954,
        4971
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10F1"
    },
    "3509": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4954,
        4971
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3510": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4954,
        4978
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3511": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4954,
        4978
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3512": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4954,
        4978
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3517": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        4954,
        4978
      ],
      "op": "AND",
      "path": "15"
    },
    "3518": {
      "fn": "MasterChef.getMultiplier",
      "jump": "i",
      "offset": [
        4954,
        4978
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3519": {
      "offset": [
        2558,
        2624
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3520": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "3522": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3524": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3525": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3526": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3527": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3529": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3530": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3531": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3532": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3534": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3535": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3536": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3537": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3538": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3539": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3540": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3541": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3542": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3543": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3544": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3545": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3546": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3547": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3549": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3550": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3551": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "ADD",
      "path": "15"
    },
    "3552": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3553": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2558,
        2624
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3554": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        2558,
        2624
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3555": {
      "offset": [
        2319,
        2347
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3556": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2319,
        2347
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3558": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2319,
        2347
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3559": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2319,
        2347
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3560": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        2319,
        2347
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3561": {
      "offset": [
        2168,
        2190
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3562": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2168,
        2190
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "3564": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2168,
        2190
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3571": {
      "op": "SHL"
    },
    "3572": {
      "op": "SUB"
    },
    "3573": {
      "offset": [
        2168,
        2190
      ],
      "op": "AND",
      "path": "15"
    },
    "3574": {
      "fn": "MasterChef.getMultiplier",
      "offset": [
        2168,
        2190
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3575": {
      "fn": "MasterChef.getMultiplier",
      "jump": "o",
      "offset": [
        2168,
        2190
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3576": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3577": {
      "fn": "MasterChef.deposit",
      "offset": [
        7128,
        7149
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3579": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7160
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "3581": {
      "fn": "MasterChef.deposit",
      "offset": [
        7161,
        7165
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3582": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3583": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3584": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3585": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "LT",
      "path": "15"
    },
    "3586": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE07"
    },
    "3589": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3590": {
      "dev": "Index out of range",
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "INVALID",
      "path": "15"
    },
    "3591": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3592": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3594": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3595": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3596": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3597": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3599": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3600": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3601": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3602": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7214
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3603": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7214
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3604": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7214
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3605": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7208
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "3607": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7214
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3608": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7214
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3609": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7214
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3611": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7214
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3612": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7214
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3613": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7214
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3614": {
      "fn": "MasterChef.deposit",
      "offset": [
        7215,
        7225
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3615": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7226
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3616": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7226
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3617": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7226
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3618": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7226
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3619": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7226
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3620": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7226
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3621": {
      "fn": "MasterChef.deposit",
      "offset": [
        7200,
        7226
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3622": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3624": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3625": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3626": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "MUL",
      "path": "15"
    },
    "3627": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3628": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3629": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "ADD",
      "path": "15"
    },
    "3630": {
      "fn": "MasterChef.deposit",
      "offset": [
        7152,
        7166
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3631": {
      "op": "POP"
    },
    "3632": {
      "fn": "MasterChef.deposit",
      "offset": [
        7236,
        7252
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 37,
      "value": "0xE38"
    },
    "3635": {
      "fn": "MasterChef.deposit",
      "offset": [
        7209,
        7213
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3636": {
      "fn": "MasterChef.deposit",
      "offset": [
        7236,
        7246
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x886"
    },
    "3639": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        7236,
        7252
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3640": {
      "fn": "MasterChef.deposit",
      "offset": [
        7236,
        7252
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3641": {
      "fn": "MasterChef.deposit",
      "offset": [
        7266,
        7277
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3642": {
      "fn": "MasterChef.deposit",
      "offset": [
        7266,
        7277
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3643": {
      "branch": 76,
      "fn": "MasterChef.deposit",
      "offset": [
        7266,
        7281
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3644": {
      "fn": "MasterChef.deposit",
      "offset": [
        7262,
        7447
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE7B"
    },
    "3647": {
      "branch": 76,
      "fn": "MasterChef.deposit",
      "offset": [
        7262,
        7447
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3648": {
      "fn": "MasterChef.deposit",
      "offset": [
        7297,
        7312
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3650": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7384
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE6D"
    },
    "3653": {
      "fn": "MasterChef.deposit",
      "offset": [
        7368,
        7372
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3654": {
      "fn": "MasterChef.deposit",
      "offset": [
        7368,
        7383
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3656": {
      "fn": "MasterChef.deposit",
      "offset": [
        7368,
        7383
      ],
      "op": "ADD",
      "path": "15"
    },
    "3657": {
      "fn": "MasterChef.deposit",
      "offset": [
        7368,
        7383
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3658": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7363
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5A5"
    },
    "3661": {
      "fn": "MasterChef.deposit",
      "offset": [
        7358,
        7362
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "3667": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x553"
    },
    "3670": {
      "fn": "MasterChef.deposit",
      "offset": [
        7331,
        7335
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3671": {
      "fn": "MasterChef.deposit",
      "offset": [
        7331,
        7352
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "3673": {
      "fn": "MasterChef.deposit",
      "offset": [
        7331,
        7352
      ],
      "op": "ADD",
      "path": "15"
    },
    "3674": {
      "fn": "MasterChef.deposit",
      "offset": [
        7331,
        7352
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3675": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7319
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3676": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3678": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7326
      ],
      "op": "ADD",
      "path": "15"
    },
    "3679": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7326
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3680": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7330
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF5"
    },
    "3683": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7330
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3684": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7353
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3685": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7353
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3686": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7353
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3691": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7353
      ],
      "op": "AND",
      "path": "15"
    },
    "3692": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        7315,
        7353
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3693": {
      "fn": "MasterChef.deposit",
      "offset": [
        7315,
        7384
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3694": {
      "fn": "MasterChef.deposit",
      "offset": [
        7297,
        7384
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3695": {
      "fn": "MasterChef.deposit",
      "offset": [
        7297,
        7384
      ],
      "op": "POP",
      "path": "15"
    },
    "3696": {
      "fn": "MasterChef.deposit",
      "offset": [
        7398,
        7436
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 38,
      "value": "0xE79"
    },
    "3699": {
      "fn": "MasterChef.deposit",
      "offset": [
        7416,
        7426
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3700": {
      "fn": "MasterChef.deposit",
      "offset": [
        7428,
        7435
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3701": {
      "fn": "MasterChef.deposit",
      "offset": [
        7398,
        7415
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1137"
    },
    "3704": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        7398,
        7436
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3705": {
      "fn": "MasterChef.deposit",
      "offset": [
        7398,
        7436
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3706": {
      "fn": "MasterChef.deposit",
      "offset": [
        7262,
        7447
      ],
      "op": "POP",
      "path": "15"
    },
    "3707": {
      "fn": "MasterChef.deposit",
      "offset": [
        7262,
        7447
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3708": {
      "fn": "MasterChef.deposit",
      "offset": [
        7456,
        7468
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 39
    },
    "3709": {
      "fn": "MasterChef.deposit",
      "offset": [
        7456,
        7468
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3710": {
      "fn": "MasterChef.deposit",
      "offset": [
        7456,
        7530
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE92"
    },
    "3713": {
      "fn": "MasterChef.deposit",
      "offset": [
        7456,
        7530
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3720": {
      "op": "SHL"
    },
    "3721": {
      "op": "SUB"
    },
    "3722": {
      "fn": "MasterChef.deposit",
      "offset": [
        7456,
        7468
      ],
      "op": "AND",
      "path": "15"
    },
    "3723": {
      "fn": "MasterChef.deposit",
      "offset": [
        7494,
        7504
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3724": {
      "fn": "MasterChef.deposit",
      "offset": [
        7515,
        7519
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "3725": {
      "fn": "MasterChef.deposit",
      "offset": [
        7522,
        7529
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3726": {
      "fn": "MasterChef.deposit",
      "offset": [
        7456,
        7485
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x131A"
    },
    "3729": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        7456,
        7530
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3730": {
      "fn": "MasterChef.deposit",
      "offset": [
        7456,
        7530
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3731": {
      "fn": "MasterChef.deposit",
      "offset": [
        7554,
        7565
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 40
    },
    "3732": {
      "fn": "MasterChef.deposit",
      "offset": [
        7554,
        7565
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3733": {
      "fn": "MasterChef.deposit",
      "offset": [
        7554,
        7578
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9E"
    },
    "3736": {
      "fn": "MasterChef.deposit",
      "offset": [
        7554,
        7578
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3737": {
      "fn": "MasterChef.deposit",
      "offset": [
        7570,
        7577
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3738": {
      "fn": "MasterChef.deposit",
      "offset": [
        7554,
        7569
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1097"
    },
    "3741": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        7554,
        7578
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3742": {
      "fn": "MasterChef.deposit",
      "offset": [
        7554,
        7578
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3743": {
      "fn": "MasterChef.deposit",
      "offset": [
        7540,
        7578
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3744": {
      "fn": "MasterChef.deposit",
      "offset": [
        7540,
        7578
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3745": {
      "fn": "MasterChef.deposit",
      "offset": [
        7540,
        7578
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3746": {
      "fn": "MasterChef.deposit",
      "offset": [
        7622,
        7643
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 41,
      "value": "0x3"
    },
    "3748": {
      "fn": "MasterChef.deposit",
      "offset": [
        7622,
        7643
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3749": {
      "fn": "MasterChef.deposit",
      "offset": [
        7622,
        7643
      ],
      "op": "ADD",
      "path": "15"
    },
    "3750": {
      "fn": "MasterChef.deposit",
      "offset": [
        7622,
        7643
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3751": {
      "fn": "MasterChef.deposit",
      "offset": [
        7606,
        7654
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEBB"
    },
    "3754": {
      "fn": "MasterChef.deposit",
      "offset": [
        7606,
        7654
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3755": {
      "fn": "MasterChef.deposit",
      "offset": [
        7649,
        7653
      ],
      "op": "PUSH5",
      "path": "15",
      "value": "0xE8D4A51000"
    },
    "3761": {
      "fn": "MasterChef.deposit",
      "offset": [
        7649,
        7653
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3762": {
      "fn": "MasterChef.deposit",
      "offset": [
        7606,
        7644
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x553"
    },
    "3765": {
      "fn": "MasterChef.deposit",
      "offset": [
        7606,
        7644
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3766": {
      "fn": "MasterChef.deposit",
      "offset": [
        7540,
        7578
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3767": {
      "fn": "MasterChef.deposit",
      "offset": [
        7606,
        7621
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF5"
    },
    "3770": {
      "fn": "MasterChef.deposit",
      "jump": "i",
      "offset": [
        7606,
        7644
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3771": {
      "fn": "MasterChef.deposit",
      "offset": [
        7606,
        7654
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3772": {
      "fn": "MasterChef.deposit",
      "offset": [
        7588,
        7603
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3774": {
      "fn": "MasterChef.deposit",
      "offset": [
        7588,
        7603
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3775": {
      "fn": "MasterChef.deposit",
      "offset": [
        7588,
        7603
      ],
      "op": "ADD",
      "path": "15"
    },
    "3776": {
      "fn": "MasterChef.deposit",
      "offset": [
        7588,
        7654
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3777": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 42,
      "value": "0x40"
    },
    "3779": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3780": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3781": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3782": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3783": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3784": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3785": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3786": {
      "fn": "MasterChef.deposit",
      "offset": [
        7689,
        7693
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3787": {
      "fn": "MasterChef.deposit",
      "offset": [
        7689,
        7693
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3788": {
      "fn": "MasterChef.deposit",
      "offset": [
        7677,
        7687
      ],
      "op": "CALLER",
      "path": "15"
    },
    "3789": {
      "fn": "MasterChef.deposit",
      "offset": [
        7677,
        7687
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3790": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
    },
    "3823": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3824": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3825": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3826": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "SUB",
      "path": "15"
    },
    "3827": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3829": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "ADD",
      "path": "15"
    },
    "3830": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3831": {
      "fn": "MasterChef.deposit",
      "offset": [
        7669,
        7703
      ],
      "op": "LOG3",
      "path": "15"
    },
    "3832": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "POP",
      "path": "15"
    },
    "3833": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "POP",
      "path": "15"
    },
    "3834": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "POP",
      "path": "15"
    },
    "3835": {
      "fn": "MasterChef.deposit",
      "offset": [
        7063,
        7710
      ],
      "op": "POP",
      "path": "15"
    },
    "3836": {
      "fn": "MasterChef.deposit",
      "jump": "o",
      "offset": [
        7063,
        7710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1983,
        2223
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3838": {
      "offset": [
        1280,
        1292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF05"
    },
    "3841": {
      "offset": [
        1280,
        1290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1133"
    },
    "3844": {
      "jump": "i",
      "offset": [
        1280,
        1292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1280,
        1292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3846": {
      "offset": [
        1270,
        1276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3848": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1276
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3855": {
      "op": "SHL"
    },
    "3856": {
      "op": "SUB"
    },
    "3857": {
      "offset": [
        1270,
        1276
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1276
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1276
      ],
      "op": "AND",
      "path": "2"
    },
    "3860": {
      "offset": [
        1270,
        1292
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1292
      ],
      "op": "AND",
      "path": "2"
    },
    "3862": {
      "branch": 81,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1270,
        1292
      ],
      "op": "EQ",
      "path": "2"
    },
    "3863": {
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF55"
    },
    "3866": {
      "branch": 81,
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3867": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3869": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3870": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3877": {
      "op": "SHL"
    },
    "3878": {
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3879": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3880": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3884": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3885": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "3886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3887": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3888": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3889": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3891": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "3893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3896": {
      "op": "DUP1"
    },
    "3897": {
      "op": "MLOAD"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3900": {
      "op": "PUSH2",
      "value": "0x16F9"
    },
    "3903": {
      "op": "DUP4"
    },
    "3904": {
      "op": "CODECOPY"
    },
    "3905": {
      "op": "DUP2"
    },
    "3906": {
      "op": "MLOAD"
    },
    "3907": {
      "op": "SWAP2"
    },
    "3908": {
      "op": "MSTORE"
    },
    "3909": {
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "3911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "3913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3919": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SUB",
      "path": "2"
    },
    "3920": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "3922": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "ADD",
      "path": "2"
    },
    "3923": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3925": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1262,
        1329
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3932": {
      "op": "SHL"
    },
    "3933": {
      "op": "SUB"
    },
    "3934": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2071,
        2093
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 43
    },
    "3935": {
      "branch": 82,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2071,
        2093
      ],
      "op": "AND",
      "path": "2"
    },
    "3936": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "3939": {
      "branch": 82,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3940": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3942": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3943": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3949": {
      "op": "SHL"
    },
    "3950": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3951": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3952": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3954": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "ADD",
      "path": "2"
    },
    "3955": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3956": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3957": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3959": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "ADD",
      "path": "2"
    },
    "3960": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3961": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3962": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "SUB",
      "path": "2"
    },
    "3963": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3964": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3965": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x26"
    },
    "3967": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3968": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3969": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3971": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "ADD",
      "path": "2"
    },
    "3972": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3973": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16B2"
    },
    "3976": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x26"
    },
    "3978": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3979": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "3980": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3982": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "ADD",
      "path": "2"
    },
    "3983": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "POP",
      "path": "2"
    },
    "3985": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "POP",
      "path": "2"
    },
    "3986": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3988": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3991": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "SUB",
      "path": "2"
    },
    "3992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3993": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3994": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2063,
        2136
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3995": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2178
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 44,
      "value": "0x0"
    },
    "3997": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2178
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3998": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2178
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3999": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4001": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4008": {
      "op": "SHL"
    },
    "4009": {
      "op": "SUB"
    },
    "4010": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4011": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4012": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "AND",
      "path": "2"
    },
    "4013": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4014": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2178
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4015": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2178
      ],
      "op": "AND",
      "path": "2"
    },
    "4016": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2172,
        2178
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4017": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2151,
        2189
      ],
      "op": "LOG3",
      "path": "2"
    },
    "4052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2205
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 45,
      "value": "0x0"
    },
    "4054": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4055": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4062": {
      "op": "SHL"
    },
    "4063": {
      "op": "SUB"
    },
    "4064": {
      "op": "NOT"
    },
    "4065": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "AND",
      "path": "2"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4072": {
      "op": "SHL"
    },
    "4073": {
      "op": "SUB"
    },
    "4074": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4075": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "AND",
      "path": "2"
    },
    "4078": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4079": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4080": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4081": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "OR",
      "path": "2"
    },
    "4082": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4083": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2199,
        2216
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4084": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1983,
        2223
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4085": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4086": {
      "fn": "SafeMath.mul",
      "offset": [
        2238,
        2245
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4088": {
      "branch": 85,
      "fn": "SafeMath.mul",
      "offset": [
        2479,
        2485
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4089": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1004"
    },
    "4092": {
      "branch": 85,
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4093": {
      "op": "POP"
    },
    "4094": {
      "fn": "SafeMath.mul",
      "offset": [
        2508,
        2509
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 46,
      "value": "0x0"
    },
    "4096": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B2"
    },
    "4099": {
      "fn": "SafeMath.mul",
      "offset": [
        2501,
        2509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4100": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2520
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4101": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4102": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4103": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "MUL",
      "path": "3"
    },
    "4104": {
      "fn": "SafeMath.mul",
      "offset": [
        2546,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4105": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4106": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4107": {
      "fn": "SafeMath.mul",
      "offset": [
        2542,
        2543
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4108": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 47,
      "value": "0x1011"
    },
    "4111": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4112": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "INVALID",
      "path": "3"
    },
    "4113": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4114": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2570
      ],
      "op": "DIV",
      "path": "3"
    },
    "4115": {
      "branch": 86,
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2575
      ],
      "op": "EQ",
      "path": "3"
    },
    "4116": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104E"
    },
    "4119": {
      "branch": 86,
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4120": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4122": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4123": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4129": {
      "op": "SHL"
    },
    "4130": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4131": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4132": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4134": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "4135": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4136": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4137": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4139": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "4140": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4141": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4142": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SUB",
      "path": "3"
    },
    "4143": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4144": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4145": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "4147": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4148": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4149": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4151": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "4152": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4153": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16D8"
    },
    "4156": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x21"
    },
    "4158": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4159": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "4160": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4162": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "ADD",
      "path": "3"
    },
    "4163": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4164": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "POP",
      "path": "3"
    },
    "4165": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "POP",
      "path": "3"
    },
    "4166": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4168": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4169": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4170": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4171": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SUB",
      "path": "3"
    },
    "4172": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4173": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4174": {
      "fn": "SafeMath.mul",
      "offset": [
        2557,
        2613
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4175": {
      "fn": "SafeMath.mul",
      "offset": [
        2631,
        2632
      ],
      "op": "SWAP4",
      "path": "3",
      "statement": 48
    },
    "4176": {
      "fn": "SafeMath.mul",
      "offset": [
        2180,
        2639
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4177": {
      "op": "POP"
    },
    "4178": {
      "op": "POP"
    },
    "4179": {
      "op": "POP"
    },
    "4180": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        2180,
        2639
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4181": {
      "fn": "SafeMath.div",
      "offset": [
        3101,
        3231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4182": {
      "fn": "SafeMath.div",
      "offset": [
        3159,
        3166
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4184": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 49,
      "value": "0x104E"
    },
    "4187": {
      "fn": "SafeMath.div",
      "offset": [
        3189,
        3190
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4188": {
      "fn": "SafeMath.div",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4189": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4191": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4192": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4193": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4195": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "3"
    },
    "4196": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4198": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4199": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4200": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1A"
    },
    "4202": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4203": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4204": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4206": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "ADD",
      "path": "3"
    },
    "4207": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "4240": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4241": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4242": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3224
      ],
      "op": "POP",
      "path": "3"
    },
    "4243": {
      "fn": "SafeMath.div",
      "offset": [
        3185,
        3188
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x137A"
    },
    "4246": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3185,
        3224
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4247": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4248": {
      "fn": "SafeMath.add",
      "offset": [
        932,
        939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4250": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4251": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4252": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "ADD",
      "path": "3"
    },
    "4253": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 50
    },
    "4254": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4255": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "LT",
      "path": "3"
    },
    "4256": {
      "branch": 87,
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4257": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104E"
    },
    "4260": {
      "branch": 87,
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4261": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4263": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4264": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4265": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4271": {
      "op": "SHL"
    },
    "4272": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4273": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4274": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4276": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4278": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4279": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "4280": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4281": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "4283": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4285": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4286": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "4287": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4288": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "4321": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "4323": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4324": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "4325": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4326": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4327": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4328": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4329": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4330": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4331": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SUB",
      "path": "3"
    },
    "4332": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "4334": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "4335": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4336": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4337": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4338": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4340": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 51,
      "value": "0x104E"
    },
    "4343": {
      "fn": "SafeMath.sub",
      "offset": [
        1409,
        1410
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4344": {
      "fn": "SafeMath.sub",
      "offset": [
        1412,
        1413
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4345": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4347": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4348": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4349": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4351": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "4352": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4354": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4355": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4356": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "4358": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4359": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4360": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4362": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "4363": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "4396": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4397": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4398": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "POP",
      "path": "3"
    },
    "4399": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x141C"
    },
    "4402": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1405,
        1448
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4403": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4404": {
      "fn": "Context._msgSender",
      "offset": [
        677,
        687
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 52
    },
    "4405": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4406": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        590,
        694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4407": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        8933,
        9211
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4408": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9033
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4410": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9033
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4411": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4413": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4414": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4415": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4422": {
      "op": "SHL"
    },
    "4423": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4424": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4425": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9052,
        9056
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "4426": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4428": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4429": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "ADD",
      "path": "15"
    },
    "4430": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4431": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4432": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4433": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9009,
        9025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4435": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9009,
        9025
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4442": {
      "op": "SHL"
    },
    "4443": {
      "op": "SUB"
    },
    "4444": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9033
      ],
      "op": "AND",
      "path": "15"
    },
    "4445": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9033
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4446": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9043
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "4451": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9043
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4452": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4454": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4455": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4456": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "ADD",
      "path": "15"
    },
    "4457": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4458": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4460": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4461": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4462": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4463": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4464": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4465": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "SUB",
      "path": "15"
    },
    "4466": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "ADD",
      "path": "15"
    },
    "4467": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4468": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9033
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4469": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4470": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4471": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4472": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4473": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4474": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1182"
    },
    "4477": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4478": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4480": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4481": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4482": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4483": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "POP",
      "path": "15"
    },
    "4484": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "GAS",
      "path": "15"
    },
    "4485": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "4486": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4487": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4488": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4489": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1196"
    },
    "4492": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4493": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4494": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4496": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4497": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4498": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4499": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4501": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4502": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4503": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "POP",
      "path": "15"
    },
    "4504": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "POP",
      "path": "15"
    },
    "4505": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "POP",
      "path": "15"
    },
    "4506": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "POP",
      "path": "15"
    },
    "4507": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4509": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4510": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4511": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4513": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4514": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "LT",
      "path": "15"
    },
    "4515": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4516": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11AC"
    },
    "4519": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4520": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4522": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4523": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4524": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4525": {
      "op": "POP"
    },
    "4526": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4527": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9028,
        9058
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9072,
        9090
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4530": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9072,
        9090
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4531": {
      "branch": 77,
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9072,
        9090
      ],
      "op": "GT",
      "path": "15"
    },
    "4532": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9068,
        9205
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4533": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9068,
        9205
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1240"
    },
    "4536": {
      "branch": 77,
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9068,
        9205
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4537": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9111
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 53,
      "value": "0x1"
    },
    "4539": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9111
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4540": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4542": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4543": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4544": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4551": {
      "op": "SHL"
    },
    "4552": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4553": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4560": {
      "op": "SHL"
    },
    "4561": {
      "op": "SUB"
    },
    "4562": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4563": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4564": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "AND",
      "path": "15"
    },
    "4565": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4567": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4568": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "ADD",
      "path": "15"
    },
    "4569": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4570": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4572": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4573": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "ADD",
      "path": "15"
    },
    "4574": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4575": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4576": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4577": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4578": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4579": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9111
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4580": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9111
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4581": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9111
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4582": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9111
      ],
      "op": "AND",
      "path": "15"
    },
    "4583": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9111
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4584": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9120
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA9059CBB"
    },
    "4589": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9120
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4590": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4592": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4593": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4594": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "ADD",
      "path": "15"
    },
    "4595": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4596": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4598": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4599": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4600": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4601": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4602": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4603": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "SUB",
      "path": "15"
    },
    "4604": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "ADD",
      "path": "15"
    },
    "4605": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4606": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9111
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4608": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9111
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4609": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4610": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4611": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4612": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4613": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4614": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120E"
    },
    "4617": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4618": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4620": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4621": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4622": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4623": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "POP",
      "path": "15"
    },
    "4624": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "GAS",
      "path": "15"
    },
    "4625": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "CALL",
      "path": "15"
    },
    "4626": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4627": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4628": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4629": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1222"
    },
    "4632": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4633": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4634": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4636": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4637": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4638": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4639": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4641": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4642": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4643": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "POP",
      "path": "15"
    },
    "4644": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "POP",
      "path": "15"
    },
    "4645": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "POP",
      "path": "15"
    },
    "4646": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "POP",
      "path": "15"
    },
    "4647": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4649": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4650": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4651": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4653": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4654": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "LT",
      "path": "15"
    },
    "4655": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4656": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1238"
    },
    "4659": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4660": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4662": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4663": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4664": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9106,
        9135
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4665": {
      "op": "POP"
    },
    "4666": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9068,
        9205
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12C3"
    },
    "4669": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9068,
        9205
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4670": {
      "op": "POP"
    },
    "4671": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9068,
        9205
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4672": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9068,
        9205
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4673": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9171
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 54,
      "value": "0x1"
    },
    "4675": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9171
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4676": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4678": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4679": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4680": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4687": {
      "op": "SHL"
    },
    "4688": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4689": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4696": {
      "op": "SHL"
    },
    "4697": {
      "op": "SUB"
    },
    "4698": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4699": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4700": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "AND",
      "path": "15"
    },
    "4701": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4703": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4704": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "ADD",
      "path": "15"
    },
    "4705": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4706": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4708": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4709": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "ADD",
      "path": "15"
    },
    "4710": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4711": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4712": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4713": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4714": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4715": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9171
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4716": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9171
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4717": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9171
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4718": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9171
      ],
      "op": "AND",
      "path": "15"
    },
    "4719": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9171
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4720": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9180
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA9059CBB"
    },
    "4725": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9180
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4726": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4728": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4729": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4730": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "ADD",
      "path": "15"
    },
    "4731": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4732": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4734": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4735": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4736": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4737": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4738": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4739": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "SUB",
      "path": "15"
    },
    "4740": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "ADD",
      "path": "15"
    },
    "4741": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4742": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9171
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4744": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9171
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4745": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4746": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4747": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4748": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4749": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4750": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1296"
    },
    "4753": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4754": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4756": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4757": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4758": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4759": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "POP",
      "path": "15"
    },
    "4760": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "GAS",
      "path": "15"
    },
    "4761": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "CALL",
      "path": "15"
    },
    "4762": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4763": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4764": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4765": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12AA"
    },
    "4768": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4769": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4770": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4772": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4773": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "4774": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4775": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4777": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4778": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4779": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "POP",
      "path": "15"
    },
    "4780": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "POP",
      "path": "15"
    },
    "4781": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "POP",
      "path": "15"
    },
    "4782": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "POP",
      "path": "15"
    },
    "4783": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4785": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4786": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4787": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4789": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4790": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "LT",
      "path": "15"
    },
    "4791": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4792": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12C0"
    },
    "4795": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4796": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4798": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4799": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4800": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9166,
        9194
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4801": {
      "op": "POP"
    },
    "4802": {
      "op": "POP"
    },
    "4803": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        9068,
        9205
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4804": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        8933,
        9211
      ],
      "op": "POP",
      "path": "15"
    },
    "4805": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        8933,
        9211
      ],
      "op": "POP",
      "path": "15"
    },
    "4806": {
      "fn": "MasterChef.safeSushiTransfer",
      "offset": [
        8933,
        9211
      ],
      "op": "POP",
      "path": "15"
    },
    "4807": {
      "fn": "MasterChef.safeSushiTransfer",
      "jump": "o",
      "offset": [
        8933,
        9211
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4808": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        696,
        871
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4809": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 55,
      "value": "0x40"
    },
    "4811": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4812": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4819": {
      "op": "SHL"
    },
    "4820": {
      "op": "SUB"
    },
    "4821": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4822": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "AND",
      "path": "5"
    },
    "4823": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "4825": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4826": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "4827": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4828": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "4830": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4831": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4832": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "4833": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4834": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4835": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4836": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4837": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4838": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4839": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4840": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SUB",
      "path": "5"
    },
    "4841": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4842": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4843": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "4844": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4845": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4846": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "4848": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4849": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4850": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "4851": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4852": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4853": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4854": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4856": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4857": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "ADD",
      "path": "5"
    },
    "4858": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4859": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4866": {
      "op": "SHL"
    },
    "4867": {
      "op": "SUB"
    },
    "4868": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "AND",
      "path": "5"
    },
    "4869": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4876": {
      "op": "SHL"
    },
    "4877": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "OR",
      "path": "5"
    },
    "4878": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4879": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        805,
        863
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4880": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12C3"
    },
    "4883": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        864
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4884": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        798,
        803
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4885": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        798,
        803
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4886": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        778,
        797
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1476"
    },
    "4889": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        778,
        864
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4890": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4891": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 56,
      "value": "0x40"
    },
    "4893": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4894": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4901": {
      "op": "SHL"
    },
    "4902": {
      "op": "SUB"
    },
    "4903": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4904": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4905": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "5"
    },
    "4906": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "4908": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4909": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "4910": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4911": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4912": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "5"
    },
    "4913": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "4915": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4916": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "4917": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4918": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "4920": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4921": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4922": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "4923": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4924": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4925": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4926": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4927": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4928": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4929": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4930": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SUB",
      "path": "5"
    },
    "4931": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4932": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4933": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "4934": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4935": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4936": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x84"
    },
    "4938": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4939": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4940": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "4941": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4942": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4943": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4944": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4946": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4947": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "ADD",
      "path": "5"
    },
    "4948": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4949": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4956": {
      "op": "SHL"
    },
    "4957": {
      "op": "SUB"
    },
    "4958": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "AND",
      "path": "5"
    },
    "4959": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4966": {
      "op": "SHL"
    },
    "4967": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "OR",
      "path": "5"
    },
    "4968": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4969": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1004,
        1072
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4970": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1374"
    },
    "4973": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4974": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        997,
        1002
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4975": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        997,
        1002
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4976": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1476"
    },
    "4979": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        977,
        1073
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4980": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        977,
        1073
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4981": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "4982": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "4983": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "4984": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        877,
        1080
      ],
      "op": "POP",
      "path": "5"
    },
    "4985": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        877,
        1080
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4986": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4987": {
      "fn": "SafeMath.div",
      "offset": [
        3799,
        3806
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4989": {
      "fn": "SafeMath.div",
      "offset": [
        3833,
        3845
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 57
    },
    "4990": {
      "branch": 88,
      "fn": "SafeMath.div",
      "offset": [
        3826,
        3831
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4991": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1406"
    },
    "4994": {
      "branch": 88,
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4995": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4997": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4998": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5004": {
      "op": "SHL"
    },
    "5005": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5006": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5007": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5009": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5010": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5011": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5012": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5014": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5015": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5016": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5017": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5018": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5019": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5020": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5021": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5022": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5023": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5024": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5025": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5026": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5028": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5029": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5030": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5031": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5032": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5033": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5034": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5036": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5037": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5038": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5039": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5040": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5041": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5043": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5044": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5045": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5046": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "LT",
      "path": "3"
    },
    "5047": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5048": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13CB"
    },
    "5051": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5052": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5053": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5054": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5055": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5056": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5057": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5058": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5059": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5060": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5062": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5063": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13B3"
    },
    "5066": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5067": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5068": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5069": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5070": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5071": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5072": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5073": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5074": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5075": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5076": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5077": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5078": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5080": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "AND",
      "path": "3"
    },
    "5081": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5082": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5083": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13F8"
    },
    "5086": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5087": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5088": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5089": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5090": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5091": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5092": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5094": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5095": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5097": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5098": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5101": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "EXP",
      "path": "3"
    },
    "5102": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5103": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "NOT",
      "path": "3"
    },
    "5104": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "AND",
      "path": "3"
    },
    "5105": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5106": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5107": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5109": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "ADD",
      "path": "3"
    },
    "5110": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5111": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5112": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5113": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5114": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5115": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5116": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5117": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5118": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5120": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5121": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5122": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5123": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SUB",
      "path": "3"
    },
    "5124": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5125": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5126": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5127": {
      "fn": "SafeMath.div",
      "offset": [
        3818,
        3846
      ],
      "op": "POP",
      "path": "3"
    },
    "5128": {
      "fn": "SafeMath.div",
      "offset": [
        3856,
        3865
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5130": {
      "fn": "SafeMath.div",
      "offset": [
        3872,
        3873
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5131": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3869
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5132": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5133": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1412"
    },
    "5136": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5137": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "INVALID",
      "path": "3"
    },
    "5138": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5139": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "DIV",
      "path": "3"
    },
    "5140": {
      "fn": "SafeMath.div",
      "offset": [
        3868,
        3873
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "5141": {
      "fn": "SafeMath.div",
      "offset": [
        3713,
        3985
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5142": {
      "op": "POP"
    },
    "5143": {
      "op": "POP"
    },
    "5144": {
      "op": "POP"
    },
    "5145": {
      "op": "POP"
    },
    "5146": {
      "op": "POP"
    },
    "5147": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3713,
        3985
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5148": {
      "fn": "SafeMath.sub",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5149": {
      "fn": "SafeMath.sub",
      "offset": [
        1832,
        1839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5151": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1879
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 58
    },
    "5152": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5153": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5154": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "GT",
      "path": "3"
    },
    "5155": {
      "branch": 89,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5156": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x146E"
    },
    "5159": {
      "branch": 89,
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5160": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5162": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5163": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5167": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5169": {
      "op": "SHL"
    },
    "5170": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5171": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5172": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5174": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5176": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5177": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5178": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5179": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5180": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5181": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5182": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5183": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5185": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5186": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5187": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5188": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5189": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5190": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5191": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5192": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5193": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5194": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "5196": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5197": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5198": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5199": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5200": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5201": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5202": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5203": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5204": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5205": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5206": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5207": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5209": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5210": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5211": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13CB"
    },
    "5214": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5215": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5216": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5217": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5218": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5219": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5220": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5221": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5222": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5223": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5225": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5226": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13B3"
    },
    "5229": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5230": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5231": {
      "op": "POP"
    },
    "5232": {
      "op": "POP"
    },
    "5233": {
      "op": "POP"
    },
    "5234": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5235": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SUB",
      "path": "3"
    },
    "5236": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5237": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5238": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2959,
        3710
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5239": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3401
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5241": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CB"
    },
    "5244": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3432,
        3436
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5245": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5247": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5248": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5249": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5251": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "5252": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5254": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5255": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5256": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5258": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5259": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5260": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5262": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "ADD",
      "path": "5"
    },
    "5263": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "5296": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5297": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5298": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "POP",
      "path": "5"
    },
    "5299": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3417
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5306": {
      "op": "SHL"
    },
    "5307": {
      "op": "SUB"
    },
    "5308": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "AND",
      "path": "5"
    },
    "5309": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1527"
    },
    "5312": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3431
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5313": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5314": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5315": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5316": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "5321": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "AND",
      "path": "5"
    },
    "5322": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3404,
        3473
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5323": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3404,
        3473
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5324": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3504
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5325": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3504
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5326": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5327": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3378,
        3473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5328": {
      "op": "POP"
    },
    "5329": {
      "branch": 83,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3487,
        3508
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5330": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3483,
        3704
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12C3"
    },
    "5333": {
      "branch": 83,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3483,
        3704
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5334": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3627,
        3637
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 59
    },
    "5335": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5336": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5338": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "ADD",
      "path": "5"
    },
    "5339": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5340": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5341": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5343": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5344": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "LT",
      "path": "5"
    },
    "5345": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5346": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14EA"
    },
    "5349": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5350": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5352": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5353": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5354": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5355": {
      "op": "POP"
    },
    "5356": {
      "branch": 84,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3646
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5357": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12C3"
    },
    "5360": {
      "branch": 84,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5361": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5363": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5364": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5368": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5370": {
      "op": "SHL"
    },
    "5371": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5372": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5373": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5375": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "5376": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5377": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5378": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5380": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "5381": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5382": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5383": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SUB",
      "path": "5"
    },
    "5384": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5385": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5386": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "5388": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5389": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5390": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5392": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "5393": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5394": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1719"
    },
    "5397": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "5399": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5400": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "5401": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5403": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "ADD",
      "path": "5"
    },
    "5404": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5405": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "POP",
      "path": "5"
    },
    "5406": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "POP",
      "path": "5"
    },
    "5407": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5409": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5410": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5411": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5412": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SUB",
      "path": "5"
    },
    "5413": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5414": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3608,
        3693
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5415": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3767
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5416": {
      "fn": "Address.functionCall",
      "offset": [
        3676,
        3688
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "5418": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3760
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 60,
      "value": "0x1536"
    },
    "5421": {
      "fn": "Address.functionCall",
      "offset": [
        3730,
        3736
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5422": {
      "fn": "Address.functionCall",
      "offset": [
        3738,
        3742
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5423": {
      "fn": "Address.functionCall",
      "offset": [
        3744,
        3745
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5425": {
      "fn": "Address.functionCall",
      "offset": [
        3747,
        3759
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5426": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3729
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x153E"
    },
    "5429": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3707,
        3760
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5430": {
      "fn": "Address.functionCall",
      "offset": [
        3707,
        3760
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5431": {
      "fn": "Address.functionCall",
      "offset": [
        3700,
        3760
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "5432": {
      "fn": "Address.functionCall",
      "offset": [
        3573,
        3767
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5433": {
      "op": "POP"
    },
    "5434": {
      "op": "POP"
    },
    "5435": {
      "op": "POP"
    },
    "5436": {
      "op": "POP"
    },
    "5437": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3573,
        3767
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5438": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        4920,
        5878
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5439": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5050,
        5062
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "5441": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5082,
        5100
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 61,
      "value": "0x1549"
    },
    "5444": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5093,
        5099
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5445": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5082,
        5092
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16AB"
    },
    "5448": {
      "fn": "Address._functionCallWithValue",
      "jump": "i",
      "offset": [
        5082,
        5100
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5449": {
      "branch": 78,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5082,
        5100
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5450": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x159A"
    },
    "5453": {
      "branch": 78,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5454": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5456": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5457": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5458": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5464": {
      "op": "SHL"
    },
    "5465": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5466": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5467": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5469": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5471": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5472": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "5473": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5474": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1D"
    },
    "5476": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "5478": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5479": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "5480": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5481": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "5514": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "5516": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5517": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "5518": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5519": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5520": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5521": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5522": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5523": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5524": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SUB",
      "path": "6"
    },
    "5525": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "5527": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "ADD",
      "path": "6"
    },
    "5528": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5529": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5530": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5074,
        5134
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5531": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5205,
        5217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5533": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5219,
        5242
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "5535": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5252
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5542": {
      "op": "SHL"
    },
    "5543": {
      "op": "SUB"
    },
    "5544": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5257
      ],
      "op": "AND",
      "path": "6"
    },
    "5545": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5266,
        5274
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5546": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5277,
        5281
      ],
      "op": "DUP8",
      "path": "6"
    },
    "5547": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5549": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5550": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5551": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5552": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5553": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5554": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5555": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5557": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "5558": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5559": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5560": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5561": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5562": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5563": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5565": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5566": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "LT",
      "path": "6"
    },
    "5567": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15D9"
    },
    "5570": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5571": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5572": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5573": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5574": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5577": {
      "op": "NOT"
    },
    "5578": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5579": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5580": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "5581": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5582": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5584": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5585": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5586": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "5587": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5588": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "5589": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15BA"
    },
    "5592": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5593": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5594": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "5596": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5597": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5599": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SUB",
      "path": "6"
    },
    "5600": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "5603": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "EXP",
      "path": "6"
    },
    "5604": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SUB",
      "path": "6"
    },
    "5605": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5606": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "NOT",
      "path": "6"
    },
    "5607": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5608": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5609": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "AND",
      "path": "6"
    },
    "5610": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5611": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5612": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5613": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "AND",
      "path": "6"
    },
    "5614": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5615": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5616": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "OR",
      "path": "6"
    },
    "5617": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5618": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5619": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5620": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5621": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5622": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5623": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5624": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5625": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5626": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5627": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "5628": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5629": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5630": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5631": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5633": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5635": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5636": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5637": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5638": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SUB",
      "path": "6"
    },
    "5639": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5640": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5641": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP8",
      "path": "6"
    },
    "5642": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "GAS",
      "path": "6"
    },
    "5643": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "CALL",
      "path": "6"
    },
    "5644": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5645": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5646": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5647": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5648": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5649": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5650": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5652": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5653": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "EQ",
      "path": "6"
    },
    "5654": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x163B"
    },
    "5657": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5658": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5660": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5661": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5662": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5663": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "5665": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "NOT",
      "path": "6"
    },
    "5666": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "5668": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5669": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "5670": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "AND",
      "path": "6"
    },
    "5671": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5672": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "5673": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5675": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5676": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5677": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5678": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5679": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5680": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5682": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5684": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5685": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "ADD",
      "path": "6"
    },
    "5686": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "5687": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1640"
    },
    "5690": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5691": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5692": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "5694": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5695": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5696": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5697": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5246,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5698": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5699": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5700": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5701": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5204,
        5282
      ],
      "op": "POP",
      "path": "6"
    },
    "5702": {
      "branch": 79,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5296,
        5303
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5703": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5704": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1654"
    },
    "5707": {
      "branch": 79,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5708": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5326,
        5336
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 62
    },
    "5709": {
      "op": "POP"
    },
    "5710": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5319,
        5336
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1536"
    },
    "5713": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5319,
        5336
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5714": {
      "op": "POP"
    },
    "5715": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5319,
        5336
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5716": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5292,
        5872
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5717": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5437,
        5454
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5718": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5437,
        5454
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5719": {
      "branch": 80,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5437,
        5458
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5720": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5433,
        5862
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1664"
    },
    "5723": {
      "branch": 80,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5433,
        5862
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5724": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5695,
        5705
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5725": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5689,
        5706
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5726": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5755,
        5770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5727": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5742,
        5752
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5728": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5738,
        5740
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5730": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5734,
        5753
      ],
      "op": "ADD",
      "path": "6"
    },
    "5731": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5727,
        5771
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5732": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5644,
        5789
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5733": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 63,
      "value": "0x40"
    },
    "5735": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5736": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5742": {
      "op": "SHL"
    },
    "5743": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5744": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5745": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5747": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5749": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5750": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "5751": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5752": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5753": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5754": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5755": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5756": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "5758": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5759": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "5760": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5761": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5762": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5763": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5834,
        5846
      ],
      "op": "DUP8",
      "path": "6"
    },
    "5764": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5834,
        5846
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5765": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5766": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5767": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5768": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5769": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "5771": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "5772": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5773": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5774": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5775": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "5776": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5777": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5778": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5779": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5780": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5782": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5783": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5784": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13CB"
    },
    "5787": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5788": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5789": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5790": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "5791": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5792": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5793": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5794": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "5795": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5796": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5798": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "ADD",
      "path": "6"
    },
    "5799": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13B3"
    },
    "5802": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5827,
        5847
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5803": {
      "fn": "Address.isContract",
      "offset": [
        718,
        1131
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5804": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "5805": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "6",
      "statement": 64
    },
    "5806": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5807": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5808": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        718,
        1131
      ],
      "op": "JUMP",
      "path": "6"
    }
  },
  "sha1": "b4cd6ab9fd92a65843c04d50cccf26c74bf16e47",
  "source": "pragma solidity 0.6.12;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../../interfaces/ISushiToken.sol\";\n\n\n\n// MasterChef is the master of Sushi. He can make Sushi and he is a fair guy.\n//\n// Note that it's ownable and the owner wields tremendous power. The ownership\n// will be transferred to a governance smart contract once SUSHI is sufficiently\n// distributed and the community can show to govern itself.\n//\n// Have fun reading it. Hopefully it's bug-free. God bless.\n//\n// MISO Update - Removed LP migrator\n\ncontract MasterChef is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount;     // How many LP tokens the user has provided.\n        uint256 rewardDebt; // Reward debt. See explanation below.\n        //\n        // We do some fancy math here. Basically, any point in time, the amount of SUSHIs\n        // entitled to a user but is pending to be distributed is:\n        //\n        //   pending reward = (user.amount * pool.accSushiPerShare) - user.rewardDebt\n        //\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\n        //   1. The pool's `accSushiPerShare` (and `lastRewardBlock`) gets updated.\n        //   2. User receives the pending reward sent to his/her address.\n        //   3. User's `amount` gets updated.\n        //   4. User's `rewardDebt` gets updated.\n    }\n\n    // Info of each pool.\n    struct PoolInfo {\n        IERC20 lpToken;           // Address of LP token contract.\n        uint256 allocPoint;       // How many allocation points assigned to this pool. SUSHIs to distribute per block.\n        uint256 lastRewardBlock;  // Last block number that SUSHIs distribution occurs.\n        uint256 accSushiPerShare; // Accumulated SUSHIs per share, times 1e12. See below.\n    }\n\n    // The SUSHI TOKEN!\n    ISushiToken public sushi;\n    // Dev address.\n    address public devaddr;\n    // Block number when bonus SUSHI period ends.\n    uint256 public bonusEndBlock;\n    // SUSHI tokens created per block.\n    uint256 public sushiPerBlock;\n    // Bonus muliplier for early sushi makers.\n    uint256 public constant BONUS_MULTIPLIER = 10;\n\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n    // Info of each user that stakes LP tokens.\n    mapping (uint256 => mapping (address => UserInfo)) public userInfo;\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\n    uint256 public totalAllocPoint = 0;\n    // The block number when SUSHI mining starts.\n    uint256 public startBlock;\n\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\n\n    constructor(\n        ISushiToken _sushi,\n        address _devaddr,\n        uint256 _sushiPerBlock,\n        uint256 _startBlock,\n        uint256 _bonusEndBlock\n    ) public {\n        sushi = _sushi;\n        devaddr = _devaddr;\n        sushiPerBlock = _sushiPerBlock;\n        bonusEndBlock = _bonusEndBlock;\n        startBlock = _startBlock;\n    }\n\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    // Add a new lp to the pool. Can only be called by the owner.\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n        poolInfo.push(PoolInfo({\n            lpToken: _lpToken,\n            allocPoint: _allocPoint,\n            lastRewardBlock: lastRewardBlock,\n            accSushiPerShare: 0\n        }));\n    }\n\n    // Update the given pool's SUSHI allocation point. Can only be called by the owner.\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\n        poolInfo[_pid].allocPoint = _allocPoint;\n    }\n\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\n        if (_to <= bonusEndBlock) {\n            return _to.sub(_from).mul(BONUS_MULTIPLIER);\n        } else if (_from >= bonusEndBlock) {\n            return _to.sub(_from);\n        } else {\n            return bonusEndBlock.sub(_from).mul(BONUS_MULTIPLIER).add(\n                _to.sub(bonusEndBlock)\n            );\n        }\n    }\n\n    // View function to see pending SUSHIs on frontend.\n    function pendingSushi(uint256 _pid, address _user) external view returns (uint256) {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accSushiPerShare = pool.accSushiPerShare;\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n            uint256 sushiReward = multiplier.mul(sushiPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\n            accSushiPerShare = accSushiPerShare.add(sushiReward.mul(1e12).div(lpSupply));\n        }\n        return user.amount.mul(accSushiPerShare).div(1e12).sub(user.rewardDebt);\n    }\n\n    // Update reward vairables for all pools. Be careful of gas spending!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        if (block.number <= pool.lastRewardBlock) {\n            return;\n        }\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (lpSupply == 0) {\n            pool.lastRewardBlock = block.number;\n            return;\n        }\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n        uint256 sushiReward = multiplier.mul(sushiPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\n        sushi.mint(devaddr, sushiReward.div(10));\n        sushi.mint(address(this), sushiReward);\n        pool.accSushiPerShare = pool.accSushiPerShare.add(sushiReward.mul(1e12).div(lpSupply));\n        pool.lastRewardBlock = block.number;\n    }\n\n    // Deposit LP tokens to MasterChef for SUSHI allocation.\n    function deposit(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        updatePool(_pid);\n        if (user.amount > 0) {\n            uint256 pending = user.amount.mul(pool.accSushiPerShare).div(1e12).sub(user.rewardDebt);\n            safeSushiTransfer(msg.sender, pending);\n        }\n        pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\n        user.amount = user.amount.add(_amount);\n        user.rewardDebt = user.amount.mul(pool.accSushiPerShare).div(1e12);\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw LP tokens from MasterChef.\n    function withdraw(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        require(user.amount >= _amount, \"withdraw: not good\");\n        updatePool(_pid);\n        uint256 pending = user.amount.mul(pool.accSushiPerShare).div(1e12).sub(user.rewardDebt);\n        safeSushiTransfer(msg.sender, pending);\n        user.amount = user.amount.sub(_amount);\n        user.rewardDebt = user.amount.mul(pool.accSushiPerShare).div(1e12);\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\n        user.amount = 0;\n        user.rewardDebt = 0;\n    }\n\n    // Safe sushi transfer function, just in case if rounding error causes pool to not have enough SUSHIs.\n    function safeSushiTransfer(address _to, uint256 _amount) internal {\n        uint256 sushiBal = sushi.balanceOf(address(this));\n        if (_amount > sushiBal) {\n            sushi.transfer(_to, sushiBal);\n        } else {\n            sushi.transfer(_to, _amount);\n        }\n    }\n\n    // Update dev address by the previous dev.\n    function dev(address _devaddr) public {\n        require(msg.sender == devaddr, \"dev: wut?\");\n        devaddr = _devaddr;\n    }\n}",
  "sourceMap": "757:8635:15:-:0;;;2750:1;2717:34;;3085:345;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3085:345:15;;;;;;;;;;;;;;;;;;;;;;;;;;865:17:2;885:12;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:2;-1:-1:-1;;;;;907:18:2;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:2;940:43;;907:6;;940:43;-1:-1:-1;3267:5:15;:14;;-1:-1:-1;;;;;3267:14:15;;;-1:-1:-1;;;;;;3267:14:15;;;;;;;3291:7;:18;;;;;;;;;;;;;;;3319:13;:30;3359:13;:30;3399:10;:24;757:8635;;590:104:0;677:10;590:104;:::o;757:8635:15:-;;;;;;;",
  "sourcePath": "contracts/Farms/MasterChef.sol",
  "type": "contract"
}